{"version":3,"sources":["webpack://irSpectrum/webpack/universalModuleDefinition","webpack://irSpectrum/webpack/bootstrap","webpack://irSpectrum/./node_modules/hash-it/es/constants.js","webpack://irSpectrum/./node_modules/ml-matrix/src/matrix.js","webpack://irSpectrum/./node_modules/ml-matrix/src/views/base.js","webpack://irSpectrum/./node_modules/is-any-array/src/index.js","webpack://irSpectrum/../src/utils.ts","webpack://irSpectrum/../src/index.ts","webpack://irSpectrum/./node_modules/ml-matrix/src/index.js","webpack://irSpectrum/./node_modules/ml-stat/index.js","webpack://irSpectrum/./node_modules/ml-matrix/src/util.js","webpack://irSpectrum/./node_modules/ml-matrix/src/dc/util.js","webpack://irSpectrum/./node_modules/hash-it/es/utils.js","webpack://irSpectrum/./node_modules/ml-savitzky-golay-generalized/node_modules/ml-stat/array.js","webpack://irSpectrum/./node_modules/ml-optimize-lorentzian/src/index.js","webpack://irSpectrum/./node_modules/ml-matrix/src/abstractMatrix.js","webpack://irSpectrum/./node_modules/ml-matrix/src/dc/lu.js","webpack://irSpectrum/./node_modules/ml-matrix/src/dc/svd.js","webpack://irSpectrum/./node_modules/ml-stat/array.js","webpack://irSpectrum/./node_modules/ml-curve-fitting/src/algebra.js","webpack://irSpectrum//Users/lpatiny/.nvm/versions/node/v11.1.0/lib/node_modules/cheminfo-tools/node_modules/buffer/index.js","webpack://irSpectrum/./node_modules/ml-arrayxy-uniquex/src/index.js","webpack://irSpectrum/./node_modules/fast-stringify/es/utils.js","webpack://irSpectrum/./node_modules/fast-stringify/es/index.js","webpack://irSpectrum/./lib/index.js","webpack://irSpectrum/./node_modules/ml-array-min/lib-es6/index.js","webpack://irSpectrum/./node_modules/ml-array-max/lib-es6/index.js","webpack://irSpectrum/./node_modules/ml-gsd/src/index.js","webpack://irSpectrum/./node_modules/ml-gsd/src/gsd.js","webpack://irSpectrum/./node_modules/ml-savitzky-golay-generalized/src/index.js","webpack://irSpectrum/./node_modules/extend/index.js","webpack://irSpectrum/./node_modules/ml-savitzky-golay-generalized/node_modules/ml-stat/index.js","webpack://irSpectrum/./node_modules/ml-savitzky-golay-generalized/node_modules/ml-stat/matrix.js","webpack://irSpectrum/./node_modules/ml-gsd/src/post/optimizePeaks.js","webpack://irSpectrum/./node_modules/ml-curve-fitting/src/index.js","webpack://irSpectrum/./node_modules/ml-curve-fitting/src/LM.js","webpack://irSpectrum/./node_modules/ml-matrix/src/symbol-species.js","webpack://irSpectrum/./node_modules/ml-matrix/node_modules/ml-array-utils/src/index.js","webpack://irSpectrum/./node_modules/ml-matrix/node_modules/ml-array-utils/src/ArrayUtils.js","webpack://irSpectrum/./node_modules/ml-stat/matrix.js","webpack://irSpectrum/./node_modules/ml-matrix/node_modules/ml-array-utils/src/getEquallySpaced.js","webpack://irSpectrum/./node_modules/ml-matrix/node_modules/ml-array-utils/src/snv.js","webpack://irSpectrum/./node_modules/ml-matrix/src/views/transpose.js","webpack://irSpectrum/./node_modules/ml-matrix/src/views/row.js","webpack://irSpectrum/./node_modules/ml-matrix/src/views/sub.js","webpack://irSpectrum/./node_modules/ml-matrix/src/views/selection.js","webpack://irSpectrum/./node_modules/ml-matrix/src/views/column.js","webpack://irSpectrum/./node_modules/ml-matrix/src/views/flipRow.js","webpack://irSpectrum/./node_modules/ml-matrix/src/views/flipColumn.js","webpack://irSpectrum/./node_modules/ml-matrix/src/decompositions.js","webpack://irSpectrum/./node_modules/ml-matrix/src/dc/evd.js","webpack://irSpectrum/./node_modules/ml-matrix/src/dc/qr.js","webpack://irSpectrum/./node_modules/ml-matrix/src/dc/cholesky.js","webpack://irSpectrum/./node_modules/ml-gsd/src/post/joinBroadPeaks.js","webpack://irSpectrum/./node_modules/ml-gsd/src/post/broadenPeaks.js","webpack://irSpectrum/./node_modules/ml-array-utils/src/index.js","webpack://irSpectrum/./node_modules/ml-array-utils/src/ArrayUtils.js","webpack://irSpectrum/./node_modules/ml-array-utils/src/getEquallySpaced.js","webpack://irSpectrum/./node_modules/ml-array-utils/src/snv.js","webpack://irSpectrum/./node_modules/hash-it/es/index.js","webpack://irSpectrum/(webpack)/buildin/global.js","webpack://irSpectrum//Users/lpatiny/.nvm/versions/node/v11.1.0/lib/node_modules/cheminfo-tools/node_modules/base64-js/index.js","webpack://irSpectrum//Users/lpatiny/.nvm/versions/node/v11.1.0/lib/node_modules/cheminfo-tools/node_modules/ieee754/index.js","webpack://irSpectrum//Users/lpatiny/.nvm/versions/node/v11.1.0/lib/node_modules/cheminfo-tools/node_modules/isarray/index.js","webpack://irSpectrum/./node_modules/jcampconverter/src/index.js","webpack://irSpectrum/./node_modules/xy-parser/src/index.js","webpack://irSpectrum/./node_modules/ml-array-sequential-fill/lib-es6/index.js","webpack://irSpectrum/./node_modules/ml-array-xy-equally-spaced/src/integral.js","webpack://irSpectrum/./node_modules/ml-array-xy-equally-spaced/src/index.js","webpack://irSpectrum/./node_modules/ml-array-xy-equally-spaced/src/getZones.js","webpack://irSpectrum/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","webpack://irSpectrum/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Buffer","_SELF_TAGS","_TOSTRING_TAGS","_TYPEDARRAY_TAGS","_UNPARSEABLE_TAGS","__webpack_exports__","CIRCULAR_VALUE","HAS_BUFFER_FROM_SUPPORT","HAS_UINT16ARRAY_SUPPORT","HTML_ELEMENT_REGEXP","SVG_ELEMENT_REGEXP","OBJECT_CLASS_MAP","OBJECT_CLASS_TYPE_MAP","ITERABLE_TAGS","PRIMITIVE_TAGS","SELF_TAGS","TOSTRING_TAGS","TYPEDARRAY_TAGS","UNPARSEABLE_TAGS","from","Uint16Array","reduce","objectClasses","type","keys","objectClassTypes","objectClass","toUpperCase","[object Map]","[object Set]","boolean","function","number","string","undefined","ARGUMENTS","ARRAY","REGEXP","SYMBOL","FLOAT32ARRAY","FLOAT64ARRAY","INT8ARRAY","INT16ARRAY","INT32ARRAY","UINT8ARRAY","UINT8CLAMPEDARRAY","UINT16ARRAY","UINT32ARRAY","GENERATOR","PROMISE","WEAKMAP","WEAKSET","require","abstractMatrix","util","Matrix","Array","constructor","nRows","nColumns","arguments","length","isMatrix","clone","Number","isInteger","super","TypeError","isArray","matrix","RangeError","concat","rows","columns","set","rowIndex","columnIndex","newMatrix","species","row","column","removeRow","index","checkRowIndex","splice","addRow","array","checkRowVector","removeColumn","checkColumnIndex","addColumn","checkColumnVector","static","toString","endsWith","__","curry","fn","arity","curried","recursiveCurry","args","newArgs","newArgsLength","combined","newArgsIndex","remaining","apply","uncurry","Decompositions","DC","outer","max","vector","to1DArray","checkIndices","rowIndices","columnIndices","rowOut","some","columnOut","checkRange","startRow","endRow","startColumn","endColumn","slice","arg","getRange","to","arr","sumByRow","sum","zeros","j","sumByColumn","sumAll","v","hypotenuse","a","b","Math","abs","sqrt","getEmpty2DArray","getFilled2DArray","getIntegerHashValue","stringify","fast_stringify__WEBPACK_IMPORTED_MODULE_0__","_constants__WEBPACK_IMPORTED_MODULE_1__","charCodeAt","String","getCircularValue","charCode","hashA","hashB","shouldSort","valueA","valueB","shouldSortPair","pairA","pairB","getPrefixedValue","tag","sort","subIndex","getStringifiedArrayBufferFallback","buffer","fromCharCode","getStringifiedArrayBufferModern","getStringifiedArrayBufferNoSupport","getStringifiedArrayBuffer","indexOf","getNormalizedValue","sortedCache","passedTag","_ref","OBJECT","push","objectKeys","newObject","getSortedObject","iterable","isMap","pairs","forEach","pair","finalPairs","size","match","join","getSortedIterablePairs","DATE","getTime","ERROR","stack","EVENT","bubbles","cancelBubble","cancelable","composed","currentTarget","defaultPrevented","eventPhase","isTrusted","returnValue","target","test","outerHTML","DOCUMENTFRAGMENT","fragment","children","innerHTML","getStringifiedDocumentFragment","ARRAYBUFFER","DATAVIEW","createReplacer","fastStringify","compareNumbers","values","Infinity","min","minMax","arithmeticMean","mean","geometricMean","mul","pow","logMean","lnsum","log","grandMean","means","samples","truncatedMean","percent","alreadySorted","k","floor","harmonicMean","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","theVariance","x","standardDeviation","standardError","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","itemCount","itemArray","count","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","g","kurtosis","s4","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","result","standardize","standardDev","cumulativeSum","LM","math","algebra","sumOfLorentzians","factor","p2","nL","cols","singleLorentzian","singleGaussian","factor2","exp","optimizeSingleLorentzian","xy","peak","opts","xy2","parseData","percentage","y_data","maxY","weight","dot","dt","LMOptions","dx","p_init","width","p_min","p_max","p_fit","optimize","optimizeSingleGaussian","threshold","y","nbSeries","nbPoints","transpose","optimizeLorentzianSum","group","optimizeGaussianSum","optimizeGaussianTrain","nextX","tI","yI","current","currentIndex","opt","optimizeLorentzianTrain","LuDecomposition","SvDecomposition","arrayUtils","MatrixTransposeView","MatrixRowView","MatrixSubView","MatrixSelectionView","MatrixColumnView","MatrixFlipRowView","MatrixFlipColumnView","superCtor","[object Object]","newRows","newColumns","newData","empty","fill","rng","random","data","matrix1","matrix2","checkMatrix","klass","callback","ii","jj","to2DArray","copy","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","Error","repeat","rowRep","colRep","setSubMatrix","neg","mulS","getRow","getRowVector","rowVector","setRow","swapRows","row1","row2","temp","getColumn","getColumnVector","columnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","idx","minIndex","maxRow","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","diag","by","prod","mmul","other","console","warn","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m3","m4","m5","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","mmulStrassen","c1","c2","embed","mat","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","add","sub","scaleRows","scaled","scale","scaleColumns","kroneckerProduct","q","sortRows","compareFunction","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","trace","transposeView","rowView","columnView","flipRowView","flipColumnView","subMatrixView","selectionView","det","subMatrix0","subMatrix1","subMatrix2","determinant","pseudoInverse","EPSILON","svdSolution","autoTranspose","U","leftSingularVectors","V","rightSingularVectors","diagonal","checkDimensions","otherMatrix","rand","identity","eye","negate","tensorProduct","inplaceOperator","inplaceOperatorScalar","inplaceOperatorMatrix","staticOperator","inplaceMethod","staticMethod","inplaceMethodWithArgs","staticMethodWithArgs","inplaceMethodWithOneArgScalar","inplaceMethodWithOneArgMatrix","inplaceMethodWithOneArg","staticMethodWithOneArg","operators","operator","inplaceOp","eval","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","method","mathMethod","inplaceMeth","staticMeth","methodsWithArgs","methodWithArg","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","replace","RegExp","LUrowi","LUcolj","kmax","lu","pivotVector","pivotSign","LU","isSingular","col","lowerTriangularMatrix","X","upperTriangularMatrix","pivotPermutationVector","solve","SingularValueDecomposition","options","nu","wantu","wantv","computeLeftSingularVectors","computeRightSingularVectors","swapped","aux","ks","f","cs","sn","kase","sp","spm1","epm1","sk","ek","shift","e","work","nct","nrt","pp","tmp","condition","norm2","rank","tol","diagonalMatrix","Y","scols","Ls","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","robustMeanAndStdev","averageDeviations","stdev","A","B","subtract","multiply","dotMultiply","dotDivide","div","inv","dotPow","ones","global","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","Uint8Array","__proto__","encodingOrOffset","allocUnsafe","ArrayBuffer","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","encoding","isEncoding","actual","write","fromString","obj","isBuffer","len","checked","val","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","offset","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","configurable","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","xs","ys","counter","refCount","replacer","circularReplacer","locationOfThis","locationOfValue","getCircularReplacer","hasReplacer","cache","newArray","first","indent","JSON","_interopDefault","ex","mlGsd","equallySpaced","Util","hash","jcampconverter","xyParser","ABSORBANCE","TRANSMITTANCE","PERCENT_TRANSMITTANCE","getKind","kind","annotationTransmittance","annotation","label","text","anchor","color","position","wavelength","transmittance","dy","addPeak","spectrum","absorbance","_peak$transmittance","_peak$absorbance","log10","existing","peaks","getPeakKind","minTransmittance","maxTransmittance","peakPicking","targetWavelength","_options$range","range","_options$optimize","bestPeak","error","newError","setBestPeak","getClosest","previousIndex","findClosest","bestInRange","getYLabel","Spectrum","json","clearCache","map","minWavelength","maxWavelength","minAbsorbance","maxAbsorbance","check","setPeaks","setMode","getAbsorbance","getTransmittance","getPercentTransmittance","normalized","getAnnotations","_options$fillColor","fillColor","_options$strokeColor","strokeColor","creationFct","line","strokeWidth","annotationAbsorbance","getData","autoPeakPicking","_options$noiseLevel","noiseLevel","_options$minMaxRatio","minMaxRatio","_options$fromWaveleng","fromWavelength","_options$toWavelength","toWavelength","_options$replaceExist","replaceExisting","gsd","realTopDetection","maxCriteria","smoothY","sgOptions","windowSize","polynomial","filter","pop","peakLoop","getNormalized","optionsHash","_options$from","_options$to","_options$numberOfPoin","numberOfPoints","_options$applySNV","applySNV","_options$exclusions","exclusions","SNV","fromJcamp","jcamp","convert","spectra","yUnit","Spectra","normalizationOptions","normalization","addSpectrum","id","meta","getSpectrumIndex","addFromJcamp","contains","removeSpectrum","getNormalizedData","ids","datum","getChart","_options$filter","_options$mode","chart","title","styles","unselected","lineColor","lineWidth","lineStyle","selected","fromText","assign","arrayType","parseXY","transmisttance","is_any_array__WEBPACK_IMPORTED_MODULE_0__","is_any_array__WEBPACK_IMPORTED_MODULE_0___default","input","post","optimizePeaks","joinBroadPeaks","broadenPeaks","SG","defaultOptions","broadRatio","heightFactor","boundaries","derivativeThreshold","yIn","maxDx","minDx","MAX_VALUE","getNoiseLevel","yCorrection","dY","ddY","derivative","maxDdy","lastMax","lastMin","minddY","intervalL","intervalR","broadMask","minddYLen","intervalLLen","intervalRLen","broadMaskLen","possible","frequency","distanceJ","minDistance","gettingCloser","signals","signalsLen","lastK","soft","left","right","yLeft","yRight","height","peakList","alpha","beta","gamma","currentPoint","base","extend","getHs","h","hs","GramPoly","GenFact","gf","Weight","np","ans","fullWeights","constantH","wg1","wg2","d1","d2","wg","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","setProperty","newValue","writable","getProperty","copyIsArray","deep","arrayStat","dimension","N","sum1","sum2","scatter","divisor","zScores","standardDeviations","resultRow","sourceRow","weightSum","weightedScatter","l1","l2","medians","modes","skew","kurt","standardErrors","sqrtN","correlation","scores","cor","weightedCovariance","s1","sampleFunction","lastIndex","sampleX","sampleY","direction","sign","delta","mid","stop","fnType","sampling","groups","upperLimit","lowerLimit","limits","groupPeaks","optPeaks","optPeak","func","y_dat","dp","iteration","Npar","Npnt","p_old","y_old","X2","X2_old","J","MaxIter","epsilon_1","epsilon_4","lambda_0","lambda_UP_fac","lambda_DN_fac","Update_Type","dp_array","Nfit","weight_sq","lm_matx","JtWJ","JtWdy","y_hat","Chi_sq","lambda","hidx","p_try","delta_y","X2_try","JtWdy_th","rho","dX2","length_t","length_y_dat","lm_FD_J","ps","del","y1","lm_Broyden_J","h_t","Jt","for","getEquallySpacedData","Stat","resultMatrix","coordArrayToPoints","dimensions","pointsArr","point","coordArrayToCoordMatrix","coordinatesArray","points","coordMatrixToCoordArray","coordMatrix","coodinatesArray","coordMatrixToPoints","pointsToCoordArray","pointsToCoordMatrix","applyDotProduct","firstVector","secondVector","largestVector","smallestVector","difference","dotProductApplied","theSum","product","theProduct","integral","x0","x1","slope","intercept","reverse","output","variant","xLength","step","halfStep","lastStep","previousX","previousY","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","main","getEquallySpacedSlot","initialOriginalStep","lastOriginalStep","MIN_VALUE","sumAtMin","sumAtMax","getEquallySpacedSmooth","std","BaseView","EigenvalueDecomposition","QrDecomposition","CholeskyDecomposition","leftHandSide","rightHandSide","SVD","EVD","QR","CHO","assumeSymmetric","hh","tred2","dl1","c3","el1","tst1","tql2","H","ort","high","low","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","iter","cdiv","hqr2","xr","xi","yr","yi","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","qr","rdiag","nrm","Rdiag","isFullRank","orthogonalMatrix","positiveDefinite","Lrowj","Lrowk","L","Opt","broadLines","maxI","candidates","indexes","fitted","_options$factor","_options$overlap","overlap","nextPeak","_options$variant","curriable__WEBPACK_IMPORTED_MODULE_0__","_utils__WEBPACK_IMPORTED_MODULE_1__","is","otherObject","all","_len","objects","_key","isEqual","any","_len2","_key2","not","Function","window","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","keepRecordsRegExp","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","convertMSFieldToLabel","isMSField","dataLabel","prepareSpectrum","xFactor","yFactor","observeFrequency","xUnit","firstX","lastX","deltaX","shiftOffsetVal","fastParseXYData","isXYdata","currentData","ascii","currentX","currentY","firstY","endLine","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","parseXYA","removeSymbolRegExp","isXYAdata","lines","split","parsePeakTable","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","logs","ldr","dataValue","ldrs","infos","wantXY","Date","now","ntuples","info","action","time","substring","xIndex","yIndex","firstVariable","secondVariable","symbol","last","lastY","vardim","datatable","dataType","twoD","maxX","minX","minY","xType","indirectFrequency","shiftOffsetNum","varname","vartype","varform","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","sampleDescription","newNtuples","zData","minZ","maxZ","ySize","xSize","xVector","noise","convertTo3DZ","contourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","pAx","pAy","pBx","pBy","lineZValue","nbSubSpectra","nbPovars","y0","contourLevels","level","contourLevel","side","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","generateContourLines","add2D","times","series","ms","existingGCMSFields","complexChromatogram","intensity","simpleChromatogram","worker","stamps","useWorker","workerURL","URL","createObjectURL","Blob","Worker","revokeObjectURL","addEventListener","event","parse","stamp","Promise","resolve","postMessage","postToWorker","createTree","_options$flatten","flatten","flat","ntupleLevel","spaces","labelLine","startsWith","finished","entry","ml_arrayxy_uniquex__WEBPACK_IMPORTED_MODULE_0__","ml_arrayxy_uniquex__WEBPACK_IMPORTED_MODULE_0___default","_options$normalize","normalize","_options$uniqueX","uniqueX","_options$arrayType","_options$xColumn","xColumn","_options$yColumn","yColumn","_options$keepInfo","keepInfo","_options$maxNumberCol","maxNumberColumns","_options$minNumberCol","minNumberColumns","fields","uniqueXFunction","newResult","_typeof","iterator","sequentialFill","_options","_options$size","_i","arrayXY","zones","exclusion","_ref2","toRemove","previous","unitsPerPoint","currentFrom","totalPoints","currentNbPoints","round","getZones","xResult","yResult","zone","zoneResult","processZone","equallySpacedSlot","equallySpacedSmooth"],"mappings":"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","file":"spectra-processor.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"irSpectrum\"] = factory();\n\telse\n\t\troot[\"irSpectrum\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","var _SELF_TAGS, _TOSTRING_TAGS, _TYPEDARRAY_TAGS, _UNPARSEABLE_TAGS;\n\n/**\n * @constant {string} CIRCULAR_VALUE\n */\nexport var CIRCULAR_VALUE = '~';\n/**\n * @constant {boolean} HAS_BUFFER_FROM_SUPPORT\n */\n\nexport var HAS_BUFFER_FROM_SUPPORT = typeof Buffer !== 'undefined' && typeof Buffer.from === 'function';\n/**\n * @constant {boolean} HAS_UINT16ARRAY_SUPPORT\n */\n\nexport var HAS_UINT16ARRAY_SUPPORT = typeof Uint16Array === 'function';\n/**\n * @constant {RegExp} HTML_ELEMENT_REGEXP\n */\n\nexport var HTML_ELEMENT_REGEXP = /\\[object (HTML(.*)Element)\\]/;\n/**\n * @constant {RegExp} SVG_ELEMENT_REGEXP\n */\n\nexport var SVG_ELEMENT_REGEXP = /\\[object (SVG(.*)Element)\\]/;\n/**\n * @constant {Array<string>} OBJECT_CLASSES\n */\n\nexport var OBJECT_CLASSES = ['Arguments', 'Array', 'ArrayBuffer', 'Boolean', 'DataView', 'Date', 'DocumentFragment', 'Error', 'Event', 'Float32Array', 'Float64Array', 'Function', 'Generator', 'GeneratorFunction', 'HTMLElement', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Null', 'Number', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'Undefined', 'WeakMap', 'WeakSet', 'Window'];\n/**\n * @constant {Object} OBJECT_CLASS_MAP\n */\n\nexport var OBJECT_CLASS_MAP = OBJECT_CLASSES.reduce(function (objectClasses, type) {\n  objectClasses[\"[object \" + type + \"]\"] = type;\n  return objectClasses;\n}, {});\n/**\n * @constant {Object} OBJECT_CLASS_TYPE_MAP\n */\n\nexport var OBJECT_CLASS_TYPE_MAP = Object.keys(OBJECT_CLASS_MAP).reduce(function (objectClassTypes, objectClass) {\n  objectClassTypes[OBJECT_CLASS_MAP[objectClass].toUpperCase()] = objectClass;\n  return objectClassTypes;\n}, {});\nexport var ITERABLE_TAGS = {\n  '[object Map]': true,\n  '[object Set]': true\n};\nexport var PRIMITIVE_TAGS = {\n  boolean: true,\n  function: true,\n  number: true,\n  string: true,\n  undefined: true\n};\nexport var SELF_TAGS = (_SELF_TAGS = {}, _SELF_TAGS[OBJECT_CLASS_TYPE_MAP.ARGUMENTS] = true, _SELF_TAGS[OBJECT_CLASS_TYPE_MAP.ARRAY] = true, _SELF_TAGS);\nexport var TOSTRING_TAGS = (_TOSTRING_TAGS = {}, _TOSTRING_TAGS[OBJECT_CLASS_TYPE_MAP.REGEXP] = true, _TOSTRING_TAGS[OBJECT_CLASS_TYPE_MAP.SYMBOL] = true, _TOSTRING_TAGS);\nexport var TYPEDARRAY_TAGS = (_TYPEDARRAY_TAGS = {}, _TYPEDARRAY_TAGS[OBJECT_CLASS_TYPE_MAP.FLOAT32ARRAY] = true, _TYPEDARRAY_TAGS[OBJECT_CLASS_TYPE_MAP.FLOAT64ARRAY] = true, _TYPEDARRAY_TAGS[OBJECT_CLASS_TYPE_MAP.INT8ARRAY] = true, _TYPEDARRAY_TAGS[OBJECT_CLASS_TYPE_MAP.INT16ARRAY] = true, _TYPEDARRAY_TAGS[OBJECT_CLASS_TYPE_MAP.INT32ARRAY] = true, _TYPEDARRAY_TAGS[OBJECT_CLASS_TYPE_MAP.UINT8ARRAY] = true, _TYPEDARRAY_TAGS[OBJECT_CLASS_TYPE_MAP.UINT8CLAMPEDARRAY] = true, _TYPEDARRAY_TAGS[OBJECT_CLASS_TYPE_MAP.UINT16ARRAY] = true, _TYPEDARRAY_TAGS[OBJECT_CLASS_TYPE_MAP.UINT32ARRAY] = true, _TYPEDARRAY_TAGS);\nexport var UNPARSEABLE_TAGS = (_UNPARSEABLE_TAGS = {}, _UNPARSEABLE_TAGS[OBJECT_CLASS_TYPE_MAP.GENERATOR] = true, _UNPARSEABLE_TAGS[OBJECT_CLASS_TYPE_MAP.PROMISE] = true, _UNPARSEABLE_TAGS[OBJECT_CLASS_TYPE_MAP.WEAKMAP] = true, _UNPARSEABLE_TAGS[OBJECT_CLASS_TYPE_MAP.WEAKSET] = true, _UNPARSEABLE_TAGS);","'use strict';\n\nrequire('./symbol-species');\nvar abstractMatrix = require('./abstractMatrix');\nvar util = require('./util');\n\nclass Matrix extends abstractMatrix(Array) {\n    constructor(nRows, nColumns) {\n        var i;\n        if (arguments.length === 1 && typeof nRows === 'number') {\n            return new Array(nRows);\n        }\n        if (Matrix.isMatrix(nRows)) {\n            return nRows.clone();\n        } else if (Number.isInteger(nRows) && nRows > 0) { // Create an empty matrix\n            super(nRows);\n            if (Number.isInteger(nColumns) && nColumns > 0) {\n                for (i = 0; i < nRows; i++) {\n                    this[i] = new Array(nColumns);\n                }\n            } else {\n                throw new TypeError('nColumns must be a positive integer');\n            }\n        } else if (Array.isArray(nRows)) { // Copy the values from the 2D array\n            const matrix = nRows;\n            nRows = matrix.length;\n            nColumns = matrix[0].length;\n            if (typeof nColumns !== 'number' || nColumns === 0) {\n                throw new TypeError('Data must be a 2D array with at least one element');\n            }\n            super(nRows);\n            for (i = 0; i < nRows; i++) {\n                if (matrix[i].length !== nColumns) {\n                    throw new RangeError('Inconsistent array dimensions');\n                }\n                this[i] = [].concat(matrix[i]);\n            }\n        } else {\n            throw new TypeError('First argument must be a positive number or an array');\n        }\n        this.rows = nRows;\n        this.columns = nColumns;\n        return this;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this[rowIndex][columnIndex] = value;\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this[rowIndex][columnIndex];\n    }\n\n    /**\n     * Creates an exact and independent copy of the matrix\n     * @return {Matrix}\n     */\n    clone() {\n        var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\n        for (var row = 0; row < this.rows; row++) {\n            for (var column = 0; column < this.columns; column++) {\n                newMatrix.set(row, column, this.get(row, column));\n            }\n        }\n        return newMatrix;\n    }\n\n    /**\n     * Removes a row from the given index\n     * @param {number} index - Row index\n     * @return {Matrix} this\n     */\n    removeRow(index) {\n        util.checkRowIndex(this, index);\n        if (this.rows === 1) {\n            throw new RangeError('A matrix cannot have less than one row');\n        }\n        this.splice(index, 1);\n        this.rows -= 1;\n        return this;\n    }\n\n    /**\n     * Adds a row at the given index\n     * @param {number} [index = this.rows] - Row index\n     * @param {Array|Matrix} array - Array or vector\n     * @return {Matrix} this\n     */\n    addRow(index, array) {\n        if (array === undefined) {\n            array = index;\n            index = this.rows;\n        }\n        util.checkRowIndex(this, index, true);\n        array = util.checkRowVector(this, array, true);\n        this.splice(index, 0, array);\n        this.rows += 1;\n        return this;\n    }\n\n    /**\n     * Removes a column from the given index\n     * @param {number} index - Column index\n     * @return {Matrix} this\n     */\n    removeColumn(index) {\n        util.checkColumnIndex(this, index);\n        if (this.columns === 1) {\n            throw new RangeError('A matrix cannot have less than one column');\n        }\n        for (var i = 0; i < this.rows; i++) {\n            this[i].splice(index, 1);\n        }\n        this.columns -= 1;\n        return this;\n    }\n\n    /**\n     * Adds a column at the given index\n     * @param {number} [index = this.columns] - Column index\n     * @param {Array|Matrix} array - Array or vector\n     * @return {Matrix} this\n     */\n    addColumn(index, array) {\n        if (typeof array === 'undefined') {\n            array = index;\n            index = this.columns;\n        }\n        util.checkColumnIndex(this, index, true);\n        array = util.checkColumnVector(this, array);\n        for (var i = 0; i < this.rows; i++) {\n            this[i].splice(index, 0, array[i]);\n        }\n        this.columns += 1;\n        return this;\n    }\n}\n\nexports.Matrix = Matrix;\nMatrix.abstractMatrix = abstractMatrix;\n","'use strict';\n\nvar abstractMatrix = require('../abstractMatrix');\nvar Matrix = require('../matrix');\n\nclass BaseView extends abstractMatrix() {\n    constructor(matrix, rows, columns) {\n        super();\n        this.matrix = matrix;\n        this.rows = rows;\n        this.columns = columns;\n    }\n\n    static get [Symbol.species]() {\n        return Matrix.Matrix;\n    }\n}\n\nmodule.exports = BaseView;\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","/**\n * @constant __ placeholder used when parameters are skipped\n */\nexport const __: Placeholder =\n  typeof Symbol === 'function' ? Symbol('curriable placeholder') : 0xedd1;\n\n/**\n * @function recursiveCurry\n *\n * @description\n * recursively curry over the arguments until all have been resolved\n *\n * @param fn the function to curry\n * @param arity the length of the function to curry until\n * @param args the existing arguments\n * @returns the result of the function call\n */\nexport const recursiveCurry: Function = (\n  fn: Function,\n  arity: number,\n  args: any[],\n): Function =>\n  function () {\n    const length: number = args.length;\n\n    const newArgs: IArguments = arguments;\n    const newArgsLength: number = newArgs.length;\n\n    const combined: any[] = [];\n\n    let newArgsIndex: number = 0;\n    let remaining: number = arity;\n    let value: any;\n\n    if (length) {\n      for (let index: number = 0; index < length; index++) {\n        combined[index] = value =\n          args[index] === __ && newArgsIndex < newArgsLength\n            ? newArgs[newArgsIndex++]\n            : args[index];\n\n        if (value !== __) {\n          --remaining;\n        }\n      }\n    }\n\n    if (newArgsIndex < newArgsLength) {\n      for (; newArgsIndex < newArgsLength; newArgsIndex++) {\n        combined[combined.length] = value = newArgs[newArgsIndex];\n\n        if (value !== __ && newArgsIndex < arity) {\n          --remaining;\n        }\n      }\n    }\n\n    return remaining > 0\n      ? recursiveCurry(fn, arity, combined)\n      : fn.apply(this, combined);\n  };\n","// utils\nimport { __, recursiveCurry } from './utils';\n\nexport { __ };\n\n/**\n * @function curry\n *\n * @description\n * get the method passed as a curriable method based on its parameters\n *\n * @param fn the method to make curriable\n * @param arity the arity of the curried method\n * @returns the fn passed as a curried function\n */\nexport const curry = (\n  fn: Function,\n  arity: number = fn.length,\n): CurriedFunction => {\n  const curried = recursiveCurry(fn, arity, []);\n\n  curried.arity = arity;\n  curried.fn = fn;\n\n  return curried;\n};\n\ncurry.__ = __;\n\n/**\n * @function uncurry\n *\n * @description\n * return a function that is the non-curried version of the fn passed\n *\n * @param curried the curried function to uncurry\n * @returns the original fn\n */\nexport const uncurry = (curried: CurriedFunction): Function => curried.fn;\n\ncurry.uncurry = uncurry;\n\nexport default curry;\n","'use strict';\n\nmodule.exports = require('./matrix').Matrix;\nmodule.exports.Decompositions = module.exports.DC = require('./decompositions');\n","'use strict';\n\nexports.array = require('./array');\nexports.matrix = require('./matrix');\n","'use strict';\n\nvar Matrix = require('./matrix');\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexports.checkRowIndex = function checkRowIndex(matrix, index, outer) {\n    var max = outer ? matrix.rows : matrix.rows - 1;\n    if (index < 0 || index > max) {\n        throw new RangeError('Row index out of range');\n    }\n};\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexports.checkColumnIndex = function checkColumnIndex(matrix, index, outer) {\n    var max = outer ? matrix.columns : matrix.columns - 1;\n    if (index < 0 || index > max) {\n        throw new RangeError('Column index out of range');\n    }\n};\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexports.checkRowVector = function checkRowVector(matrix, vector) {\n    if (vector.to1DArray) {\n        vector = vector.to1DArray();\n    }\n    if (vector.length !== matrix.columns) {\n        throw new RangeError('vector size must be the same as the number of columns');\n    }\n    return vector;\n};\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexports.checkColumnVector = function checkColumnVector(matrix, vector) {\n    if (vector.to1DArray) {\n        vector = vector.to1DArray();\n    }\n    if (vector.length !== matrix.rows) {\n        throw new RangeError('vector size must be the same as the number of rows');\n    }\n    return vector;\n};\n\nexports.checkIndices = function checkIndices(matrix, rowIndices, columnIndices) {\n    var rowOut = rowIndices.some(r => {\n        return r < 0 || r >= matrix.rows;\n\n    });\n\n    var columnOut = columnIndices.some(c => {\n        return c < 0 || c >= matrix.columns;\n    });\n\n    if (rowOut || columnOut) {\n        throw new RangeError('Indices are out of range');\n    }\n\n    if (typeof rowIndices !== 'object' || typeof columnIndices !== 'object') {\n        throw new TypeError('Unexpected type for row/column indices');\n    }\n    if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n    if (!Array.isArray(columnIndices)) rowIndices = Array.from(columnIndices);\n\n    return {\n        row: rowIndices,\n        column: columnIndices\n    };\n};\n\nexports.checkRange = function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n    if (arguments.length !== 5) throw new TypeError('Invalid argument type');\n    var notAllNumbers = Array.from(arguments).slice(1).some(function (arg) {\n        return typeof arg !== 'number';\n    });\n    if (notAllNumbers) throw new TypeError('Invalid argument type');\n    if (startRow > endRow || startColumn > endColumn || startRow < 0 || startRow >= matrix.rows || endRow < 0 || endRow >= matrix.rows || startColumn < 0 || startColumn >= matrix.columns || endColumn < 0 || endColumn >= matrix.columns) {\n        throw new RangeError('Submatrix indices are out of range');\n    }\n};\n\nexports.getRange = function getRange(from, to) {\n    var arr = new Array(to - from + 1);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = from + i;\n    }\n    return arr;\n};\n\nexports.sumByRow = function sumByRow(matrix) {\n    var sum = Matrix.Matrix.zeros(matrix.rows, 1);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\n        }\n    }\n    return sum;\n};\n\nexports.sumByColumn = function sumByColumn(matrix) {\n    var sum = Matrix.Matrix.zeros(1, matrix.columns);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\n        }\n    }\n    return sum;\n};\n\nexports.sumAll = function sumAll(matrix) {\n    var v = 0;\n    for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n            v += matrix.get(i, j);\n        }\n    }\n    return v;\n};\n","'use strict';\n\nexports.hypotenuse = function hypotenuse(a, b) {\n    var r;\n    if (Math.abs(a) > Math.abs(b)) {\n        r = b / a;\n        return Math.abs(a) * Math.sqrt(1 + r * r);\n    }\n    if (b !== 0) {\n        r = a / b;\n        return Math.abs(b) * Math.sqrt(1 + r * r);\n    }\n    return 0;\n};\n\n// For use in the decomposition algorithms. With big matrices, access time is\n// too long on elements from array subclass\n// todo check when it is fixed in v8\n// http://jsperf.com/access-and-write-array-subclass\nexports.getEmpty2DArray = function (rows, columns) {\n    var array = new Array(rows);\n    for (var i = 0; i < rows; i++) {\n        array[i] = new Array(columns);\n    }\n    return array;\n};\n\nexports.getFilled2DArray = function (rows, columns, value) {\n    var array = new Array(rows);\n    for (var i = 0; i < rows; i++) {\n        array[i] = new Array(columns);\n        for (var j = 0; j < columns; j++) {\n            array[i][j] = value;\n        }\n    }\n    return array;\n};\n","// external dependencies\nimport fastStringify from 'fast-stringify'; // constants\n\nimport { CIRCULAR_VALUE, HAS_BUFFER_FROM_SUPPORT, HAS_UINT16ARRAY_SUPPORT, HTML_ELEMENT_REGEXP, ITERABLE_TAGS, OBJECT_CLASS_MAP, OBJECT_CLASS_TYPE_MAP, PRIMITIVE_TAGS, SELF_TAGS, SVG_ELEMENT_REGEXP, TOSTRING_TAGS, TYPEDARRAY_TAGS, UNPARSEABLE_TAGS } from './constants';\nvar charCodeAt = String.prototype.charCodeAt;\nvar toString = Object.prototype.toString;\nvar keys = Object.keys;\n/**\n * @function getFunctionName\n *\n * @description\n * get the name of the function based on a series of fallback attempts\n *\n * @param {function} fn the function to test\n * @returns {string} the function name\n */\n\nexport var getFunctionName = function getFunctionName(fn) {\n  return fn.name || (fn.toString().match(/^\\s*function\\s*([^\\(]*)/i) || [])[1] || 'anonymous';\n};\n/**\n * @function getCircularValue\n *\n * @description\n * get the value used when circular references are found\n *\n * @returns {string} the value for stringification\n */\n\nexport var getCircularValue = function getCircularValue() {\n  return CIRCULAR_VALUE;\n};\n/**\n * @function getIntegerHashValue\n *\n * @description\n * based on string passed, get the integer hash value\n * through bitwise operation (based on spinoff of dbj2\n * with enhancements for reduced collisions)\n *\n * @param {string} string the string to get the hash value for\n * @returns {number} the hash value\n */\n\nexport var getIntegerHashValue = function getIntegerHashValue(string) {\n  var index = string.length,\n      hashA = 5381,\n      hashB = 52711,\n      charCode;\n\n  while (index--) {\n    charCode = charCodeAt.call(string, index);\n    hashA = hashA * 33 ^ charCode;\n    hashB = hashB * 33 ^ charCode;\n  }\n\n  return (hashA >>> 0) * 4096 + (hashB >>> 0);\n};\n/**\n * @function getSortedEvent\n *\n * @description\n * get the event object sorted by its properties\n *\n * @param {boolean} bubbles does the event bubble up through the DOM\n * @param {function} alias to stopPropagation\n * @param {boolean} cancelable is the event cancelable\n * @param {boolean} composed can the event bubble across the boundary to shadow DOM\n * @param {HTMLElement} [currentTarget] registered target for the event\n * @param {boolean} defaultPrevented has preventDefault been called on the event\n * @param {string} eventPhase the phase of the event flow being processed\n * @param {boolean} isTrusted was the event initiated by the browser\n * @param {HTMLElement} [target] the target with which the event was dispatched\n * @param {number} timeStamp the time at which the event was created\n * @param {string} type the name of the event\n * @returns {Object} the event object with all properties sorted\n */\n\nexport var getSortedEvent = function getSortedEvent(_ref) {\n  var bubbles = _ref.bubbles,\n      cancelBubble = _ref.cancelBubble,\n      cancelable = _ref.cancelable,\n      composed = _ref.composed,\n      currentTarget = _ref.currentTarget,\n      defaultPrevented = _ref.defaultPrevented,\n      eventPhase = _ref.eventPhase,\n      isTrusted = _ref.isTrusted,\n      returnValue = _ref.returnValue,\n      target = _ref.target,\n      type = _ref.type;\n  return {\n    bubbles: bubbles,\n    cancelBubble: cancelBubble,\n    cancelable: cancelable,\n    composed: composed,\n    currentTarget: currentTarget,\n    defaultPrevented: defaultPrevented,\n    eventPhase: eventPhase,\n    isTrusted: isTrusted,\n    returnValue: returnValue,\n    target: target,\n    type: type\n  };\n};\n/**\n * @function shouldSort\n *\n * @description\n * get the sort result based on the two values to compare\n *\n * @param {string} valueA the first value to compare\n * @param {string} valueB the second value to compare\n * @returns {boolean} should the value be sorted\n */\n\nexport var shouldSort = function shouldSort(valueA, valueB) {\n  return valueA > valueB;\n};\n/**\n * @function shouldSortPair\n *\n * @description\n * get the sort result based on the two pairs to compare\n *\n * @param {Object} pairA the first pair to compare\n * @param {Object} pairB the second pair to compare\n * @returns {boolean} should the value be sorted\n */\n\nexport var shouldSortPair = function shouldSortPair(pairA, pairB) {\n  return shouldSort(pairA[0], pairB[0]);\n};\n/**\n * @function getPrefixedValue\n *\n * @description\n * get the value prefixed by the tag\n *\n * @param {string} tag the object tag\n * @param {any} value the value to stringify\n * @returns {string} the prefixed stringified value\n */\n\nexport var getPrefixedValue = function getPrefixedValue(tag, value) {\n  return tag + \"|\" + value;\n};\n/**\n * @function sort\n *\n * @description\n * sort the array based on the fn passed\n *\n * @param {Array<any>} array the array to sort\n * @param {function} fn the sorting function\n * @returns {Array<any>} the sorted array\n */\n\nexport var sort = function sort(array, fn) {\n  var subIndex, value;\n\n  for (var index = 0; index < array.length; index++) {\n    value = array[index];\n\n    for (subIndex = index - 1; ~subIndex && fn(array[subIndex], value); subIndex--) {\n      array[subIndex + 1] = array[subIndex];\n    }\n\n    array[subIndex + 1] = value;\n  }\n\n  return array;\n};\n/**\n * @function getIterablePairs\n *\n * @description\n * get the pairs in the iterable for stringification\n *\n * @param {Map|Set} iterable the iterable to get the pairs for\n * @returns {Array<{key: string, value: any}>} the pairs\n */\n\nexport var getSortedIterablePairs = function getSortedIterablePairs(iterable) {\n  var isMap = typeof iterable.get === 'function';\n  var pairs = [];\n  iterable.forEach(function (value, key) {\n    // eslint-disable-next-line no-use-before-define\n    pairs.push(isMap ? [stringify(key), stringify(value)] : [stringify(value)]);\n  });\n  sort(pairs, shouldSortPair);\n  var finalPairs = new Array(iterable.size);\n  var pair;\n\n  for (var index = 0; index < iterable.size; index++) {\n    pair = pairs[index];\n    finalPairs[index] = isMap ? \"[\" + pair[0] + \",\" + pair[1] + \"]\" : pair[0];\n  }\n\n  return getPrefixedValue(getFunctionName(iterable.constructor), \"[\" + finalPairs.join(',') + \"]\");\n};\n/**\n * @function getSortedObject\n *\n * @description\n * get the object with the keys sorted\n *\n * @param {Object} object the object to sort\n * @returns {Object} the sorted object\n */\n\nexport var getSortedObject = function getSortedObject(object) {\n  var objectKeys = sort(keys(object), shouldSort);\n  var newObject = {};\n  var key;\n\n  for (var index = 0; index < objectKeys.length; index++) {\n    key = objectKeys[index];\n    newObject[key] = object[key];\n  }\n\n  return newObject;\n};\n/**\n * @function getStringifiedArrayBufferFallback\n *\n * @description\n * get the string value of the buffer passed based on a Buffer\n *\n * @param {ArrayBuffer} buffer the array buffer to convert\n * @returns {string} the stringified buffer\n */\n\nexport var getStringifiedArrayBufferFallback = function getStringifiedArrayBufferFallback(buffer) {\n  return String.fromCharCode.apply(null, new Uint16Array(buffer));\n};\n/**\n * @function getStringifiedArrayBufferModern\n *\n * @description\n * get the string value of the buffer passed based on a Uint16Array\n *\n * @param {ArrayBuffer} buffer the array buffer to convert\n * @returns {string} the stringified buffer\n */\n\nexport var getStringifiedArrayBufferModern = function getStringifiedArrayBufferModern(buffer) {\n  return Buffer.from(buffer).toString('utf8');\n};\n/**\n * @function getStringifiedArrayBufferNoSupport\n *\n * @description\n * return a placeholder when no arraybuffer support exists\n *\n * @returns {string} the placeholder\n */\n\nexport var getStringifiedArrayBufferNoSupport = function getStringifiedArrayBufferNoSupport() {\n  return '';\n};\n/**\n * @function getStringifiedArrayBuffer\n *\n * @description\n * get the string value of the buffer passed\n *\n * @param {ArrayBuffer} buffer the array buffer to convert\n * @returns {string} the stringified buffer\n */\n\nexport var getStringifiedArrayBuffer = function () {\n  if (HAS_BUFFER_FROM_SUPPORT) {\n    return getStringifiedArrayBufferModern;\n  }\n\n  if (HAS_UINT16ARRAY_SUPPORT) {\n    return getStringifiedArrayBufferFallback;\n  }\n\n  return getStringifiedArrayBufferNoSupport;\n}();\n/**\n * @function getStringifiedDocumentFragment\n *\n * @description\n * build a string based on all the fragment's children\n *\n * @param {DocumentFragment} fragment the fragment to stringify\n * @returns {string} the stringified fragment\n */\n\nexport var getStringifiedDocumentFragment = function getStringifiedDocumentFragment(fragment) {\n  var children = fragment.children;\n  var innerHTML = '';\n\n  for (var index = 0; index < children.length; index++) {\n    innerHTML += children[index].outerHTML;\n  }\n\n  return innerHTML;\n};\n/**\n * @function indexOf\n *\n * @description\n * get the index of the value in the array (faster than native indexOf)\n *\n * @param {Array<any>} array the array to get the index of the value at\n * @param {any} value the value to match\n * @returns {number} the index of the value in array\n */\n\nexport var indexOf = function indexOf(array, value) {\n  for (var index = 0; index < array.length; index++) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n\n  return -1;\n};\n/**\n * @function getNormalizedValue\n *\n * @description\n * get the value normalized for stringification\n *\n * @param {any} value the value to normalize\n * @param {WeakMap|Object} sortedCache the cache of sorted objects\n * @param {string} [passedTag] the previously-calculated tag\n * @returns {any} the normalized value\n */\n\nexport var getNormalizedValue = function getNormalizedValue(value, sortedCache, passedTag) {\n  if (passedTag === void 0) {\n    var type = typeof value;\n\n    if (type === 'string') {\n      return value;\n    }\n\n    if (PRIMITIVE_TAGS[type]) {\n      return getPrefixedValue(type, value);\n    }\n\n    if (value === null) {\n      return getPrefixedValue('null', value);\n    }\n  }\n\n  var tag = passedTag || toString.call(value);\n\n  if (SELF_TAGS[tag]) {\n    return value;\n  }\n\n  if (tag === OBJECT_CLASS_TYPE_MAP.OBJECT) {\n    if (~indexOf(sortedCache, value)) {\n      return CIRCULAR_VALUE;\n    }\n\n    sortedCache.push(value);\n    return getSortedObject(value, sortedCache);\n  }\n\n  if (TOSTRING_TAGS[tag]) {\n    return getPrefixedValue(OBJECT_CLASS_MAP[tag], value.toString());\n  }\n\n  if (ITERABLE_TAGS[tag]) {\n    if (~indexOf(sortedCache, value)) {\n      return CIRCULAR_VALUE;\n    }\n\n    sortedCache.push(value);\n    return getSortedIterablePairs(value);\n  }\n\n  if (tag === OBJECT_CLASS_TYPE_MAP.DATE) {\n    return getPrefixedValue(OBJECT_CLASS_MAP[tag], value.getTime());\n  }\n\n  if (tag === OBJECT_CLASS_TYPE_MAP.ERROR) {\n    return getPrefixedValue(OBJECT_CLASS_MAP[tag], value.stack);\n  }\n\n  if (tag === OBJECT_CLASS_TYPE_MAP.EVENT) {\n    return getSortedEvent(value);\n  }\n\n  if (UNPARSEABLE_TAGS[tag]) {\n    return getPrefixedValue(OBJECT_CLASS_MAP[tag], 'NOT_ENUMERABLE');\n  }\n\n  if (HTML_ELEMENT_REGEXP.test(tag) || SVG_ELEMENT_REGEXP.test(tag)) {\n    return getPrefixedValue(tag.slice(8, -1), value.outerHTML);\n  }\n\n  if (tag === OBJECT_CLASS_TYPE_MAP.DOCUMENTFRAGMENT) {\n    return getPrefixedValue(OBJECT_CLASS_MAP[tag], getStringifiedDocumentFragment(value));\n  }\n\n  if (TYPEDARRAY_TAGS[tag]) {\n    return getPrefixedValue(OBJECT_CLASS_MAP[tag], value.join(','));\n  }\n\n  if (tag === OBJECT_CLASS_TYPE_MAP.ARRAYBUFFER) {\n    return getPrefixedValue(OBJECT_CLASS_MAP[tag], getStringifiedArrayBuffer(value));\n  }\n\n  if (tag === OBJECT_CLASS_TYPE_MAP.DATAVIEW) {\n    return getPrefixedValue(OBJECT_CLASS_MAP[tag], getStringifiedArrayBuffer(value.buffer));\n  }\n\n  return value;\n};\n/**\n * @function replacer\n *\n * @description\n * create the replacer function used for stringification\n *\n * @param {WeakSet|Object} sortedCache the cache to use for sorting objects\n * @returns {function(key: string, value: any)} function getting the normalized value\n */\n\nexport var createReplacer = function createReplacer(sortedCache) {\n  return function (key, value) {\n    return getNormalizedValue(value, sortedCache);\n  };\n};\n/**\n * @function stringify\n *\n * @description\n * stringify the value based on the options passed\n *\n * @param {any} value the value to stringify\n * @returns {string} the stringified value\n */\n\nexport function stringify(value) {\n  if (!value || typeof value !== 'object') {\n    return getNormalizedValue(value);\n  }\n\n  var tag = toString.call(value);\n  return tag === OBJECT_CLASS_TYPE_MAP.DATE || tag === OBJECT_CLASS_TYPE_MAP.REGEXP ? getNormalizedValue(value, void 0, tag) : fastStringify(value, createReplacer([]), null, getCircularValue);\n}","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = -Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = Infinity;\n    var max = -Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice().sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice().sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof(alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice();\n        values.sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw \"Vectors do not have the same dimensions\";\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    }\n    else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    }\n    else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof(eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = values.slice();\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof(standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\nvar LM = require('ml-curve-fitting');\nvar math = LM.Matrix.algebra;\nvar Matrix = require('ml-matrix');\n\n/**\n * This function calculates the spectrum as a sum of lorentzian functions. The Lorentzian\n * parameters are divided in 3 batches. 1st: centers; 2nd: heights; 3th: widths;\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction sumOfLorentzians(t,p,c){\n    var nL = p.length/3,factor,i, j,p2, cols = t.rows;\n    var result = Matrix.zeros(t.length,1);\n\n    for(i=0;i<nL;i++){\n        p2 = Math.pow(p[i+nL*2][0]/2,2);\n        factor = p[i+nL][0]*p2;\n        for(j=0;j<cols;j++){\n            result[j][0]+=factor/(Math.pow(t[j][0]-p[i][0],2)+p2);\n        }\n    }\n    return result;\n}\n\n/**\n * This function calculates the spectrum as a sum of gaussian functions. The Gaussian\n * parameters are divided in 3 batches. 1st: centers; 2nd: height; 3th: std's;\n * @param t Ordinate values\n * @param p Gaussian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction sumOfGaussians(t,p,c){\n    var nL = p.length/3,factor,i, j, cols = t.rows;\n    var result = Matrix.zeros(t.length,1);\n\n    for(i=0;i<nL;i++){\n        factor = p[i+nL*2][0]*p[i+nL*2][0]/2;\n        for(j=0;j<cols;j++){\n            result[j][0]+=p[i+nL][0]*Math.exp(-(t[i][0]-p[i][0])*(t[i][0]-p[i][0])/factor);\n        }\n    }\n    return result;\n}\n/**\n * Single 4 parameter lorentzian function\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction singleLorentzian(t,p,c){\n    var factor = p[1][0]*Math.pow(p[2][0]/2,2);\n    var rows = t.rows;\n    var result = new Matrix(t.rows, t.columns);\n    for(var i=0;i<rows;i++){\n        result[i][0]=factor/(Math.pow(t[i][0]-p[0][0],2)+Math.pow(p[2][0]/2,2));\n    }\n    return result;\n}\n\n/**\n * Single 3 parameter gaussian function\n * @param t Ordinate values\n * @param p Gaussian parameters [mean, height, std]\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction singleGaussian(t,p,c){\n    var factor2 = p[2][0]*p[2][0]/2;\n    var rows = t.rows;\n    var result = new Matrix(t.rows, t.columns);\n    for(var i=0;i<rows;i++){\n        result[i][0]=p[1][0]*Math.exp(-(t[i][0]-p[0][0])*(t[i][0]-p[0][0])/factor2);\n    }\n    return result;\n}\n\n/**\n * * Fits a set of points to a Lorentzian function. Returns the center of the peak, the width at half height, and the height of the signal.\n * @param data,[y]\n * @returns {*[]}\n */\nfunction optimizeSingleLorentzian(xy, peak, opts) {\n    opts = opts || {};\n    var xy2 = parseData(xy, opts.percentage||0);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var nbPoints = t.rows, i;\n\n    var weight = [nbPoints / Math.sqrt(y_data.dot(y_data))];\n\n    var opts=Object.create(opts.LMOptions || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ]);\n    //var opts = [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ];\n    var consts = [ ];\n    var dt = Math.abs(t[0][0]-t[1][0]);// optional vector of constants\n    var dx = new Matrix([[-dt/10000],[-1e-3],[-dt/10000]]);//-Math.abs(t[0][0]-t[1][0])/100;\n    var p_init = new Matrix([[peak.x],[1],[peak.width]]);\n    var p_min = new Matrix([[peak.x-dt],[0.75],[peak.width/4]]);\n    var p_max = new Matrix([[peak.x+dt],[1.25],[peak.width*4]]);\n\n    var p_fit = LM.optimize(singleLorentzian,p_init,t,y_data,weight,dx,p_min,p_max,consts,opts);\n\n\n    p_fit = p_fit.p;\n    return [p_fit[0],[p_fit[1][0]*maxY],p_fit[2]];\n\n}\n\n/**\n * Fits a set of points to a gaussian bell. Returns the mean of the peak, the std and the height of the signal.\n * @param data,[y]\n * @returns {*[]}\n */\nfunction optimizeSingleGaussian(xy, peak, opts) {\n    opts = opts || {};\n    var xy2 = parseData(xy, opts.percentage||0);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n\n    var nbPoints = t.rows, i;\n\n\n\n    var weight = [nbPoints / Math.sqrt(y_data.dot(y_data))];\n\n    var opts=Object.create(opts.LMOptions || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ]);\n    //var opts = [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ];\n    var consts = [ ];                         // optional vector of constants\n    var dt = Math.abs(t[0][0]-t[1][0]);\n    var dx = new Matrix([[-dt/10000],[-1e-3],[-dt/10000]]);//-Math.abs(t[0][0]-t[1][0])/100;\n\n    var dx = new Matrix([[-Math.abs(t[0][0]-t[1][0])/1000],[-1e-3],[-peak.width/1000]]);\n    var p_init = new Matrix([[peak.x],[1],[peak.width]]);\n    var p_min = new Matrix([[peak.x-dt],[0.75],[peak.width/4]]);\n    var p_max = new Matrix([[peak.x+dt],[1.25],[peak.width*4]]);\n    //var p_min = new Matrix([[peak.x-peak.width/4],[0.75],[peak.width/3]]);\n    //var p_max = new Matrix([[peak.x+peak.width/4],[1.25],[peak.width*3]]);\n\n    var p_fit = LM.optimize(singleGaussian,p_init,t,y_data,weight,dx,p_min,p_max,consts,opts);\n    p_fit = p_fit.p;\n    return [p_fit[0],[p_fit[1][0]*maxY],p_fit[2]];\n}\n\n/*\n peaks on group should sorted\n */\nfunction optimizeLorentzianTrain(xy, group, opts){\n    var xy2 = parseData(xy);\n    //console.log(xy2[0].rows);\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var currentIndex = 0;\n    var nbPoints = t.length;\n    var nextX;\n    var tI, yI, maxY;\n    var result=[], current;\n    for(var i=0; i<group.length;i++){\n        nextX = group[i].x-group[i].width*1.5;\n        //console.log(group[i]);\n        while(t[currentIndex++]<nextX&&currentIndex<nbPoints);\n        nextX = group[i].x+group[i].width*1.5;\n        tI = [];\n        yI = [];\n        while(t[currentIndex]<=nextX&&currentIndex<nbPoints){\n            tI.push(t[currentIndex][0]);\n            yI.push(y_data[currentIndex][0]*maxY);\n            currentIndex++;\n        }\n\n        current=optimizeSingleLorentzian([tI, yI], group[i], opts);\n        if(current){\n            result.push({\"x\":current[0][0],\"y\":current[1][0],\"width\":current[2][0],\"opt\":true});\n        }\n        else{\n            result.push({\"x\":group[i].x,\"y\":group[i].y,\"width\":group[i].width,\"opt\":false});\n        }\n    }\n\n    return result;\n\n}\n\nfunction optimizeGaussianTrain(xy, group, opts){\n    var xy2 = parseData(xy);\n    //console.log(xy2[0].rows);\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var currentIndex = 0;\n    var nbPoints = t.length;\n    var nextX;\n    var tI, yI, maxY;\n    var result=[], current;\n    for(var i=0; i<group.length;i++){\n        nextX = group[i].x-group[i].width*1.5;\n        //console.log(group[i]);\n        while(t[currentIndex++]<nextX&&currentIndex<nbPoints);\n        nextX = group[i].x+group[i].width*1.5;\n        tI = [];\n        yI = [];\n        while(t[currentIndex]<=nextX&&currentIndex<nbPoints){\n            tI.push(t[currentIndex][0]);\n            yI.push(y_data[currentIndex][0]*maxY);\n            currentIndex++;\n        }\n\n        current=optimizeSingleGaussian([tI, yI], group[i], opts);\n        if(current){\n            result.push({\"x\":current[0][0],\"y\":current[1][0],\"width\":current[2][0],\"opt\":true});\n        }\n        else{\n            result.push({\"x\":group[i].x,\"y\":group[i].y,\"width\":group[i].width,\"opt\":false});\n        }\n    }\n\n    return result;\n}\n\n\n\n/**\n *\n * @param xy A two column matrix containing the x and y data to be fitted\n * @param group A set of initial lorentzian parameters to be optimized [center, heigth, half_width_at_half_height]\n * @returns {Array} A set of final lorentzian parameters [center, heigth, hwhh*2]\n */\nfunction optimizeLorentzianSum(xy, group, opts){\n    var xy2 = parseData(xy);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var nbPoints = t.rows, i;\n\n    var weight = [nbPoints / math.sqrt(y_data.dot(y_data))];\n    var opts=Object.create(opts || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2, 11, 9, 1 ]);\n    var consts = [ ];// optional vector of constants\n\n    var nL = group.length;\n    var p_init = new Matrix(nL*3,1);\n    var p_min =  new Matrix(nL*3,1);\n    var p_max =  new Matrix(nL*3,1);\n    var dx = new Matrix(nL*3,1);\n    var dt = Math.abs(t[0][0]-t[1][0]);\n    for( i=0;i<nL;i++){\n        p_init[i][0] = group[i].x;\n        p_init[i+nL][0] = 1;\n        p_init[i+2*nL][0] = group[i].width;\n\n        p_min[i][0] = group[i].x-dt;//-group[i].width/4;\n        p_min[i+nL][0] = 0;\n        p_min[i+2*nL][0] = group[i].width/4;\n\n        p_max[i][0] = group[i].x+dt;//+group[i].width/4;\n        p_max[i+nL][0] = 1.5;\n        p_max[i+2*nL][0] = group[i].width*4;\n\n        dx[i][0] = -dt/1000;\n        dx[i+nL][0] = -1e-3;\n        dx[i+2*nL][0] = -dt/1000;\n    }\n\n    var dx = -Math.abs(t[0][0]-t[1][0])/10000;\n    var p_fit = LM.optimize(sumOfLorentzians, p_init, t, y_data, weight, dx, p_min, p_max, consts, opts);\n    p_fit=p_fit.p;\n    //Put back the result in the correct format\n    var result = new Array(nL);\n    for( i=0;i<nL;i++){\n        result[i]=[p_fit[i],[p_fit[i+nL][0]*maxY],p_fit[i+2*nL]];\n    }\n\n    return result;\n\n}\n\n/**\n *\n * @param xy A two column matrix containing the x and y data to be fitted\n * @param group A set of initial lorentzian parameters to be optimized [center, heigth, half_width_at_half_height]\n * @returns {Array} A set of final lorentzian parameters [center, heigth, hwhh*2]\n */\nfunction optimizeGaussianSum(xy, group, opts){\n    var xy2 = parseData(xy);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var nbPoints = t.rows,i;\n\n    var weight = new Matrix(nbPoints,1);//[nbPoints / math.sqrt(y_data.dot(y_data))];\n    var k = nbPoints / math.sqrt(y_data.dot(y_data));\n    for(i=0;i<nbPoints;i++){\n        weight[i][0]=k;///(y_data[i][0]);\n        //weight[i][0]=k*(2-y_data[i][0]);\n    }\n\n    var opts=Object.create(opts || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        2 ]);\n    //var opts=[  3,    100, 1e-5, 1e-6, 1e-6, 1e-6, 1e-6,    11,    9,        1 ];\n    var consts = [ ];// optional vector of constants\n\n    var nL = group.length;\n    var p_init = new Matrix(nL*3,1);\n    var p_min =  new Matrix(nL*3,1);\n    var p_max =  new Matrix(nL*3,1);\n    var dx = new Matrix(nL*3,1);\n    var dt = Math.abs(t[0][0]-t[1][0]);\n    for( i=0;i<nL;i++){\n        p_init[i][0] = group[i].x;\n        p_init[i+nL][0] = group[i].y/maxY;\n        p_init[i+2*nL][0] = group[i].width;\n\n        p_min[i][0] = group[i].x-dt;\n        p_min[i+nL][0] = group[i].y*0.8/maxY;\n        p_min[i+2*nL][0] = group[i].width/2;\n\n        p_max[i][0] = group[i].x+dt;\n        p_max[i+nL][0] = group[i].y*1.2/maxY;\n        p_max[i+2*nL][0] = group[i].width*2;\n\n        dx[i][0] = -dt/1000;\n        dx[i+nL][0] = -1e-3;\n        dx[i+2*nL][0] = -dt/1000;\n    }\n    //console.log(t);\n    var p_fit = LM.optimize(sumOfLorentzians,p_init,t,y_data,weight,dx,p_min,p_max,consts,opts);\n    p_fit = p_fit.p;\n    //Put back the result in the correct format\n    var result = new Array(nL);\n    for( i=0;i<nL;i++){\n        result[i]=[p_fit[i],[p_fit[i+nL][0]*maxY],p_fit[i+2*nL]];\n    }\n\n    return result;\n\n}\n/**\n *\n * Converts the given input to the required x, y column matrices. y data is normalized to max(y)=1\n * @param xy\n * @returns {*[]}\n */\nfunction parseData(xy, threshold){\n    var nbSeries = xy.length;\n    var t = null;\n    var y_data = null, x,y;\n    var maxY = 0, i,j;\n\n    if(nbSeries==2){\n        //Looks like row wise matrix [x,y]\n        var nbPoints = xy[0].length;\n        //if(nbPoints<3)\n        //    throw new Exception(nbPoints);\n        //else{\n        t = new Array(nbPoints);//new Matrix(nbPoints,1);\n        y_data = new Array(nbPoints);//new Matrix(nbPoints,1);\n        x = xy[0];\n        y = xy[1];\n        if(typeof x[0] === \"number\"){\n            for(i=0;i<nbPoints;i++){\n                t[i]=x[i];\n                y_data[i]=y[i];\n                if(y[i]>maxY)\n                    maxY = y[i];\n            }\n        }\n        else{\n            //It is a colum matrix\n            if(typeof x[0] === \"object\"){\n                for(i=0;i<nbPoints;i++){\n                    t[i]=x[i][0];\n                    y_data[i]=y[i][0];\n                    if(y[i][0]>maxY)\n                        maxY = y[i][0];\n                }\n            }\n\n        }\n\n        //}\n    }\n    else{\n        //Looks like a column wise matrix [[x],[y]]\n        var nbPoints = nbSeries;\n        //if(nbPoints<3)\n        //    throw new SizeException(nbPoints);\n        //else {\n        t = new Array(nbPoints);//new Matrix(nbPoints, 1);\n        y_data = new Array(nbPoints);//new Matrix(nbPoints, 1);\n        for (i = 0; i < nbPoints; i++) {\n            t[i] = xy[i][0];\n            y_data[i] = xy[i][1];\n            if(y_data[i]>maxY)\n                maxY = y_data[i];\n        }\n        //}\n    }\n    for (i = 0; i < nbPoints; i++) {\n        y_data[i]/=maxY;\n    }\n    if(threshold){\n        for (i = nbPoints-1; i >=0; i--) {\n            if(y_data[i]<threshold) {\n                y_data.splice(i,1);\n                t.splice(i,1);\n            }\n        }\n    }\n    if(t.length>0)\n        return [(new Matrix([t])).transpose(),(new Matrix([y_data])).transpose(),maxY];\n    return null;\n}\n\nfunction sizeException(nbPoints) {\n    return new RangeError(\"Not enough points to perform the optimization: \"+nbPoints +\"< 3\");\n}\n\nmodule.exports.optimizeSingleLorentzian = optimizeSingleLorentzian;\nmodule.exports.optimizeLorentzianSum = optimizeLorentzianSum;\nmodule.exports.optimizeSingleGaussian = optimizeSingleGaussian;\nmodule.exports.optimizeGaussianSum = optimizeGaussianSum;\nmodule.exports.singleGaussian = singleGaussian;\nmodule.exports.singleLorentzian = singleLorentzian;\nmodule.exports.optimizeGaussianTrain = optimizeGaussianTrain;\nmodule.exports.optimizeLorentzianTrain = optimizeLorentzianTrain;","'use strict';\n\nmodule.exports = abstractMatrix;\n\nvar LuDecomposition = require('./dc/lu');\nvar SvDecomposition = require('./dc/svd');\nvar arrayUtils = require('ml-array-utils');\nvar util = require('./util');\nvar MatrixTransposeView = require('./views/transpose');\nvar MatrixRowView = require('./views/row');\nvar MatrixSubView = require('./views/sub');\nvar MatrixSelectionView = require('./views/selection');\nvar MatrixColumnView = require('./views/column');\nvar MatrixFlipRowView = require('./views/flipRow');\nvar MatrixFlipColumnView = require('./views/flipColumn');\n\nfunction abstractMatrix(superCtor) {\n    if (superCtor === undefined) superCtor = Object;\n\n    /**\n     * Real matrix\n     * @class Matrix\n     * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\n     * 2D array containing the data or Matrix instance to clone\n     * @param {number} [nColumns] - Number of columns of the new matrix\n     */\n    class Matrix extends superCtor {\n        static get [Symbol.species]() {\n            return this;\n        }\n\n        /**\n         * Constructs a Matrix with the chosen dimensions from a 1D array\n         * @param {number} newRows - Number of rows\n         * @param {number} newColumns - Number of columns\n         * @param {Array} newData - A 1D array containing data for the matrix\n         * @return {Matrix} - The new matrix\n         */\n        static from1DArray(newRows, newColumns, newData) {\n            var length = newRows * newColumns;\n            if (length !== newData.length) {\n                throw new RangeError('Data length does not match given dimensions');\n            }\n            var newMatrix = new this(newRows, newColumns);\n            for (var row = 0; row < newRows; row++) {\n                for (var column = 0; column < newColumns; column++) {\n                    newMatrix.set(row, column, newData[row * newColumns + column]);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Creates a row vector, a matrix with only one row.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n        static rowVector(newData) {\n            var vector = new this(1, newData.length);\n            for (var i = 0; i < newData.length; i++) {\n                vector.set(0, i, newData[i]);\n            }\n            return vector;\n        }\n\n        /**\n         * Creates a column vector, a matrix with only one column.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n        static columnVector(newData) {\n            var vector = new this(newData.length, 1);\n            for (var i = 0; i < newData.length; i++) {\n                vector.set(i, 0, newData[i]);\n            }\n            return vector;\n        }\n\n        /**\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static empty(rows, columns) {\n            return new this(rows, columns);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be set to zero.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static zeros(rows, columns) {\n            return this.empty(rows, columns).fill(0);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be set to one.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static ones(rows, columns) {\n            return this.empty(rows, columns).fill(1);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be randomly set.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n        static rand(rows, columns, rng) {\n            if (rng === undefined) rng = Math.random;\n            var matrix = this.empty(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    matrix.set(i, j, rng());\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be random integers.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {number} [maxValue=1000] - Maximum value\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n        static randInt(rows, columns, maxValue, rng) {\n            if (maxValue === undefined) maxValue = 1000;\n            if (rng === undefined) rng = Math.random;\n            var matrix = this.empty(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    var value = Math.floor(rng() * maxValue);\n                    matrix.set(i, j, value);\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\n         * @param {number} rows - Number of rows\n         * @param {number} [columns=rows] - Number of columns\n         * @param {number} [value=1] - Value to fill the diagonal with\n         * @return {Matrix} - The new identity matrix\n         */\n        static eye(rows, columns, value) {\n            if (columns === undefined) columns = rows;\n            if (value === undefined) value = 1;\n            var min = Math.min(rows, columns);\n            var matrix = this.zeros(rows, columns);\n            for (var i = 0; i < min; i++) {\n                matrix.set(i, i, value);\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates a diagonal matrix based on the given array.\n         * @param {Array} data - Array containing the data for the diagonal\n         * @param {number} [rows] - Number of rows (Default: data.length)\n         * @param {number} [columns] - Number of columns (Default: rows)\n         * @return {Matrix} - The new diagonal matrix\n         */\n        static diag(data, rows, columns) {\n            var l = data.length;\n            if (rows === undefined) rows = l;\n            if (columns === undefined) columns = rows;\n            var min = Math.min(l, rows, columns);\n            var matrix = this.zeros(rows, columns);\n            for (var i = 0; i < min; i++) {\n                matrix.set(i, i, data[i]);\n            }\n            return matrix;\n        }\n\n        /**\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n        static min(matrix1, matrix2) {\n            matrix1 = this.checkMatrix(matrix1);\n            matrix2 = this.checkMatrix(matrix2);\n            var rows = matrix1.rows;\n            var columns = matrix1.columns;\n            var result = new this(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n        static max(matrix1, matrix2) {\n            matrix1 = this.checkMatrix(matrix1);\n            matrix2 = this.checkMatrix(matrix2);\n            var rows = matrix1.rows;\n            var columns = matrix1.columns;\n            var result = new this(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Check that the provided value is a Matrix and tries to instantiate one if not\n         * @param {*} value - The value to check\n         * @return {Matrix}\n         */\n        static checkMatrix(value) {\n            return Matrix.isMatrix(value) ? value : new this(value);\n        }\n\n        /**\n         * Returns true if the argument is a Matrix, false otherwise\n         * @param {*} value - The value to check\n         * @return {boolean}\n         */\n        static isMatrix(value) {\n            return (value != null) && (value.klass === 'Matrix');\n        }\n\n        /**\n         * @prop {number} size - The number of elements in the matrix.\n         */\n        get size() {\n            return this.rows * this.columns;\n        }\n\n        /**\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n         * @return {Matrix} this\n         */\n        apply(callback) {\n            if (typeof callback !== 'function') {\n                throw new TypeError('callback must be a function');\n            }\n            var ii = this.rows;\n            var jj = this.columns;\n            for (var i = 0; i < ii; i++) {\n                for (var j = 0; j < jj; j++) {\n                    callback.call(this, i, j);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Returns a new 1D array filled row by row with the matrix values\n         * @return {Array}\n         */\n        to1DArray() {\n            var array = new Array(this.size);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    array[i * this.columns + j] = this.get(i, j);\n                }\n            }\n            return array;\n        }\n\n        /**\n         * Returns a 2D array containing a copy of the data\n         * @return {Array}\n         */\n        to2DArray() {\n            var copy = new Array(this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                copy[i] = new Array(this.columns);\n                for (var j = 0; j < this.columns; j++) {\n                    copy[i][j] = this.get(i, j);\n                }\n            }\n            return copy;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one row\n         */\n        isRowVector() {\n            return this.rows === 1;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one column\n         */\n        isColumnVector() {\n            return this.columns === 1;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one row or one column\n         */\n        isVector() {\n            return (this.rows === 1) || (this.columns === 1);\n        }\n\n        /**\n         * @return {boolean} true if the matrix has the same number of rows and columns\n         */\n        isSquare() {\n            return this.rows === this.columns;\n        }\n\n        /**\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n         */\n        isSymmetric() {\n            if (this.isSquare()) {\n                for (var i = 0; i < this.rows; i++) {\n                    for (var j = 0; j <= i; j++) {\n                        if (this.get(i, j) !== this.get(j, i)) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n\n        /**\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @param {number} value - The new value for the element\n         * @return {Matrix} this\n         */\n        set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\n            throw new Error('set method is unimplemented');\n        }\n\n        /**\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @return {number}\n         */\n        get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\n            throw new Error('get method is unimplemented');\n        }\n\n        /**\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\n         * rows of the matrix, and colRep times the number of columns of the matrix\n         * @param {number} rowRep - Number of times the rows should be repeated\n         * @param {number} colRep - Number of times the columns should be re\n         * @return {Matrix}\n         * @example\n         * var matrix = new Matrix([[1,2]]);\n         * matrix.repeat(2); // [[1,2],[1,2]]\n         */\n        repeat(rowRep, colRep) {\n            rowRep = rowRep || 1;\n            colRep = colRep || 1;\n            var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\n            for (var i = 0; i < rowRep; i++) {\n                for (var j = 0; j < colRep; j++) {\n                    matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Fills the matrix with a given value. All elements will be set to this value.\n         * @param {number} value - New value\n         * @return {Matrix} this\n         */\n        fill(value) {\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, value);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Negates the matrix. All elements will be multiplied by (-1)\n         * @return {Matrix} this\n         */\n        neg() {\n            return this.mulS(-1);\n        }\n\n        /**\n         * Returns a new array from the given row index\n         * @param {number} index - Row index\n         * @return {Array}\n         */\n        getRow(index) {\n            util.checkRowIndex(this, index);\n            var row = new Array(this.columns);\n            for (var i = 0; i < this.columns; i++) {\n                row[i] = this.get(index, i);\n            }\n            return row;\n        }\n\n        /**\n         * Returns a new row vector from the given row index\n         * @param {number} index - Row index\n         * @return {Matrix}\n         */\n        getRowVector(index) {\n            return this.constructor.rowVector(this.getRow(index));\n        }\n\n        /**\n         * Sets a row at the given index\n         * @param {number} index - Row index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n        setRow(index, array) {\n            util.checkRowIndex(this, index);\n            array = util.checkRowVector(this, array);\n            for (var i = 0; i < this.columns; i++) {\n                this.set(index, i, array[i]);\n            }\n            return this;\n        }\n\n        /**\n         * Swaps two rows\n         * @param {number} row1 - First row index\n         * @param {number} row2 - Second row index\n         * @return {Matrix} this\n         */\n        swapRows(row1, row2) {\n            util.checkRowIndex(this, row1);\n            util.checkRowIndex(this, row2);\n            for (var i = 0; i < this.columns; i++) {\n                var temp = this.get(row1, i);\n                this.set(row1, i, this.get(row2, i));\n                this.set(row2, i, temp);\n            }\n            return this;\n        }\n\n        /**\n         * Returns a new array from the given column index\n         * @param {number} index - Column index\n         * @return {Array}\n         */\n        getColumn(index) {\n            util.checkColumnIndex(this, index);\n            var column = new Array(this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                column[i] = this.get(i, index);\n            }\n            return column;\n        }\n\n        /**\n         * Returns a new column vector from the given column index\n         * @param {number} index - Column index\n         * @return {Matrix}\n         */\n        getColumnVector(index) {\n            return this.constructor.columnVector(this.getColumn(index));\n        }\n\n        /**\n         * Sets a column at the given index\n         * @param {number} index - Column index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n        setColumn(index, array) {\n            util.checkColumnIndex(this, index);\n            array = util.checkColumnVector(this, array);\n            for (var i = 0; i < this.rows; i++) {\n                this.set(i, index, array[i]);\n            }\n            return this;\n        }\n\n        /**\n         * Swaps two columns\n         * @param {number} column1 - First column index\n         * @param {number} column2 - Second column index\n         * @return {Matrix} this\n         */\n        swapColumns(column1, column2) {\n            util.checkColumnIndex(this, column1);\n            util.checkColumnIndex(this, column2);\n            for (var i = 0; i < this.rows; i++) {\n                var temp = this.get(i, column1);\n                this.set(i, column1, this.get(i, column2));\n                this.set(i, column2, temp);\n            }\n            return this;\n        }\n\n        /**\n         * Adds the values of a vector to each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        addRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) + vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Subtracts the values of a vector from each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        subRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) - vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a vector with each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        mulRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) * vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Divides the values of each row by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        divRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) / vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Adds the values of a vector to each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        addColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) + vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Subtracts the values of a vector from each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        subColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) - vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a vector with each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        mulColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) * vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Divides the values of each column by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        divColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) / vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a row with a scalar\n         * @param {number} index - Row index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n        mulRow(index, value) {\n            util.checkRowIndex(this, index);\n            for (var i = 0; i < this.columns; i++) {\n                this.set(index, i, this.get(index, i) * value);\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a column with a scalar\n         * @param {number} index - Column index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n        mulColumn(index, value) {\n            util.checkColumnIndex(this, index);\n            for (var i = 0; i < this.rows; i++) {\n                this.set(i, index, this.get(i, index) * value);\n            }\n            return this;\n        }\n\n        /**\n         * Returns the maximum value of the matrix\n         * @return {number}\n         */\n        max() {\n            var v = this.get(0, 0);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) > v) {\n                        v = this.get(i, j);\n                    }\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value\n         * @return {Array}\n         */\n        maxIndex() {\n            var v = this.get(0, 0);\n            var idx = [0, 0];\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) > v) {\n                        v = this.get(i, j);\n                        idx[0] = i;\n                        idx[1] = j;\n                    }\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of the matrix\n         * @return {number}\n         */\n        min() {\n            var v = this.get(0, 0);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) < v) {\n                        v = this.get(i, j);\n                    }\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the minimum value\n         * @return {Array}\n         */\n        minIndex() {\n            var v = this.get(0, 0);\n            var idx = [0, 0];\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) < v) {\n                        v = this.get(i, j);\n                        idx[0] = i;\n                        idx[1] = j;\n                    }\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the maximum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n        maxRow(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) > v) {\n                    v = this.get(row, i);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n        maxRowIndex(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            var idx = [row, 0];\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) > v) {\n                    v = this.get(row, i);\n                    idx[1] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n        minRow(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) < v) {\n                    v = this.get(row, i);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n        minRowIndex(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            var idx = [row, 0];\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) < v) {\n                    v = this.get(row, i);\n                    idx[1] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the maximum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n        maxColumn(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) > v) {\n                    v = this.get(i, column);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n        maxColumnIndex(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            var idx = [0, column];\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) > v) {\n                    v = this.get(i, column);\n                    idx[0] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n        minColumn(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) < v) {\n                    v = this.get(i, column);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the minimum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n        minColumnIndex(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            var idx = [0, column];\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) < v) {\n                    v = this.get(i, column);\n                    idx[0] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns an array containing the diagonal values of the matrix\n         * @return {Array}\n         */\n        diag() {\n            var min = Math.min(this.rows, this.columns);\n            var diag = new Array(min);\n            for (var i = 0; i < min; i++) {\n                diag[i] = this.get(i, i);\n            }\n            return diag;\n        }\n\n        /**\n         * Returns the sum by the argument given, if no argument given,\n         * it returns the sum of all elements of the matrix.\n         * @param {string} by - sum by 'row' or 'column'.\n         * @return {Matrix|number}\n         */\n        sum(by) {\n            switch (by) {\n                case 'row':\n                    return util.sumByRow(this);\n                case 'column':\n                    return util.sumByColumn(this);\n                default:\n                    return util.sumAll(this);\n            }\n        }\n\n        /**\n         * Returns the mean of all elements of the matrix\n         * @return {number}\n         */\n        mean() {\n            return this.sum() / this.size;\n        }\n\n        /**\n         * Returns the product of all elements of the matrix\n         * @return {number}\n         */\n        prod() {\n            var prod = 1;\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    prod *= this.get(i, j);\n                }\n            }\n            return prod;\n        }\n\n        /**\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\n         * @return {Matrix} this\n         */\n        cumulativeSum() {\n            var sum = 0;\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    sum += this.get(i, j);\n                    this.set(i, j, sum);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Computes the dot (scalar) product between the matrix and another\n         * @param {Matrix} vector2 vector\n         * @return {number}\n         */\n        dot(vector2) {\n            if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n            var vector1 = this.to1DArray();\n            if (vector1.length !== vector2.length) {\n                throw new RangeError('vectors do not have the same size');\n            }\n            var dot = 0;\n            for (var i = 0; i < vector1.length; i++) {\n                dot += vector1[i] * vector2[i];\n            }\n            return dot;\n        }\n\n        /**\n         * Returns the matrix product between this and other\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n        mmul(other) {\n            other = this.constructor.checkMatrix(other);\n            if (this.columns !== other.rows) {\n                // eslint-disable-next-line no-console\n                console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n            }\n\n            var m = this.rows;\n            var n = this.columns;\n            var p = other.columns;\n\n            var result = new this.constructor[Symbol.species](m, p);\n\n            var Bcolj = new Array(n);\n            for (var j = 0; j < p; j++) {\n                for (var k = 0; k < n; k++) {\n                    Bcolj[k] = other.get(k, j);\n                }\n\n                for (var i = 0; i < m; i++) {\n                    var s = 0;\n                    for (k = 0; k < n; k++) {\n                        s += this.get(i, k) * Bcolj[k];\n                    }\n\n                    result.set(i, j, s);\n                }\n            }\n            return result;\n        }\n\n        strassen2x2(other) {\n            var result = new this.constructor[Symbol.species](2, 2);\n            const a11 = this.get(0, 0);\n            const b11 = other.get(0, 0);\n            const a12 = this.get(0, 1);\n            const b12 = other.get(0, 1);\n            const a21 = this.get(1, 0);\n            const b21 = other.get(1, 0);\n            const a22 = this.get(1, 1);\n            const b22 = other.get(1, 1);\n\n            // Compute intermediate values.\n            const m1 = (a11 + a22) * (b11 + b22);\n            const m2 = (a21 + a22) * b11;\n            const m3 = a11 * (b12 - b22);\n            const m4 = a22 * (b21 - b11);\n            const m5 = (a11 + a12) * b22;\n            const m6 = (a21 - a11) * (b11 + b12);\n            const m7 = (a12 - a22) * (b21 + b22);\n\n            // Combine intermediate values into the output.\n            const c00 = m1 + m4 - m5 + m7;\n            const c01 = m3 + m5;\n            const c10 = m2 + m4;\n            const c11 = m1 - m2 + m3 + m6;\n\n            result.set(0, 0, c00);\n            result.set(0, 1, c01);\n            result.set(1, 0, c10);\n            result.set(1, 1, c11);\n            return result;\n        }\n\n        strassen3x3(other) {\n            var result = new this.constructor[Symbol.species](3, 3);\n\n            const a00 = this.get(0, 0);\n            const a01 = this.get(0, 1);\n            const a02 = this.get(0, 2);\n            const a10 = this.get(1, 0);\n            const a11 = this.get(1, 1);\n            const a12 = this.get(1, 2);\n            const a20 = this.get(2, 0);\n            const a21 = this.get(2, 1);\n            const a22 = this.get(2, 2);\n\n            const b00 = other.get(0, 0);\n            const b01 = other.get(0, 1);\n            const b02 = other.get(0, 2);\n            const b10 = other.get(1, 0);\n            const b11 = other.get(1, 1);\n            const b12 = other.get(1, 2);\n            const b20 = other.get(2, 0);\n            const b21 = other.get(2, 1);\n            const b22 = other.get(2, 2);\n\n            const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n            const m2 = (a00 - a10) * (-b01 + b11);\n            const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n            const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n            const m5 = (a10 + a11) * (-b00 + b01);\n            const m6 = a00 * b00;\n            const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n            const m8 = (-a00 + a20) * (b02 - b12);\n            const m9 = (a20 + a21) * (-b00 + b02);\n            const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n            const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n            const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n            const m13 = (a02 - a22) * (b11 - b21);\n            const m14 = a02 * b20;\n            const m15 = (a21 + a22) * (-b20 + b21);\n            const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n            const m17 = (a02 - a12) * (b12 - b22);\n            const m18 = (a11 + a12) * (-b20 + b22);\n            const m19 = a01 * b10;\n            const m20 = a12 * b21;\n            const m21 = a10 * b02;\n            const m22 = a20 * b01;\n            const m23 = a22 * b22;\n\n            const c00 = m6 + m14 + m19;\n            const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n            const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n            const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n            const c11 = m2 + m4 + m5 + m6 + m20;\n            const c12 = m14 + m16 + m17 + m18 + m21;\n            const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n            const c21 = m12 + m13 + m14 + m15 + m22;\n            const c22 = m6 + m7 + m8 + m9 + m23;\n\n            result.set(0, 0, c00);\n            result.set(0, 1, c01);\n            result.set(0, 2, c02);\n            result.set(1, 0, c10);\n            result.set(1, 1, c11);\n            result.set(1, 2, c12);\n            result.set(2, 0, c20);\n            result.set(2, 1, c21);\n            result.set(2, 2, c22);\n            return result;\n        }\n\n        /**\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\n         * @param {Matrix} y\n         * @return {Matrix}\n         */\n        mmulStrassen(y) {\n            var x = this.clone();\n            var r1 = x.rows;\n            var c1 = x.columns;\n            var r2 = y.rows;\n            var c2 = y.columns;\n            if (c1 !== r2) {\n                // eslint-disable-next-line no-console\n                console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\n            }\n\n            // Put a matrix into the top left of a matrix of zeros.\n            // `rows` and `cols` are the dimensions of the output matrix.\n            function embed(mat, rows, cols) {\n                var r = mat.rows;\n                var c = mat.columns;\n                if ((r === rows) && (c === cols)) {\n                    return mat;\n                } else {\n                    var resultat = Matrix.zeros(rows, cols);\n                    resultat = resultat.setSubMatrix(mat, 0, 0);\n                    return resultat;\n                }\n            }\n\n\n            // Make sure both matrices are the same size.\n            // This is exclusively for simplicity:\n            // this algorithm can be implemented with matrices of different sizes.\n\n            var r = Math.max(r1, r2);\n            var c = Math.max(c1, c2);\n            x = embed(x, r, c);\n            y = embed(y, r, c);\n\n            // Our recursive multiplication function.\n            function blockMult(a, b, rows, cols) {\n                // For small matrices, resort to naive multiplication.\n                if (rows <= 512 || cols <= 512) {\n                    return a.mmul(b); // a is equivalent to this\n                }\n\n                // Apply dynamic padding.\n                if ((rows % 2 === 1) && (cols % 2 === 1)) {\n                    a = embed(a, rows + 1, cols + 1);\n                    b = embed(b, rows + 1, cols + 1);\n                } else if (rows % 2 === 1) {\n                    a = embed(a, rows + 1, cols);\n                    b = embed(b, rows + 1, cols);\n                } else if (cols % 2 === 1) {\n                    a = embed(a, rows, cols + 1);\n                    b = embed(b, rows, cols + 1);\n                }\n\n                var halfRows = parseInt(a.rows / 2);\n                var halfCols = parseInt(a.columns / 2);\n                // Subdivide input matrices.\n                var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n                var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n                var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n                var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n                var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n                var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n                var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n                var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n                // Compute intermediate values.\n                var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\n                var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\n                var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\n                var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\n                var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\n                var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\n                var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\n\n                // Combine intermediate values into the output.\n                var c11 = Matrix.add(m1, m4);\n                c11.sub(m5);\n                c11.add(m7);\n                var c12 = Matrix.add(m3, m5);\n                var c21 = Matrix.add(m2, m4);\n                var c22 = Matrix.sub(m1, m2);\n                c22.add(m3);\n                c22.add(m6);\n\n                //Crop output to the desired size (undo dynamic padding).\n                var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\n                resultat = resultat.setSubMatrix(c11, 0, 0);\n                resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n                resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n                resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n                return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n            }\n            return blockMult(x, y, r, c);\n        }\n\n        /**\n         * Returns a row-by-row scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The scaled matrix\n         */\n        scaleRows(min, max) {\n            min = min === undefined ? 0 : min;\n            max = max === undefined ? 1 : max;\n            if (min >= max) {\n                throw new RangeError('min should be strictly smaller than max');\n            }\n            var newMatrix = this.constructor.empty(this.rows, this.columns);\n            for (var i = 0; i < this.rows; i++) {\n                var scaled = arrayUtils.scale(this.getRow(i), {min, max});\n                newMatrix.setRow(i, scaled);\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a new column-by-column scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The new scaled matrix\n         * @example\n         * var matrix = new Matrix([[1,2],[-1,0]]);\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\n         */\n        scaleColumns(min, max) {\n            min = min === undefined ? 0 : min;\n            max = max === undefined ? 1 : max;\n            if (min >= max) {\n                throw new RangeError('min should be strictly smaller than max');\n            }\n            var newMatrix = this.constructor.empty(this.rows, this.columns);\n            for (var i = 0; i < this.columns; i++) {\n                var scaled = arrayUtils.scale(this.getColumn(i), {\n                    min: min,\n                    max: max\n                });\n                newMatrix.setColumn(i, scaled);\n            }\n            return newMatrix;\n        }\n\n\n        /**\n         * Returns the Kronecker product (also known as tensor product) between this and other\n         * See https://en.wikipedia.org/wiki/Kronecker_product\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n        kroneckerProduct(other) {\n            other = this.constructor.checkMatrix(other);\n\n            var m = this.rows;\n            var n = this.columns;\n            var p = other.rows;\n            var q = other.columns;\n\n            var result = new this.constructor[Symbol.species](m * p, n * q);\n            for (var i = 0; i < m; i++) {\n                for (var j = 0; j < n; j++) {\n                    for (var k = 0; k < p; k++) {\n                        for (var l = 0; l < q; l++) {\n                            result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Transposes the matrix and returns a new one containing the result\n         * @return {Matrix}\n         */\n        transpose() {\n            var result = new this.constructor[Symbol.species](this.columns, this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    result.set(j, i, this.get(i, j));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Sorts the rows (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n        sortRows(compareFunction) {\n            if (compareFunction === undefined) compareFunction = compareNumbers;\n            for (var i = 0; i < this.rows; i++) {\n                this.setRow(i, this.getRow(i).sort(compareFunction));\n            }\n            return this;\n        }\n\n        /**\n         * Sorts the columns (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n        sortColumns(compareFunction) {\n            if (compareFunction === undefined) compareFunction = compareNumbers;\n            for (var i = 0; i < this.columns; i++) {\n                this.setColumn(i, this.getColumn(i).sort(compareFunction));\n            }\n            return this;\n        }\n\n        /**\n         * Returns a subset of the matrix\n         * @param {number} startRow - First row index\n         * @param {number} endRow - Last row index\n         * @param {number} startColumn - First column index\n         * @param {number} endColumn - Last column index\n         * @return {Matrix}\n         */\n        subMatrix(startRow, endRow, startColumn, endColumn) {\n            util.checkRange(this, startRow, endRow, startColumn, endColumn);\n            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\n            for (var i = startRow; i <= endRow; i++) {\n                for (var j = startColumn; j <= endColumn; j++) {\n                    newMatrix[i - startRow][j - startColumn] = this.get(i, j);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a subset of the matrix based on an array of row indices\n         * @param {Array} indices - Array containing the row indices\n         * @param {number} [startColumn = 0] - First column index\n         * @param {number} [endColumn = this.columns-1] - Last column index\n         * @return {Matrix}\n         */\n        subMatrixRow(indices, startColumn, endColumn) {\n            if (startColumn === undefined) startColumn = 0;\n            if (endColumn === undefined) endColumn = this.columns - 1;\n            if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\n                throw new RangeError('Argument out of range');\n            }\n\n            var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\n            for (var i = 0; i < indices.length; i++) {\n                for (var j = startColumn; j <= endColumn; j++) {\n                    if (indices[i] < 0 || indices[i] >= this.rows) {\n                        throw new RangeError('Row index out of range: ' + indices[i]);\n                    }\n                    newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a subset of the matrix based on an array of column indices\n         * @param {Array} indices - Array containing the column indices\n         * @param {number} [startRow = 0] - First row index\n         * @param {number} [endRow = this.rows-1] - Last row index\n         * @return {Matrix}\n         */\n        subMatrixColumn(indices, startRow, endRow) {\n            if (startRow === undefined) startRow = 0;\n            if (endRow === undefined) endRow = this.rows - 1;\n            if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\n                throw new RangeError('Argument out of range');\n            }\n\n            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\n            for (var i = 0; i < indices.length; i++) {\n                for (var j = startRow; j <= endRow; j++) {\n                    if (indices[i] < 0 || indices[i] >= this.columns) {\n                        throw new RangeError('Column index out of range: ' + indices[i]);\n                    }\n                    newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Set a part of the matrix to the given sub-matrix\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\n         * @param {number} startRow - The index of the first row to set\n         * @param {number} startColumn - The index of the first column to set\n         * @return {Matrix}\n         */\n        setSubMatrix(matrix, startRow, startColumn) {\n            matrix = this.constructor.checkMatrix(matrix);\n            var endRow = startRow + matrix.rows - 1;\n            var endColumn = startColumn + matrix.columns - 1;\n            util.checkRange(this, startRow, endRow, startColumn, endColumn);\n            for (var i = 0; i < matrix.rows; i++) {\n                for (var j = 0; j < matrix.columns; j++) {\n                    this[startRow + i][startColumn + j] = matrix.get(i, j);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Return a new matrix based on a selection of rows and columns\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\n         * @return {Matrix} The new matrix\n         */\n        selection(rowIndices, columnIndices) {\n            var indices = util.checkIndices(this, rowIndices, columnIndices);\n            var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\n            for (var i = 0; i < indices.row.length; i++) {\n                var rowIndex = indices.row[i];\n                for (var j = 0; j < indices.column.length; j++) {\n                    var columnIndex = indices.column[j];\n                    newMatrix[i][j] = this.get(rowIndex, columnIndex);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns the trace of the matrix (sum of the diagonal elements)\n         * @return {number}\n         */\n        trace() {\n            var min = Math.min(this.rows, this.columns);\n            var trace = 0;\n            for (var i = 0; i < min; i++) {\n                trace += this.get(i, i);\n            }\n            return trace;\n        }\n\n        /*\n         Matrix views\n         */\n\n        /**\n         * Returns a view of the transposition of the matrix\n         * @return {MatrixTransposeView}\n         */\n        transposeView() {\n            return new MatrixTransposeView(this);\n        }\n\n        /**\n         * Returns a view of the row vector with the given index\n         * @param {number} row - row index of the vector\n         * @return {MatrixRowView}\n         */\n        rowView(row) {\n            util.checkRowIndex(this, row);\n            return new MatrixRowView(this, row);\n        }\n\n        /**\n         * Returns a view of the column vector with the given index\n         * @param {number} column - column index of the vector\n         * @return {MatrixColumnView}\n         */\n        columnView(column) {\n            util.checkColumnIndex(this, column);\n            return new MatrixColumnView(this, column);\n        }\n\n        /**\n         * Returns a view of the matrix flipped in the row axis\n         * @return {MatrixFlipRowView}\n         */\n        flipRowView() {\n            return new MatrixFlipRowView(this);\n        }\n\n        /**\n         * Returns a view of the matrix flipped in the column axis\n         * @return {MatrixFlipColumnView}\n         */\n        flipColumnView() {\n            return new MatrixFlipColumnView(this);\n        }\n\n        /**\n         * Returns a view of a submatrix giving the index boundaries\n         * @param {number} startRow - first row index of the submatrix\n         * @param {number} endRow - last row index of the submatrix\n         * @param {number} startColumn - first column index of the submatrix\n         * @param {number} endColumn - last column index of the submatrix\n         * @return {MatrixSubView}\n         */\n        subMatrixView(startRow, endRow, startColumn, endColumn) {\n            return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\n        }\n\n        /**\n         * Returns a view of the cross of the row indices and the column indices\n         * @example\n         * // resulting vector is [[2], [2]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\n         * @param {Array<number>} rowIndices\n         * @param {Array<number>} columnIndices\n         * @return {MatrixSelectionView}\n         */\n        selectionView(rowIndices, columnIndices) {\n            return new MatrixSelectionView(this, rowIndices, columnIndices);\n        }\n\n\n        /**\n        * Calculates and returns the determinant of a matrix as a Number\n        * @example\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\n        * @return {number}\n        */\n        det() {\n            if (this.isSquare()) {\n                var a, b, c, d;\n                if (this.columns === 2) {\n                    // 2 x 2 matrix\n                    a = this.get(0, 0);\n                    b = this.get(0, 1);\n                    c = this.get(1, 0);\n                    d = this.get(1, 1);\n\n                    return a * d - (b * c);\n                } else if (this.columns === 3) {\n                    // 3 x 3 matrix\n                    var subMatrix0, subMatrix1, subMatrix2;\n                    subMatrix0 = this.selectionView([1, 2], [1, 2]);\n                    subMatrix1 = this.selectionView([1, 2], [0, 2]);\n                    subMatrix2 = this.selectionView([1, 2], [0, 1]);\n                    a = this.get(0, 0);\n                    b = this.get(0, 1);\n                    c = this.get(0, 2);\n\n                    return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\n                } else {\n                    // general purpose determinant using the LU decomposition\n                    return new LuDecomposition(this).determinant;\n                }\n\n            } else {\n                throw Error('Determinant can only be calculated for a square matrix.');\n            }\n        }\n\n        /**\n         * Returns inverse of a matrix if it exists or the pseudoinverse\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\n         * @return {Matrix} the (pseudo)inverted matrix.\n         */\n        pseudoInverse(threshold) {\n            if (threshold === undefined) threshold = Number.EPSILON;\n            var svdSolution = new SvDecomposition(this, {autoTranspose: true});\n\n            var U = svdSolution.leftSingularVectors;\n            var V = svdSolution.rightSingularVectors;\n            var s = svdSolution.diagonal;\n\n            for (var i = 0; i < s.length; i++) {\n                if (Math.abs(s[i]) > threshold) {\n                    s[i] = 1.0 / s[i];\n                } else {\n                    s[i] = 0.0;\n                }\n            }\n\n            // convert list to diagonal\n            s = this.constructor[Symbol.species].diag(s);\n            return V.mmul(s.mmul(U.transposeView()));\n        }\n    }\n\n    Matrix.prototype.klass = 'Matrix';\n\n    /**\n     * @private\n     * Check that two matrices have the same dimensions\n     * @param {Matrix} matrix\n     * @param {Matrix} otherMatrix\n     */\n    function checkDimensions(matrix, otherMatrix) { // eslint-disable-line no-unused-vars\n        if (matrix.rows !== otherMatrix.rows ||\n            matrix.columns !== otherMatrix.columns) {\n            throw new RangeError('Matrices dimensions must be equal');\n        }\n    }\n\n    function compareNumbers(a, b) {\n        return a - b;\n    }\n\n    /*\n     Synonyms\n     */\n\n    Matrix.random = Matrix.rand;\n    Matrix.diagonal = Matrix.diag;\n    Matrix.prototype.diagonal = Matrix.prototype.diag;\n    Matrix.identity = Matrix.eye;\n    Matrix.prototype.negate = Matrix.prototype.neg;\n    Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\n    Matrix.prototype.determinant = Matrix.prototype.det;\n\n    /*\n     Add dynamically instance and static methods for mathematical operations\n     */\n\n    var inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n    var inplaceOperatorScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% value);\n        }\n    }\n    return this;\n})\n`;\n\n    var inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    checkDimensions(this, matrix);\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\n    var inplaceMethod = `\n(function %name%() {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%();\n})\n`;\n\n    var inplaceMethodWithArgs = `\n(function %name%(%args%) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), %args%));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticMethodWithArgs = `\n(function %name%(matrix, %args%) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(%args%);\n})\n`;\n\n\n    var inplaceMethodWithOneArgScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), value));\n        }\n    }\n    return this;\n})\n`;\n    var inplaceMethodWithOneArgMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    checkDimensions(this, matrix);\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n    var inplaceMethodWithOneArg = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n    var staticMethodWithOneArg = staticMethodWithArgs;\n\n    var operators = [\n        // Arithmetic operators\n        ['+', 'add'],\n        ['-', 'sub', 'subtract'],\n        ['*', 'mul', 'multiply'],\n        ['/', 'div', 'divide'],\n        ['%', 'mod', 'modulus'],\n        // Bitwise operators\n        ['&', 'and'],\n        ['|', 'or'],\n        ['^', 'xor'],\n        ['<<', 'leftShift'],\n        ['>>', 'signPropagatingRightShift'],\n        ['>>>', 'rightShift', 'zeroFillRightShift']\n    ];\n\n    var i;\n\n    for (var operator of operators) {\n        var inplaceOp = eval(fillTemplateFunction(inplaceOperator, {name: operator[1], op: operator[0]}));\n        var inplaceOpS = eval(fillTemplateFunction(inplaceOperatorScalar, {name: operator[1] + 'S', op: operator[0]}));\n        var inplaceOpM = eval(fillTemplateFunction(inplaceOperatorMatrix, {name: operator[1] + 'M', op: operator[0]}));\n        var staticOp = eval(fillTemplateFunction(staticOperator, {name: operator[1]}));\n        for (i = 1; i < operator.length; i++) {\n            Matrix.prototype[operator[i]] = inplaceOp;\n            Matrix.prototype[operator[i] + 'S'] = inplaceOpS;\n            Matrix.prototype[operator[i] + 'M'] = inplaceOpM;\n            Matrix[operator[i]] = staticOp;\n        }\n    }\n\n    var methods = [\n        ['~', 'not']\n    ];\n\n    [\n        'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n        'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n        'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n    ].forEach(function (mathMethod) {\n        methods.push(['Math.' + mathMethod, mathMethod]);\n    });\n\n    for (var method of methods) {\n        var inplaceMeth = eval(fillTemplateFunction(inplaceMethod, {name: method[1], method: method[0]}));\n        var staticMeth = eval(fillTemplateFunction(staticMethod, {name: method[1]}));\n        for (i = 1; i < method.length; i++) {\n            Matrix.prototype[method[i]] = inplaceMeth;\n            Matrix[method[i]] = staticMeth;\n        }\n    }\n\n    var methodsWithArgs = [\n        ['Math.pow', 1, 'pow']\n    ];\n\n    for (var methodWithArg of methodsWithArgs) {\n        var args = 'arg0';\n        for (i = 1; i < methodWithArg[1]; i++) {\n            args += `, arg${i}`;\n        }\n        if (methodWithArg[1] !== 1) {\n            var inplaceMethWithArgs = eval(fillTemplateFunction(inplaceMethodWithArgs, {\n                name: methodWithArg[2],\n                method: methodWithArg[0],\n                args: args\n            }));\n            var staticMethWithArgs = eval(fillTemplateFunction(staticMethodWithArgs, {name: methodWithArg[2], args: args}));\n            for (i = 2; i < methodWithArg.length; i++) {\n                Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\n                Matrix[methodWithArg[i]] = staticMethWithArgs;\n            }\n        } else {\n            var tmplVar = {\n                name: methodWithArg[2],\n                args: args,\n                method: methodWithArg[0]\n            };\n            var inplaceMethod2 = eval(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\n            var inplaceMethodS = eval(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\n            var inplaceMethodM = eval(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\n            var staticMethod2 = eval(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\n            for (i = 2; i < methodWithArg.length; i++) {\n                Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\n                Matrix.prototype[methodWithArg[i] + 'M'] = inplaceMethodM;\n                Matrix.prototype[methodWithArg[i] + 'S'] = inplaceMethodS;\n                Matrix[methodWithArg[i]] = staticMethod2;\n            }\n        }\n    }\n\n    function fillTemplateFunction(template, values) {\n        for (var value in values) {\n            template = template.replace(new RegExp('%' + value + '%', 'g'), values[value]);\n        }\n        return template;\n    }\n\n    return Matrix;\n}\n","'use strict';\n\nvar Matrix = require('../matrix');\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\nfunction LuDecomposition(matrix) {\n    if (!(this instanceof LuDecomposition)) {\n        return new LuDecomposition(matrix);\n    }\n\n    matrix = Matrix.Matrix.checkMatrix(matrix);\n\n    var lu = matrix.clone(),\n        rows = lu.rows,\n        columns = lu.columns,\n        pivotVector = new Array(rows),\n        pivotSign = 1,\n        i, j, k, p, s, t, v,\n        LUrowi, LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n        pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n\n        for (i = 0; i < rows; i++) {\n            LUcolj[i] = lu[i][j];\n        }\n\n        for (i = 0; i < rows; i++) {\n            LUrowi = lu[i];\n            kmax = Math.min(i, j);\n            s = 0;\n            for (k = 0; k < kmax; k++) {\n                s += LUrowi[k] * LUcolj[k];\n            }\n            LUrowi[j] = LUcolj[i] -= s;\n        }\n\n        p = j;\n        for (i = j + 1; i < rows; i++) {\n            if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n                p = i;\n            }\n        }\n\n        if (p !== j) {\n            for (k = 0; k < columns; k++) {\n                t = lu[p][k];\n                lu[p][k] = lu[j][k];\n                lu[j][k] = t;\n            }\n\n            v = pivotVector[p];\n            pivotVector[p] = pivotVector[j];\n            pivotVector[j] = v;\n\n            pivotSign = -pivotSign;\n        }\n\n        if (j < rows && lu[j][j] !== 0) {\n            for (i = j + 1; i < rows; i++) {\n                lu[i][j] /= lu[j][j];\n            }\n        }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n}\n\nLuDecomposition.prototype = {\n    isSingular: function () {\n        var data = this.LU,\n            col = data.columns;\n        for (var j = 0; j < col; j++) {\n            if (data[j][j] === 0) {\n                return true;\n            }\n        }\n        return false;\n    },\n    get determinant() {\n        var data = this.LU;\n        if (!data.isSquare()) {\n            throw new Error('Matrix must be square');\n        }\n        var determinant = this.pivotSign, col = data.columns;\n        for (var j = 0; j < col; j++) {\n            determinant *= data[j][j];\n        }\n        return determinant;\n    },\n    get lowerTriangularMatrix() {\n        var data = this.LU,\n            rows = data.rows,\n            columns = data.columns,\n            X = new Matrix.Matrix(rows, columns);\n        for (var i = 0; i < rows; i++) {\n            for (var j = 0; j < columns; j++) {\n                if (i > j) {\n                    X[i][j] = data[i][j];\n                } else if (i === j) {\n                    X[i][j] = 1;\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get upperTriangularMatrix() {\n        var data = this.LU,\n            rows = data.rows,\n            columns = data.columns,\n            X = new Matrix.Matrix(rows, columns);\n        for (var i = 0; i < rows; i++) {\n            for (var j = 0; j < columns; j++) {\n                if (i <= j) {\n                    X[i][j] = data[i][j];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get pivotPermutationVector() {\n        return this.pivotVector.slice();\n    },\n    solve: function (value) {\n        value = Matrix.Matrix.checkMatrix(value);\n\n        var lu = this.LU,\n            rows = lu.rows;\n\n        if (rows !== value.rows) {\n            throw new Error('Invalid matrix dimensions');\n        }\n        if (this.isSingular()) {\n            throw new Error('LU matrix is singular');\n        }\n\n        var count = value.columns;\n        var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n        var columns = lu.columns;\n        var i, j, k;\n\n        for (k = 0; k < columns; k++) {\n            for (i = k + 1; i < columns; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * lu[i][k];\n                }\n            }\n        }\n        for (k = columns - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                X[k][j] /= lu[k][k];\n            }\n            for (i = 0; i < k; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * lu[i][k];\n                }\n            }\n        }\n        return X;\n    }\n};\n\nmodule.exports = LuDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix');\nvar util = require('./util');\nvar hypotenuse = util.hypotenuse;\nvar getFilled2DArray = util.getFilled2DArray;\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/SingularValueDecomposition.cs\nfunction SingularValueDecomposition(value, options) {\n    if (!(this instanceof SingularValueDecomposition)) {\n        return new SingularValueDecomposition(value, options);\n    }\n    value = Matrix.Matrix.checkMatrix(value);\n\n    options = options || {};\n\n    var m = value.rows,\n        n = value.columns,\n        nu = Math.min(m, n);\n\n    var wantu = true, wantv = true;\n    if (options.computeLeftSingularVectors === false) wantu = false;\n    if (options.computeRightSingularVectors === false) wantv = false;\n    var autoTranspose = options.autoTranspose === true;\n\n    var swapped = false;\n    var a;\n    if (m < n) {\n        if (!autoTranspose) {\n            a = value.clone();\n            // eslint-disable-next-line no-console\n            console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n        } else {\n            a = value.transpose();\n            m = a.rows;\n            n = a.columns;\n            swapped = true;\n            var aux = wantu;\n            wantu = wantv;\n            wantv = aux;\n        }\n    } else {\n        a = value.clone();\n    }\n\n    var s = new Array(Math.min(m + 1, n)),\n        U = getFilled2DArray(m, nu, 0),\n        V = getFilled2DArray(n, n, 0),\n        e = new Array(n),\n        work = new Array(m);\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n\n    var i, j, k, p, t, ks, f, cs, sn, max, kase,\n        scale, sp, spm1, epm1, sk, ek, b, c, shift, g;\n\n    for (k = 0, max = Math.max(nct, nrt); k < max; k++) {\n        if (k < nct) {\n            s[k] = 0;\n            for (i = k; i < m; i++) {\n                s[k] = hypotenuse(s[k], a[i][k]);\n            }\n            if (s[k] !== 0) {\n                if (a[k][k] < 0) {\n                    s[k] = -s[k];\n                }\n                for (i = k; i < m; i++) {\n                    a[i][k] /= s[k];\n                }\n                a[k][k] += 1;\n            }\n            s[k] = -s[k];\n        }\n\n        for (j = k + 1; j < n; j++) {\n            if ((k < nct) && (s[k] !== 0)) {\n                t = 0;\n                for (i = k; i < m; i++) {\n                    t += a[i][k] * a[i][j];\n                }\n                t = -t / a[k][k];\n                for (i = k; i < m; i++) {\n                    a[i][j] += t * a[i][k];\n                }\n            }\n            e[j] = a[k][j];\n        }\n\n        if (wantu && (k < nct)) {\n            for (i = k; i < m; i++) {\n                U[i][k] = a[i][k];\n            }\n        }\n\n        if (k < nrt) {\n            e[k] = 0;\n            for (i = k + 1; i < n; i++) {\n                e[k] = hypotenuse(e[k], e[i]);\n            }\n            if (e[k] !== 0) {\n                if (e[k + 1] < 0) {\n                    e[k] = 0 - e[k];\n                }\n                for (i = k + 1; i < n; i++) {\n                    e[i] /= e[k];\n                }\n                e[k + 1] += 1;\n            }\n            e[k] = -e[k];\n            if ((k + 1 < m) && (e[k] !== 0)) {\n                for (i = k + 1; i < m; i++) {\n                    work[i] = 0;\n                }\n                for (j = k + 1; j < n; j++) {\n                    for (i = k + 1; i < m; i++) {\n                        work[i] += e[j] * a[i][j];\n                    }\n                }\n                for (j = k + 1; j < n; j++) {\n                    t = -e[j] / e[k + 1];\n                    for (i = k + 1; i < m; i++) {\n                        a[i][j] += t * work[i];\n                    }\n                }\n            }\n            if (wantv) {\n                for (i = k + 1; i < n; i++) {\n                    V[i][k] = e[i];\n                }\n            }\n        }\n    }\n\n    p = Math.min(n, m + 1);\n    if (nct < n) {\n        s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n        s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n        e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n        for (j = nct; j < nu; j++) {\n            for (i = 0; i < m; i++) {\n                U[i][j] = 0;\n            }\n            U[j][j] = 1;\n        }\n        for (k = nct - 1; k >= 0; k--) {\n            if (s[k] !== 0) {\n                for (j = k + 1; j < nu; j++) {\n                    t = 0;\n                    for (i = k; i < m; i++) {\n                        t += U[i][k] * U[i][j];\n                    }\n                    t = -t / U[k][k];\n                    for (i = k; i < m; i++) {\n                        U[i][j] += t * U[i][k];\n                    }\n                }\n                for (i = k; i < m; i++) {\n                    U[i][k] = -U[i][k];\n                }\n                U[k][k] = 1 + U[k][k];\n                for (i = 0; i < k - 1; i++) {\n                    U[i][k] = 0;\n                }\n            } else {\n                for (i = 0; i < m; i++) {\n                    U[i][k] = 0;\n                }\n                U[k][k] = 1;\n            }\n        }\n    }\n\n    if (wantv) {\n        for (k = n - 1; k >= 0; k--) {\n            if ((k < nrt) && (e[k] !== 0)) {\n                for (j = k + 1; j < n; j++) {\n                    t = 0;\n                    for (i = k + 1; i < n; i++) {\n                        t += V[i][k] * V[i][j];\n                    }\n                    t = -t / V[k + 1][k];\n                    for (i = k + 1; i < n; i++) {\n                        V[i][j] += t * V[i][k];\n                    }\n                }\n            }\n            for (i = 0; i < n; i++) {\n                V[i][k] = 0;\n            }\n            V[k][k] = 1;\n        }\n    }\n\n    var pp = p - 1,\n        iter = 0,\n        eps = Math.pow(2, -52);\n    while (p > 0) {\n        for (k = p - 2; k >= -1; k--) {\n            if (k === -1) {\n                break;\n            }\n            if (Math.abs(e[k]) <= eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                e[k] = 0;\n                break;\n            }\n        }\n        if (k === p - 2) {\n            kase = 4;\n        } else {\n            for (ks = p - 1; ks >= k; ks--) {\n                if (ks === k) {\n                    break;\n                }\n                t = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n                if (Math.abs(s[ks]) <= eps * t) {\n                    s[ks] = 0;\n                    break;\n                }\n            }\n            if (ks === k) {\n                kase = 3;\n            } else if (ks === p - 1) {\n                kase = 1;\n            } else {\n                kase = 2;\n                k = ks;\n            }\n        }\n\n        k++;\n\n        switch (kase) {\n            case 1: {\n                f = e[p - 2];\n                e[p - 2] = 0;\n                for (j = p - 2; j >= k; j--) {\n                    t = hypotenuse(s[j], f);\n                    cs = s[j] / t;\n                    sn = f / t;\n                    s[j] = t;\n                    if (j !== k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n                break;\n            }\n            case 2 : {\n                f = e[k - 1];\n                e[k - 1] = 0;\n                for (j = k; j < p; j++) {\n                    t = hypotenuse(s[j], f);\n                    cs = s[j] / t;\n                    sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                break;\n            }\n            case 3 : {\n                scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                sp = s[p - 1] / scale;\n                spm1 = s[p - 2] / scale;\n                epm1 = e[p - 2] / scale;\n                sk = s[k] / scale;\n                ek = e[k] / scale;\n                b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n                c = (sp * epm1) * (sp * epm1);\n                shift = 0;\n                if ((b !== 0) || (c !== 0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0) {\n                        shift = -shift;\n                    }\n                    shift = c / (b + shift);\n                }\n                f = (sk + sp) * (sk - sp) + shift;\n                g = sk * ek;\n                for (j = k; j < p - 1; j++) {\n                    t = hypotenuse(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    if (j !== k) {\n                        e[j - 1] = t;\n                    }\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = hypotenuse(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n                break;\n            }\n            case 4: {\n                if (s[k] <= 0) {\n                    s[k] = (s[k] < 0 ? -s[k] : 0);\n                    if (wantv) {\n                        for (i = 0; i <= pp; i++) {\n                            V[i][k] = -V[i][k];\n                        }\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1]) {\n                        break;\n                    }\n                    t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n                break;\n            }\n            // no default\n        }\n    }\n\n    if (swapped) {\n        var tmp = V;\n        V = U;\n        U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n}\n\nSingularValueDecomposition.prototype = {\n    get condition() {\n        return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n    },\n    get norm2() {\n        return this.s[0];\n    },\n    get rank() {\n        var eps = Math.pow(2, -52),\n            tol = Math.max(this.m, this.n) * this.s[0] * eps,\n            r = 0,\n            s = this.s;\n        for (var i = 0, ii = s.length; i < ii; i++) {\n            if (s[i] > tol) {\n                r++;\n            }\n        }\n        return r;\n    },\n    get diagonal() {\n        return this.s;\n    },\n    // https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n    get threshold() {\n        return (Math.pow(2, -52) / 2) * Math.max(this.m, this.n) * this.s[0];\n    },\n    get leftSingularVectors() {\n        if (!Matrix.Matrix.isMatrix(this.U)) {\n            this.U = new Matrix.Matrix(this.U);\n        }\n        return this.U;\n    },\n    get rightSingularVectors() {\n        if (!Matrix.Matrix.isMatrix(this.V)) {\n            this.V = new Matrix.Matrix(this.V);\n        }\n        return this.V;\n    },\n    get diagonalMatrix() {\n        return Matrix.Matrix.diag(this.s);\n    },\n    solve: function (value) {\n\n        var Y = value,\n            e = this.threshold,\n            scols = this.s.length,\n            Ls = Matrix.Matrix.zeros(scols, scols),\n            i;\n\n        for (i = 0; i < scols; i++) {\n            if (Math.abs(this.s[i]) <= e) {\n                Ls[i][i] = 0;\n            } else {\n                Ls[i][i] = 1 / this.s[i];\n            }\n        }\n\n        var U = this.U;\n        var V = this.rightSingularVectors;\n\n        var VL = V.mmul(Ls),\n            vrows = V.rows,\n            urows = U.length,\n            VLU = Matrix.Matrix.zeros(vrows, urows),\n            j, k, sum;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < urows; j++) {\n                sum = 0;\n                for (k = 0; k < scols; k++) {\n                    sum += VL[i][k] * U[j][k];\n                }\n                VLU[i][j] = sum;\n            }\n        }\n\n        return VLU.mmul(Y);\n    },\n    solveForDiagonal: function (value) {\n        return this.solve(Matrix.Matrix.diag(value));\n    },\n    inverse: function () {\n        var V = this.V;\n        var e = this.threshold,\n            vrows = V.length,\n            vcols = V[0].length,\n            X = new Matrix.Matrix(vrows, this.s.length),\n            i, j;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < vcols; j++) {\n                if (Math.abs(this.s[j]) > e) {\n                    X[i][j] = V[i][j] / this.s[j];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n\n        var U = this.U;\n\n        var urows = U.length,\n            ucols = U[0].length,\n            Y = new Matrix.Matrix(vrows, urows),\n            k, sum;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < urows; j++) {\n                sum = 0;\n                for (k = 0; k < ucols; k++) {\n                    sum += X[i][k] * U[j][k];\n                }\n                Y[i][j] = sum;\n            }\n        }\n\n        return Y;\n    }\n};\n\nmodule.exports = SingularValueDecomposition;\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","/**\n * Created by acastillo on 8/24/15.\n */\n/**\n * Non in-place function definitions, compatible with mathjs code *\n */\n\n'use strict';\n\nvar Matrix = require('ml-matrix');\n\nfunction matrix(A,B){\n    return new Matrix(A,B);\n}\n\nfunction ones(rows, cols){\n    return Matrix.ones(rows,cols);\n}\n\nfunction eye(rows, cols){\n    return Matrix.eye(rows, cols);\n}\n\nfunction zeros(rows, cols){\n    return Matrix.zeros(rows, cols);\n}\n\nfunction random(rows, cols){\n    return Matrix.rand(rows,cols);\n}\n\nfunction transpose(A){\n    if(typeof A == 'number')\n        return A;\n    var result = A.clone();\n    return result.transpose();\n}\n\nfunction add(A, B){\n    if(typeof A == 'number'&&typeof B === 'number')\n        return A+B;\n    if(typeof A == 'number')\n        return this.add(B,A);\n\n    var result = A.clone();\n    return result.add(B);\n\n}\n\nfunction subtract(A, B){\n    if(typeof A == 'number'&&typeof B === 'number')\n        return A-B;\n    if(typeof A == 'number')\n        return this.subtract(B,A);\n    var result = A.clone();\n    return result.sub(B);\n}\n\nfunction multiply(A, B){\n    if(typeof A == 'number'&&typeof B === 'number')\n        return A*B;\n    if(typeof A == 'number')\n        return this.multiply(B,A);\n\n    var result = A.clone();\n\n    if(typeof B === 'number')\n        result.mul(B);\n    else\n        result = result.mmul(B);\n\n    if(result.rows==1&&result.columns==1)\n        return result[0][0];\n    else\n        return result;\n\n}\n\nfunction dotMultiply(A, B){\n    var result = A.clone();\n    return result.mul(B);\n}\n\nfunction dotDivide(A, B){\n    var result = A.clone();\n    return result.div(B);\n}\n\nfunction diag(A){\n    var diag = null;\n    var rows = A.rows, cols = A.columns, j, r;\n    //It is an array\n    if(typeof cols === \"undefined\" && (typeof A)=='object'){\n        if(A[0]&&A[0].length){\n            rows = A.length;\n            cols = A[0].length;\n            r = Math.min(rows,cols);\n            diag = Matrix.zeros(cols, cols);\n            for (j = 0; j < cols; j++) {\n                diag[j][j]=A[j][j];\n            }\n        }\n        else{\n            cols = A.length;\n            diag = Matrix.zeros(cols, cols);\n            for (j = 0; j < cols; j++) {\n                diag[j][j]=A[j];\n            }\n        }\n\n    }\n    if(rows == 1){\n        diag = Matrix.zeros(cols, cols);\n        for (j = 0; j < cols; j++) {\n            diag[j][j]=A[0][j];\n        }\n    }\n    else{\n        if(rows>0 && cols > 0){\n            r = Math.min(rows,cols);\n            diag = new Array(r);\n            for (j = 0; j < r; j++) {\n                diag[j] = A[j][j];\n            }\n        }\n    }\n    return diag;\n}\n\nfunction min(A, B){\n    if(typeof A==='number' && typeof B ==='number')\n        return Math.min(A,B);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            if (A[i][j] < B[i][j]) {\n                result[i][j] = A[i][j];\n            }\n            else{\n                result[i][j] = B[i][j];\n            }\n        }\n    }\n    return result;\n}\n\nfunction max(A, B){\n    if(typeof A==='number' && typeof B ==='number')\n        return Math.max(A,B);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            if (A[i][j] > B[i][j]) {\n                result[i][j] = A[i][j];\n            }\n            else{\n                result[i][j] = B[i][j];\n            }\n        }\n    }\n    return result;\n}\n\nfunction sqrt(A){\n    if(typeof A==='number' )\n        return Math.sqrt(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.sqrt(A[i][j]);\n\n        }\n    }\n    return result;\n}\n\nfunction abs(A){\n    if(typeof A==='number' )\n        return Math.abs(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.abs(A[i][j]);\n\n        }\n    }\n    return result;\n}\n\nfunction exp(A){\n    if(typeof A==='number' )\n        return Math.sqrt(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.exp(A[i][j]);\n        }\n    }\n    return result;\n}\n\nfunction dotPow(A, b){\n    if(typeof A==='number' )\n        return Math.pow(A,b);\n    //console.log(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.pow(A[i][j],b);\n        }\n    }\n    return result;\n}\n\nfunction solve(A, B){\n    return A.solve(B);\n}\n\nfunction inv(A){\n    if(typeof A ===\"number\")\n        return 1/A;\n    return A.inverse();\n}\n\nmodule.exports = {\n    transpose:transpose,\n    add:add,\n    subtract:subtract,\n    multiply:multiply,\n    dotMultiply:dotMultiply,\n    dotDivide:dotDivide,\n    diag:diag,\n    min:min,\n    max:max,\n    solve:solve,\n    inv:inv,\n    sqrt:sqrt,\n    exp:exp,\n    dotPow:dotPow,\n    abs:abs,\n    matrix:matrix,\n    ones:ones,\n    zeros:zeros,\n    random:random,\n    eye:eye\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param xs\n * @param ys\n */\n\nfunction uniqueX(xs, ys) {\n    if (xs.length < 2) return;\n\n    var current = xs[0];\n    var counter = 0;\n\n    for (var i = 1; i < xs.length; i++) {\n        if (current !== xs[i]) {\n            counter++;\n            current = xs[i];\n            xs[counter] = xs[i];\n            if (i !== counter) {\n                ys[counter] = 0;\n            }\n        }\n        if (i !== counter) {\n            ys[counter] += ys[i];\n        }\n\n    }\n\n    xs.length = counter + 1;\n    ys.length = counter + 1;\n}\n\nmodule.exports = uniqueX;\n","/**\n * @function first\n *\n * @description\n * get the first n number of items from the array as a new array (faster than native splice)\n *\n * @param {Array<any>} array the array to get the items from\n * @param {number} length the length to limit the size to\n * @returns {Array<any>} the array limited in size\n */\nexport var first = function first(array, length) {\n  var newArray = new Array(length);\n\n  for (var index = 0; index < length; index++) {\n    newArray[index] = array[index];\n  }\n\n  return newArray;\n};\n/**\n * @function getCircularValue\n *\n * @description\n * create a method that will get a placeholder for the circular value based\n * on the value saved in the cache for it\n *\n * @param {any} key the key of the object to stringify\n * @param {any} value the value of the object at key\n * @param {number} refCount the index of the ref\n * @returns {string} the circular value\n */\n\nexport var getCircularValue = function getCircularValue(key, value, refCount) {\n  return \"[ref-\" + refCount + \"]\";\n};\n/**\n * @function getValue\n *\n * @description\n * get the value passed (similar to an identity function)\n *\n * @param {any} key the key of the object to stringify\n * @param {any} value the value of the object at key\n * @returns {any} the value passed\n */\n\nexport var getValue = function getValue(key, value) {\n  return value;\n};\n/**\n * @function indexOf\n *\n * @description\n * get the index of the value in the array (faster than native indexOf)\n *\n * @param {Array<any>} array the array to get the index of the value at\n * @param {any} value the value to match\n * @returns {number} the index of the value in array\n */\n\nexport var indexOf = function indexOf(array, value) {\n  for (var index = 0; index < array.length; index++) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n\n  return -1;\n};\n/**\n * @function createReplacer\n *\n * @description\n * create a replacer method that handles circular values\n *\n * @param {function} [replacer] a custom replacer to use for non-circular values\n * @param {function} [circularReplacer] a custom replacer to use for circular methods\n * @returns {any} the value to stringify\n */\n\nexport var createReplacer = function createReplacer(replacer, circularReplacer) {\n  var getCircularReplacer = circularReplacer || getCircularValue;\n  var hasReplacer = typeof replacer === 'function';\n  var cache = [],\n      locationOfThis,\n      locationOfValue;\n  return function (key, value) {\n    if (cache.length) {\n      locationOfThis = indexOf(cache, this);\n\n      if (~locationOfThis) {\n        cache = first(cache, locationOfThis + 1);\n      } else {\n        cache[cache.length] = this;\n      }\n\n      locationOfValue = indexOf(cache, value);\n\n      if (~locationOfValue) {\n        return getCircularReplacer.call(this, key, value, locationOfValue);\n      }\n    } else {\n      cache[0] = value;\n    }\n\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n};","// utils\nimport { createReplacer } from './utils';\n/**\n * @function stringify\n *\n * @description\n * strinigifer that handles circular values\n *\n * @param {any} value the value to stringify\n * @param {function} [replacer] a custom replacer function for stringifying standard values\n * @param {number} [indent] the number of spaces to indent the output by\n * @param {function} [circularReplacer] a custom replacer function for stringifying circular values\n * @returns {string} the stringified output\n */\n\nexport default function stringify(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(value, createReplacer(replacer, circularReplacer), indent);\n}","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar min = _interopDefault(require('ml-array-min'));\nvar max = _interopDefault(require('ml-array-max'));\nvar mlGsd = require('ml-gsd');\nvar equallySpaced = _interopDefault(require('ml-array-xy-equally-spaced'));\nvar Util = _interopDefault(require('ml-array-utils'));\nvar hash = _interopDefault(require('hash-it'));\nvar jcampconverter = require('jcampconverter');\nvar xyParser = require('xy-parser');\n\nconst ABSORBANCE = 1;\nconst TRANSMITTANCE = 2;\nconst PERCENT_TRANSMITTANCE = 3;\n\nfunction getKind(kind = '') {\n  if (typeof kind === 'number') {\n    if (kind < 1 || kind > 2) {\n      throw new Error('kind should either be 1 or 2');\n    }\n    return kind;\n  }\n  if (kind.match(/abs/i)) {\n    return ABSORBANCE;\n  }\n  return TRANSMITTANCE;\n}\n\n/**\n * Create an object of Chromatogram\n * @return {object}\n */\nfunction toJSON() {\n  return {\n    wavelength: this.wavelength,\n    transmittance: this.transmittance,\n    peaks: this.peaks\n  };\n}\n\nfunction getAnnotations(spectrum, options = {}) {\n  const { fillColor = 'green', strokeColor = 'red', creationFct } = options;\n  const peaks = spectrum.peaks;\n  if (!peaks) return [];\n  let annotations = peaks.map((peak) => {\n    var annotation = {\n      line: 1,\n      type: 'rect',\n      strokeColor: strokeColor,\n      strokeWidth: 0,\n      fillColor: fillColor\n    };\n    if (creationFct) {\n      creationFct(annotation, peak);\n    }\n    switch (spectrum.mode) {\n      case ABSORBANCE:\n        annotationAbsorbance(annotation, peak);\n        break;\n      case TRANSMITTANCE:\n        annotationTransmittance(annotation, peak, 1);\n        break;\n      case PERCENT_TRANSMITTANCE:\n        annotationTransmittance(annotation, peak, 100);\n        break;\n      default:\n    }\n    return annotation;\n  });\n\n  return annotations;\n}\n\nfunction annotationTransmittance(annotation, peak, factor = 1) {\n  annotation.label = [\n    {\n      text: peak.kind,\n      size: '18px',\n      anchor: 'middle',\n      color: 'red',\n      position: {\n        x: peak.wavelength,\n        y: peak.transmittance * factor,\n        dy: '23px'\n      }\n    }\n  ];\n  annotation.position = [\n    {\n      x: peak.wavelength,\n      y: peak.transmittance * factor,\n      dy: '10px',\n      dx: '-1px'\n    },\n    {\n      x: peak.wavelength,\n      y: peak.transmittance * factor,\n      dy: '5px',\n      dx: '1px'\n    }\n  ];\n}\n\nfunction annotationAbsorbance(annotation, peak) {\n  annotation.label = [\n    {\n      text: peak.kind,\n      size: '18px',\n      anchor: 'middle',\n      color: 'red',\n      position: {\n        x: peak.wavelength,\n        y: peak.absorbance,\n        dy: '-15px'\n      }\n    }\n  ];\n  annotation.position = [\n    {\n      x: peak.wavelength,\n      y: peak.absorbance,\n      dy: '-10px',\n      dx: '-1px'\n    },\n    {\n      x: peak.wavelength,\n      y: peak.absorbance,\n      dy: '-5px',\n      dx: '1px'\n    }\n  ];\n}\n\n/**\n *\n * @param {*} spectrum\n * @param {object} [options={}]\n *\n */\n\nfunction getData(spectrum, options = {}) {\n  let mode = options.mode || spectrum.mode;\n  switch (mode) {\n    case ABSORBANCE:\n      return spectrum.getAbsorbance();\n    case TRANSMITTANCE:\n      return spectrum.getTransmittance();\n    case PERCENT_TRANSMITTANCE:\n      return spectrum.getPercentTransmittance();\n    default:\n      return {};\n  }\n}\n\n/**\n *\n * @param {Spectrum} spectrum\n * @param {object} peak\n */\n\nfunction addPeak(spectrum, peak = {}) {\n  if (!peak.wavelength) {\n    throw new Error('addPeak: peak mush have wavelength property');\n  }\n  if (!peak.absorbance && !peak.transmittance) {\n    throw new Error(\n      'addPeak: peak mush have either absorbance of transmittance property'\n    );\n  }\n  const {\n    wavelength,\n    transmittance = 10 ** -peak.absorbance,\n    absorbance = -Math.log10(peak.transmittance)\n  } = peak;\n\n  for (let existing of spectrum.peaks) {\n    if (Number(existing.wavelength) === wavelength) return existing;\n  }\n  spectrum.peaks.push({\n    wavelength: wavelength,\n    transmittance: transmittance,\n    absorbance: absorbance,\n    kind: getPeakKind(\n      transmittance,\n      spectrum.minTransmittance,\n      spectrum.maxTransmittance\n    )\n  });\n  return peak;\n}\n\nfunction getPeakKind(transmittance, minTransmittance, maxTransmittance) {\n  var position =\n    (maxTransmittance - transmittance) / (maxTransmittance - minTransmittance);\n  if (position < 0.33) {\n    return 'w';\n  } else if (position < 0.66) {\n    return 'm';\n  }\n  return 'S';\n}\n\n/**\n *\n * @param {Spectrum} spectrum\n * @param {number} targetWavelength\n * @param {object} [options]\n * @param {number} [options.range=0] Search in a range around the targetWavelength\n * @param {boolean} [options.optimize=false] Search for the closest peak to the targetWavelength\n */\n\nfunction peakPicking(spectrum, targetWavelength, options = {}) {\n  const { range = 0, optimize = false } = options;\n\n  // find the peak that is the closest to the click\n  let bestPeak = getClosest(spectrum, targetWavelength);\n\n  if (optimize) {\n    findClosest(spectrum, bestPeak);\n  } else if (range) {\n    bestInRange(spectrum, bestPeak, targetWavelength, range);\n  }\n\n  return addPeak(spectrum, bestPeak);\n}\n\nfunction getClosest(spectrum, targetWavelength) {\n  let bestPeak = {\n    transmittance: spectrum.transmittance[0],\n    absorbance: spectrum.absorbance[0],\n    wavelength: spectrum.wavelength[0],\n    index: 0\n  };\n\n  let error = Math.abs(targetWavelength - bestPeak.wavelength);\n  for (let i = 1; i < spectrum.wavelength.length; i++) {\n    let newError = Math.abs(targetWavelength - spectrum.wavelength[i]);\n    if (newError < error) {\n      error = newError;\n      setBestPeak(spectrum, bestPeak, i);\n    }\n  }\n  return bestPeak;\n}\n\nfunction bestInRange(spectrum, bestPeak, targetWavelength, range) {\n  // we search the minimum based on wavelength +/- range\n  for (let i = 0; i < spectrum.wavelength.length; i++) {\n    if (Math.abs(spectrum.wavelength[i] - targetWavelength) <= range) {\n      if (spectrum.transmittance[i] < bestPeak.transmittance) {\n        setBestPeak(spectrum, bestPeak, i);\n      }\n    }\n  }\n}\n\nfunction findClosest(spectrum, bestPeak) {\n  let index = bestPeak.index;\n  let previousIndex;\n  while (index !== previousIndex) {\n    previousIndex = index;\n    if (index > 0 && spectrum.absorbance[index - 1] > bestPeak.absorbance) {\n      index--;\n      setBestPeak(spectrum, bestPeak, index);\n    } else if (\n      index < spectrum.wavelength.length - 1 &&\n      spectrum.absorbance[index + 1] > bestPeak.absorbance\n    ) {\n      index++;\n      setBestPeak(spectrum, bestPeak, index);\n    }\n  }\n}\n\nfunction setBestPeak(spectrum, bestPeak, index) {\n  bestPeak.index = index;\n  bestPeak.wavelength = spectrum.wavelength[index];\n  bestPeak.absorbance = spectrum.absorbance[index];\n  bestPeak.transmittance = spectrum.transmittance[index];\n}\n\n/**\n *\n * @param {*} spectrum\n * @param {object} [options={}]\n * @param {number} [options.fromWavelength=0]\n * @param {number} [options.toWavelength=5000]\n * @param {number} [options.noiseLevel=0.01] - Specify the level of the noise\n * @param {number} [options.minMaxRatio=0.05] - Threshold to determine if a given peak should be considered as a noise\n * @param {boolean} [options.replaceExisting=true] - Replace existing peaks\n */\n\nfunction autoPeakPicking(spectrum, options = {}) {\n  const {\n    noiseLevel = 0.001,\n    minMaxRatio = 0.05,\n    fromWavelength = 0,\n    toWavelength = 5000,\n    replaceExisting = true\n  } = options;\n\n  let peaks = mlGsd.gsd(spectrum.wavelength, spectrum.absorbance, {\n    noiseLevel,\n    minMaxRatio,\n    realTopDetection: true,\n    maxCriteria: true,\n    smoothY: false,\n    sgOptions: { windowSize: 7, polynomial: 3 }\n  });\n\n  peaks = peaks.filter(\n    (peak) => peak.x >= fromWavelength && peak.x <= toWavelength\n  );\n\n  if (replaceExisting) {\n    while (spectrum.peaks.length) {\n      spectrum.peaks.pop();\n    }\n  }\n\n  peakLoop: for (let peak of peaks) {\n    for (let existing of spectrum.peaks) {\n      if (Number(existing.wavelength) === Number(peak.x)) continue peakLoop;\n    }\n    addPeak(spectrum, {\n      wavelength: peak.x,\n      absorbance: peak.y\n    });\n  }\n}\n\nfunction getNormalized(spectrum, options = {}) {\n  let optionsHash = hash(options);\n\n  if (!spectrum.cache) spectrum.cache = {};\n  if (!spectrum.cache.normalized) spectrum.cache.normalized = {};\n  if (spectrum.cache.normalized.hash === optionsHash) {\n    return spectrum.cache.normalized.value;\n  }\n  const {\n    from = 800,\n    to = 4000,\n    numberOfPoints = 1024,\n    applySNV = true,\n    exclusions = []\n  } = options;\n  let y = applySNV ? Util.SNV(spectrum.absorbance) : spectrum.absorbance;\n  let result = equallySpaced(\n    { x: spectrum.wavelength, y },\n    { from, to, numberOfPoints, exclusions }\n  );\n  spectrum.cache.normalized = {\n    hash: optionsHash,\n    value: result\n  };\n\n  return result;\n}\n\nfunction getYLabel(mode) {\n  switch (mode) {\n    case ABSORBANCE:\n      return 'Absorbance';\n    case TRANSMITTANCE:\n      return 'Transmittance';\n    case PERCENT_TRANSMITTANCE:\n      return 'Transmittance [%]';\n    default:\n      return '';\n  }\n}\n\n/**\n * Class allowing manipulate one IR spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.wavelength=[]] - wavelength\n * @param {Array} [json.y=[]] - y values\n * @param {integer} [json.kind=spectrum.TRANSMITTANCE] - either spectrum.ABSORBANCE or spectrum.TRANSMITTANCE\n */\nclass Spectrum {\n  constructor(json = {}) {\n    this.wavelength = json.wavelength || [];\n    this.absorbance = json.absorbance || [];\n    this.transmittance = json.transmittance || [];\n    this.mode = PERCENT_TRANSMITTANCE;\n    this.peaks = [];\n    this.clearCache();\n    check(this);\n  }\n\n  /**\n   *\n   * @param {Array} [peaks=[]] array of peaks. Peaks are composed of transmittance, wavelength, kind\n   */\n  setPeaks(peaks = []) {\n    this.peaks = peaks;\n  }\n\n  setMode(mode) {\n    if (mode < 1 || mode > 3) {\n      throw new Error(\n        'Mode should be either 1 (absorbance), 2 (transmittance) or 3 (percent transmittance)'\n      );\n    }\n    this.mode = mode;\n  }\n\n  peakPicking(targetWavelength, options = {}) {\n    peakPicking(this, targetWavelength, options);\n  }\n\n  getAbsorbance() {\n    return { x: this.wavelength, y: this.absorbance };\n  }\n\n  getTransmittance() {\n    return { x: this.wavelength, y: this.transmittance };\n  }\n\n  getPercentTransmittance() {\n    let data = this.getTransmittance();\n    return {\n      x: data.x,\n      y: data.y.map((transmittance) => transmittance * 100)\n    };\n  }\n\n  clearCache() {\n    this.cache = { normalized: { hash: '' } };\n  }\n\n  getYLabel() {\n    return getYLabel(this.mode);\n  }\n}\n\nSpectrum.getYLabel = getYLabel;\n\nSpectrum.prototype.toJSON = toJSON;\nSpectrum.prototype.getAnnotations = function (options) {\n  return getAnnotations(this, options);\n};\nSpectrum.prototype.getData = function (options) {\n  return getData(this, options);\n};\nSpectrum.prototype.autoPeakPicking = function (options) {\n  return autoPeakPicking(this, options);\n};\nSpectrum.prototype.getNormalized = function (options) {\n  return getNormalized(this, options);\n};\n\nfunction check(spectrum) {\n  if (spectrum.transmittance.length > 0 && spectrum.absorbance.length === 0) {\n    spectrum.absorbance = spectrum.transmittance.map(\n      (transmittance) => -Math.log10(transmittance)\n    );\n  }\n\n  if (spectrum.absorbance.length > 0 && spectrum.transmittance.length === 0) {\n    spectrum.transmittance = spectrum.absorbance.map(\n      (absorbance) => 10 ** -absorbance\n    );\n  }\n\n  if (spectrum.wavelength.length > 0) {\n    spectrum.minWavelength = min(spectrum.wavelength);\n  }\n  if (spectrum.wavelength.length > 0) {\n    spectrum.maxWavelength = max(spectrum.wavelength);\n  }\n  if (spectrum.absorbance.length > 0) {\n    spectrum.minAbsorbance = min(spectrum.absorbance);\n  }\n  if (spectrum.absorbance.length > 0) {\n    spectrum.maxAbsorbance = max(spectrum.absorbance);\n  }\n  if (spectrum.transmittance.length > 0) {\n    spectrum.minTransmittance = min(spectrum.transmittance);\n  }\n  if (spectrum.transmittance.length > 0) {\n    spectrum.maxTransmittance = max(spectrum.transmittance);\n  }\n}\n\nclass Spectra {\n  constructor(options = {}) {\n    this.normalizationOptions =\n      options.normalization === undefined\n        ? {\n          from: 800,\n          to: 4000,\n          numberOfPoints: 1024,\n          applySNV: true\n        }\n        : options.normalization;\n    this.data = [];\n    this.mode = PERCENT_TRANSMITTANCE;\n  }\n\n  /**\n   * Add a spectrum\n   * @param {Spectrum} spectrum\n   * @param {string} id\n   * @param {object} [meta={}]\n   * @param {string} [meta.color]\n   */\n  addSpectrum(spectrum, id, meta = {}) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.data.length;\n    this.data[index] = {\n      normalized: spectrum.getNormalized(this.normalizationOptions),\n      spectrum,\n      id,\n      meta\n    };\n  }\n\n  /**\n   * Add jcamp\n   * @param {string} jcamp\n   * @param {string} id\n   * @param {boolean} [force=false]\n   * @param {object} [meta={}]\n   * @param {string} [meta.color]\n   */\n  addFromJcamp(jcamp, id, meta = {}, force = false) {\n    if (force === false && this.contains(id)) return;\n    let spectrum = fromJcamp(jcamp);\n    this.addSpectrum(spectrum, id, meta);\n  }\n\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.data.splice(index, 1);\n  }\n\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.data.length; i++) {\n      let spectrum = this.data[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  getNormalizedData() {\n    if (!this.data || !this.data[0]) return {};\n    let matrix = [];\n    let meta = [];\n    let ids = [];\n    for (let datum of this.data) {\n      ids.push(datum.id);\n      matrix.push(datum.normalized.y);\n      meta.push(datum.meta);\n    }\n    let x = this.data[0].normalized.x;\n    return { ids, matrix, meta, x };\n  }\n\n  getChart(options = {}) {\n    const { filter = {}, mode = this.mode } = options;\n    let chart = {\n      title: 'IR spectra superimposition',\n      data: []\n    };\n    for (let datum of this.data) {\n      if (!filter.ids || filter.ids.includes(datum.id)) {\n        let data = datum.spectrum.getData({ mode });\n\n        data.styles = {\n          unselected: {\n            lineColor: datum.meta.color || 'darkgrey',\n            lineWidth: 1,\n            lineStyle: 1\n          },\n          selected: {\n            lineColor: datum.meta.color || 'darkgrey',\n            lineWidth: 3,\n            lineStyle: 1\n          }\n        };\n        data.label = datum.meta.id || datum.id;\n        chart.data.push(data);\n      }\n    }\n    return chart;\n  }\n}\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - New class element with the given data\n */\nfunction fromJcamp(jcamp) {\n  const data = jcampconverter.convert(jcamp, { xy: true });\n  let spectrum = data.spectra[0].data[0];\n  if (getKind(data.spectra[0].yUnit) === TRANSMITTANCE) {\n    return new Spectrum({\n      wavelength: spectrum.x,\n      transmittance: spectrum.y,\n      absorbance: []\n    });\n  } else {\n    return new Spectrum({\n      wavelength: spectrum.x,\n      transmittance: [],\n      absorbance: spectrum.y\n    });\n  }\n}\n\n/**\n * Creates a new Chromatogram element based in a Txt string\n * @param {string} text - String containing the data as CSV or TSV\n * @param {object} [options] - Options object for the parser\n * @param {string} [options.kind] - Absorbance or Transmisstance\n * @return {Spectrum} - New class element with the given data\n */\nfunction fromText(text, options = {}) {\n  options = Object.assign({}, options, { arrayType: 'xxyy' });\n  const data = xyParser.parseXY(text, options);\n  if (getKind(options.kind) === TRANSMITTANCE) {\n    return new Spectrum({\n      wavelength: data[0],\n      transmittance: data[1],\n      absorbance: []\n    });\n  } else {\n    return new Spectrum({\n      wavelength: data[0],\n      transmisttance: [],\n      absorbance: data[1]\n    });\n  }\n}\n\nexports.ABSORBANCE = ABSORBANCE;\nexports.PERCENT_TRANSMITTANCE = PERCENT_TRANSMITTANCE;\nexports.Spectra = Spectra;\nexports.Spectrum = Spectrum;\nexports.TRANSMITTANCE = TRANSMITTANCE;\nexports.fromJcamp = fromJcamp;\nexports.fromText = fromText;\nexports.getYLabel = getYLabel;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var min = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < min) min = input[i];\n  }\n\n  return min;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var max = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > max) max = input[i];\n  }\n\n  return max;\n}\n\nexport default max;\n","'use strict';\n\nmodule.exports.gsd = require('./gsd');\n\nmodule.exports.post = {\n  optimizePeaks: require('./post/optimizePeaks'),\n  joinBroadPeaks: require('./post/joinBroadPeaks'),\n  broadenPeaks: require('./post/broadenPeaks')\n};\n","'use strict';\n\nconst SG = require('ml-savitzky-golay-generalized');\n\nconst defaultOptions = {\n  sgOptions: {\n    windowSize: 9,\n    polynomial: 3\n  },\n  minMaxRatio: 0.00025,\n  broadRatio: 0.0,\n  maxCriteria: true,\n  smoothY: true,\n  realTopDetection: false,\n  heightFactor: 0,\n  boundaries: false,\n  derivativeThreshold: -1\n};\n\n/**\n * Global spectra deconvolution\n * @param {Array<number>} x - Independent variable\n * @param {Array<number>} yIn - Dependent variable\n * @param {object} [options] - Options object\n * @param {object} [options.sgOptions] - Options object for Savitzky-Golay filter. See https://github.com/mljs/savitzky-golay-generalized#options\n * @param {number} [options.sgOptions.windowSize = 9] - points to use in the approximations\n * @param {number} [options.sgOptions.polynomial = 3] - degree of the polynomial to use in the approximations\n * @param {number} [options.minMaxRatio = 0.00025] - Threshold to determine if a given peak should be considered as a noise\n * @param {number} [options.broadRatio = 0.00] - If `broadRatio` is higher than 0, then all the peaks which second derivative\n * smaller than `broadRatio * maxAbsSecondDerivative` will be marked with the soft mask equal to true.\n * @param {number} [options.noiseLevel = 0] - Noise threshold in spectrum units\n * @param {boolean} [options.maxCriteria = true] - Peaks are local maximum(true) or minimum(false)\n * @param {boolean} [options.smoothY = true] - Select the peak intensities from a smoothed version of the independent variables\n * @param {boolean} [options.realTopDetection = false] - Use a quadratic optimizations with the peak and its 3 closest neighbors\n * to determine the true x,y values of the peak?\n * @param {number} [options.heightFactor = 0] - Factor to multiply the calculated height (usually 2)\n * @param {boolean} [options.boundaries = false] - Return also the inflection points of the peaks\n * @param {number} [options.derivativeThreshold = -1] - Filters based on the amplitude of the first derivative\n * @return {Array<object>}\n */\nfunction gsd(x, yIn, options) {\n  options = Object.assign({}, defaultOptions, options);\n  let sgOptions = options.sgOptions;\n  const y = [].concat(yIn);\n\n  if (!('noiseLevel' in options)) {\n    // We have to know if x is equally spaced\n    var maxDx = 0;\n\n    var minDx = Number.MAX_VALUE;\n\n    var tmp;\n    for (let i = 0; i < x.length - 1; ++i) {\n      tmp = Math.abs(x[i + 1] - x[i]);\n      if (tmp < minDx) {\n        minDx = tmp;\n      }\n      if (tmp > maxDx) {\n        maxDx = tmp;\n      }\n    }\n\n    if ((maxDx - minDx) / maxDx < 0.05) {\n      options.noiseLevel = getNoiseLevel(y);\n    } else {\n      options.noiseLevel = 0;\n    }\n  }\n  const yCorrection = { m: 1, b: options.noiseLevel };\n  if (!options.maxCriteria) {\n    yCorrection.m = -1;\n    yCorrection.b *= -1;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    y[i] = yCorrection.m * y[i] - yCorrection.b;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    if (y[i] < 0) {\n      y[i] = 0;\n    }\n  }\n  // If the max difference between delta x is less than 5%, then, we can assume it to be equally spaced variable\n  let Y = y;\n  let dY, ddY;\n  if ((maxDx - minDx) / maxDx < 0.05) {\n    if (options.smoothY) {\n      Y = SG(y, x[1] - x[0], {\n        windowSize: sgOptions.windowSize,\n        polynomial: sgOptions.polynomial,\n        derivative: 0\n      });\n    }\n    dY = SG(y, x[1] - x[0], {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 1\n    });\n    ddY = SG(y, x[1] - x[0], {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 2\n    });\n  } else {\n    if (options.smoothY) {\n      Y = SG(y, x, {\n        windowSize: sgOptions.windowSize,\n        polynomial: sgOptions.polynomial,\n        derivative: 0\n      });\n    }\n    dY = SG(y, x, {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 1\n    });\n    ddY = SG(y, x, {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 2\n    });\n  }\n\n  const X = x;\n  const dx = x[1] - x[0];\n  var maxDdy = 0;\n  var maxY = 0;\n  for (let i = 0; i < Y.length; i++) {\n    if (Math.abs(ddY[i]) > maxDdy) {\n      maxDdy = Math.abs(ddY[i]);\n    }\n    if (Math.abs(Y[i]) > maxY) {\n      maxY = Math.abs(Y[i]);\n    }\n  }\n\n  var lastMax = null;\n  var lastMin = null;\n  var minddY = new Array(Y.length - 2);\n  var intervalL = new Array(Y.length);\n  var intervalR = new Array(Y.length);\n  var broadMask = new Array(Y.length - 2);\n  var minddYLen = 0;\n  var intervalLLen = 0;\n  var intervalRLen = 0;\n  var broadMaskLen = 0;\n  // By the intermediate value theorem We cannot find 2 consecutive maximum or minimum\n  for (let i = 1; i < Y.length - 1; ++i) {\n    // filter based on derivativeThreshold\n    if (Math.abs(dY[i]) > options.derivativeThreshold) {\n      // Minimum in first derivative\n      if (\n        (dY[i] < dY[i - 1] && dY[i] <= dY[i + 1]) ||\n        (dY[i] <= dY[i - 1] && dY[i] < dY[i + 1])\n      ) {\n        lastMin = {\n          x: X[i],\n          index: i\n        };\n        if (dx > 0 && lastMax !== null) {\n          intervalL[intervalLLen++] = lastMax;\n          intervalR[intervalRLen++] = lastMin;\n        }\n      }\n\n      // Maximum in first derivative\n      if (\n        (dY[i] >= dY[i - 1] && dY[i] > dY[i + 1]) ||\n        (dY[i] > dY[i - 1] && dY[i] >= dY[i + 1])\n      ) {\n        lastMax = {\n          x: X[i],\n          index: i\n        };\n        if (dx < 0 && lastMin !== null) {\n          intervalL[intervalLLen++] = lastMax;\n          intervalR[intervalRLen++] = lastMin;\n        }\n      }\n    }\n\n    // Minimum in second derivative\n    if (ddY[i] < ddY[i - 1] && ddY[i] < ddY[i + 1]) {\n      // TODO should we change this to have 3 arrays ? Huge overhead creating arrays\n      minddY[minddYLen++] = i; // ( [X[i], Y[i], i] );\n      broadMask[broadMaskLen++] =\n        Math.abs(ddY[i]) <= options.broadRatio * maxDdy;\n    }\n  }\n  minddY.length = minddYLen;\n  intervalL.length = intervalLLen;\n  intervalR.length = intervalRLen;\n  broadMask.length = broadMaskLen;\n\n  let signals = new Array(minddY.length);\n  let signalsLen = 0;\n  let lastK = -1;\n  let possible, frequency, distanceJ, minDistance, gettingCloser;\n  for (let j = 0; j < minddY.length; ++j) {\n    frequency = X[minddY[j]];\n    possible = -1;\n    let k = lastK + 1;\n    minDistance = Number.MAX_VALUE;\n    distanceJ = 0;\n    gettingCloser = true;\n    while (possible === -1 && k < intervalL.length && gettingCloser) {\n      distanceJ = Math.abs(frequency - (intervalL[k].x + intervalR[k].x) / 2);\n\n      // Still getting closer?\n      if (distanceJ < minDistance) {\n        minDistance = distanceJ;\n      } else {\n        gettingCloser = false;\n      }\n      if (distanceJ < Math.abs(intervalL[k].x - intervalR[k].x) / 2) {\n        possible = k;\n        lastK = k;\n      }\n      ++k;\n    }\n\n    if (possible !== -1) {\n      if (Math.abs(Y[minddY[j]]) > options.minMaxRatio * maxY) {\n        signals[signalsLen++] = {\n          index: minddY[j],\n          x: frequency,\n          y: (Y[minddY[j]] + yCorrection.b) / yCorrection.m,\n          width: Math.abs(intervalR[possible].x - intervalL[possible].x), // widthCorrection\n          soft: broadMask[j]\n        };\n        if (options.boundaries) {\n          signals[signalsLen - 1].left = intervalL[possible];\n          signals[signalsLen - 1].right = intervalR[possible];\n        }\n        if (options.heightFactor) {\n          let yLeft = Y[intervalL[possible].index];\n          let yRight = Y[intervalR[possible].index];\n          signals[signalsLen - 1].height =\n            options.heightFactor *\n            (signals[signalsLen - 1].y - (yLeft + yRight) / 2);\n        }\n      }\n    }\n  }\n  signals.length = signalsLen;\n\n  if (options.realTopDetection) {\n    realTopDetection(signals, X, Y);\n  }\n\n  // Correct the values to fit the original spectra data\n  for (let j = 0; j < signals.length; j++) {\n    signals[j].base = options.noiseLevel;\n  }\n\n  signals.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return signals;\n}\n\nfunction getNoiseLevel(y) {\n  var mean = 0;\n\n  var stddev = 0;\n  var length = y.length;\n  for (let i = 0; i < length; ++i) {\n    mean += y[i];\n  }\n  mean /= length;\n  var averageDeviations = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    averageDeviations[i] = Math.abs(y[i] - mean);\n  }\n  averageDeviations.sort();\n  if (length % 2 === 1) {\n    stddev = averageDeviations[(length - 1) / 2] / 0.6745;\n  } else {\n    stddev =\n      (0.5 *\n        (averageDeviations[length / 2] + averageDeviations[length / 2 - 1])) /\n      0.6745;\n  }\n\n  return stddev;\n}\n\nfunction realTopDetection(peakList, x, y) {\n  var alpha, beta, gamma, p, currentPoint;\n  for (var j = 0; j < peakList.length; j++) {\n    currentPoint = peakList[j].index; // peakList[j][2];\n    // The detected peak could be moved 1 or 2 unit to left or right.\n    if (\n      y[currentPoint - 1] >= y[currentPoint - 2] &&\n      y[currentPoint - 1] >= y[currentPoint]\n    ) {\n      currentPoint--;\n    } else {\n      if (\n        y[currentPoint + 1] >= y[currentPoint] &&\n        y[currentPoint + 1] >= y[currentPoint + 2]\n      ) {\n        currentPoint++;\n      } else {\n        if (\n          y[currentPoint - 2] >= y[currentPoint - 3] &&\n          y[currentPoint - 2] >= y[currentPoint - 1]\n        ) {\n          currentPoint -= 2;\n        } else {\n          if (\n            y[currentPoint + 2] >= y[currentPoint + 1] &&\n            y[currentPoint + 2] >= y[currentPoint + 3]\n          ) {\n            currentPoint += 2;\n          }\n        }\n      }\n    }\n    // interpolation to a sin() function\n    if (\n      y[currentPoint - 1] > 0 &&\n      y[currentPoint + 1] > 0 &&\n      y[currentPoint] >= y[currentPoint - 1] &&\n      y[currentPoint] >= y[currentPoint + 1]\n    ) {\n      alpha = 20 * Math.log10(y[currentPoint - 1]);\n      beta = 20 * Math.log10(y[currentPoint]);\n      gamma = 20 * Math.log10(y[currentPoint + 1]);\n      p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n      // console.log(alpha, beta, gamma, `p: ${p}`);\n      // console.log(x[currentPoint]+\" \"+tmp+\" \"+currentPoint);\n      peakList[j].x =\n        x[currentPoint] + (x[currentPoint] - x[currentPoint - 1]) * p;\n      peakList[j].y =\n        y[currentPoint] -\n        0.25 * (y[currentPoint - 1] - y[currentPoint + 1]) * p;\n    }\n  }\n}\n\nmodule.exports = gsd;\n","//Code translate from Pascal source in http://pubs.acs.org/doi/pdf/10.1021/ac00205a007\nvar extend = require('extend');\nvar stat = require('ml-stat');\n\nvar defaultOptions = {\n    windowSize: 9,\n    derivative: 0,\n    polynomial: 3,\n};\n\n\nfunction SavitzkyGolay(data, h, options) {\n    options = extend({}, defaultOptions, options);\n\n    if ((options.windowSize % 2 === 0) || (options.windowSize < 5) || !(Number.isInteger(options.windowSize)))\n            throw new RangeError('Invalid window size (should be odd and at least 5 integer number)')\n\n\n    if (options.windowSize>data.length)\n        throw new RangeError('Window size is higher than the data length '+options.windowSize+\">\"+data.length);\n    if ((options.derivative < 0) || !(Number.isInteger(options.derivative)))\n        throw new RangeError('Derivative should be a positive integer');\n    if ((options.polynomial < 1) || !(Number.isInteger(options.polynomial)))\n        throw new RangeError('Polynomial should be a positive integer');\n    if (options.polynomial >= 6)\n        console.warn('You should not use polynomial grade higher than 5 if you are' +\n            ' not sure that your data arises from such a model. Possible polynomial oscillation problems');\n\n    var windowSize = options.windowSize;\n\n    var half = Math.floor(windowSize/2);\n    var np = data.length;\n    var ans = new Array(np);\n    var weights = fullWeights(windowSize,options.polynomial,options.derivative);\n    var hs = 0;\n    var constantH = true;\n    if( Object.prototype.toString.call( h ) === '[object Array]' ) {\n        constantH = false;\n    }\n    else{\n        hs = Math.pow(h, options.derivative);\n    }\n    //console.log(\"Constant h: \"+constantH);\n    //For the borders\n    for(var i=0;i<half;i++){\n        var wg1=weights[half-i-1];\n        var wg2=weights[half+i+1];\n        var d1 = 0,d2=0;\n        for (var l = 0; l < windowSize; l++){\n            d1 += wg1[l] * data[l];\n            d2 += wg2[l] * data[np-windowSize+l-1];\n        }\n        if(constantH){\n            ans[half-i-1] = d1/hs;\n            ans[np-half+i] = d2/hs;\n        }\n        else{\n            hs = getHs(h,half-i-1,half, options.derivative);\n            ans[half-i-1] = d1/hs;\n            hs = getHs(h,np-half+i,half, options.derivative);\n            ans[np-half+i] = d2/hs;\n        }\n    }\n    //For the internal points\n    var wg = weights[half];\n    for(var i=windowSize;i<np+1;i++){\n        var d = 0;\n        for (var l = 0; l < windowSize; l++)\n            d += wg[l] * data[l+i-windowSize];\n        if(!constantH)\n            hs = getHs(h,i-half-1,half, options.derivative);\n        ans[i-half-1] = d/hs;\n    }\n    return ans;\n}\n\nfunction getHs(h,center,half,derivative){\n    var hs = 0;\n    var count = 0;\n    for(var i=center-half;i<center+half;i++){\n        if(i>=0 && i < h.length-1){\n            hs+= (h[i+1]-h[i]);\n            count++;\n        }\n    }\n    return Math.pow(hs/count,derivative);\n}\n\nfunction GramPoly(i,m,k,s){\n    var Grampoly = 0;\n    if(k>0){\n        Grampoly = (4*k-2)/(k*(2*m-k+1))*(i*GramPoly(i,m,k-1,s) +\n            s*GramPoly(i,m,k-1,s-1)) - ((k-1)*(2*m+k))/(k*(2*m-k+1))*GramPoly(i,m,k-2,s);\n    }\n    else{\n        if(k==0&&s==0){\n            Grampoly=1;\n        }\n        else{\n            Grampoly=0;\n        }\n    }\n    //console.log(Grampoly);\n    return Grampoly;\n}\n\nfunction GenFact(a,b){\n    var gf=1;\n    if(a>=b){\n        for(var j=a-b+1;j<=a;j++){\n            gf*=j;\n        }\n    }\n    return gf;\n}\n\nfunction Weight(i,t,m,n,s){\n    var sum=0;\n    for(var k=0;k<=n;k++){\n        //console.log(k);\n        sum+=(2*k+1)*(GenFact(2*m,k)/GenFact(2*m+k+1,k+1))*GramPoly(i,m,k,0)*GramPoly(t,m,k,s)\n    }\n    return sum;\n}\n\n/**\n *\n * @param m  Number of points\n * @param n  Polynomial grade\n * @param s  Derivative\n */\nfunction fullWeights(m,n,s){\n    var weights = new Array(m);\n    var np = Math.floor(m/2);\n    for(var t=-np;t<=np;t++){\n        weights[t+np] = new Array(m);\n        for(var j=-np;j<=np;j++){\n            weights[t+np][j+np]=Weight(j,t,np,n,s);\n        }\n    }\n    return weights;\n}\n\n/*function entropy(data,h,options){\n    var trend = SavitzkyGolay(data,h,trendOptions);\n    var copy = new Array(data.length);\n    var sum = 0;\n    var max = 0;\n    for(var i=0;i<data.length;i++){\n        copy[i] = data[i]-trend[i];\n    }\n\n    sum/=data.length;\n    console.log(sum+\" \"+max);\n    console.log(stat.array.standardDeviation(copy));\n    console.log(Math.abs(stat.array.mean(copy))/stat.array.standardDeviation(copy));\n    return sum;\n\n}\n\n\n\nfunction guessWindowSize(data, h){\n    console.log(\"entropy \"+entropy(data,h,trendOptions));\n    return 5;\n}\n*/\nmodule.exports = SavitzkyGolay;\n \n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","'use strict';\n\nexports.array = require('./array');\nexports.matrix = require('./matrix');\n","'use strict';\nvar arrayStat = require('./array');\n\n// https://github.com/accord-net/framework/blob/development/Sources/Accord.Statistics/Tools.cs\n\nfunction entropy(matrix, eps) {\n    if (typeof(eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n}\n\nfunction mean(matrix, dimension) {\n    if (typeof(dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n}\n\nfunction standardDeviation(matrix, means, unbiased) {\n    var vari = variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n}\n\nfunction variance(matrix, means, unbiased) {\n    if (typeof(unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n}\n\nfunction median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort();\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n}\n\nfunction mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n}\n\nfunction skewness(matrix, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var means = mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n}\n\nfunction kurtosis(matrix, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var means = mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n}\n\nfunction standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = standardDeviation(matrix), l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n}\n\nfunction covariance(matrix, dimension) {\n    return scatter(matrix, undefined, dimension);\n}\n\nfunction scatter(matrix, divisor, dimension) {\n    if (typeof(dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof(divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = mean(matrix, dimension),\n        rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n}\n\nfunction correlation(matrix) {\n    var means = mean(matrix),\n        standardDeviations = standardDeviation(matrix, true, means),\n        scores = zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n}\n\nfunction zScores(matrix, means, standardDeviations) {\n    means = means || mean(matrix);\n    if (typeof(standardDeviations) === 'undefined') standardDeviations = standardDeviation(matrix, true, means);\n    return standardize(center(matrix, means, false), standardDeviations, true);\n}\n\nfunction center(matrix, means, inPlace) {\n    means = means || mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n}\n\nfunction standardize(matrix, standardDeviations, inPlace) {\n    if (typeof(standardDeviations) === 'undefined') standardDeviations = standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n}\n\nfunction weightedVariance(matrix, weights) {\n    var means = mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n}\n\nfunction weightedMean(matrix, weights, dimension) {\n    if (typeof(dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n}\n\nfunction weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return weightedScatter(matrix, weights, means, factor, dimension);\n}\n\nfunction weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || weightedMean(matrix, weights, dimension);\n    if (typeof(factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n}\n\nmodule.exports = {\n    entropy: entropy,\n    mean: mean,\n    standardDeviation: standardDeviation,\n    variance: variance,\n    median: median,\n    mode: mode,\n    skewness: skewness,\n    kurtosis: kurtosis,\n    standardError: standardError,\n    covariance: covariance,\n    scatter: scatter,\n    correlation: correlation,\n    zScores: zScores,\n    center: center,\n    standardize: standardize,\n    weightedVariance: weightedVariance,\n    weightedMean: weightedMean,\n    weightedCovariance: weightedCovariance,\n    weightedScatter: weightedScatter\n};\n","/**\n * Created by acastillo on 9/6/15.\n */\n'use strict';\n\nvar optimize = require('ml-optimize-lorentzian');\n\nfunction sampleFunction(from, to, x, y, lastIndex) {\n  var nbPoints = x.length;\n  var sampleX = [];\n  var sampleY = [];\n  var direction = Math.sign(x[1] - x[0]); // Direction of the derivative\n  if (direction === -1) {\n    lastIndex[0] = x.length - 1;\n  }\n\n  var delta = Math.abs(to - from) / 2;\n  var mid = (from + to) / 2;\n  var stop = false;\n  var index = lastIndex[0];\n  while (!stop && index < nbPoints && index >= 0) {\n    if (Math.abs(x[index] - mid) <= delta) {\n      sampleX.push(x[index]);\n      sampleY.push(y[index]);\n      index += direction;\n    } else {\n      // It is outside the range.\n      if (Math.sign(mid - x[index]) === 1) {\n        // We'll reach the mid going in the current direction\n        index += direction;\n      } else {\n        // There is not more peaks in the current range\n        stop = true;\n      }\n    }\n    // console.log(sampleX);\n  }\n  lastIndex[0] = index;\n  return [sampleX, sampleY];\n}\n\nmodule.exports = function optimizePeaks(peakList, x, y, n, fnType) {\n  var i;\n  var j;\n\n  var lastIndex = [0];\n  var groups = groupPeaks(peakList, n);\n  var result = [];\n  var factor = 1;\n  if (fnType === 'gaussian') {\n    factor = 1.17741;\n  } // From https://en.wikipedia.org/wiki/Gaussian_function#Properties\n  var sampling, error, opts;\n  for (i = 0; i < groups.length; i++) {\n    var peaks = groups[i].group;\n    if (peaks.length > 1) {\n      // Multiple peaks\n      // console.log(\"Pending group of overlaped peaks \"+peaks.length);\n      // console.log(\"here1\");\n      // console.log(groups[i].limits);\n      sampling = sampleFunction(\n        groups[i].limits[0] - groups[i].limits[1],\n        groups[i].limits[0] + groups[i].limits[1],\n        x,\n        y,\n        lastIndex\n      );\n      // console.log(sampling);\n      if (sampling[0].length > 5) {\n        error = peaks[0].width / 1000;\n        opts = [3, 100, error, error, error, error * 10, error * 10, 11, 9, 1];\n        // var gauss = Opt.optimizeSingleGaussian(sampling[0], sampling[1], opts, peaks);\n        var optPeaks = [];\n        if (fnType === 'gaussian') {\n          optPeaks = optimize.optimizeGaussianSum(sampling, peaks, opts);\n        } else {\n          if (fnType === 'lorentzian') {\n            optPeaks = optimize.optimizeLorentzianSum(sampling, peaks, opts);\n          }\n        }\n        // console.log(optPeak);\n        for (j = 0; j < optPeaks.length; j++) {\n          result.push({\n            x: optPeaks[j][0][0],\n            y: optPeaks[j][1][0],\n            width: optPeaks[j][2][0] * factor\n          });\n        }\n      }\n    } else {\n      // Single peak\n      peaks = peaks[0];\n      sampling = sampleFunction(\n        peaks.x - n * peaks.width,\n        peaks.x + n * peaks.width,\n        x,\n        y,\n        lastIndex\n      );\n      // console.log(\"here2\");\n      // console.log(groups[i].limits);\n      if (sampling[0].length > 5) {\n        error = peaks.width / 1000;\n        opts = [3, 100, error, error, error, error * 10, error * 10, 11, 9, 1];\n        // var gauss = Opt.optimizeSingleGaussian(sampling[0], sampling[1], opts, peaks);\n        // var gauss = Opt.optimizeSingleGaussian([sampling[0],sampling[1]], peaks, opts);\n        var optPeak = [];\n        if (fnType === 'gaussian') {\n          optPeak = optimize.optimizeSingleGaussian(\n            [sampling[0], sampling[1]],\n            peaks,\n            opts\n          );\n        } else {\n          if (fnType === 'lorentzian') {\n            optPeak = optimize.optimizeSingleLorentzian(\n              [sampling[0], sampling[1]],\n              peaks,\n              opts\n            );\n          }\n        }\n        // console.log(optPeak);\n        result.push({\n          x: optPeak[0][0],\n          y: optPeak[1][0],\n          width: optPeak[2][0] * factor\n        }); // From https://en.wikipedia.org/wiki/Gaussian_function#Properties}\n      }\n    }\n  }\n  return result;\n};\n\nfunction groupPeaks(peakList, nL) {\n  var group = [];\n  var groups = [];\n  var i, j;\n  var limits = [peakList[0].x, nL * peakList[0].width];\n  var upperLimit, lowerLimit;\n  // Merge forward\n  for (i = 0; i < peakList.length; i++) {\n    // If the 2 things overlaps\n    if (\n      Math.abs(peakList[i].x - limits[0]) <\n      nL * peakList[i].width + limits[1]\n    ) {\n      // Add the peak to the group\n      group.push(peakList[i]);\n      // Update the group limits\n      upperLimit = limits[0] + limits[1];\n      if (peakList[i].x + nL * peakList[i].width > upperLimit) {\n        upperLimit = peakList[i].x + nL * peakList[i].width;\n      }\n      lowerLimit = limits[0] - limits[1];\n      if (peakList[i].x - nL * peakList[i].width < lowerLimit) {\n        lowerLimit = peakList[i].x - nL * peakList[i].width;\n      }\n      limits = [\n        (upperLimit + lowerLimit) / 2,\n        Math.abs(upperLimit - lowerLimit) / 2\n      ];\n    } else {\n      groups.push({ limits: limits, group: group });\n      // var optmimalPeak = fitSpectrum(group,limits,spectrum);\n      group = [peakList[i]];\n      limits = [peakList[i].x, nL * peakList[i].width];\n    }\n  }\n  groups.push({ limits: limits, group: group });\n  // Merge backward\n  for (i = groups.length - 2; i >= 0; i--) {\n    // The groups overlaps\n    if (\n      Math.abs(groups[i].limits[0] - groups[i + 1].limits[0]) <\n      (groups[i].limits[1] + groups[i + 1].limits[1]) / 2\n    ) {\n      for (j = 0; j < groups[i + 1].group.length; j++) {\n        groups[i].group.push(groups[i + 1].group[j]);\n      }\n      upperLimit = groups[i].limits[0] + groups[i].limits[1];\n      if (groups[i + 1].limits[0] + groups[i + 1].limits[1] > upperLimit) {\n        upperLimit = groups[i + 1].limits[0] + groups[i + 1].limits[1];\n      }\n      lowerLimit = groups[i].limits[0] - groups[i].limits[1];\n      if (groups[i + 1].limits[0] - groups[i + 1].limits[1] < lowerLimit) {\n        lowerLimit = groups[i + 1].limits[0] - groups[i + 1].limits[1];\n      }\n      // console.log(limits);\n      groups[i].limits = [\n        (upperLimit + lowerLimit) / 2,\n        Math.abs(upperLimit - lowerLimit) / 2\n      ];\n\n      groups.splice(i + 1, 1);\n    }\n  }\n  return groups;\n}\n","'use strict';\n\nmodule.exports = require('./LM');\nmodule.exports.Matrix = require('ml-matrix');\nmodule.exports.Matrix.algebra = require('./algebra');\n","/**\n * Created by acastillo on 8/5/15.\n */\nvar Matrix = require(\"ml-matrix\");\nvar math = require(\"./algebra\");\n\nvar DEBUG = false;\n/** Levenberg Marquardt curve-fitting: minimize sum of weighted squared residuals\n ----------  INPUT  VARIABLES  -----------\n func   = function of n independent variables, 't', and m parameters, 'p',\n returning the simulated model: y_hat = func(t,p,c)\n p      = n-vector of initial guess of parameter values\n t      = m-vectors or matrix of independent variables (used as arg to func)\n y_dat  = m-vectors or matrix of data to be fit by func(t,p)\n weight = weighting vector for least squares fit ( weight >= 0 ) ...\n inverse of the standard measurement errors\n Default:  sqrt(d.o.f. / ( y_dat' * y_dat ))\n dp     = fractional increment of 'p' for numerical derivatives\n dp(j)>0 central differences calculated\n dp(j)<0 one sided 'backwards' differences calculated\n dp(j)=0 sets corresponding partials to zero; i.e. holds p(j) fixed\n Default:  0.001;\n p_min  = n-vector of lower bounds for parameter values\n p_max  = n-vector of upper bounds for parameter values\n c      = an optional matrix of values passed to func(t,p,c)\n opts   = vector of algorithmic parameters\n parameter    defaults    meaning\n opts(1)  =  prnt            3        >1 intermediate results; >2 plots\n opts(2)  =  MaxIter      10*Npar     maximum number of iterations\n opts(3)  =  epsilon_1       1e-3     convergence tolerance for gradient\n opts(4)  =  epsilon_2       1e-3     convergence tolerance for parameters\n opts(5)  =  epsilon_3       1e-3     convergence tolerance for Chi-square\n opts(6)  =  epsilon_4       1e-2     determines acceptance of a L-M step\n opts(7)  =  lambda_0        1e-2     initial value of L-M paramter\n opts(8)  =  lambda_UP_fac   11       factor for increasing lambda\n opts(9)  =  lambda_DN_fac    9       factor for decreasing lambda\n opts(10) =  Update_Type      1       1: Levenberg-Marquardt lambda update\n 2: Quadratic update\n 3: Nielsen's lambda update equations\n\n ----------  OUTPUT  VARIABLES  -----------\n p       = least-squares optimal estimate of the parameter values\n X2      = Chi squared criteria\n sigma_p = asymptotic standard error of the parameters\n sigma_y = asymptotic standard error of the curve-fit\n corr    = correlation matrix of the parameters\n R_sq    = R-squared cofficient of multiple determination\n cvg_hst = convergence history\n\n Henri Gavin, Dept. Civil & Environ. Engineering, Duke Univ. 22 Sep 2013\n modified from: http://octave.sourceforge.net/optim/function/leasqr.html\n using references by\n Press, et al., Numerical Recipes, Cambridge Univ. Press, 1992, Chapter 15.\n Sam Roweis       http://www.cs.toronto.edu/~roweis/notes/lm.pdf\n Manolis Lourakis http://www.ics.forth.gr/~lourakis/levmar/levmar.pdf\n Hans Nielson     http://www2.imm.dtu.dk/~hbn/publ/TR9905.ps\n Mathworks        optimization toolbox reference manual\n K. Madsen, H.B., Nielsen, and O. Tingleff\n http://www2.imm.dtu.dk/pubdb/views/edoc_download.php/3215/pdf/imm3215.pdf\n */\nvar LM = {\n\n    optimize: function(func,p,t,y_dat,weight,dp,p_min,p_max,c,opts){\n\n        var tensor_parameter = 0;\t\t\t// set to 1 of parameter is a tensor\n\n        var iteration  = 0;\t\t\t// iteration counter\n        //func_calls = 0;\t\t\t// running count of function evaluations\n\n        if((typeof p[0])!=\"object\"){\n            for(var i=0;i< p.length;i++){\n                p[i]=[p[i]];\n            }\n\n        }\n        //p = p(:); y_dat = y_dat(:); \t\t// make column vectors\n        var i,k;\n        var eps = 2^-52;\n        var Npar   = p.length;//length(p); \t\t\t// number of parameters\n        var Npnt   = y_dat.length;//length(y_dat);\t\t// number of data points\n        var p_old  = Matrix.zeros(Npar,1);\t\t// previous set of parameters\n        var y_old  = Matrix.zeros(Npnt,1);\t\t// previous model, y_old = y_hat(t;p_old)\n        var X2     = 1e-2/eps;\t\t\t// a really big initial Chi-sq value\n        var X2_old = 1e-2/eps;\t\t\t// a really big initial Chi-sq value\n        var J =  Matrix.zeros(Npnt,Npar);\n\n\n        if (t.length != y_dat.length) {\n            console.log('lm.m error: the length of t must equal the length of y_dat');\n\n            length_t = t.length;\n            length_y_dat = y_dat.length;\n            var X2 = 0, corr = 0, sigma_p = 0, sigma_y = 0, R_sq = 0, cvg_hist = 0;\n            if (!tensor_parameter) {\n                return;\n            }\n        }\n\n        weight = weight||Math.sqrt((Npnt-Npar+1)/(math.multiply(math.transpose(y_dat),y_dat)));\n        dp = dp || 0.001;\n        p_min   = p_min || math.multiply(Math.abs(p),-100);\n        p_max   = p_max || math.multiply(Math.abs(p),100);\n        c = c || 1;\n        // Algorithmic Paramters\n        //prnt MaxIter  eps1  eps2  epx3  eps4  lam0  lamUP lamDN UpdateType\n        opts = opts ||[  3,10*Npar, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2, 11, 9, 1 ];\n\n        var prnt          = opts[0];\t// >1 intermediate results; >2 plots\n        var MaxIter       = opts[1];\t// maximum number of iterations\n        var epsilon_1     = opts[2];\t// convergence tolerance for gradient\n        var epsilon_2     = opts[3];\t// convergence tolerance for parameter\n        var epsilon_3     = opts[4];\t// convergence tolerance for Chi-square\n        var epsilon_4     = opts[5];\t// determines acceptance of a L-M step\n        var lambda_0      = opts[6];\t// initial value of damping paramter, lambda\n        var lambda_UP_fac = opts[7];\t// factor for increasing lambda\n        var lambda_DN_fac = opts[8];\t// factor for decreasing lambda\n        var Update_Type   = opts[9];\t// 1: Levenberg-Marquardt lambda update\n        // 2: Quadratic update\n        // 3: Nielsen's lambda update equations\n\n        if ( tensor_parameter && prnt == 3 ) prnt = 2;\n\n\n        if(!dp.length || dp.length == 1){\n            var dp_array = new Array(Npar);\n            for(var i=0;i<Npar;i++)\n                dp_array[i]=[dp];\n            dp=dp_array;\n        }\n\n        // indices of the parameters to be fit\n        var idx   = [];\n        for(i=0;i<dp.length;i++){\n            if(dp[i][0]!=0){\n                idx.push(i);\n            }\n        }\n\n        var Nfit = idx.length;\t\t\t// number of parameters to fit\n        var stop = false;\t\t\t\t// termination flag\n\n        var weight_sq = null;\n        //console.log(weight);\n        if ( !weight.length || weight.length < Npnt )\t{\n            // squared weighting vector\n            //weight_sq = ( weight(1)*ones(Npnt,1) ).^2;\n            //console.log(\"weight[0] \"+typeof weight[0]);\n            var tmp = math.multiply(Matrix.ones(Npnt,1),weight[0]);\n            weight_sq = math.dotMultiply(tmp,tmp);\n        }\n        else{\n            //weight_sq = (weight(:)).^2;\n            weight_sq = math.dotMultiply(weight,weight);\n        }\n\n\n        // initialize Jacobian with finite difference calculation\n        //console.log(\"J \"+weight_sq);\n        var result = this.lm_matx(func,t,p_old,y_old,1,J,p,y_dat,weight_sq,dp,c);\n        var JtWJ = result.JtWJ,JtWdy=result.JtWdy,X2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n        //[JtWJ,JtWdy,X2,y_hat,J] = this.lm_matx(func,t,p_old,y_old,1,J,p,y_dat,weight_sq,dp,c);\n        //console.log(JtWJ);\n\n        if ( Math.max(Math.abs(JtWdy)) < epsilon_1 ){\n            console.log(' *** Your Initial Guess is Extremely Close to Optimal ***')\n            console.log(' *** epsilon_1 = ', epsilon_1);\n            stop = true;\n        }\n\n\n        switch(Update_Type){\n            case 1: // Marquardt: init'l lambda\n                lambda  = lambda_0;\n                break;\n            default:    // Quadratic and Nielsen\n                lambda  = lambda_0 * Math.max(math.diag(JtWJ));\n                nu=2;\n        }\n        //console.log(X2);\n        X2_old = X2; // previous value of X2\n        //console.log(MaxIter+\" \"+Npar);\n        //var cvg_hst = Matrix.ones(MaxIter,Npar+3);\t\t// initialize convergence history\n        var h = null;\n        while ( !stop && iteration <= MaxIter ) {\t\t// --- Main Loop\n            iteration = iteration + 1;\n            // incremental change in parameters\n            switch(Update_Type){\n                case 1:\t\t\t\t\t// Marquardt\n                    //h = ( JtWJ + lambda * math.diag(math.diag(JtWJ)) ) \\ JtWdy;\n                    //h = math.multiply(math.inv(JtWdy),math.add(JtWJ,math.multiply(lambda,math.diag(math.diag(Npar)))));\n                    h = math.solve(math.add(JtWJ,math.multiply(math.diag(math.diag(JtWJ)),lambda)),JtWdy);\n                    break;\n                default:\t\t\t\t\t// Quadratic and Nielsen\n                    //h = ( JtWJ + lambda * math.eye(Npar) ) \\ JtWdy;\n\n                    h = math.solve(math.add(JtWJ,math.multiply( Matrix.eye(Npar),lambda)),JtWdy);\n            }\n\n            /*for(var k=0;k< h.length;k++){\n             h[k]=[h[k]];\n             }*/\n            //console.log(\"h \"+h);\n            //h=math.matrix(h);\n            //  big = max(abs(h./p)) > 2;\n            //this is a big step\n            // --- Are parameters [p+h] much better than [p] ?\n            var hidx = new Array(idx.length);\n            for(k=0;k<idx.length;k++){\n                hidx[k]=h[idx[k]];\n            }\n            var p_try = math.add(p, hidx);// update the [idx] elements\n\n            for(k=0;k<p_try.length;k++){\n                p_try[k][0]=Math.min(Math.max(p_min[k][0],p_try[k][0]),p_max[k][0]);\n            }\n            // p_try = Math.min(Math.max(p_min,p_try),p_max);           // apply constraints\n\n            var delta_y = math.subtract(y_dat, func(t,p_try,c));       // residual error using p_try\n            //func_calls = func_calls + 1;\n            //X2_try = delta_y' * ( delta_y .* weight_sq );  // Chi-squared error criteria\n\n            var X2_try = math.multiply(math.transpose(delta_y),math.dotMultiply(delta_y,weight_sq));\n\n            if ( Update_Type == 2 ){  \t\t\t  // Quadratic\n                //    One step of quadratic line update in the h direction for minimum X2\n                //var alpha =  JtWdy'*h / ( (X2_try - X2)/2 + 2*JtWdy'*h ) ;\n                var JtWdy_th = math.multiply(math.transpose(JtWdy),h);\n                var alpha =  math.multiply(JtWdy_th,math.inv(math.add(math.multiply(math.subtract(X2_try - X2),1/2)),math.multiply(JtWdy_th,2)));//JtWdy'*h / ( (X2_try - X2)/2 + 2*JtWdy'*h ) ;\n\n                h = math.multiply(alpha, h);\n                for(var k=0;k<idx.length;k++){\n                    hidx[k]=h[idx[k]];\n                }\n\n                p_try = math.add(p ,hidx);                     // update only [idx] elements\n                p_try = math.min(math.max(p_min,p_try),p_max);          // apply constraints\n\n                delta_y = math.subtract(y_dat, func(t,p_try,c));      // residual error using p_try\n                // func_calls = func_calls + 1;\n                //X2_try = delta_y' * ( delta_y .* weight_sq ); // Chi-squared error criteria\n                X2_try = math.multiply(math.transpose(delta_y), mat.dotMultiply(delta_y, weight_sq));\n            }\n\n            //rho = (X2 - X2_try) / ( 2*h' * (lambda * h + JtWdy) ); // Nielsen\n            var rho = (X2-X2_try)/math.multiply(math.multiply(math.transpose(h),2),math.add(math.multiply(lambda, h),JtWdy));\n            //console.log(\"rho \"+rho);\n            if ( rho > epsilon_4 ) {\t\t// it IS significantly better\n                //console.log(\"Here\");\n                dX2 = X2 - X2_old;\n                X2_old = X2;\n                p_old = p;\n                y_old = y_hat;\n                p = p_try;\t\t\t// accept p_try\n\n                result = this.lm_matx(func, t, p_old, y_old, dX2, J, p, y_dat, weight_sq, dp, c);\n                JtWJ = result.JtWJ,JtWdy=result.JtWdy,X2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n                // decrease lambda ==> Gauss-Newton method\n\n                switch (Update_Type) {\n                    case 1:\t\t\t\t\t\t\t// Levenberg\n                        lambda = Math.max(lambda / lambda_DN_fac, 1.e-7);\n                        break;\n                    case 2:\t\t\t\t\t\t\t// Quadratic\n                        lambda = Math.max(lambda / (1 + alpha), 1.e-7);\n                        break;\n                    case 3:\t\t\t\t\t\t\t// Nielsen\n                        lambda = math.multiply(Math.max(1 / 3, 1 - (2 * rho - 1) ^ 3),lambda);\n                        nu = 2;\n                        break;\n                }\n            }\n            else {\t\t\t\t\t// it IS NOT better\n                X2 = X2_old;\t\t\t// do not accept p_try\n                if (iteration%(2 * Npar)==0) {\t// rank-1 update of Jacobian\n                    result = this.lm_matx(func, t, p_old, y_old, -1, J, p, y_dat, weight_sq, dp, c);\n                    JtWJ = result.JtWJ,JtWdy=result.JtWdy,dX2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n                }\n\n                // increase lambda  ==> gradient descent method\n                switch (Update_Type) {\n                    case 1:\t\t\t\t\t\t\t// Levenberg\n                        lambda = Math.min(lambda * lambda_UP_fac, 1.e7);\n                        break;\n                    case 2:\t\t\t\t\t\t\t// Quadratic\n                        lambda = lambda + Math.abs((X2_try - X2) / 2 / alpha);\n                        break;\n                    case 3:\t\t\t\t\t\t// Nielsen\n                        lambda = lambda * nu;\n                        nu = 2 * nu;\n                        break;\n                }\n            }\n        }// --- End of Main Loop\n\n        // --- convergence achieved, find covariance and confidence intervals\n\n        // equal weights for paramter error analysis\n        weight_sq = math.multiply(math.multiply(math.transpose(delta_y),delta_y), Matrix.ones(Npnt,1));\n\n        weight_sq.apply(function(i,j){\n            weight_sq[i][j] = (Npnt-Nfit+1)/weight_sq[i][j];\n        });\n        //console.log(weight_sq);\n        result = this.lm_matx(func,t,p_old,y_old,-1,J,p,y_dat,weight_sq,dp,c);\n        JtWJ = result.JtWJ,JtWdy=result.JtWdy,X2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n\n        /*if nargout > 2\t\t\t\t// standard error of parameters\n         covar = inv(JtWJ);\n         sigma_p = sqrt(diag(covar));\n         end\n\n         if nargout > 3\t\t\t\t// standard error of the fit\n         //  sigma_y = sqrt(diag(J * covar * J'));\t// slower version of below\n         sigma_y = zeros(Npnt,1);\n         for i=1:Npnt\n         sigma_y(i) = J(i,:) * covar * J(i,:)';\n         end\n         sigma_y = sqrt(sigma_y);\n         end\n\n         if nargout > 4\t\t\t\t// parameter correlation matrix\n         corr = covar ./ [sigma_p*sigma_p'];\n         end\n\n         if nargout > 5\t\t\t\t// coefficient of multiple determination\n         R_sq = corrcoef([y_dat y_hat]);\n         R_sq = R_sq(1,2).^2;\n         end\n\n         if nargout > 6\t\t\t\t// convergence history\n         cvg_hst = cvg_hst(1:iteration,:);\n         end*/\n\n        // endfunction  # ---------------------------------------------------------- LM\n\n        return { p:p, X2:X2};\n    },\n\n    lm_FD_J:function(func,t,p,y,dp,c) {\n        // J = lm_FD_J(func,t,p,y,{dp},{c})\n        //\n        // partial derivatives (Jacobian) dy/dp for use with lm.m\n        // computed via Finite Differences\n        // Requires n or 2n function evaluations, n = number of nonzero values of dp\n        // -------- INPUT VARIABLES ---------\n        // func = function of independent variables, 't', and parameters, 'p',\n        //        returning the simulated model: y_hat = func(t,p,c)\n        // t  = m-vector of independent variables (used as arg to func)\n        // p  = n-vector of current parameter values\n        // y  = func(t,p,c) n-vector initialised by user before each call to lm_FD_J\n        // dp = fractional increment of p for numerical derivatives\n        //      dp(j)>0 central differences calculated\n        //      dp(j)<0 one sided differences calculated\n        //      dp(j)=0 sets corresponding partials to zero; i.e. holds p(j) fixed\n        //      Default:  0.001;\n        // c  = optional vector of constants passed to y_hat = func(t,p,c)\n        //---------- OUTPUT VARIABLES -------\n        // J  = Jacobian Matrix J(i,j)=dy(i)/dp(j)\ti=1:n; j=1:m\n\n        //   Henri Gavin, Dept. Civil & Environ. Engineering, Duke Univ. November 2005\n        //   modified from: ftp://fly.cnuce.cnr.it/pub/software/octave/leasqr/\n        //   Press, et al., Numerical Recipes, Cambridge Univ. Press, 1992, Chapter 15.\n\n        var m = y.length;\t\t\t// number of data points\n        var n = p.length;\t\t\t// number of parameters\n\n        dp = dp || math.multiply( Matrix.ones(n, 1), 0.001);\n\n        var ps = p.clone();//JSON.parse(JSON.stringify(p));\n        //var ps = $.extend(true, [], p);\n        var J = new Matrix(m,n), del =new Array(n);         // initialize Jacobian to Zero\n\n        for (var j = 0;j < n; j++) {\n            //console.log(j+\" \"+dp[j]+\" \"+p[j]+\" \"+ps[j]+\" \"+del[j]);\n            del[j] = dp[j]*(1+Math.abs(p[j][0]));  // parameter perturbation\n            p[j] = [ps[j][0]+del[j]];\t      // perturb parameter p(j)\n            //console.log(j+\" \"+dp[j]+\" \"+p[j]+\" \"+ps[j]+\" \"+del[j]);\n\n            if (del[j] != 0){\n                y1 = func(t, p, c);\n                //func_calls = func_calls + 1;\n                if (dp[j][0] < 0) {\t\t// backwards difference\n                    //J(:,j) = math.dotDivide(math.subtract(y1, y),del[j]);//. / del[j];\n                    //console.log(del[j]);\n                    //console.log(y);\n                    var column = math.dotDivide(math.subtract(y1, y),del[j]);\n                    for(var k=0;k< m;k++){\n                        J[k][j]=column[k][0];\n                    }\n                    //console.log(column);\n                }\n                else{\n                    p[j][0] = ps[j][0] - del[j];\n                    //J(:,j) = (y1 - feval(func, t, p, c)). / (2. * del[j]);\n                    var column = math.dotDivide(math.subtract(y1,func(t,p,c)),2*del[j]);\n                    for(var k=0;k< m;k++){\n                        J[k][j]=column[k][0];\n                    }\n\n                }\t\t\t// central difference, additional func call\n            }\n\n            p[j] = ps[j];\t\t// restore p(j)\n\n        }\n        //console.log(\"lm_FD_J: \"+ JSON.stringify(J));\n        return J;\n\n    },\n\n    // endfunction # -------------------------------------------------- LM_FD_J\n    lm_Broyden_J: function(p_old,y_old,J,p,y){\n        // J = lm_Broyden_J(p_old,y_old,J,p,y)\n        // carry out a rank-1 update to the Jacobian matrix using Broyden's equation\n        //---------- INPUT VARIABLES -------\n        // p_old = previous set of parameters\n        // y_old = model evaluation at previous set of parameters, y_hat(t;p_old)\n        // J  = current version of the Jacobian matrix\n        // p     = current  set of parameters\n        // y     = model evaluation at current  set of parameters, y_hat(t;p)\n        //---------- OUTPUT VARIABLES -------\n        // J = rank-1 update to Jacobian Matrix J(i,j)=dy(i)/dp(j)\ti=1:n; j=1:m\n        //console.log(p+\" X \"+ p_old)\n        var h  = math.subtract(p, p_old);\n\n        //console.log(\"hhh \"+h);\n        var h_t = math.transpose(h);\n        h_t.div(math.multiply(h_t,h));\n\n        //console.log(h_t);\n        //J = J + ( y - y_old - J*h )*h' / (h'*h);\t// Broyden rank-1 update eq'n\n        J = math.add(J, math.multiply(math.subtract(y, math.add(y_old,math.multiply(J,h))),h_t));\n        return J;\n        // endfunction # ---------------------------------------------- LM_Broyden_J\n    },\n\n    lm_matx : function (func,t,p_old,y_old,dX2,J,p,y_dat,weight_sq,dp,c,iteration){\n        // [JtWJ,JtWdy,Chi_sq,y_hat,J] = this.lm_matx(func,t,p_old,y_old,dX2,J,p,y_dat,weight_sq,{da},{c})\n        //\n        // Evaluate the linearized fitting matrix, JtWJ, and vector JtWdy,\n        // and calculate the Chi-squared error function, Chi_sq\n        // Used by Levenberg-Marquard algorithm, lm.m\n        // -------- INPUT VARIABLES ---------\n        // func   = function ofpn independent variables, p, and m parameters, p,\n        //         returning the simulated model: y_hat = func(t,p,c)\n        // t      = m-vectors or matrix of independent variables (used as arg to func)\n        // p_old  = n-vector of previous parameter values\n        // y_old  = m-vector of previous model ... y_old = y_hat(t;p_old);\n        // dX2    = previous change in Chi-squared criteria\n        // J   = m-by-n Jacobian of model, y_hat, with respect to parameters, p\n        // p      = n-vector of current  parameter values\n        // y_dat  = n-vector of data to be fit by func(t,p,c)\n        // weight_sq = square of the weighting vector for least squares fit ...\n        //\t    inverse of the standard measurement errors\n        // dp     = fractional increment of 'p' for numerical derivatives\n        //          dp(j)>0 central differences calculated\n        //          dp(j)<0 one sided differences calculated\n        //          dp(j)=0 sets corresponding partials to zero; i.e. holds p(j) fixed\n        //          Default:  0.001;\n        // c      = optional vector of constants passed to y_hat = func(t,p,c)\n        //---------- OUTPUT VARIABLES -------\n        // JtWJ\t = linearized Hessian matrix (inverse of covariance matrix)\n        // JtWdy   = linearized fitting vector\n        // Chi_sq = Chi-squared criteria: weighted sum of the squared residuals WSSR\n        // y_hat  = model evaluated with parameters 'p'\n        // J   = m-by-n Jacobian of model, y_hat, with respect to parameters, p\n\n        //   Henri Gavin, Dept. Civil & Environ. Engineering, Duke Univ. November 2005\n        //   modified from: ftp://fly.cnuce.cnr.it/pub/software/octave/leasqr/\n        //   Press, et al., Numerical Recipes, Cambridge Univ. Press, 1992, Chapter 15.\n\n\n        var Npnt = y_dat.length;\t\t// number of data points\n        var Npar = p.length;\t\t// number of parameters\n\n        dp = dp || 0.001;\n\n\n        //var JtWJ = new Matrix.zeros(Npar);\n        //var JtWdy  = new Matrix.zeros(Npar,1);\n\n        var y_hat = func(t,p,c);\t// evaluate model using parameters 'p'\n        //func_calls = func_calls + 1;\n        //console.log(J);\n        if ( (iteration%(2*Npar))==0 || dX2 > 0 ) {\n            //console.log(\"Par\");\n            J = this.lm_FD_J(func, t, p, y_hat, dp, c);\t\t// finite difference\n        }\n        else{\n            //console.log(\"ImPar\");\n            J = this.lm_Broyden_J(p_old, y_old, J, p, y_hat); // rank-1 update\n        }\n        //console.log(y_dat);\n        //console.log(y_hat);\n        var delta_y = math.subtract(y_dat, y_hat);\t// residual error between model and data\n        //console.log(delta_y[0][0]);\n        //console.log(delta_y.rows+\" \"+delta_y.columns+\" \"+JSON.stringify(weight_sq));\n        //var Chi_sq = delta_y' * ( delta_y .* weight_sq ); \t// Chi-squared error criteria\n        var Chi_sq = math.multiply(math.transpose(delta_y),math.dotMultiply(delta_y,weight_sq));\n        //JtWJ  = J' * ( J .* ( weight_sq * ones(1,Npar) ) );\n        var Jt = math.transpose(J);\n\n        //console.log(weight_sq);\n\n        var JtWJ = math.multiply(Jt, math.dotMultiply(J,math.multiply(weight_sq, Matrix.ones(1,Npar))));\n\n        //JtWdy = J' * ( weight_sq .* delta_y );\n        var JtWdy = math.multiply(Jt, math.dotMultiply(weight_sq,delta_y));\n\n\n        return {JtWJ:JtWJ,JtWdy:JtWdy,Chi_sq:Chi_sq,y_hat:y_hat,J:J};\n        // endfunction  # ------------------------------------------------------ LM_MATX\n    }\n\n\n\n};\n\nmodule.exports = LM;","'use strict';\n\nif (!Symbol.species) {\n    Symbol.species = Symbol.for('@@species');\n}\n","module.exports = exports = require('./ArrayUtils');\n\n\nexports.getEquallySpacedData = require('./getEquallySpaced').getEquallySpacedData;\nexports.SNV = require('./snv').SNV;\n","'use strict';\n\nconst Stat = require('ml-stat').array;\n/**\n * Function that returns an array of points given 1D array as follows:\n *\n * [x1, y1, .. , x2, y2, ..]\n *\n * And receive the number of dimensions of each point.\n * @param array\n * @param dimensions\n * @returns {Array} - Array of points.\n */\nfunction coordArrayToPoints(array, dimensions) {\n    if(array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var length = array.length / dimensions;\n    var pointsArr = new Array(length);\n\n    var k = 0;\n    for(var i = 0; i < array.length; i += dimensions) {\n        var point = new Array(dimensions);\n        for(var j = 0; j < dimensions; ++j) {\n            point[j] = array[i + j];\n        }\n\n        pointsArr[k] = point;\n        k++;\n    }\n\n    return pointsArr;\n}\n\n\n/**\n * Function that given an array as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * Returns an array as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * And receives the number of dimensions of each coordinate.\n * @param array\n * @param dimensions\n * @returns {Array} - Matrix of coordinates\n */\nfunction coordArrayToCoordMatrix(array, dimensions) {\n    if(array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var coordinatesArray = new Array(dimensions);\n    var points = array.length / dimensions;\n    for (var i = 0; i < coordinatesArray.length; i++) {\n        coordinatesArray[i] = new Array(points);\n    }\n\n    for(i = 0; i < array.length; i += dimensions) {\n        for(var j = 0; j < dimensions; ++j) {\n            var currentPoint = Math.floor(i / dimensions);\n            coordinatesArray[j][currentPoint] = array[i + j];\n        }\n    }\n\n    return coordinatesArray;\n}\n\n/**\n * Function that receives a coordinate matrix as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * Returns an array of coordinates as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param coordMatrix\n * @returns {Array}\n */\nfunction coordMatrixToCoordArray(coordMatrix) {\n    var coodinatesArray = new Array(coordMatrix.length * coordMatrix[0].length);\n    var k = 0;\n    for(var i = 0; i < coordMatrix[0].length; ++i) {\n        for(var j = 0; j < coordMatrix.length; ++j) {\n            coodinatesArray[k] = coordMatrix[j][i];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Tranpose a matrix, this method is for coordMatrixToPoints and\n * pointsToCoordMatrix, that because only transposing the matrix\n * you can change your representation.\n *\n * @param matrix\n * @returns {Array}\n */\nfunction transpose(matrix) {\n    var resultMatrix = new Array(matrix[0].length);\n    for(var i = 0; i < resultMatrix.length; ++i) {\n        resultMatrix[i] = new Array(matrix.length);\n    }\n\n    for (i = 0; i < matrix.length; ++i) {\n        for(var j = 0; j < matrix[0].length; ++j) {\n            resultMatrix[j][i] = matrix[i][j];\n        }\n    }\n\n    return resultMatrix;\n}\n\n/**\n * Function that transform an array of points into a coordinates array\n * as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param points\n * @returns {Array}\n */\nfunction pointsToCoordArray(points) {\n    var coodinatesArray = new Array(points.length * points[0].length);\n    var k = 0;\n    for(var i = 0; i < points.length; ++i) {\n        for(var j = 0; j < points[0].length; ++j) {\n            coodinatesArray[k] = points[i][j];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Apply the dot product between the smaller vector and a subsets of the\n * largest one.\n *\n * @param firstVector\n * @param secondVector\n * @returns {Array} each dot product of size of the difference between the\n *                  larger and the smallest one.\n */\nfunction applyDotProduct(firstVector, secondVector) {\n    var largestVector, smallestVector;\n    if(firstVector.length <= secondVector.length) {\n        smallestVector = firstVector;\n        largestVector = secondVector;\n    } else {\n        smallestVector = secondVector;\n        largestVector = firstVector;\n    }\n\n    var difference = largestVector.length - smallestVector.length + 1;\n    var dotProductApplied = new Array(difference);\n\n    for (var i = 0; i < difference; ++i) {\n        var sum = 0;\n        for (var j = 0; j < smallestVector.length; ++j) {\n            sum += smallestVector[j] * largestVector[i + j];\n        }\n        dotProductApplied[i] = sum;\n    }\n\n    return dotProductApplied;\n}\n/**\n * To scale the input array between the specified min and max values. The operation is performed inplace\n * if the options.inplace is specified. If only one of the min or max parameters is specified, then the scaling\n * will multiply the input array by min/min(input) or max/max(input)\n * @param input\n * @param options\n * @returns {*}\n */\nfunction scale(input, options){\n    var y;\n    if(options.inPlace){\n        y = input;\n    }\n    else{\n        y = new Array(input.length);\n    }\n    const max = options.max;\n    const min = options.min;\n    if(typeof max === \"number\"){\n        if(typeof min === \"number\"){\n            var minMax = Stat.minMax(input);\n            var factor = (max - min)/(minMax.max-minMax.min);\n            for(var i=0;i< y.length;i++){\n                y[i]=(input[i]-minMax.min)*factor+min;\n            }\n        }\n        else{\n            var currentMin = Stat.max(input);\n            var factor = max/currentMin;\n            for(var i=0;i< y.length;i++){\n                y[i] = input[i]*factor;\n            }\n        }\n    }\n    else{\n        if(typeof min === \"number\"){\n            var currentMin = Stat.min(input);\n            var factor = min/currentMin;\n            for(var i=0;i< y.length;i++){\n                y[i] = input[i]*factor;\n            }\n        }\n    }\n    return y;\n}\n\nmodule.exports = {\n    coordArrayToPoints: coordArrayToPoints,\n    coordArrayToCoordMatrix: coordArrayToCoordMatrix,\n    coordMatrixToCoordArray: coordMatrixToCoordArray,\n    coordMatrixToPoints: transpose,\n    pointsToCoordArray: pointsToCoordArray,\n    pointsToCoordMatrix: transpose,\n    applyDotProduct: applyDotProduct,\n    scale:scale\n};\n\n","'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n","'use strict';\n\n/**\n *\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param x - sorted increasing x values\n * @param y\n * @param options\n * @returns {Array} new array with the equally spaced data.\n *\n */\nfunction getEquallySpacedData(x, y, options) {\n    if (x.length>1 && x[0]>x[1]) {\n        x=x.slice().reverse();\n        y=y.slice().reverse();\n    }\n\n    var xLength = x.length;\n    if(xLength !== y.length)\n        throw new RangeError(\"the x and y vector doesn't have the same size.\");\n\n    if (options === undefined) options = {};\n\n    var from = options.from === undefined ? x[0] : options.from\n    if (isNaN(from) || !isFinite(from)) {\n        throw new RangeError(\"'From' value must be a number\");\n    }\n    var to = options.to === undefined ? x[x.length - 1] : options.to;\n    if (isNaN(to) || !isFinite(to)) {\n        throw new RangeError(\"'To' value must be a number\");\n    }\n\n    var reverse = from > to;\n    if(reverse) {\n        var temp = from;\n        from = to;\n        to = temp;\n    }\n\n    var numberOfPoints = options.numberOfPoints === undefined ? 100 : options.numberOfPoints;\n    if (isNaN(numberOfPoints) || !isFinite(numberOfPoints)) {\n        throw new RangeError(\"'Number of points' value must be a number\");\n    }\n    if(numberOfPoints < 1)\n        throw new RangeError(\"the number of point must be higher than 1\");\n\n    var algorithm = options.variant === \"slot\" ? \"slot\" : \"smooth\"; // default value: smooth\n\n    var output = algorithm === \"slot\" ? getEquallySpacedSlot(x, y, from, to, numberOfPoints) : getEquallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n    return reverse ? output.reverse() : output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nfunction getEquallySpacedSmooth(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    var initialOriginalStep = x[1] - x[0];\n    var lastOriginalStep = x[x.length - 1] - x[x.length - 2];\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = Number.MIN_VALUE;\n    var previousY = 0;\n    var nextX = x[0] - initialOriginalStep;\n    var nextY = 0;\n\n    var currentValue = 0;\n    var slope = 0;\n    var intercept = 0;\n    var sumAtMin = 0;\n    var sumAtMax = 0;\n\n    var i = 0; // index of input\n    var j = 0; // index of output\n\n    function getSlope(x0, y0, x1, y1) {\n        return (y1 - y0) / (x1 - x0);\n    }\n\n    main: while(true) {\n        while (nextX - max >= 0) {\n            // no overlap with original point, just consume current value\n            var add = integral(0, max - previousX, slope, previousY);\n            sumAtMax = currentValue + add;\n\n            output[j] = (sumAtMax - sumAtMin) / step;\n            j++;\n\n            if (j === numberOfPoints)\n                break main;\n\n            min = max;\n            max += step;\n            sumAtMin = sumAtMax;\n        }\n\n        if(previousX <= min && min <= nextX) {\n            add = integral(0, min - previousX, slope, previousY);\n            sumAtMin = currentValue + add;\n        }\n\n        currentValue += integral(previousX, nextX, slope, intercept);\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else if (i === xLength) {\n            nextX += lastOriginalStep;\n            nextY = 0;\n        }\n        // updating parameters\n        slope = getSlope(previousX, previousY, nextX, nextY);\n        intercept = -slope*previousX + previousY;\n    }\n\n    return output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nfunction getEquallySpacedSlot(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n    var lastStep = x[x.length - 1] - x[x.length - 2];\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = -Number.MAX_VALUE;\n    var previousY = 0;\n    var nextX = x[0];\n    var nextY = y[0];\n    var frontOutsideSpectra = 0;\n    var backOutsideSpectra = true;\n\n    var currentValue = 0;\n\n    // for slot algorithm\n    var currentPoints = 0;\n\n    var i = 1; // index of input\n    var j = 0; // index of output\n\n    main: while(true) {\n        if (previousX>=nextX) throw (new Error('x must be an increasing serie'));\n        while (previousX - max > 0) {\n            // no overlap with original point, just consume current value\n            if(backOutsideSpectra) {\n                currentPoints++;\n                backOutsideSpectra = false;\n            }\n\n            output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n            j++;\n\n            if (j === numberOfPoints)\n                break main;\n\n            min = max;\n            max += step;\n            currentValue = 0;\n            currentPoints = 0;\n        }\n\n        if(previousX > min) {\n            currentValue += previousY;\n            currentPoints++;\n        }\n\n        if(previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1)\n            currentPoints--;\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else {\n            nextX += lastStep;\n            nextY = 0;\n            frontOutsideSpectra++;\n        }\n    }\n\n    return output;\n}\n/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n *\n * @param x0\n * @param x1\n * @param slope\n * @param intercept\n * @returns {number} integral value.\n */\nfunction integral(x0, x1, slope, intercept) {\n    return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);\n}\n\nexports.getEquallySpacedData = getEquallySpacedData;\nexports.integral = integral;","'use strict';\n\nexports.SNV = SNV;\nvar Stat = require('ml-stat').array;\n\n/**\n * Function that applies the standard normal variate (SNV) to an array of values.\n *\n * @param data - Array of values.\n * @returns {Array} - applied the SNV.\n */\nfunction SNV(data) {\n    var mean = Stat.mean(data);\n    var std = Stat.standardDeviation(data);\n    var result = data.slice();\n    for (var i = 0; i < data.length; i++) {\n        result[i] = (result[i] - mean) / std;\n    }\n    return result;\n}\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixTransposeView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.columns, matrix.rows);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(columnIndex, rowIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(columnIndex, rowIndex);\n    }\n}\n\nmodule.exports = MatrixTransposeView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixRowView extends BaseView {\n    constructor(matrix, row) {\n        super(matrix, 1, matrix.columns);\n        this.row = row;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.row, columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.row, columnIndex);\n    }\n}\n\nmodule.exports = MatrixRowView;\n","'use strict';\n\nvar BaseView = require('./base');\nvar util = require('../util');\n\nclass MatrixSubView extends BaseView {\n    constructor(matrix, startRow, endRow, startColumn, endColumn) {\n        util.checkRange(matrix, startRow, endRow, startColumn, endColumn);\n        super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n        this.startRow = startRow;\n        this.startColumn = startColumn;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.startRow + rowIndex, this.startColumn + columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.startRow + rowIndex, this.startColumn + columnIndex);\n    }\n}\n\nmodule.exports = MatrixSubView;\n","'use strict';\n\nvar BaseView = require('./base');\nvar util = require('../util');\n\nclass MatrixSelectionView extends BaseView {\n    constructor(matrix, rowIndices, columnIndices) {\n        var indices = util.checkIndices(matrix, rowIndices, columnIndices);\n        super(matrix, indices.row.length, indices.column.length);\n        this.rowIndices = indices.row;\n        this.columnIndices = indices.column;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.rowIndices[rowIndex], this.columnIndices[columnIndex], value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.rowIndices[rowIndex], this.columnIndices[columnIndex]);\n    }\n}\n\nmodule.exports = MatrixSelectionView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixColumnView extends BaseView {\n    constructor(matrix, column) {\n        super(matrix, matrix.rows, 1);\n        this.column = column;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(rowIndex, this.column, value);\n        return this;\n    }\n\n    get(rowIndex) {\n        return this.matrix.get(rowIndex, this.column);\n    }\n}\n\nmodule.exports = MatrixColumnView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixFlipRowView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.rows, matrix.columns);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n    }\n}\n\nmodule.exports = MatrixFlipRowView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixFlipColumnView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.rows, matrix.columns);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n    }\n}\n\nmodule.exports = MatrixFlipColumnView;\n","'use strict';\n\nvar Matrix = require('./matrix').Matrix;\n\nvar SingularValueDecomposition = require('./dc/svd');\nvar EigenvalueDecomposition = require('./dc/evd');\nvar LuDecomposition = require('./dc/lu');\nvar QrDecomposition = require('./dc/qr');\nvar CholeskyDecomposition = require('./dc/cholesky');\n\nfunction inverse(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    return solve(matrix, Matrix.eye(matrix.rows));\n}\n\n/**\n * Returns the inverse\n * @memberOf Matrix\n * @static\n * @param {Matrix} matrix\n * @return {Matrix} matrix\n * @alias inv\n */\nMatrix.inverse = Matrix.inv = inverse;\n\n/**\n * Returns the inverse\n * @memberOf Matrix\n * @static\n * @param {Matrix} matrix\n * @return {Matrix} matrix\n * @alias inv\n */\nMatrix.prototype.inverse = Matrix.prototype.inv = function () {\n    return inverse(this);\n};\n\nfunction solve(leftHandSide, rightHandSide) {\n    leftHandSide = Matrix.checkMatrix(leftHandSide);\n    rightHandSide = Matrix.checkMatrix(rightHandSide);\n    return leftHandSide.isSquare() ? new LuDecomposition(leftHandSide).solve(rightHandSide) : new QrDecomposition(leftHandSide).solve(rightHandSide);\n}\n\nMatrix.solve = solve;\nMatrix.prototype.solve = function (other) {\n    return solve(this, other);\n};\n\nmodule.exports = {\n    SingularValueDecomposition: SingularValueDecomposition,\n    SVD: SingularValueDecomposition,\n    EigenvalueDecomposition: EigenvalueDecomposition,\n    EVD: EigenvalueDecomposition,\n    LuDecomposition: LuDecomposition,\n    LU: LuDecomposition,\n    QrDecomposition: QrDecomposition,\n    QR: QrDecomposition,\n    CholeskyDecomposition: CholeskyDecomposition,\n    CHO: CholeskyDecomposition,\n    inverse: inverse,\n    solve: solve\n};\n","'use strict';\n\nconst Matrix = require('../matrix').Matrix;\nconst util = require('./util');\nconst hypotenuse = util.hypotenuse;\nconst getFilled2DArray = util.getFilled2DArray;\n\nconst defaultOptions = {\n    assumeSymmetric: false\n};\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\nfunction EigenvalueDecomposition(matrix, options) {\n    options = Object.assign({}, defaultOptions, options);\n    if (!(this instanceof EigenvalueDecomposition)) {\n        return new EigenvalueDecomposition(matrix, options);\n    }\n    matrix = Matrix.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n        throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns,\n        V = getFilled2DArray(n, n, 0),\n        d = new Array(n),\n        e = new Array(n),\n        value = matrix,\n        i, j;\n\n    var isSymmetric = false;\n    if (options.assumeSymmetric) {\n        isSymmetric = true;\n    } else {\n        isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                V[i][j] = value.get(i, j);\n            }\n        }\n        tred2(n, e, d, V);\n        tql2(n, e, d, V);\n    } else {\n        var H = getFilled2DArray(n, n, 0),\n            ort = new Array(n);\n        for (j = 0; j < n; j++) {\n            for (i = 0; i < n; i++) {\n                H[i][j] = value.get(i, j);\n            }\n        }\n        orthes(n, H, ort, V);\n        hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n}\n\nEigenvalueDecomposition.prototype = {\n    get realEigenvalues() {\n        return this.d;\n    },\n    get imaginaryEigenvalues() {\n        return this.e;\n    },\n    get eigenvectorMatrix() {\n        if (!Matrix.isMatrix(this.V)) {\n            this.V = new Matrix(this.V);\n        }\n        return this.V;\n    },\n    get diagonalMatrix() {\n        var n = this.n,\n            e = this.e,\n            d = this.d,\n            X = new Matrix(n, n),\n            i, j;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                X[i][j] = 0;\n            }\n            X[i][i] = d[i];\n            if (e[i] > 0) {\n                X[i][i + 1] = e[i];\n            } else if (e[i] < 0) {\n                X[i][i - 1] = e[i];\n            }\n        }\n        return X;\n    }\n};\n\nfunction tred2(n, e, d, V) {\n\n    var f, g, h, i, j, k,\n        hh, scale;\n\n    for (j = 0; j < n; j++) {\n        d[j] = V[n - 1][j];\n    }\n\n    for (i = n - 1; i > 0; i--) {\n        scale = 0;\n        h = 0;\n        for (k = 0; k < i; k++) {\n            scale = scale + Math.abs(d[k]);\n        }\n\n        if (scale === 0) {\n            e[i] = d[i - 1];\n            for (j = 0; j < i; j++) {\n                d[j] = V[i - 1][j];\n                V[i][j] = 0;\n                V[j][i] = 0;\n            }\n        } else {\n            for (k = 0; k < i; k++) {\n                d[k] /= scale;\n                h += d[k] * d[k];\n            }\n\n            f = d[i - 1];\n            g = Math.sqrt(h);\n            if (f > 0) {\n                g = -g;\n            }\n\n            e[i] = scale * g;\n            h = h - f * g;\n            d[i - 1] = f - g;\n            for (j = 0; j < i; j++) {\n                e[j] = 0;\n            }\n\n            for (j = 0; j < i; j++) {\n                f = d[j];\n                V[j][i] = f;\n                g = e[j] + V[j][j] * f;\n                for (k = j + 1; k <= i - 1; k++) {\n                    g += V[k][j] * d[k];\n                    e[k] += V[k][j] * f;\n                }\n                e[j] = g;\n            }\n\n            f = 0;\n            for (j = 0; j < i; j++) {\n                e[j] /= h;\n                f += e[j] * d[j];\n            }\n\n            hh = f / (h + h);\n            for (j = 0; j < i; j++) {\n                e[j] -= hh * d[j];\n            }\n\n            for (j = 0; j < i; j++) {\n                f = d[j];\n                g = e[j];\n                for (k = j; k <= i - 1; k++) {\n                    V[k][j] -= (f * e[k] + g * d[k]);\n                }\n                d[j] = V[i - 1][j];\n                V[i][j] = 0;\n            }\n        }\n        d[i] = h;\n    }\n\n    for (i = 0; i < n - 1; i++) {\n        V[n - 1][i] = V[i][i];\n        V[i][i] = 1;\n        h = d[i + 1];\n        if (h !== 0) {\n            for (k = 0; k <= i; k++) {\n                d[k] = V[k][i + 1] / h;\n            }\n\n            for (j = 0; j <= i; j++) {\n                g = 0;\n                for (k = 0; k <= i; k++) {\n                    g += V[k][i + 1] * V[k][j];\n                }\n                for (k = 0; k <= i; k++) {\n                    V[k][j] -= g * d[k];\n                }\n            }\n        }\n\n        for (k = 0; k <= i; k++) {\n            V[k][i + 1] = 0;\n        }\n    }\n\n    for (j = 0; j < n; j++) {\n        d[j] = V[n - 1][j];\n        V[n - 1][j] = 0;\n    }\n\n    V[n - 1][n - 1] = 1;\n    e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n\n    var g, h, i, j, k, l, m, p, r,\n        dl1, c, c2, c3, el1, s, s2,\n        iter;\n\n    for (i = 1; i < n; i++) {\n        e[i - 1] = e[i];\n    }\n\n    e[n - 1] = 0;\n\n    var f = 0,\n        tst1 = 0,\n        eps = Math.pow(2, -52);\n\n    for (l = 0; l < n; l++) {\n        tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n        m = l;\n        while (m < n) {\n            if (Math.abs(e[m]) <= eps * tst1) {\n                break;\n            }\n            m++;\n        }\n\n        if (m > l) {\n            iter = 0;\n            do {\n                iter = iter + 1;\n\n                g = d[l];\n                p = (d[l + 1] - g) / (2 * e[l]);\n                r = hypotenuse(p, 1);\n                if (p < 0) {\n                    r = -r;\n                }\n\n                d[l] = e[l] / (p + r);\n                d[l + 1] = e[l] * (p + r);\n                dl1 = d[l + 1];\n                h = g - d[l];\n                for (i = l + 2; i < n; i++) {\n                    d[i] -= h;\n                }\n\n                f = f + h;\n\n                p = d[m];\n                c = 1;\n                c2 = c;\n                c3 = c;\n                el1 = e[l + 1];\n                s = 0;\n                s2 = 0;\n                for (i = m - 1; i >= l; i--) {\n                    c3 = c2;\n                    c2 = c;\n                    s2 = s;\n                    g = c * e[i];\n                    h = c * p;\n                    r = hypotenuse(p, e[i]);\n                    e[i + 1] = s * r;\n                    s = e[i] / r;\n                    c = p / r;\n                    p = c * d[i] - s * g;\n                    d[i + 1] = h + s * (c * g + s * d[i]);\n\n                    for (k = 0; k < n; k++) {\n                        h = V[k][i + 1];\n                        V[k][i + 1] = s * V[k][i] + c * h;\n                        V[k][i] = c * V[k][i] - s * h;\n                    }\n                }\n\n                p = -s * s2 * c3 * el1 * e[l] / dl1;\n                e[l] = s * p;\n                d[l] = c * p;\n\n            }\n            while (Math.abs(e[l]) > eps * tst1);\n        }\n        d[l] = d[l] + f;\n        e[l] = 0;\n    }\n\n    for (i = 0; i < n - 1; i++) {\n        k = i;\n        p = d[i];\n        for (j = i + 1; j < n; j++) {\n            if (d[j] < p) {\n                k = j;\n                p = d[j];\n            }\n        }\n\n        if (k !== i) {\n            d[k] = d[i];\n            d[i] = p;\n            for (j = 0; j < n; j++) {\n                p = V[j][i];\n                V[j][i] = V[j][k];\n                V[j][k] = p;\n            }\n        }\n    }\n}\n\nfunction orthes(n, H, ort, V) {\n\n    var low = 0,\n        high = n - 1,\n        f, g, h, i, j, m,\n        scale;\n\n    for (m = low + 1; m <= high - 1; m++) {\n        scale = 0;\n        for (i = m; i <= high; i++) {\n            scale = scale + Math.abs(H[i][m - 1]);\n        }\n\n        if (scale !== 0) {\n            h = 0;\n            for (i = high; i >= m; i--) {\n                ort[i] = H[i][m - 1] / scale;\n                h += ort[i] * ort[i];\n            }\n\n            g = Math.sqrt(h);\n            if (ort[m] > 0) {\n                g = -g;\n            }\n\n            h = h - ort[m] * g;\n            ort[m] = ort[m] - g;\n\n            for (j = m; j < n; j++) {\n                f = 0;\n                for (i = high; i >= m; i--) {\n                    f += ort[i] * H[i][j];\n                }\n\n                f = f / h;\n                for (i = m; i <= high; i++) {\n                    H[i][j] -= f * ort[i];\n                }\n            }\n\n            for (i = 0; i <= high; i++) {\n                f = 0;\n                for (j = high; j >= m; j--) {\n                    f += ort[j] * H[i][j];\n                }\n\n                f = f / h;\n                for (j = m; j <= high; j++) {\n                    H[i][j] -= f * ort[j];\n                }\n            }\n\n            ort[m] = scale * ort[m];\n            H[m][m - 1] = scale * g;\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            V[i][j] = (i === j ? 1 : 0);\n        }\n    }\n\n    for (m = high - 1; m >= low + 1; m--) {\n        if (H[m][m - 1] !== 0) {\n            for (i = m + 1; i <= high; i++) {\n                ort[i] = H[i][m - 1];\n            }\n\n            for (j = m; j <= high; j++) {\n                g = 0;\n                for (i = m; i <= high; i++) {\n                    g += ort[i] * V[i][j];\n                }\n\n                g = (g / ort[m]) / H[m][m - 1];\n                for (i = m; i <= high; i++) {\n                    V[i][j] += g * ort[i];\n                }\n            }\n        }\n    }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n    var n = nn - 1,\n        low = 0,\n        high = nn - 1,\n        eps = Math.pow(2, -52),\n        exshift = 0,\n        norm = 0,\n        p = 0,\n        q = 0,\n        r = 0,\n        s = 0,\n        z = 0,\n        iter = 0,\n        i, j, k, l, m, t, w, x, y,\n        ra, sa, vr, vi,\n        notlast, cdivres;\n\n    for (i = 0; i < nn; i++) {\n        if (i < low || i > high) {\n            d[i] = H[i][i];\n            e[i] = 0;\n        }\n\n        for (j = Math.max(i - 1, 0); j < nn; j++) {\n            norm = norm + Math.abs(H[i][j]);\n        }\n    }\n\n    while (n >= low) {\n        l = n;\n        while (l > low) {\n            s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n            if (s === 0) {\n                s = norm;\n            }\n            if (Math.abs(H[l][l - 1]) < eps * s) {\n                break;\n            }\n            l--;\n        }\n\n        if (l === n) {\n            H[n][n] = H[n][n] + exshift;\n            d[n] = H[n][n];\n            e[n] = 0;\n            n--;\n            iter = 0;\n        } else if (l === n - 1) {\n            w = H[n][n - 1] * H[n - 1][n];\n            p = (H[n - 1][n - 1] - H[n][n]) / 2;\n            q = p * p + w;\n            z = Math.sqrt(Math.abs(q));\n            H[n][n] = H[n][n] + exshift;\n            H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n            x = H[n][n];\n\n            if (q >= 0) {\n                z = (p >= 0) ? (p + z) : (p - z);\n                d[n - 1] = x + z;\n                d[n] = d[n - 1];\n                if (z !== 0) {\n                    d[n] = x - w / z;\n                }\n                e[n - 1] = 0;\n                e[n] = 0;\n                x = H[n][n - 1];\n                s = Math.abs(x) + Math.abs(z);\n                p = x / s;\n                q = z / s;\n                r = Math.sqrt(p * p + q * q);\n                p = p / r;\n                q = q / r;\n\n                for (j = n - 1; j < nn; j++) {\n                    z = H[n - 1][j];\n                    H[n - 1][j] = q * z + p * H[n][j];\n                    H[n][j] = q * H[n][j] - p * z;\n                }\n\n                for (i = 0; i <= n; i++) {\n                    z = H[i][n - 1];\n                    H[i][n - 1] = q * z + p * H[i][n];\n                    H[i][n] = q * H[i][n] - p * z;\n                }\n\n                for (i = low; i <= high; i++) {\n                    z = V[i][n - 1];\n                    V[i][n - 1] = q * z + p * V[i][n];\n                    V[i][n] = q * V[i][n] - p * z;\n                }\n            } else {\n                d[n - 1] = x + p;\n                d[n] = x + p;\n                e[n - 1] = z;\n                e[n] = -z;\n            }\n\n            n = n - 2;\n            iter = 0;\n        } else {\n            x = H[n][n];\n            y = 0;\n            w = 0;\n            if (l < n) {\n                y = H[n - 1][n - 1];\n                w = H[n][n - 1] * H[n - 1][n];\n            }\n\n            if (iter === 10) {\n                exshift += x;\n                for (i = low; i <= n; i++) {\n                    H[i][i] -= x;\n                }\n                s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n                x = y = 0.75 * s;\n                w = -0.4375 * s * s;\n            }\n\n            if (iter === 30) {\n                s = (y - x) / 2;\n                s = s * s + w;\n                if (s > 0) {\n                    s = Math.sqrt(s);\n                    if (y < x) {\n                        s = -s;\n                    }\n                    s = x - w / ((y - x) / 2 + s);\n                    for (i = low; i <= n; i++) {\n                        H[i][i] -= s;\n                    }\n                    exshift += s;\n                    x = y = w = 0.964;\n                }\n            }\n\n            iter = iter + 1;\n\n            m = n - 2;\n            while (m >= l) {\n                z = H[m][m];\n                r = x - z;\n                s = y - z;\n                p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n                q = H[m + 1][m + 1] - z - r - s;\n                r = H[m + 2][m + 1];\n                s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n                p = p / s;\n                q = q / s;\n                r = r / s;\n                if (m === l) {\n                    break;\n                }\n                if (Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) < eps * (Math.abs(p) * (Math.abs(H[m - 1][m - 1]) + Math.abs(z) + Math.abs(H[m + 1][m + 1])))) {\n                    break;\n                }\n                m--;\n            }\n\n            for (i = m + 2; i <= n; i++) {\n                H[i][i - 2] = 0;\n                if (i > m + 2) {\n                    H[i][i - 3] = 0;\n                }\n            }\n\n            for (k = m; k <= n - 1; k++) {\n                notlast = (k !== n - 1);\n                if (k !== m) {\n                    p = H[k][k - 1];\n                    q = H[k + 1][k - 1];\n                    r = (notlast ? H[k + 2][k - 1] : 0);\n                    x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n                    if (x !== 0) {\n                        p = p / x;\n                        q = q / x;\n                        r = r / x;\n                    }\n                }\n\n                if (x === 0) {\n                    break;\n                }\n\n                s = Math.sqrt(p * p + q * q + r * r);\n                if (p < 0) {\n                    s = -s;\n                }\n\n                if (s !== 0) {\n                    if (k !== m) {\n                        H[k][k - 1] = -s * x;\n                    } else if (l !== m) {\n                        H[k][k - 1] = -H[k][k - 1];\n                    }\n\n                    p = p + s;\n                    x = p / s;\n                    y = q / s;\n                    z = r / s;\n                    q = q / p;\n                    r = r / p;\n\n                    for (j = k; j < nn; j++) {\n                        p = H[k][j] + q * H[k + 1][j];\n                        if (notlast) {\n                            p = p + r * H[k + 2][j];\n                            H[k + 2][j] = H[k + 2][j] - p * z;\n                        }\n\n                        H[k][j] = H[k][j] - p * x;\n                        H[k + 1][j] = H[k + 1][j] - p * y;\n                    }\n\n                    for (i = 0; i <= Math.min(n, k + 3); i++) {\n                        p = x * H[i][k] + y * H[i][k + 1];\n                        if (notlast) {\n                            p = p + z * H[i][k + 2];\n                            H[i][k + 2] = H[i][k + 2] - p * r;\n                        }\n\n                        H[i][k] = H[i][k] - p;\n                        H[i][k + 1] = H[i][k + 1] - p * q;\n                    }\n\n                    for (i = low; i <= high; i++) {\n                        p = x * V[i][k] + y * V[i][k + 1];\n                        if (notlast) {\n                            p = p + z * V[i][k + 2];\n                            V[i][k + 2] = V[i][k + 2] - p * r;\n                        }\n\n                        V[i][k] = V[i][k] - p;\n                        V[i][k + 1] = V[i][k + 1] - p * q;\n                    }\n                }\n            }\n        }\n    }\n\n    if (norm === 0) {\n        return;\n    }\n\n    for (n = nn - 1; n >= 0; n--) {\n        p = d[n];\n        q = e[n];\n\n        if (q === 0) {\n            l = n;\n            H[n][n] = 1;\n            for (i = n - 1; i >= 0; i--) {\n                w = H[i][i] - p;\n                r = 0;\n                for (j = l; j <= n; j++) {\n                    r = r + H[i][j] * H[j][n];\n                }\n\n                if (e[i] < 0) {\n                    z = w;\n                    s = r;\n                } else {\n                    l = i;\n                    if (e[i] === 0) {\n                        H[i][n] = (w !== 0) ? (-r / w) : (-r / (eps * norm));\n                    } else {\n                        x = H[i][i + 1];\n                        y = H[i + 1][i];\n                        q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n                        t = (x * s - z * r) / q;\n                        H[i][n] = t;\n                        H[i + 1][n] = (Math.abs(x) > Math.abs(z)) ? ((-r - w * t) / x) : ((-s - y * t) / z);\n                    }\n\n                    t = Math.abs(H[i][n]);\n                    if ((eps * t) * t > 1) {\n                        for (j = i; j <= n; j++) {\n                            H[j][n] = H[j][n] / t;\n                        }\n                    }\n                }\n            }\n        } else if (q < 0) {\n            l = n - 1;\n\n            if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n                H[n - 1][n - 1] = q / H[n][n - 1];\n                H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n            } else {\n                cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n                H[n - 1][n - 1] = cdivres[0];\n                H[n - 1][n] = cdivres[1];\n            }\n\n            H[n][n - 1] = 0;\n            H[n][n] = 1;\n            for (i = n - 2; i >= 0; i--) {\n                ra = 0;\n                sa = 0;\n                for (j = l; j <= n; j++) {\n                    ra = ra + H[i][j] * H[j][n - 1];\n                    sa = sa + H[i][j] * H[j][n];\n                }\n\n                w = H[i][i] - p;\n\n                if (e[i] < 0) {\n                    z = w;\n                    r = ra;\n                    s = sa;\n                } else {\n                    l = i;\n                    if (e[i] === 0) {\n                        cdivres = cdiv(-ra, -sa, w, q);\n                        H[i][n - 1] = cdivres[0];\n                        H[i][n] = cdivres[1];\n                    } else {\n                        x = H[i][i + 1];\n                        y = H[i + 1][i];\n                        vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n                        vi = (d[i] - p) * 2 * q;\n                        if (vr === 0 && vi === 0) {\n                            vr = eps * norm * (Math.abs(w) + Math.abs(q) + Math.abs(x) + Math.abs(y) + Math.abs(z));\n                        }\n                        cdivres = cdiv(x * r - z * ra + q * sa, x * s - z * sa - q * ra, vr, vi);\n                        H[i][n - 1] = cdivres[0];\n                        H[i][n] = cdivres[1];\n                        if (Math.abs(x) > (Math.abs(z) + Math.abs(q))) {\n                            H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n                            H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n                        } else {\n                            cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n                            H[i + 1][n - 1] = cdivres[0];\n                            H[i + 1][n] = cdivres[1];\n                        }\n                    }\n\n                    t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n                    if ((eps * t) * t > 1) {\n                        for (j = i; j <= n; j++) {\n                            H[j][n - 1] = H[j][n - 1] / t;\n                            H[j][n] = H[j][n] / t;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (i = 0; i < nn; i++) {\n        if (i < low || i > high) {\n            for (j = i; j < nn; j++) {\n                V[i][j] = H[i][j];\n            }\n        }\n    }\n\n    for (j = nn - 1; j >= low; j--) {\n        for (i = low; i <= high; i++) {\n            z = 0;\n            for (k = low; k <= Math.min(j, high); k++) {\n                z = z + V[i][k] * H[k][j];\n            }\n            V[i][j] = z;\n        }\n    }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n    var r, d;\n    if (Math.abs(yr) > Math.abs(yi)) {\n        r = yi / yr;\n        d = yr + r * yi;\n        return [(xr + r * xi) / d, (xi - r * xr) / d];\n    } else {\n        r = yr / yi;\n        d = yi + r * yr;\n        return [(r * xr + xi) / d, (r * xi - xr) / d];\n    }\n}\n\nmodule.exports = EigenvalueDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix').Matrix;\nvar hypotenuse = require('./util').hypotenuse;\n\n//https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\nfunction QrDecomposition(value) {\n    if (!(this instanceof QrDecomposition)) {\n        return new QrDecomposition(value);\n    }\n    value = Matrix.checkMatrix(value);\n\n    var qr = value.clone(),\n        m = value.rows,\n        n = value.columns,\n        rdiag = new Array(n),\n        i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n        var nrm = 0;\n        for (i = k; i < m; i++) {\n            nrm = hypotenuse(nrm, qr[i][k]);\n        }\n        if (nrm !== 0) {\n            if (qr[k][k] < 0) {\n                nrm = -nrm;\n            }\n            for (i = k; i < m; i++) {\n                qr[i][k] /= nrm;\n            }\n            qr[k][k] += 1;\n            for (j = k + 1; j < n; j++) {\n                s = 0;\n                for (i = k; i < m; i++) {\n                    s += qr[i][k] * qr[i][j];\n                }\n                s = -s / qr[k][k];\n                for (i = k; i < m; i++) {\n                    qr[i][j] += s * qr[i][k];\n                }\n            }\n        }\n        rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n}\n\nQrDecomposition.prototype = {\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var qr = this.QR,\n            m = qr.rows;\n\n        if (value.rows !== m) {\n            throw new Error('Matrix row dimensions must agree');\n        }\n        if (!this.isFullRank()) {\n            throw new Error('Matrix is rank deficient');\n        }\n\n        var count = value.columns;\n        var X = value.clone();\n        var n = qr.columns;\n        var i, j, k, s;\n\n        for (k = 0; k < n; k++) {\n            for (j = 0; j < count; j++) {\n                s = 0;\n                for (i = k; i < m; i++) {\n                    s += qr[i][k] * X[i][j];\n                }\n                s = -s / qr[k][k];\n                for (i = k; i < m; i++) {\n                    X[i][j] += s * qr[i][k];\n                }\n            }\n        }\n        for (k = n - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                X[k][j] /= this.Rdiag[k];\n            }\n            for (i = 0; i < k; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * qr[i][k];\n                }\n            }\n        }\n\n        return X.subMatrix(0, n - 1, 0, count - 1);\n    },\n    isFullRank: function () {\n        var columns = this.QR.columns;\n        for (var i = 0; i < columns; i++) {\n            if (this.Rdiag[i] === 0) {\n                return false;\n            }\n        }\n        return true;\n    },\n    get upperTriangularMatrix() {\n        var qr = this.QR,\n            n = qr.columns,\n            X = new Matrix(n, n),\n            i, j;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                if (i < j) {\n                    X[i][j] = qr[i][j];\n                } else if (i === j) {\n                    X[i][j] = this.Rdiag[i];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get orthogonalMatrix() {\n        var qr = this.QR,\n            rows = qr.rows,\n            columns = qr.columns,\n            X = new Matrix(rows, columns),\n            i, j, k, s;\n\n        for (k = columns - 1; k >= 0; k--) {\n            for (i = 0; i < rows; i++) {\n                X[i][k] = 0;\n            }\n            X[k][k] = 1;\n            for (j = k; j < columns; j++) {\n                if (qr[k][k] !== 0) {\n                    s = 0;\n                    for (i = k; i < rows; i++) {\n                        s += qr[i][k] * X[i][j];\n                    }\n\n                    s = -s / qr[k][k];\n\n                    for (i = k; i < rows; i++) {\n                        X[i][j] += s * qr[i][k];\n                    }\n                }\n            }\n        }\n        return X;\n    }\n};\n\nmodule.exports = QrDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix').Matrix;\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\nfunction CholeskyDecomposition(value) {\n    if (!(this instanceof CholeskyDecomposition)) {\n        return new CholeskyDecomposition(value);\n    }\n    value = Matrix.checkMatrix(value);\n    if (!value.isSymmetric()) {\n        throw new Error('Matrix is not symmetric');\n    }\n\n    var a = value,\n        dimension = a.rows,\n        l = new Matrix(dimension, dimension),\n        positiveDefinite = true,\n        i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n        var Lrowj = l[j];\n        var d = 0;\n        for (k = 0; k < j; k++) {\n            var Lrowk = l[k];\n            var s = 0;\n            for (i = 0; i < k; i++) {\n                s += Lrowk[i] * Lrowj[i];\n            }\n            Lrowj[k] = s = (a[j][k] - s) / l[k][k];\n            d = d + s * s;\n        }\n\n        d = a[j][j] - d;\n\n        positiveDefinite &= (d > 0);\n        l[j][j] = Math.sqrt(Math.max(d, 0));\n        for (k = j + 1; k < dimension; k++) {\n            l[j][k] = 0;\n        }\n    }\n\n    if (!positiveDefinite) {\n        throw new Error('Matrix is not positive definite');\n    }\n\n    this.L = l;\n}\n\nCholeskyDecomposition.prototype = {\n    get lowerTriangularMatrix() {\n        return this.L;\n    },\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var l = this.L,\n            dimension = l.rows;\n\n        if (value.rows !== dimension) {\n            throw new Error('Matrix dimensions do not match');\n        }\n\n        var count = value.columns,\n            B = value.clone(),\n            i, j, k;\n\n        for (k = 0; k < dimension; k++) {\n            for (j = 0; j < count; j++) {\n                for (i = 0; i < k; i++) {\n                    B[k][j] -= B[i][j] * l[k][i];\n                }\n                B[k][j] /= l[k][k];\n            }\n        }\n\n        for (k = dimension - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                for (i = k + 1; i < dimension; i++) {\n                    B[k][j] -= B[i][j] * l[i][k];\n                }\n                B[k][j] /= l[k][k];\n            }\n        }\n\n        return B;\n    }\n};\n\nmodule.exports = CholeskyDecomposition;\n","'use strict';\n\nvar Opt = require('ml-optimize-lorentzian');\n\n/**\n * This function try to join the peaks that seems to belong to a broad signal in a single broad peak.\n * @param peakList\n * @param options\n */\nmodule.exports = function joinBroadPeaks(peakList, options = {}) {\n  var width = options.width;\n  var broadLines = [];\n  // Optimize the possible broad lines\n  var max = 0;\n\n  var maxI = 0;\n\n  var count = 1;\n  for (let i = peakList.length - 1; i >= 0; i--) {\n    if (peakList[i].soft) {\n      broadLines.push(peakList.splice(i, 1)[0]);\n    }\n  }\n  // Push a feak peak\n  broadLines.push({ x: Number.MAX_VALUE });\n\n  var candidates = [[broadLines[0].x, broadLines[0].y]];\n  var indexes = [0];\n\n  for (let i = 1; i < broadLines.length; i++) {\n    // console.log(broadLines[i-1].x+\" \"+broadLines[i].x);\n    if (Math.abs(broadLines[i - 1].x - broadLines[i].x) < width) {\n      candidates.push([broadLines[i].x, broadLines[i].y]);\n      if (broadLines[i].y > max) {\n        max = broadLines[i].y;\n        maxI = i;\n      }\n      indexes.push(i);\n      count++;\n    } else {\n      if (count > 2) {\n        var fitted = Opt.optimizeSingleLorentzian(candidates, {\n          x: broadLines[maxI].x,\n          y: max,\n          width: Math.abs(\n            candidates[0][0] - candidates[candidates.length - 1][0]\n          )\n        });\n        peakList.push({\n          x: fitted[0][0],\n          y: fitted[1][0],\n          width: fitted[2][0],\n          soft: false\n        });\n      } else {\n        // Put back the candidates to the signals list\n        indexes.forEach((index) => {\n          peakList.push(broadLines[index]);\n        });\n      }\n      candidates = [[broadLines[i].x, broadLines[i].y]];\n      indexes = [i];\n      max = broadLines[i].y;\n      maxI = i;\n      count = 1;\n    }\n  }\n\n  peakList.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return peakList;\n};\n","'use strict';\n\n/**\n * This method will allow to enlarge peaks and prevent overlap between peaks\n * Because peaks may not be symmetric after we add 2 properties, from and to.\n * @param {Array} peakList\n * @param {object} [options={}]\n * @param {number} [factor=2]\n * @param {boolean} [overlap=false] by default we don't allow overlap\n * @return {Array} peakList\n */\nmodule.exports = function broadenPeaks(peakList, options = {}) {\n  const { factor = 2, overlap = false } = options;\n\n  for (let peak of peakList) {\n    peak.from = peak.x - (peak.width / 2) * factor;\n    peak.to = peak.x + (peak.width / 2) * factor;\n  }\n\n  if (!overlap) {\n    for (let i = 0; i < peakList.length - 1; i++) {\n      let peak = peakList[i];\n      let nextPeak = peakList[i + 1];\n      if (peak.to > nextPeak.from) {\n        peak.to = nextPeak.from = (peak.to + nextPeak.from) / 2;\n      }\n    }\n  }\n\n  for (let peak of peakList) {\n    peak.width = peak.to - peak.from;\n  }\n\n  return peakList;\n};\n","'use strict';\n\nmodule.exports = exports = require('./ArrayUtils');\n\nexports.getEquallySpacedData = require('./getEquallySpaced').getEquallySpacedData;\nexports.SNV = require('./snv').SNV;\n","'use strict';\n\nconst Stat = require('ml-stat').array;\n/**\n * Function that returns an array of points given 1D array as follows:\n *\n * [x1, y1, .. , x2, y2, ..]\n *\n * And receive the number of dimensions of each point.\n * @param array\n * @param dimensions\n * @returns {Array} - Array of points.\n */\nfunction coordArrayToPoints(array, dimensions) {\n    if (array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var length = array.length / dimensions;\n    var pointsArr = new Array(length);\n\n    var k = 0;\n    for (var i = 0; i < array.length; i += dimensions) {\n        var point = new Array(dimensions);\n        for (var j = 0; j < dimensions; ++j) {\n            point[j] = array[i + j];\n        }\n\n        pointsArr[k] = point;\n        k++;\n    }\n\n    return pointsArr;\n}\n\n\n/**\n * Function that given an array as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * Returns an array as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * And receives the number of dimensions of each coordinate.\n * @param array\n * @param dimensions\n * @returns {Array} - Matrix of coordinates\n */\nfunction coordArrayToCoordMatrix(array, dimensions) {\n    if (array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var coordinatesArray = new Array(dimensions);\n    var points = array.length / dimensions;\n    for (var i = 0; i < coordinatesArray.length; i++) {\n        coordinatesArray[i] = new Array(points);\n    }\n\n    for (i = 0; i < array.length; i += dimensions) {\n        for (var j = 0; j < dimensions; ++j) {\n            var currentPoint = Math.floor(i / dimensions);\n            coordinatesArray[j][currentPoint] = array[i + j];\n        }\n    }\n\n    return coordinatesArray;\n}\n\n/**\n * Function that receives a coordinate matrix as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * Returns an array of coordinates as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param coordMatrix\n * @returns {Array}\n */\nfunction coordMatrixToCoordArray(coordMatrix) {\n    var coodinatesArray = new Array(coordMatrix.length * coordMatrix[0].length);\n    var k = 0;\n    for (var i = 0; i < coordMatrix[0].length; ++i) {\n        for (var j = 0; j < coordMatrix.length; ++j) {\n            coodinatesArray[k] = coordMatrix[j][i];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Tranpose a matrix, this method is for coordMatrixToPoints and\n * pointsToCoordMatrix, that because only transposing the matrix\n * you can change your representation.\n *\n * @param matrix\n * @returns {Array}\n */\nfunction transpose(matrix) {\n    var resultMatrix = new Array(matrix[0].length);\n    for (var i = 0; i < resultMatrix.length; ++i) {\n        resultMatrix[i] = new Array(matrix.length);\n    }\n\n    for (i = 0; i < matrix.length; ++i) {\n        for (var j = 0; j < matrix[0].length; ++j) {\n            resultMatrix[j][i] = matrix[i][j];\n        }\n    }\n\n    return resultMatrix;\n}\n\n/**\n * Function that transform an array of points into a coordinates array\n * as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param points\n * @returns {Array}\n */\nfunction pointsToCoordArray(points) {\n    var coodinatesArray = new Array(points.length * points[0].length);\n    var k = 0;\n    for (var i = 0; i < points.length; ++i) {\n        for (var j = 0; j < points[0].length; ++j) {\n            coodinatesArray[k] = points[i][j];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Apply the dot product between the smaller vector and a subsets of the\n * largest one.\n *\n * @param firstVector\n * @param secondVector\n * @returns {Array} each dot product of size of the difference between the\n *                  larger and the smallest one.\n */\nfunction applyDotProduct(firstVector, secondVector) {\n    var largestVector, smallestVector;\n    if (firstVector.length <= secondVector.length) {\n        smallestVector = firstVector;\n        largestVector = secondVector;\n    } else {\n        smallestVector = secondVector;\n        largestVector = firstVector;\n    }\n\n    var difference = largestVector.length - smallestVector.length + 1;\n    var dotProductApplied = new Array(difference);\n\n    for (var i = 0; i < difference; ++i) {\n        var sum = 0;\n        for (var j = 0; j < smallestVector.length; ++j) {\n            sum += smallestVector[j] * largestVector[i + j];\n        }\n        dotProductApplied[i] = sum;\n    }\n\n    return dotProductApplied;\n}\n/**\n * To scale the input array between the specified min and max values. The operation is performed inplace\n * if the options.inplace is specified. If only one of the min or max parameters is specified, then the scaling\n * will multiply the input array by min/min(input) or max/max(input)\n * @param input\n * @param options\n * @returns {*}\n */\nfunction scale(input, options = {}) {\n    const {\n        min,\n        max\n    } = options;\n\n    var y = options.inPlace ? input : (new Array(input.length));\n    var minMax = Stat.minMax(input);\n\n    if (typeof max === 'number') {\n        if (typeof min === 'number') {\n            let factor = (max - min) / (minMax.max - minMax.min);\n            for (let i = 0; i < y.length; i++) {\n                y[i] = (input[i] - minMax.min) * factor + min;\n            }\n        } else if (minMax.max !== 0) {\n            let factor = max / minMax.max;\n            for (let i = 0; i < y.length; i++) {\n                y[i] = input[i] * factor;\n            }\n        } else {\n            options.min = minMax.min;\n            y = scale(input, options);\n        }\n    } else if (typeof min === 'number') {\n        if (minMax.min !== 0) {\n            let factor = min / minMax.min;\n            for (let i = 0; i < y.length; i++) {\n                y[i] = input[i] * factor;\n            }\n\n        } else {\n            options.max = minMax.max;\n            y = scale(input, options);\n        }\n    }\n    return y;\n}\n\nmodule.exports = {\n    coordArrayToPoints: coordArrayToPoints,\n    coordArrayToCoordMatrix: coordArrayToCoordMatrix,\n    coordMatrixToCoordArray: coordMatrixToCoordArray,\n    coordMatrixToPoints: transpose,\n    pointsToCoordArray: pointsToCoordArray,\n    pointsToCoordMatrix: transpose,\n    applyDotProduct: applyDotProduct,\n    scale: scale\n};\n\n","'use strict';\n\n/**\n *\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param x - sorted increasing x values\n * @param y\n * @param options\n * @returns {Array} new array with the equally spaced data.\n *\n */\nfunction getEquallySpacedData(x, y, options = {}) {\n    var xLength = x.length;\n    if (x.length > 1 && x[0] > x[1]) {\n        x = x.slice().reverse();\n        y = y.slice().reverse();\n    }\n\n    var {\n        from = x[0],\n        to = x[xLength - 1],\n        variant = 'smooth',\n        numberOfPoints = 100\n    } = options;\n\n    if (xLength !== y.length) {\n        throw new RangeError(\"the x and y vector doesn't have the same size.\");\n    }\n\n    if (typeof from !== 'number' || isNaN(from)) {\n        throw new RangeError(\"'from' option must be a number\");\n    }\n\n    if (typeof to !== 'number' || isNaN(to)) {\n        throw new RangeError(\"'to' option must be a number\");\n    }\n\n    var reverse = from > to;\n    if (reverse) {\n        [from, to] = [to, from];\n    }\n\n    if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n        throw new RangeError(\"'numberOfPoints' option must be a number\");\n    }\n    if (numberOfPoints < 1) {\n        throw new RangeError('the number of points must be at least 1');\n    }\n\n    var output = variant === 'slot' ? getEquallySpacedSlot(x, y, from, to, numberOfPoints) : getEquallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n    return reverse ? output.reverse() : output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nfunction getEquallySpacedSmooth(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n\n    var output = new Array(numberOfPoints);\n\n    var initialOriginalStep = x[1] - x[0];\n    var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n    // Init main variables\n    var min = from - halfStep;\n    var max = from + halfStep;\n\n    var previousX = Number.MIN_VALUE;\n    var previousY = 0;\n    var nextX = x[0] - initialOriginalStep;\n    var nextY = 0;\n\n    var currentValue = 0;\n    var slope = 0;\n    var intercept = 0;\n    var sumAtMin = 0;\n    var sumAtMax = 0;\n\n    var i = 0; // index of input\n    var j = 0; // index of output\n\n    function getSlope(x0, y0, x1, y1) {\n        return (y1 - y0) / (x1 - x0);\n    }\n\n    main: while (true) {\n\n        if (previousX <= min && min <= nextX) {\n            add = integral(0, min - previousX, slope, previousY);\n            sumAtMin = currentValue + add;\n        }\n\n        while (nextX - max >= 0) {\n            // no overlap with original point, just consume current value\n            var add = integral(0, max - previousX, slope, previousY);\n            sumAtMax = currentValue + add;\n\n            output[j++] = (sumAtMax - sumAtMin) / step;\n\n            if (j === numberOfPoints) {\n                break main;\n            }\n\n            min = max;\n            max += step;\n            sumAtMin = sumAtMax;\n        }\n\n        currentValue += integral(previousX, nextX, slope, intercept);\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else if (i === xLength) {\n            nextX += lastOriginalStep;\n            nextY = 0;\n        }\n\n        slope = getSlope(previousX, previousY, nextX, nextY);\n        intercept = -slope * previousX + previousY;\n    }\n\n    return output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nfunction getEquallySpacedSlot(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n    var lastStep = x[x.length - 1] - x[x.length - 2];\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = -Number.MAX_VALUE;\n    var previousY = 0;\n    var nextX = x[0];\n    var nextY = y[0];\n    var frontOutsideSpectra = 0;\n    var backOutsideSpectra = true;\n\n    var currentValue = 0;\n\n    // for slot algorithm\n    var currentPoints = 0;\n\n    var i = 1; // index of input\n    var j = 0; // index of output\n\n    main: while (true) {\n        if (previousX >= nextX) throw (new Error('x must be an increasing serie'));\n        while (previousX - max > 0) {\n            // no overlap with original point, just consume current value\n            if (backOutsideSpectra) {\n                currentPoints++;\n                backOutsideSpectra = false;\n            }\n\n            output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n            j++;\n\n            if (j === numberOfPoints) {\n                break main;\n            }\n\n            min = max;\n            max += step;\n            currentValue = 0;\n            currentPoints = 0;\n        }\n\n        if (previousX > min) {\n            currentValue += previousY;\n            currentPoints++;\n        }\n\n        if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n            currentPoints--;\n        }\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else {\n            nextX += lastStep;\n            nextY = 0;\n            frontOutsideSpectra++;\n        }\n    }\n\n    return output;\n}\n/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param x0\n * @param x1\n * @param slope\n * @param intercept\n * @returns {number} integral value.\n */\nfunction integral(x0, x1, slope, intercept) {\n    return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);\n}\n\nexports.getEquallySpacedData = getEquallySpacedData;\nexports.integral = integral;\n","'use strict';\n\nexports.SNV = SNV;\nvar Stat = require('ml-stat').array;\n\n/**\n * Function that applies the standard normal variate (SNV) to an array of values.\n *\n * @param data - Array of values.\n * @returns {Array} - applied the SNV.\n */\nfunction SNV(data) {\n    var mean = Stat.mean(data);\n    var std = Stat.standardDeviation(data);\n    var result = data.slice();\n    for (var i = 0; i < data.length; i++) {\n        result[i] = (result[i] - mean) / std;\n    }\n    return result;\n}\n","// external dependencies\nimport { curry } from 'curriable'; // utils\n\nimport { getIntegerHashValue, stringify } from './utils';\n/**\n * @function hash\n *\n * @description\n * hash the value passed to a unique, consistent hash value\n *\n * @param {any} value the value to hash\n * @returns {number} the object hash\n */\n\nexport var hash = function hash(value) {\n  return getIntegerHashValue(stringify(value));\n};\n/**\n * @function hash.is\n *\n * @description\n * create a comparator for the first object passed to determine if the second is equal\n *\n * @param {any} object the object to test against\n * @returns {function(any): boolean} the method to test against the object\n */\n\nhash.is = curry(function (object, otherObject) {\n  return hash(object) === hash(otherObject);\n});\n/**\n * @function hash.is.all\n *\n * @description\n * determine if all of the objects passed are equal in value to the first\n *\n * @param {...Array<any>} objects the objects to test for equality\n * @returns {boolean} are the objects equal\n */\n\nhash.is.all = curry(function () {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  var isEqual = hash.is(objects.shift());\n\n  for (var index = 0; index < objects.length; index++) {\n    if (!isEqual(objects[index])) {\n      return false;\n    }\n  }\n\n  return true;\n}, 2);\n/**\n * @function hash.is.any\n *\n * @description\n * determine if any of the objects passed are equal in value to the first\n *\n * @param {...Array<any>} objects the objects to test for equality\n * @returns {boolean} are the objects equal\n */\n\nhash.is.any = curry(function () {\n  for (var _len2 = arguments.length, objects = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    objects[_key2] = arguments[_key2];\n  }\n\n  var isEqual = hash.is(objects.shift());\n\n  for (var index = 0; index < objects.length; index++) {\n    if (isEqual(objects[index])) {\n      return true;\n    }\n  }\n\n  return false;\n}, 2);\n/**\n * @function hash.is.not\n *\n * @description\n * create a comparator for the first object passed to determine if the second is not equal\n *\n * @param {any} object the object to test against\n * @returns {function(any): boolean} the method to test against the object\n */\n\nhash.is.not = curry(function (object, otherObject) {\n  return hash(object) !== hash(otherObject);\n});\nexport default hash;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    var floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    var wantXY = !options.withoutXY;\n\n    var start = Date.now();\n\n    var ntuples = {};\n    var ldr, dataLabel, dataValue, ldrs;\n    var position, endLine, infos;\n\n    var result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    var spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    var spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      dataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (dataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          var xIndex = -1;\n          var yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            var firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1'\n            );\n            var secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1'\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            dataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            dataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (dataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue, result);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (dataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (dataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (dataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (dataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (dataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (dataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (dataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (dataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (dataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (dataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (dataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (dataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (dataLabel === '.OBSERVEFREQUENCY' || dataLabel === '$SFO1') {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (dataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$REFERENCEPOINT') {\n        // OFFSET for Varian spectra\n        // if we activate this part it does not work for ACD specmanager\n        //         } else if (dataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n        //                 var parts = dataValue.split(/ *, */);\n        //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n        //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n      } else if (dataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (dataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        var pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        var unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (dataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(dataLabel)) {\n        spectrum[convertMSFieldToLabel(dataLabel)] = dataValue;\n      } else if (dataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (dataLabel.match(options.keepRecordsRegExp)) {\n        if (result.info[dataLabel]) {\n          if (!Array.isArray(result.info[dataLabel])) {\n            result.info[dataLabel] = [result.info[dataLabel]];\n          }\n          result.info[dataLabel].push(dataValue.trim());\n        } else {\n          result.info[dataLabel] = dataValue.trim();\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      var newNtuples = [];\n      var keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              var data = spectrum.data[j];\n              var newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2)\n              };\n              for (var k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(dataLabel) {\n    return GC_MS_FIELDS.indexOf(dataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    var spectra = result.spectra;\n    var length = spectra.length;\n    var chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length)\n        }\n      }\n    };\n\n    var existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      var label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length)\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      var spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]]\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    var data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice()\n        }\n      }\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      var shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    var l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    var minZ = spectra[0].data[0][0];\n    var maxZ = minZ;\n    var ySize = spectra.length;\n    var xSize = spectra[0].data[0].length / 2;\n    var z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      var xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        var value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n    return {\n      z: z,\n      minX: spectra[0].data[0][0],\n      maxX: spectra[0].data[0][spectra[0].data[0].length - 2], // has to be -2 because it is a 1D array [x,y,x,y,...]\n      minY: spectra[0].pageValue,\n      maxY: spectra[ySize - 1].pageValue,\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs))\n    };\n  }\n\n  function add2D(result, options) {\n    var zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    var noise = zData.noise;\n    var z = zData.z;\n    var povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    var isOver0, isOver1, isOver2, isOver3;\n    var nbSubSpectra = z.length;\n    var nbPovars = z[0].length;\n    var pAx, pAy, pBx, pBy;\n\n    var x0 = zData.minX;\n    var xN = zData.maxX;\n    var dx = (xN - x0) / (nbPovars - 1);\n    var y0 = zData.minY;\n    var yN = zData.maxY;\n    var dy = (yN - y0) / (nbSubSpectra - 1);\n    var minZ = zData.minZ;\n    var maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    var iter = options.nbContourLevels * 2;\n    var contourLevels = new Array(iter);\n    var lineZValue;\n    for (var level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      var contourLevel = {};\n      contourLevels[level] = contourLevel;\n      var side = level % 2;\n      var factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      var lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        var subSpectra = z[iSubSpectra];\n        var subSpectraAfter = z[iSubSpectra + 1];\n        for (var povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    var yFactor = spectrum.yFactor;\n    var deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var currentX = spectrum.firstX;\n    var currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    var endLine = false;\n    var ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    var newLine = true;\n    var isDifference = false;\n    var isLastDifference = false;\n    var lastDifference = 0;\n    var isDuplicate = false;\n    var inComment = false;\n    var currentValue = 0; // can be a difference or a duplicate\n    var lastValue = 0; // must be the real last value\n    var isNegative = false;\n    var inValue = false;\n    var skipFirstValue = false;\n    var decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                var duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (var j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            var ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    var removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    var removeCommentRegExp = /\\$\\$.*/;\n    var peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nvar convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nvar stamps = {};\nvar worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function (resolve) {\n    var stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options\n      })\n    );\n  });\n}\n\nfunction createWorker() {\n  var workerURL = URL.createObjectURL(\n    new Blob(\n      [`var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`],\n      { type: 'application/javascript' }\n    )\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function (event) {\n    var data = JSON.parse(event.data);\n    var stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (var i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: []\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      var finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      var match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        var dataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (dataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nmodule.exports = {\n  convert: JcampConverter,\n  createTree: createTree\n};\n","import uniqueXFunction from 'ml-arrayxy-uniquex';\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options]\n * @param {string} [options.arrayType = 'xyxy'] - xxyy or xyxy\n * * 'xxyy' `[[x1,x2,x3,...],[y1,y2,y2,...]]`\n * * 'xyxy' `[[x1,y1],[x2,y2],[x3,y3], ...]]`\n * @param {boolean} [options.normalize = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {Array<Array<number>>} - check the 'arrayType' option\n */\nexport function parseXY(text, options = {}) {\n  const {\n    normalize = false,\n    uniqueX = false,\n    arrayType = 'xyxy',\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Math.max(xColumn, yColumn) + 1,\n    minNumberColumns = Math.max(xColumn, yColumn) + 1\n  } = options;\n\n  var lines = text.split(/[\\r\\n]+/);\n\n  if (arrayType !== 'xxyy' && arrayType !== 'xyxy') {\n    throw new Error(`unsupported arrayType (${arrayType})`);\n  }\n\n  var maxY = Number.MIN_VALUE;\n  var result = [[], []];\n  var info = [];\n  for (var l = 0; l < lines.length; l++) {\n    var line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      var fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n                fields.length >= minNumberColumns &&\n                fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result[0].push(x);\n        result[1].push(y);\n      }\n    } else if (line) {\n      info.push({ position: result[0].length, value: line });\n    }\n  }\n\n  if (normalize) {\n    for (var i = 0; i < result[0].length; i++) {\n      result[1][i] /= maxY;\n    }\n  }\n\n  if (uniqueX) {\n    uniqueXFunction(result[0], result[1]);\n  }\n\n  if (arrayType === 'xyxy') {\n    var newResult = [];\n    for (let i = 0; i < result[0].length; i++) {\n      newResult.push([result[0][i], result[1][i]]);\n    }\n    result = newResult;\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result\n  };\n}\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import sequentialFill from 'ml-array-sequential-fill';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\nimport getZones from './getZones';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = []\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  let zones = getZones(from, to, numberOfPoints, exclusions);\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse\n    );\n    xResult.push(...zoneResult.x);\n    yResult.push(...zoneResult.y);\n  }\n\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  var output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints\n    }),\n    y: output\n  };\n}\n","export default function getZones(from, to, numberOfPoints, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to, numberOfPoints }];\n  }\n\n  // need to deal with overlapping exclusions and out of bound exclusions\n\n  let toRemove = exclusions.reduce(\n    (previous, exclusion) => (previous += exclusion.to - exclusion.from),\n    0\n  );\n  let total = to - from;\n  let unitsPerPoint = (total - toRemove) / numberOfPoints;\n  let zones = [];\n  let currentFrom = from;\n  let totalPoints = 0;\n  for (let exclusion of exclusions) {\n    let currentNbPoints = Math.round(\n      (exclusion.from - currentFrom) / unitsPerPoint\n    );\n    totalPoints += currentNbPoints;\n    if (currentNbPoints > 0) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n        numberOfPoints: currentNbPoints\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (numberOfPoints - totalPoints > 0) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n      numberOfPoints: numberOfPoints - totalPoints\n    });\n  }\n\n  return zones;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n  var lastStep = x[x.length - 1] - x[x.length - 2];\n\n  var start = from - halfStep;\n  var output = new Array(numberOfPoints);\n\n  // Init main variables\n  var min = start;\n  var max = start + step;\n\n  var previousX = -Number.MAX_VALUE;\n  var previousY = 0;\n  var nextX = x[0];\n  var nextY = y[0];\n  var frontOutsideSpectra = 0;\n  var backOutsideSpectra = true;\n\n  var currentValue = 0;\n\n  // for slot algorithm\n  var currentPoints = 0;\n\n  var i = 1; // index of input\n  var j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n\n  var output = new Array(numberOfPoints);\n\n  var initialOriginalStep = x[1] - x[0];\n  var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  var min = from - halfStep;\n  var max = from + halfStep;\n\n  var previousX = Number.MIN_VALUE;\n  var previousY = 0;\n  var nextX = x[0] - initialOriginalStep;\n  var nextY = 0;\n\n  var currentValue = 0;\n  var slope = 0;\n  var intercept = 0;\n  var sumAtMin = 0;\n  var sumAtMax = 0;\n\n  var i = 0; // index of input\n  var j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      var add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n"],"sourceRoot":""}