{"version":3,"file":"spectra-processor.js","sources":["../node_modules/is-any-array/src/index.js","../lib/index.js"],"sourcesContent":["'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar array = createCommonjsModule(function (module, exports) {\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n});\nvar array_1 = array.sum;\nvar array_2 = array.max;\nvar array_3 = array.min;\nvar array_4 = array.minMax;\nvar array_5 = array.arithmeticMean;\nvar array_6 = array.mean;\nvar array_7 = array.geometricMean;\nvar array_8 = array.logMean;\nvar array_9 = array.grandMean;\nvar array_10 = array.truncatedMean;\nvar array_11 = array.harmonicMean;\nvar array_12 = array.contraHarmonicMean;\nvar array_13 = array.median;\nvar array_14 = array.variance;\nvar array_15 = array.standardDeviation;\nvar array_16 = array.standardError;\nvar array_17 = array.robustMeanAndStdev;\nvar array_18 = array.quartiles;\nvar array_19 = array.pooledStandardDeviation;\nvar array_20 = array.pooledVariance;\nvar array_21 = array.mode;\nvar array_22 = array.covariance;\nvar array_23 = array.skewness;\nvar array_24 = array.kurtosis;\nvar array_25 = array.entropy;\nvar array_26 = array.weightedMean;\nvar array_27 = array.weightedStandardDeviation;\nvar array_28 = array.weightedVariance;\nvar array_29 = array.center;\nvar array_30 = array.standardize;\nvar array_31 = array.cumulativeSum;\n\nfunction getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nfunction filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n\n/**\n *\n * @private\n * @param {Spectrum} spectrum\n * @param {object} [filter={}]\n * @param {array} [filter.from]\n * @param {array} [filter.to]\n * @param {array} [filter.exclusions=[]]\n */\n\nfunction getData(spectrum, filter = {}) {\n  let data = { x: spectrum.x, y: spectrum.y };\n\n  if (filter) {\n    data = filterX({ x: spectrum.x, y: spectrum.y }, filter);\n  }\n  return data;\n}\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nvar src = isAnyArray;\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !src(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\n/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nfunction integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nfunction equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n\n  var output = new Array(numberOfPoints);\n\n  var initialOriginalStep = x[1] - x[0];\n  var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  var min = from - halfStep;\n  var max = from + halfStep;\n\n  var previousX = Number.MIN_VALUE;\n  var previousY = 0;\n  var nextX = x[0] - initialOriginalStep;\n  var nextY = 0;\n\n  var currentValue = 0;\n  var slope = 0;\n  var intercept = 0;\n  var sumAtMin = 0;\n  var sumAtMax = 0;\n\n  var i = 0; // index of input\n  var j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      var add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nfunction equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n  var lastStep = x[x.length - 1] - x[x.length - 2];\n\n  var start = from - halfStep;\n  var output = new Array(numberOfPoints);\n\n  // Init main variables\n  var min = start;\n  var max = start + step;\n\n  var previousX = -Number.MAX_VALUE;\n  var previousY = 0;\n  var nextX = x[0];\n  var nextY = y[0];\n  var frontOutsideSpectra = 0;\n  var backOutsideSpectra = true;\n\n  var currentValue = 0;\n\n  // for slot algorithm\n  var currentPoints = 0;\n\n  var i = 1; // index of input\n  var j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n\nfunction getZones$1(from, to, numberOfPoints, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to, numberOfPoints }];\n  }\n\n  // need to deal with overlapping exclusions and out of bound exclusions\n\n  let toRemove = exclusions.reduce(\n    (previous, exclusion) => (previous += exclusion.to - exclusion.from),\n    0\n  );\n  let total = to - from;\n  let unitsPerPoint = (total - toRemove) / numberOfPoints;\n  let zones = [];\n  let currentFrom = from;\n  let totalPoints = 0;\n  for (let exclusion of exclusions) {\n    let currentNbPoints = Math.round(\n      (exclusion.from - currentFrom) / unitsPerPoint\n    );\n    totalPoints += currentNbPoints;\n    if (currentNbPoints > 0) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n        numberOfPoints: currentNbPoints\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (numberOfPoints - totalPoints > 0) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n      numberOfPoints: numberOfPoints - totalPoints\n    });\n  }\n\n  return zones;\n}\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nfunction equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = []\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  let zones = getZones$1(from, to, numberOfPoints, exclusions);\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant);\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  var output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints\n    }),\n    y: output\n  };\n}\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm;\n\n  if (!Array.isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input);\n        if (absoluteSumValue === 0) return input.slice(0);\n        return input.map(function (element) {\n          return element / absoluteSumValue;\n        });\n      }\n\n    case 'max':\n      {\n        var maxValue = max(input);\n        if (maxValue === 0) return input.slice(0);\n        return input.map(function (element) {\n          return element / maxValue;\n        });\n      }\n\n    case 'sum':\n      {\n        var sumValue = sum(input);\n        if (sumValue === 0) return input.slice(0);\n        return input.map(function (element) {\n          return element / sumValue;\n        });\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!src(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\n/**\n *\n * @private\n * @param {*} spectrum\n * @param {*} options\n */\nfunction getNormalized(spectrum, options = {}) {\n  if (!Array.isArray(spectrum.x) || !Array.isArray(spectrum.y)) {\n    throw new Error(\n      'getNormalized: Can not get normalized data, missing original data.',\n    );\n  }\n\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints = 1024,\n    filters = [],\n    exclusions = [],\n  } = options;\n\n  let y = spectrum.y.slice(0);\n\n  for (let filter of filters) {\n    switch (filter.name) {\n      case 'centerMean': {\n        let mean = array.mean(spectrum.y);\n        let meanFct = (y) => y - mean;\n        y = y.map(meanFct);\n        break;\n      }\n      case 'scaleSD': {\n        let std = array.standardDeviation(spectrum.y);\n        let stdFct = (y) => y / std;\n        y = y.map(stdFct);\n        break;\n      }\n      case 'normalize': {\n        y = norm(y);\n        break;\n      }\n      case 'rescale': {\n        y = rescale(y);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n  let result = equallySpaced(\n    { x: spectrum.x, y },\n    { from, to, numberOfPoints, exclusions },\n  );\n  return result;\n}\n\nconst isAnyArray$1 = require('is-any-array');\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {object} [points={}]\n */\nfunction check(points = {}) {\n  if (!isAnyArray$1(points.x) || !isAnyArray$1(points.y)) {\n    throw new Error('Points must be an object of x and y arrays');\n  }\n  if (points.x.length !== points.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n\n/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array} array\n * @param {number} target\n */\n\nfunction findClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n\n/**\n * Returns an object with {fromIndex, toIndex} for a specific from / to\n * @param {array} x\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n */\n\nfunction getFromToIndex(x, options = {}) {\n  let { fromIndex, toIndex, from, to } = options;\n\n  if (fromIndex === undefined) {\n    if (from !== undefined) {\n      fromIndex = findClosestIndex(x, from);\n    } else {\n      fromIndex = 0;\n    }\n  }\n  if (toIndex === undefined) {\n    if (to !== undefined) {\n      toIndex = findClosestIndex(x, to);\n    } else {\n      toIndex = x.length - 1;\n    }\n  }\n  return { fromIndex, toIndex };\n}\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Integration value on the specified range\n */\n\nfunction integration(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n  let integration = 0;\n  for (let i = fromIndex; i < toIndex; i++) {\n    integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n  }\n\n  return integration;\n}\n\n/**\n * Generate a X / Y of the integral\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @param {boolean} [options.reverse=false] - Integrate from the larger value to the smallest value\n * @return {{x:[],y:[]}} An object with the integration function\n */\n\nfunction integral$1(points = {}, options = {}) {\n  const { reverse = false } = options;\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let integration = 0;\n  let integral;\n  if (reverse) {\n    integral = { x: [x[toIndex]], y: [0] };\n    for (let i = toIndex; i > fromIndex; i--) {\n      integration += ((x[i] - x[i - 1]) * (y[i - 1] + y[i])) / 2;\n      integral.x.push(x[i - 1]);\n      integral.y.push(integration);\n    }\n    integral.x.reverse();\n    integral.y.reverse();\n  } else {\n    integral = { x: [x[fromIndex]], y: [0] };\n    for (let i = fromIndex; i < toIndex; i++) {\n      integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n      integral.x.push(x[i + 1]);\n      integral.y.push(integration);\n    }\n  }\n\n  return integral;\n}\n\n/**\n * Finds the max value in a zone\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Max y on the specified range\n */\n\nfunction maxY(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let maxY = y[fromIndex];\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > maxY) maxY = y[i];\n  }\n\n  return maxY;\n}\n\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nfunction maxYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nfunction minYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] < current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n\n/**\n * Reduce the number of points while keeping the same noise. Practical to\n * display many spectra as SVG\n * @param {array} x\n * @param {array} y\n * @param {object} [options={}]\n * @param {number} [from=x[0]]\n * @param {number} [to=x[x.length-1]]\n * @param {number} [nbPoints=4001] Number of points\n */\n\nfunction reduce(x, y, options = {}) {\n  let { from = x[0], to = x[x.length - 1], nbPoints = 4000 } = options;\n\n  let fromIndex = findClosestIndex(x, from);\n  let toIndex = findClosestIndex(x, to);\n\n  if (fromIndex > 0 && x[fromIndex] > from) fromIndex--;\n  if (toIndex < x.length - 1 && x[toIndex] < to) toIndex++;\n\n  if (toIndex - fromIndex < nbPoints) {\n    return {\n      x: x.slice(fromIndex, toIndex + 1),\n      y: y.slice(fromIndex, toIndex + 1),\n    };\n  }\n\n  let newX = [x[fromIndex]];\n  let newY = [y[fromIndex]];\n  let minY = Number.MAX_VALUE;\n  let maxY = Number.MIN_VALUE;\n  if (nbPoints % 2 === 0) {\n    nbPoints = nbPoints / 2 + 1;\n  } else {\n    nbPoints = (nbPoints - 1) / 2 + 1;\n  }\n\n  let slot = (x[toIndex] - x[fromIndex]) / (nbPoints - 1);\n  let currentX = x[fromIndex] + slot;\n  let first = true;\n  for (let i = fromIndex + 1; i <= toIndex; i++) {\n    if (first) {\n      minY = y[i];\n      maxY = y[i];\n      first = false;\n    } else {\n      if (y[i] < minY) minY = y[i];\n      if (y[i] > maxY) maxY = y[i];\n    }\n\n    if (x[i] >= currentX || i === toIndex) {\n      newX.push(currentX - slot / 2);\n      newY.push(minY);\n      newX.push(currentX);\n      newY.push(maxY);\n      currentX += slot;\n      first = true;\n    }\n  }\n\n  // we will need to make some kind of min / max because there are too many points\n  // we will always keep the first point and the last point\n\n  return { x: newX, y: newY };\n}\n\n/**\n * Sort object of array, x has to be monotone.\n * @param {object} data Object of kind {x:[], re:[], im:[]}.\n * @return {SD}\n */\n\nfunction sortX(data) {\n  const { x, y } = data;\n\n  if (x.length !== y.length) {\n    throw TypeError('sortX: length of x and y must be identical');\n  }\n\n  if (x.length < 2 || x[0] < x[1]) return data;\n\n  return {\n    x: x.slice(0).reverse(),\n    y: y.slice(0).reverse(),\n  };\n}\n\n/**\n * Find the closest minimum going down hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nfunction minClosestYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let minY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] < minY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] < minY) {\n      currentIndex++;\n    }\n    minY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n\n/**\n * Find the closest maximum going up hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nfunction maxClosestYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let maxY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] > maxY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] > maxY) {\n      currentIndex++;\n    }\n    maxY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n\n/**\n *  Returns the targetIndex\n * @param {array} [x]\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @param {number}\n */\n\nfunction getTargetIndex(x, options = {}) {\n  let { target, targetIndex } = options;\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      return findClosestIndex(x, target);\n    } else {\n      return 0;\n    }\n  }\n  return targetIndex;\n}\n\nfunction realMinYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  const targetIndex = getTargetIndex(x, options);\n  // interpolation to a sin() function\n  if (\n    y[targetIndex - 1] < 0 &&\n    y[targetIndex + 1] < 0 &&\n    y[targetIndex] <= y[targetIndex - 1] &&\n    y[targetIndex] <= y[targetIndex + 1]\n  ) {\n    let alpha = 20 * Math.log10(-y[targetIndex - 1]);\n    let beta = 20 * Math.log10(-y[targetIndex]);\n    let gamma = 20 * Math.log10(-y[targetIndex + 1]);\n    let p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n    return {\n      x: x[targetIndex] + (x[targetIndex] - x[targetIndex - 1]) * p,\n      y: y[targetIndex] - 0.25 * (y[targetIndex - 1] - y[targetIndex + 1]) * p,\n      index: targetIndex,\n    };\n  } else {\n    return {\n      x: x[targetIndex],\n      y: y[targetIndex],\n      index: targetIndex,\n    };\n  }\n}\n\n/**\n * Find the closest minimum going down hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nfunction realMaxYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n  const targetIndex = getTargetIndex(x, options);\n  // interpolation to a sin() function\n  if (\n    y[targetIndex - 1] > 0 &&\n    y[targetIndex + 1] > 0 &&\n    y[targetIndex] >= y[targetIndex - 1] &&\n    y[targetIndex] >= y[targetIndex + 1]\n  ) {\n    let alpha = 20 * Math.log10(y[targetIndex - 1]);\n    let beta = 20 * Math.log10(y[targetIndex]);\n    let gamma = 20 * Math.log10(y[targetIndex + 1]);\n    let p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n    return {\n      x: x[targetIndex] + (x[targetIndex] - x[targetIndex - 1]) * p,\n      y: y[targetIndex] - 0.25 * (y[targetIndex - 1] - y[targetIndex + 1]) * p,\n      index: targetIndex,\n    };\n  } else {\n    return {\n      x: x[targetIndex],\n      y: y[targetIndex],\n      index: targetIndex,\n    };\n  }\n}\n\n/**\n * Finds all the max values\n * If the values are equal the middle\n * of the equal part will be the position of the signal!\n *\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @return {Array} Array of points\n */\n\nfunction maximaY(points = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 3) return [];\n  let maxima = [];\n  let startEqualIndex = -1;\n  for (let i = 1; i < x.length - 1; i++) {\n    if (y[i - 1] < y[i] && y[i + 1] < y[i]) {\n      maxima.push({ x: x[i], y: y[i], index: i });\n    } else if (y[i - 1] < y[i] && y[i + 1] === y[i]) {\n      startEqualIndex = i;\n    } else if (y[i - 1] === y[i] && y[i + 1] < y[i]) {\n      let index = ((i + startEqualIndex) / 2) >> 0;\n      maxima.push({ x: x[index], y: y[index], index });\n    }\n  }\n  return maxima;\n}\n\n/**\n * Finds all the min values\n * If the values are equal the middle\n * of the equal part will be the position of the signal!\n *\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @return {Array} Array of points\n */\n\nfunction minimaY(points = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 3) return [];\n  let maxima = [];\n  let startEqualIndex = -1;\n  for (let i = 1; i < x.length - 1; i++) {\n    if (y[i - 1] > y[i] && y[i + 1] > y[i]) {\n      maxima.push({ x: x[i], y: y[i], index: i });\n    } else if (y[i - 1] > y[i] && y[i + 1] === y[i]) {\n      startEqualIndex = i;\n    } else if (y[i - 1] === y[i] && y[i + 1] > y[i]) {\n      let index = ((i + startEqualIndex) / 2) >> 0;\n      maxima.push({ x: x[index], y: y[index], index });\n    }\n  }\n  return maxima;\n}\n\n/**\n * Returns an information about a signal\n *\n * We expect ordered data and equidistant X axis\n * You can use the method helper if required:\n * ML.ArrayXY.uniqueX\n * ML.ArrayXY.sortX\n * ML.ArrayXY.equallySpaced\n *\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex]\n * @return {object} Information about signal\n */\n\nfunction peakInfo(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 3) return undefined;\n  let { targetIndex, target } = options;\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    }\n  }\n\n  if (targetIndex === undefined) {\n    throw new Error('peakInfo: need to specify target or targetIndex');\n  }\n\n  let i = targetIndex;\n  let currentDiff = y[i] - y[i + 1];\n\n  let multiplier = currentDiff < 0 ? -1 : 1;\n  currentDiff *= multiplier;\n  while (i < x.length - 1) {\n    i++;\n    let newDiff = (y[i] - y[i + 1]) * multiplier;\n    if (newDiff < currentDiff) break;\n    currentDiff = newDiff;\n  }\n  let after = { x: x[i], y: y[i] };\n\n  i = targetIndex;\n  currentDiff = (y[i] - y[i - 1]) * multiplier;\n  while (i > 1) {\n    i--;\n    let newDiff = (y[i] - y[i - 1]) * multiplier;\n    if (newDiff < currentDiff) break;\n    currentDiff = newDiff;\n  }\n  let before = { x: x[i], y: y[i] };\n\n  return {\n    inflectionBefore: before,\n    inflectionAfter: after,\n    extrema: { x: x[targetIndex], y: y[targetIndex] },\n    inflectionMiddle: {\n      x: (before.x + after.x) / 2,\n      y: (before.y + after.y) / 2,\n    },\n    width: Math.abs(before.x - after.x),\n  };\n}\n\nconst XY = {\n  check,\n  integral: integral$1,\n  integration,\n  maxY,\n  maximaY,\n  maxYPoint,\n  minimaY,\n  minYPoint,\n  reduce,\n  sortX,\n  minClosestYPoint,\n  maxClosestYPoint,\n  realMaxYPoint,\n  realMinYPoint,\n  peakInfo,\n};\n\n/**\n\n/**\n * This function add the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nfunction add(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n\n/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @return {object}\n */\nfunction boxPlot(array) {\n  array = array.slice(0).sort((a, b) => a - b);\n  if (array.length < 5) {\n    throw Error(\n      'boxPlot: can not calculate info if array contains less than 3 elements',\n    );\n  }\n  let info = {\n    Q1: 0.0,\n    Q2: 0.0,\n    Q3: 0.0,\n    min: array[0],\n    max: array[array.length - 1],\n  };\n  let q1max, q3min;\n  if (array.length % 2 === 1) {\n    // odd\n    let middle = (array.length - 1) / 2;\n    info.Q2 = array[middle];\n    q1max = middle - 1;\n    q3min = middle + 1;\n  } else {\n    // even\n    q3min = array.length / 2;\n    q1max = q3min - 1;\n    info.Q2 = (array[q1max] + array[q3min]) / 2;\n  }\n  if (q1max % 2 === 0) {\n    info.Q1 = array[q1max / 2];\n    info.Q3 = array[(array.length + q3min - 1) / 2];\n  } else {\n    info.Q1 = (array[(q1max + 1) / 2] + array[(q1max - 1) / 2]) / 2;\n    let middleOver = (array.length + q3min) / 2;\n    info.Q3 = (array[middleOver] + array[middleOver - 1]) / 2;\n  }\n  return info;\n}\n\n/**\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nfunction divide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n\n/**\n\n/**\n * This function multiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nfunction multiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n\n/**\n * This function performs a circular shift to a new array\n * Positive values of shifts will shift to the right and negative values will do to the left\n * @example rotate([1,2,3,4],1) -> [4,1,2,3]\n * @example rotate([1,2,3,4],-1) -> [2,3,4,1]\n * @param {Array} array - the array that will be rotated\n * @param {number} shift\n * @return {Array}\n */\nfunction rotate(array, shift) {\n  shift = shift % array.length;\n  if (shift < 0) shift += array.length;\n  return array\n    .slice(array.length - shift)\n    .concat(array.slice(0, array.length - shift));\n}\n\n/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nfunction subtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n\n/**\n\n/**\n * Calculates the correlation between 2 vectors\n * https://en.wikipedia.org/wiki/Correlation_and_dependence\n *\n * @param {Array} [A] - the array that will be rotated\n * @param {Array} [B]\n * @return {Array}\n */\nfunction correlation(A, B) {\n  let n = A.length;\n  let sumA = 0;\n  let sumA2 = 0;\n  let sumB = 0;\n  let sumB2 = 0;\n  let sumAB = 0;\n  for (let i = 0; i < n; i++) {\n    let a = A[i];\n    let b = B[i];\n    sumA += a;\n    sumA2 += a ** 2;\n    sumB += b;\n    sumB2 += b ** 2;\n    sumAB += a * b;\n  }\n  return (\n    (n * sumAB - sumA * sumB) /\n    (Math.sqrt(n * sumA2 - sumA ** 2) * Math.sqrt(n * sumB2 - sumB ** 2))\n  );\n}\n\nconst X = {\n  add,\n  boxPlot,\n  divide,\n  findClosestIndex,\n  getTargetIndex,\n  multiply,\n  rotate,\n  subtract,\n  correlation,\n};\n\n/**\n * @private\n * @param {*} spectrum\n * @param {*} ranges\n */\nfunction updateRangesInfo(spectrum, ranges = []) {\n  spectrum.ranges = {};\n  for (let range of ranges) {\n    range = JSON.parse(JSON.stringify(range));\n    spectrum.ranges[range.label] = range;\n    let fromToIndex = {\n      fromIndex: X.findClosestIndex(spectrum.normalized.x, range.from),\n      toIndex: X.findClosestIndex(spectrum.normalized.x, range.to),\n    };\n    range.integration = XY.integration(spectrum.normalized, fromToIndex);\n    range.maxPoint = XY.maxYPoint(spectrum.normalized, fromToIndex);\n    range.minPoint = XY.minYPoint(spectrum.normalized, fromToIndex);\n    range.x = spectrum.normalized.x.slice(\n      fromToIndex.fromIndex,\n      fromToIndex.toIndex + 1,\n    );\n    range.y = spectrum.normalized.y.slice(\n      fromToIndex.fromIndex,\n      fromToIndex.toIndex + 1,\n    );\n  }\n}\n\n/**\n * Class allowing manipulate one IR spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.x=[]] - x values\n * @param {Array} [json.y=[]] - y values\n */\nclass Spectrum {\n  /**\n   *\n   * @param {array} x\n   * @param {array} y\n   * @param {string} id\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.normalization]\n   * @param {object} [options.normalized]\n   */\n  constructor(x, y, id, options = {}) {\n    const { meta = {}, normalization = {}, normalized } = options;\n\n    if (x && x.length > 1 && x[0] > x[1]) {\n      this.x = x.reverse();\n      this.y = y.reverse();\n    } else {\n      this.x = x || [];\n      this.y = y || [];\n    }\n    this.id = id;\n    this.meta = meta;\n    this.normalizedBoundary = { x: { min: 0, max: 0 }, y: { min: 0, max: 0 } };\n    if (normalized) {\n      this.normalized = normalized;\n      this.updateNormalizedBoundary();\n    } else {\n      this.updateNormalization(normalization);\n    }\n\n    this.updateMemory();\n  }\n\n  get minX() {\n    return this.x[0];\n  }\n\n  get maxX() {\n    return this.x[this.x.length - 1];\n  }\n\n  updateMemory() {\n    let original = ((this.x && this.x.length) || 0) * 16;\n    let normalized = this.normalized.x.length * 16;\n    this.memory = { original, normalized, total: original + normalized };\n  }\n\n  removeOriginal() {\n    this.x = undefined;\n    this.y = undefined;\n    this.updateMemory();\n  }\n\n  getXY() {\n    if (!Array.isArray(this.x) || !Array.isArray(this.y)) {\n      throw new Error('Can not get normalized data');\n    }\n    return { x: this.x, y: this.y };\n  }\n}\n\nSpectrum.prototype.getData = function(options) {\n  return getData(this, options);\n};\n\nSpectrum.prototype.updateNormalization = function(normalization) {\n  this.normalized = getNormalized(this, normalization);\n  this.ranges = {};\n  this.updateMemory();\n  this.updateNormalizedBoundary();\n};\n\nSpectrum.prototype.updateRangesInfo = function(ranges) {\n  updateRangesInfo(this, ranges);\n};\n\nSpectrum.prototype.updateNormalizedBoundary = function() {\n  this.normalizedBoundary.x = {\n    min: this.normalized.x[0],\n    max: this.normalized.x[this.normalized.x.length - 1],\n  };\n  this.normalizedBoundary.y = array_4(this.normalized.y);\n};\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    var floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    var wantXY = !options.withoutXY;\n\n    var start = Date.now();\n\n    var ntuples = {};\n    var ldr, dataLabel, dataValue, ldrs;\n    var position, endLine, infos;\n\n    var result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    var spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    var spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      dataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (dataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          var xIndex = -1;\n          var yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            var firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1'\n            );\n            var secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1'\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            dataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            dataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (dataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (dataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (dataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (dataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (dataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (dataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (dataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (dataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (dataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (dataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (dataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (dataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (dataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (dataLabel === '.OBSERVEFREQUENCY' || dataLabel === '$SFO1') {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (dataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$REFERENCEPOINT') ; else if (dataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (dataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        var pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        var unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (dataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(dataLabel)) {\n        spectrum[convertMSFieldToLabel(dataLabel)] = dataValue;\n      } else if (dataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (dataLabel.match(options.keepRecordsRegExp)) {\n        if (result.info[dataLabel]) {\n          if (!Array.isArray(result.info[dataLabel])) {\n            result.info[dataLabel] = [result.info[dataLabel]];\n          }\n          result.info[dataLabel].push(dataValue.trim());\n        } else {\n          result.info[dataLabel] = dataValue.trim();\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      var newNtuples = [];\n      var keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              var data = spectrum.data[j];\n              var newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2)\n              };\n              for (var k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(dataLabel) {\n    return GC_MS_FIELDS.indexOf(dataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    var spectra = result.spectra;\n    var length = spectra.length;\n    var chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length)\n        }\n      }\n    };\n\n    var existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      var label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length)\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      var spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]]\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    var data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice()\n        }\n      }\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      var shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    var l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    var minZ = spectra[0].data[0][0];\n    var maxZ = minZ;\n    var ySize = spectra.length;\n    var xSize = spectra[0].data[0].length / 2;\n    var z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      var xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        var value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs))\n    };\n  }\n\n  function add2D(result, options) {\n    var zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    var noise = zData.noise;\n    var z = zData.z;\n    var povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    var isOver0, isOver1, isOver2, isOver3;\n    var nbSubSpectra = z.length;\n    var nbPovars = z[0].length;\n    var pAx, pAy, pBx, pBy;\n\n    var x0 = zData.minX;\n    var xN = zData.maxX;\n    var dx = (xN - x0) / (nbPovars - 1);\n    var y0 = zData.minY;\n    var yN = zData.maxY;\n    var dy = (yN - y0) / (nbSubSpectra - 1);\n    var minZ = zData.minZ;\n    var maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    var iter = options.nbContourLevels * 2;\n    var contourLevels = new Array(iter);\n    var lineZValue;\n    for (var level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      var contourLevel = {};\n      contourLevels[level] = contourLevel;\n      var side = level % 2;\n      var factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      var lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        var subSpectra = z[iSubSpectra];\n        var subSpectraAfter = z[iSubSpectra + 1];\n        for (var povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    var yFactor = spectrum.yFactor;\n    var deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var currentX = spectrum.firstX;\n    var currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    var endLine = false;\n    var ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    var newLine = true;\n    var isDifference = false;\n    var isLastDifference = false;\n    var lastDifference = 0;\n    var isDuplicate = false;\n    var inComment = false;\n    var currentValue = 0; // can be a difference or a duplicate\n    var lastValue = 0; // must be the real last value\n    var isNegative = false;\n    var inValue = false;\n    var skipFirstValue = false;\n    var decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                var duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (var j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            var ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    var removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    var removeCommentRegExp = /\\$\\$.*/;\n    var peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nvar convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nvar stamps = {};\nvar worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function (resolve) {\n    var stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options\n      })\n    );\n  });\n}\n\nfunction createWorker() {\n  var workerURL = URL.createObjectURL(\n    new Blob(\n      [`var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`],\n      { type: 'application/javascript' }\n    )\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function (event) {\n    var data = JSON.parse(event.data);\n    var stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (var i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: []\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      var finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      var match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        var dataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (dataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nvar src$1 = {\n  convert: JcampConverter,\n  createTree: createTree\n};\nvar src_1 = src$1.convert;\n\nfunction getJcampKind(data) {\n  let datatype = data.spectra[0].dataType.toLowerCase();\n  let yUnit = data.spectra[0].yUnit.toLowerCase();\n\n  if (datatype.match(/infrared/)) {\n    if (yUnit.match(/absorbance/)) {\n      return IR_ABSORBANCE;\n    } else {\n      return IR_TRANSMITTANCE;\n    }\n  }\n  return undefined;\n}\n\nconst IR_TRANSMITTANCE = {\n  normalization: {},\n  importation: {\n    converter: (transmittance) => -Math.log10(transmittance),\n  },\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance',\n  },\n};\n\nconst IR_ABSORBANCE = {\n  normalization: {},\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance',\n  },\n};\n\n/**\n * Create a spectrum from a jcamp\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nfunction jcamp(jcamp) {\n  const parsed = src_1(jcamp, { xy: true, keepRecordsRegExp: /TITLE/ });\n  const kind = getJcampKind(parsed);\n  const data = parsed.spectra[0].data[0];\n  const meta = parsed.info;\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data, kind, meta };\n}\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] : Object of points contains property x (an array) and y (an array)\n * @return points\n */\n\nfunction uniqueX(points = {}) {\n  const { x, y } = points;\n  if (x.length < 2) return;\n  if (x.length !== y.length) {\n    throw new Error('The X and Y arrays mush have the same length');\n  }\n\n  let current = x[0];\n  let counter = 0;\n\n  for (let i = 1; i < x.length; i++) {\n    if (current !== x[i]) {\n      counter++;\n      current = x[i];\n      x[counter] = x[i];\n      if (i !== counter) {\n        y[counter] = 0;\n      }\n    }\n    if (i !== counter) {\n      y[counter] += y[i];\n    }\n  }\n\n  x.length = counter + 1;\n  y.length = counter + 1;\n}\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options={}]\n * @param {boolean} [options.rescale = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.min(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {object{x:<Array<number>>,y:<Array<number>>}\n */\nfunction parseXY(text, options = {}) {\n  let {\n    rescale = false,\n    uniqueX: uniqueX$1 = false,\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Number.MAX_SAFE_INTEGER,\n    minNumberColumns = 2,\n  } = options;\n\n  maxNumberColumns = Math.max(maxNumberColumns, xColumn + 1, yColumn + 1);\n  minNumberColumns = Math.max(xColumn + 1, yColumn + 1, minNumberColumns);\n\n  let lines = text.split(/[\\r\\n]+/);\n\n  let maxY = Number.MIN_VALUE;\n  let result = { x: [], y: [] };\n  let info = [];\n  for (let l = 0; l < lines.length; l++) {\n    let line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      let fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n        fields.length >= minNumberColumns &&\n        fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result.x.push(x);\n        result.y.push(y);\n      }\n    } else if (line) {\n      info.push({ position: result.x.length, value: line });\n    }\n  }\n\n  if (uniqueX$1) {\n    uniqueX(result);\n  }\n\n  if (rescale) {\n    for (let i = 0; i < result.y.length; i++) {\n      result.y[i] /= maxY;\n    }\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result,\n  };\n}\n\n/**\n * Create a spectrum from a text file\n * @param {string} text - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nfunction text(text, options = {}) {\n  const { kind, parserOptions = {} } = options;\n\n  const data = parseXY(text, parserOptions);\n\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data };\n}\n\n/**\n * Creates a g\n * @param {string} text - String containing the text data\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] Field separator\n * @return {object} - {matrix, data, x, ids}\n */\nfunction matrix(text, options = {}) {\n  const lines = text.split(/[\\r\\n]+/).filter((value) => value);\n  const { fs = '\\t' } = options;\n  let matrix = [];\n  let ids = [];\n  let meta = [];\n  let x = [];\n\n  let headers = lines[0].split(fs);\n  let labels = [];\n\n  for (let i = 0; i < headers.length; i++) {\n    let header = headers[i];\n    if (isNaN(header)) {\n      labels[i] = header;\n    } else {\n      x = headers.slice(i).map((value) => Number(value));\n      break;\n    }\n  }\n\n  for (let i = 1; i < lines.length; i++) {\n    let line = lines[i];\n    let parts = line.split('\\t');\n    ids.push(parts[0]);\n    let oneMeta = {};\n    meta.push(oneMeta);\n    for (let j = 1; j < parts.length; j++) {\n      if (j < labels.length) {\n        oneMeta[labels[j]] = parts[j];\n      } else {\n        matrix.push(parts.slice(labels.length).map((value) => Number(value)));\n        break;\n      }\n    }\n  }\n  return { x, meta, matrix, ids };\n}\n\nfunction getNormalizationAnnotations(filter = {}, boundary) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: 0, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: 10000, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n\n/**\n * @private\n * @param {*} spectra\n */\n\nfunction getBoxPlotData(spectra) {\n  let matrix = [];\n  let x = spectra[0].normalized.x;\n  for (let spectrum of spectra) {\n    matrix.push(spectrum.normalized.y);\n  }\n\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let result;\n  let aColumn = new Float64Array(nbRow);\n  for (let column = 0; column < nbColumn; column++) {\n    for (let row = 0; row < nbRow; row++) {\n      aColumn[row] = matrix[row][column];\n    }\n    let info = X.boxPlot(aColumn);\n    if (!result) {\n      result = { x };\n      for (let key in info) {\n        result[key] = [];\n      }\n    }\n    for (let key in info) {\n      result[key].push(info[key]);\n    }\n  }\n  return result;\n}\n\nfunction getBoxPlotAnnotations(spectra, options = {}) {\n  const {\n    q13FillColor = '#000',\n    q13FillOpacity = 0.3,\n    q2StrokeColor = '#000',\n    q2StrokeWidth = 3,\n    minMaxFillColor = '#000',\n    minMaxFillOpacity = 0.15,\n  } = options;\n  let annotations = [];\n\n  let data = getBoxPlotData(spectra);\n  if (q13FillOpacity && q13FillColor) {\n    let q13 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q1[i],\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q3[i],\n      });\n    }\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: q13FillColor,\n        fillOpacity: q13FillOpacity,\n        strokeWidth: 0.0000001,\n        position: q13,\n      },\n    });\n  }\n\n  if (q2StrokeColor && q2StrokeWidth) {\n    let q2 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i],\n      });\n    }\n    // Temp code because polyline is not working\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i],\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        strokeWidth: q2StrokeWidth,\n        strokeColor: q2StrokeColor,\n        position: q2,\n      },\n    });\n  }\n\n  if (minMaxFillColor && minMaxFillOpacity) {\n    let minMax = [];\n    for (let i = 0; i < data.x.length; i++) {\n      minMax.push({\n        x: data.x[i],\n        y: data.min[i],\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      minMax.push({\n        x: data.x[i],\n        y: data.max[i],\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: minMaxFillColor,\n        fillOpacity: minMaxFillOpacity,\n        strokeWidth: 0.0000001,\n        strokeColor: '#FFF',\n        position: minMax,\n      },\n    });\n  }\n\n  return annotations;\n}\n\nfunction addChartDataStyle(data, spectrum) {\n  data.styles = {\n    unselected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 1,\n      lineStyle: 1,\n    },\n    selected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 3,\n      lineStyle: 1,\n    },\n  };\n  data.label = spectrum.meta.id || spectrum.id;\n}\n\n/**\n * Retrieve a chart with selected original data\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by default all\n * @param {Array} [options.maxDataPoints=]\n */\nfunction getChart(spectra, options = {}) {\n  const { ids } = options;\n  let chart = {\n    data: [],\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.getData();\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n\nvar chroma = createCommonjsModule(function (module, exports) {\n/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n     module.exports = factory() ;\n}(commonjsGlobal, (function () {\n    var limit = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var clip_rgb = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n        var name = list[i];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var unpack = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var last = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb,\n    \tlimit: limit,\n    \ttype: type,\n    \tunpack: unpack,\n    \tlast: last,\n    \tPI: PI,\n    \tTWOPI: PI*2,\n    \tPITHIRD: PI/3,\n    \tDEG2RAD: PI / 180,\n    \tRAD2DEG: 180 / PI\n    };\n\n    var input = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$1 = utils.last;\n    var clip_rgb$1 = utils.clip_rgb;\n    var type$1 = utils.type;\n\n\n    var Color = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$1(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$1(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!input.sorted) {\n                input.autodetect = input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (input.format[mode]) {\n            var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$1(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color.prototype.toString = function toString () {\n        if (type$1(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color;\n\n    var chroma = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma.Color, [ null ].concat( args) ));\n    };\n\n    chroma.Color = Color_1;\n    chroma.version = '2.1.0';\n\n    var chroma_1 = chroma;\n\n    var unpack$1 = utils.unpack;\n    var max = Math.max;\n\n    var rgb2cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$1(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max(r,max(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk;\n\n    var unpack$2 = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$2(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var unpack$3 = utils.unpack;\n    var type$2 = utils.type;\n\n\n\n    Color_1.prototype.cmyk = function() {\n        return rgb2cmyk_1(this._rgb);\n    };\n\n    chroma_1.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input.format.cmyk = cmyk2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'cmyk');\n            if (type$2(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$4 = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$4(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css;\n\n    var unpack$5 = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$5(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl;\n\n    var unpack$6 = utils.unpack;\n    var last$3 = utils.last;\n\n\n    var round = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$6(args, 'rgba');\n        var mode = last$3(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css_1(rgb2hsl_1(rgba), mode);\n        }\n        rgba[0] = round(rgba[0]);\n        rgba[1] = round(rgba[1]);\n        rgba[2] = round(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css;\n\n    var unpack$7 = utils.unpack;\n    var round$1 = Math.round;\n\n    var hsl2rgb = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$7(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$1(c[0]*255),round$1(c[1]*255),round$1(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$2 = Math.round;\n\n    var css2rgb = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input.format.named) {\n            try {\n                return input.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb_1(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb_1(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb;\n\n    var type$3 = utils.type;\n\n\n\n\n    Color_1.prototype.css = function(mode) {\n        return rgb2css_1(this._rgb, mode);\n    };\n\n    chroma_1.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['css']) ));\n    };\n\n    input.format.css = css2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    input.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$8(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma_1.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color_1.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$9 = utils.unpack;\n\n    var rgb2hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$9(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg;\n\n    var unpack$a = utils.unpack;\n    var floor = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$a(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$b = utils.unpack;\n    var type$4 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hcg = function() {\n        return rgb2hcg_1(this._rgb);\n    };\n\n    chroma_1.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input.format.hcg = hcg2rgb_1;\n\n    input.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$b(args, 'hcg');\n            if (type$4(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$c = utils.unpack;\n    var last$4 = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$c(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last$4(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb;\n\n    var type$5 = utils.type;\n\n\n\n\n    Color_1.prototype.hex = function(mode) {\n        return rgb2hex_1(this._rgb, mode);\n    };\n\n    chroma_1.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hex']) ));\n    };\n\n    input.format.hex = hex2rgb_1;\n    input.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$5(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$d = utils.unpack;\n    var TWOPI = utils.TWOPI;\n    var min = Math.min;\n    var sqrt = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI - h;\n            }\n            h /= TWOPI;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi;\n\n    var unpack$e = utils.unpack;\n    var limit$1 = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$e(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit$1(i*r*3);\n        g = limit$1(i*g*3);\n        b = limit$1(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$f = utils.unpack;\n    var type$6 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsi = function() {\n        return rgb2hsi_1(this._rgb);\n    };\n\n    chroma_1.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input.format.hsi = hsi2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'hsi');\n            if (type$6(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$g = utils.unpack;\n    var type$7 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsl = function() {\n        return rgb2hsl_1(this._rgb);\n    };\n\n    chroma_1.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input.format.hsl = hsl2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$g(args, 'hsl');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$h = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$h(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv = rgb2hsl$1;\n\n    var unpack$i = utils.unpack;\n    var floor$1 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$i(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$1(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$j = utils.unpack;\n    var type$8 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma_1.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input.format.hsv = hsv2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$j(args, 'hsv');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var unpack$k = utils.unpack;\n    var pow = Math.pow;\n\n    var rgb2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$k(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > labConstants.t3) { return pow(t, 1 / 3); }\n        return t / labConstants.t2 + labConstants.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab;\n\n    var unpack$l = utils.unpack;\n    var pow$1 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$l(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = labConstants.Yn * lab_xyz(y);\n        x = labConstants.Xn * lab_xyz(x);\n        z = labConstants.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$9 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lab = function() {\n        return rgb2lab_1(this._rgb);\n    };\n\n    chroma_1.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lab']) ));\n    };\n\n    input.format.lab = lab2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'lab');\n            if (type$9(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$n = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$1 = Math.sqrt;\n    var atan2 = Math.atan2;\n    var round$4 = Math.round;\n\n    var lab2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$n(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$1(a * a + b * b);\n        var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n        if (round$4(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch;\n\n    var unpack$o = utils.unpack;\n\n\n\n    var rgb2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab_1(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch_1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch;\n\n    var unpack$p = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin = Math.sin;\n    var cos$1 = Math.cos;\n\n    var lch2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$p(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$1(h) * c, sin(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab;\n\n    var unpack$q = utils.unpack;\n\n\n\n    var lch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$q(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab_1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb_1 (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb;\n\n    var unpack$r = utils.unpack;\n\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$r(args, 'hcl').reverse();\n        return lch2rgb_1.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$s = utils.unpack;\n    var type$a = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lch = function() { return rgb2lch_1(this._rgb); };\n    Color_1.prototype.hcl = function() { return rgb2lch_1(this._rgb).reverse(); };\n\n    chroma_1.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lch']) ));\n    };\n    chroma_1.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input.format.lch = lch2rgb_1;\n    input.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$s(args, m);\n            if (type$a(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11;\n\n    var type$b = utils.type;\n\n\n\n\n\n    Color_1.prototype.name = function() {\n        var hex = rgb2hex_1(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11_1[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11_1[name]) { return hex2rgb_1(w3cx11_1[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$t = utils.unpack;\n\n    var rgb2num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$t(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num;\n\n    var type$c = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var type$d = utils.type;\n\n\n\n    Color_1.prototype.num = function() {\n        return rgb2num_1(this._rgb);\n    };\n\n    chroma_1.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['num']) ));\n    };\n\n    input.format.num = num2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var unpack$u = utils.unpack;\n    var type$e = utils.type;\n    var round$5 = Math.round;\n\n    Color_1.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$5);\n    };\n\n    Color_1.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$5(v)) : v;\n        });\n    };\n\n    chroma_1.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$u(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$u(args, 'rgba');\n            if (type$e(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log = Math.log;\n\n    var temperature2rgb = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n\n    var unpack$v = utils.unpack;\n    var round$6 = Math.round;\n\n    var rgb2temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$v(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb_1(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round$6(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature;\n\n    Color_1.prototype.temp =\n    Color_1.prototype.kelvin =\n    Color_1.prototype.temperature = function() {\n        return rgb2temperature_1(this._rgb);\n    };\n\n    chroma_1.temp =\n    chroma_1.kelvin =\n    chroma_1.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['temp']) ));\n    };\n\n    input.format.temp =\n    input.format.kelvin =\n    input.format.temperature = temperature2rgb_1;\n\n    var type$f = utils.type;\n\n    Color_1.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$f(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    Color_1.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    Color_1.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= labConstants.Kn * amount;\n    \treturn new Color_1(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color_1.prototype.darker = Color_1.prototype.darken;\n    Color_1.prototype.brighter = Color_1.prototype.brighten;\n\n    Color_1.prototype.get = function(mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var type$g = utils.type;\n    var pow$2 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color_1.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$g(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color_1([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color_1([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color_1([0,0,0]), this) : test(this, new Color_1([255,255,255]))).rgb();\n            return new Color_1(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$2((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator = {};\n\n    var type$h = utils.type;\n\n\n    var mix = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$h(col1) !== 'object') { col1 = new Color_1(col1); }\n        if (type$h(col2) !== 'object') { col2 = new Color_1(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    Color_1.prototype.mix =\n    Color_1.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    Color_1.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color_1([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    Color_1.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += labConstants.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color_1(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var type$i = utils.type;\n\n    Color_1.prototype.set = function(mc, value, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) {\n                if (type$i(value) == 'string') {\n                    switch(value.charAt(0)) {\n                        case '+': src[i] += +value; break;\n                        case '-': src[i] += +value; break;\n                        case '*': src[i] *= +(value.substr(1)); break;\n                        case '/': src[i] /= +(value.substr(1)); break;\n                        default: src[i] = +value;\n                    }\n                } else if (type$i(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color_1(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var rgb$1 = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.rgb = rgb$1;\n\n    var sqrt$2 = Math.sqrt;\n    var pow$3 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color_1(\n            sqrt$2(pow$3(x1,2) * (1-f) + pow$3(x2,2) * f),\n            sqrt$2(pow$3(y1,2) * (1-f) + pow$3(y2,2) * f),\n            sqrt$2(pow$3(z1,2) * (1-f) + pow$3(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.lrgb = lrgb;\n\n    var lab$1 = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator.lab = lab$1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1-(hue0+360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1+360-hue0;\n            } else{\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1-lbv0);\n        return new Color_1([hue, sat, lbv], m);\n    };\n\n    var lch$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator.lch = lch$1;\n    interpolator.hcl = lch$1;\n\n    var num$1 = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color_1(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator.num = num$1;\n\n    var hcg$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator.hcg = hcg$1;\n\n    var hsi$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator.hsi = hsi$1;\n\n    var hsl$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator.hsl = hsl$1;\n\n    var hsv$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator.hsv = hsv$1;\n\n    var clip_rgb$2 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$3 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$1 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$1(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$1(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color_1(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$3(xyz[0]);\n        xyz[1] = sqrt$3(xyz[1]);\n        xyz[2] = sqrt$3(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color_1(clip_rgb$2(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n\n    var type$j = utils.type;\n\n    var pow$5 = Math.pow;\n\n    var scale = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma_1('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$j(colors) === 'string' && chroma_1.brewer &&\n                chroma_1.brewer[colors.toLowerCase()]) {\n                colors = chroma_1.brewer[colors.toLowerCase()];\n            }\n            if (type$j(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma_1(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$5(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$j(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma_1.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$j(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma_1(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$j(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma_1.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma_1.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$j(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma_1[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma_1(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n\n\n\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 5) {\n            var I0 = bezier(colors.slice(0, 3));\n            var I1 = bezier(colors.slice(2, 5));\n            I = function(t) {\n                if (t < 0.5) {\n                    return I0(t*2);\n                } else {\n                    return I1((t-0.5)*2);\n                }\n            };\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n\n\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma_1(top).rgb();\n            var c1 = chroma_1(bottom).rgb();\n            return chroma_1.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken$1 = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken$1));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$k = utils.type;\n    var clip_rgb$3 = utils.clip_rgb;\n    var TWOPI$2 = utils.TWOPI;\n    var pow$6 = Math.pow;\n    var sin$2 = Math.sin;\n    var cos$3 = Math.cos;\n\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$k(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI$2 * (((start+120)/360) + (rotations * fract));\n            var l = pow$6(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$3(a);\n            var sin_a = sin$2(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma_1(clip_rgb$3([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$k(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$k(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma_1.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var digits = '0123456789abcdef';\n\n    var floor$2 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$2(random() * 16));\n        }\n        return new Color_1(code, 'hex');\n    };\n\n    var log$1 = Math.log;\n    var pow$7 = Math.pow;\n    var floor$3 = Math.floor;\n    var abs = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log$1(min);\n            var max_log = Math.LOG10E * log$1(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$7(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor$3(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var sqrt$4 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var abs$1 = Math.abs;\n    var cos$4 = Math.cos;\n    var PI$2 = Math.PI;\n\n    var deltaE = function(a, b, L, C) {\n        if ( L === void 0 ) L=1;\n        if ( C === void 0 ) C=1;\n\n        // Delta E (CMC)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var c1 = sqrt$4((a1 * a1) + (b1 * b1));\n        var c2 = sqrt$4((a2 * a2) + (b2 * b2));\n        var sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + (0.01765 * L1));\n        var sc = ((0.0638 * c1) / (1.0 + (0.0131 * c1))) + 0.638;\n        var h1 = c1 < 0.000001 ? 0.0 : (atan2$2(b1, a1) * 180.0) / PI$2;\n        while (h1 < 0) { h1 += 360; }\n        while (h1 >= 360) { h1 -= 360; }\n        var t = (h1 >= 164.0) && (h1 <= 345.0) ? (0.56 + abs$1(0.2 * cos$4((PI$2 * (h1 + 168.0)) / 180.0))) : (0.36 + abs$1(0.4 * cos$4((PI$2 * (h1 + 35.0)) / 180.0)));\n        var c4 = c1 * c1 * c1 * c1;\n        var f = sqrt$4(c4 / (c4 + 1900.0));\n        var sh = sc * (((f * t) + 1.0) - f);\n        var delL = L1 - L2;\n        var delC = c1 - c2;\n        var delA = a1 - a2;\n        var delB = b1 - b2;\n        var dH2 = ((delA * delA) + (delB * delB)) - (delC * delC);\n        var v1 = delL / (L * sl);\n        var v2 = delC / (C * sc);\n        var v3 = sh;\n        return sqrt$4((v1 * v1) + (v2 * v2) + (dH2 / (v3 * v3)));\n    };\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color_1, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n\n\n\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma_1.hsl(180,1,.9), chroma_1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n        var key = list$1[i$1];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma_1.average = average;\n    chroma_1.bezier = bezier_1;\n    chroma_1.blend = blend_1;\n    chroma_1.cubehelix = cubehelix;\n    chroma_1.mix = chroma_1.interpolate = mix;\n    chroma_1.random = random_1;\n    chroma_1.scale = scale;\n\n    // other utility methods\n    chroma_1.analyze = analyze_1.analyze;\n    chroma_1.contrast = contrast;\n    chroma_1.deltaE = deltaE;\n    chroma_1.distance = distance;\n    chroma_1.limits = analyze_1.limits;\n    chroma_1.valid = valid;\n\n    // scale\n    chroma_1.scales = scales;\n\n    // colors\n    chroma_1.colors = w3cx11_1;\n    chroma_1.brewer = colorbrewer_1;\n\n    var chroma_js = chroma_1;\n\n    return chroma_js;\n\n})));\n});\n\n/**\n * Retrieve a chart with autocorrelation color\n * @param {SpectraProcessor} [spectraProcessor]\n * @param {number} [index]\n * @param {object} [options={}]\n * @param {Array} [options.autocorrelation] precalculated autocorrelation {x,y}\n * @param {Array} [options.maxDataPoints=]\n */\nfunction getAutocorrelationChart(spectraProcessor, index, options = {}) {\n  const {\n    autocorrelation = spectraProcessor.getAutocorrelation(index),\n  } = options;\n\n  let max = autocorrelation.y.reduce(function(a, b) {\n    return isNaN(b) ? a : Math.max(a, b);\n  }, Number.MIN_VALUE);\n\n  let min = autocorrelation.y.reduce(function(a, b) {\n    return isNaN(b) ? a : Math.min(a, b);\n  }, Number.MAX_VALUE);\n\n  let colorCallback = chroma\n    .scale(['blue', 'cyan', 'yellow', 'red'])\n    .domain([min, max])\n    .mode('lch');\n\n  let colorScale = autocorrelation.y.map((y) => colorCallback(y));\n\n  let mean = spectraProcessor.getMeanData();\n\n  let colorSpectrum = {\n    type: 'color',\n    x: mean.x,\n    y: mean.y,\n    color: colorScale,\n    styles: {\n      unselected: {\n        lineWidth: 1,\n        lineStyle: 1,\n      },\n      selected: {\n        lineWidth: 3,\n        lineStyle: 1,\n      },\n    },\n  };\n\n  return colorSpectrum;\n}\n\n/**\n * @private\n * @param {*} spectra\n * @param {*} options\n */\n\nfunction getNormalizedData(spectra, options = {}) {\n  const { ids } = options;\n\n  let matrix = [];\n  let meta = [];\n  let currentIDs = [];\n  let x = [];\n\n  if (Array.isArray(spectra) && spectra.length > 0) {\n    for (let spectrum of spectra) {\n      if (!ids || ids.includes(spectrum.id)) {\n        currentIDs.push(spectrum.id);\n        matrix.push(spectrum.normalized.y);\n        meta.push(spectrum.meta);\n      }\n    }\n    x = spectra[0].normalized.x;\n  }\n\n  return { ids: currentIDs, matrix, meta, x };\n}\n\nfunction getTrackAnnotation(spectra, index, options = {}) {\n  const { ids } = options;\n  let annotations = [];\n\n  let normalized = getNormalizedData(spectra, { ids });\n\n  if (normalized.ids.length === 0) return annotations;\n  let line = 0;\n\n  // header containing X coordinate\n  annotations.push({\n    type: 'line',\n    position: [\n      { x: `${70}px`, y: `${15 + 15 * line}px` },\n      { x: `${85}px`, y: `${15 + 15 * line}px` },\n    ],\n    strokeWidth: 0.0000001,\n    label: {\n      size: 16,\n      text: `x: ${normalized.x[index].toPrecision(6)}`,\n      position: { x: `${130}px`, y: `${20 + 15 * line}px` },\n    },\n  });\n  line++;\n\n  for (let i = 0; i < normalized.ids.length; i++) {\n    let id = normalized.ids[i];\n    let meta = normalized.meta[i];\n    let y = normalized.matrix[i][index];\n    annotations.push({\n      type: 'line',\n      position: [\n        { x: `${70}px`, y: `${15 + 15 * line}px` },\n        { x: `${85}px`, y: `${15 + 15 * line}px` },\n      ],\n      strokeColor: meta.color,\n      strokeWidth: 2,\n      label: {\n        text: `${y.toPrecision(4)} - ${id}`,\n        position: { x: `${90}px`, y: `${20 + 15 * line}px` },\n      },\n    });\n    line++;\n  }\n\n  return annotations;\n}\n\nfunction getNormalizedChart(spectra, options = {}) {\n  const { ids } = options;\n  let chart = {\n    data: [],\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.normalized;\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n\n/**\n *\n * @param {SpectraProcessor} spectraProcessor\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {Array} [options.ranges] Array of object containing {from:'', to:'', label:''}\n * @param {Array} [options.calculations] Array of object containing {label:'', formula:''}\n * @param {boolean} [options.relative=false]\n */\nfunction getScaledChart(spectraProcessor, options = {}) {\n  let scaled = spectraProcessor.getScaledData(options);\n\n  let chart = {\n    data: [],\n  };\n  if (!scaled || !scaled.matrix) return chart;\n\n  for (let i = 0; i < scaled.matrix.length; i++) {\n    let data = {\n      x: scaled.x,\n      y: scaled.matrix[i],\n    };\n    addChartDataStyle(data, { meta: scaled.meta[i], id: scaled.ids[i] });\n    chart.data.push(data);\n  }\n\n  return chart;\n}\n\n/**\n * @private\n */\n\nfunction getAutocorrelation(normalized, index) {\n  let matrix = normalized.matrix;\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let array1 = new Float64Array(nbRow);\n  let array2 = new Float64Array(nbRow);\n  let result = new Array(nbColumn);\n  for (let j = 0; j < nbRow; j++) {\n    array1[j] = matrix[j][index];\n  }\n  for (let i = 0; i < nbColumn; i++) {\n    for (let j = 0; j < nbRow; j++) {\n      array2[j] = matrix[j][i];\n    }\n    result[i] = X.correlation(array1, array2);\n  }\n  return {\n    x: normalized.x,\n    y: result,\n  };\n}\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nfunction checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nfunction checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nfunction checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nfunction checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nfunction checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nfunction checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nfunction checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nfunction checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nfunction newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nfunction sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nfunction sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nfunction sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nfunction productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nfunction productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nfunction varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nfunction varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nfunction centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nfunction centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nfunction centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nfunction getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nfunction scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nfunction getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nfunction scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nfunction getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nfunction scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n\nfunction inspectMatrix() {\n  const indent = ' '.repeat(2);\n  const indentData = ' '.repeat(4);\n  return `${this.constructor.name} {\n${indent}[\n${indentData}${inspectData(this, indentData)}\n${indent}]\n${indent}rows: ${this.rows}\n${indent}columns: ${this.columns}\n}`;\n}\n\nconst maxRows = 15;\nconst maxColumns = 10;\nconst maxNumSize = 8;\n\nfunction inspectData(matrix, indent) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j)));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indent}`);\n}\n\nfunction formatNumber(num) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.substring(eIndex);\n  return exponential.substring(0, maxNumSize - e.length) + e;\n}\n\nfunction installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n\nclass AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nclass Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n\n/**\n * @private\n */\n\nfunction getMeanData(normalized) {\n  let matrix = new Matrix(normalized.matrix);\n  return {\n    x: normalized.x,\n    y: matrix.mean('column'),\n  };\n}\n\n/**\n * @private\n * @param {*} spectra\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] field separator\n * @param {string} [options.rs='\\n'] record (line) separator\n */\n\nfunction getNormalizedText(spectra, options = {}) {\n  let { fs = '\\t', rs = '\\n' } = options;\n  let { matrix, meta, ids, x } = getNormalizedData(spectra);\n  let allKeysObject = {};\n  for (let metum of meta) {\n    for (let key of Object.keys(metum)) {\n      let type = typeof metum[key];\n      if (type === 'number' || type === 'string' || type === 'boolean') {\n        allKeysObject[key] = true;\n      }\n    }\n  }\n  let allKeys = Object.keys(allKeysObject);\n\n  let lines = [];\n  let line = [];\n  line.push('id', ...allKeys, ...x);\n  lines.push(line.join(fs));\n\n  for (let i = 0; i < ids.length; i++) {\n    line = [];\n    line.push(ids[i]);\n    for (let key of allKeys) {\n      line.push(meta[i][key]);\n    }\n    line.push(...matrix[i]);\n    lines.push(line.join(fs));\n  }\n\n  return lines.join(rs);\n}\n\nfunction getFromToIndex$1(xs, range) {\n  let { from, to } = range;\n  if (from === undefined) {\n    from = xs[0];\n  }\n  if (to === undefined) {\n    to = xs[xs.length - 1];\n  }\n\n  return {\n    fromIndex: X.findClosestIndex(xs, from),\n    toIndex: X.findClosestIndex(xs, to),\n  };\n}\n\nfunction min$1(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex$1(targetSpectrum.normalized.x, range);\n\n  let targetValue = XY.minYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => XY.minYPoint(spectrum.normalized, fromToIndex).y,\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\nfunction max$1(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex$1(targetSpectrum.normalized.x, range);\n\n  let targetValue = XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => XY.maxYPoint(spectrum.normalized, fromToIndex).y,\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\nfunction maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n\nfunction checkArraySize(x, y) {\n  if (!Array.isArray(x) || !Array.isArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n\nclass BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (Array.isArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n)\n    };\n  }\n}\n\nclass SimpleLinearRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = [y.intercept, y.slope];\n    } else {\n      checkArraySize(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'simpleLinearRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(x) {\n    return this.slope * x + this.intercept;\n  }\n\n  computeX(y) {\n    return (y - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    let result = 'f(x) = ';\n    if (this.slope !== 0) {\n      const xFactor = maybeToPrecision(this.slope, precision);\n      result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\n      if (this.intercept !== 0) {\n        const absIntercept = Math.abs(this.intercept);\n        const operator = absIntercept === this.intercept ? '+' : '-';\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'simpleLinearRegression') {\n      throw new TypeError('not a SLR model');\n    }\n    return new SimpleLinearRegression(true, json);\n  }\n}\n\nfunction regress(slr, x, y) {\n  const n = x.length;\n  let xSum = 0;\n  let ySum = 0;\n\n  let xSquared = 0;\n  let xY = 0;\n\n  for (let i = 0; i < n; i++) {\n    xSum += x[i];\n    ySum += y[i];\n    xSquared += x[i] * x[i];\n    xY += x[i] * y[i];\n  }\n\n  const numerator = n * xY - xSum * ySum;\n  slr.slope = numerator / (n * xSquared - xSum * xSum);\n  slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n  slr.coefficients = [slr.intercept, slr.slope];\n}\n\nfunction minMax(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex$1(targetSpectrum.normalized.x, range);\n\n  let targetValue = {\n    min: XY.minYPoint(targetSpectrum.normalized, fromToIndex).y,\n    max: XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y,\n  };\n\n  let values = spectra.map((spectrum) => {\n    return {\n      min: XY.minYPoint(spectrum.normalized, fromToIndex).y,\n      max: XY.maxYPoint(spectrum.normalized, fromToIndex).y,\n    };\n  });\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    const regression = new SimpleLinearRegression(\n      [targetValue.min, targetValue.max],\n      [values[i].min, values[i].max],\n    );\n\n    let length = spectrum.normalized.y.length;\n    let scaled = new Array(length);\n    for (let j = 0; j < length; j++) {\n      scaled[j] = regression.computeX(spectrum.normalized.y[j]);\n    }\n    matrix.push(scaled);\n  }\n\n  return matrix;\n}\n\nfunction range(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex$1(targetSpectrum.normalized.x, range);\n\n  let targetValue = XY.integration(targetSpectrum.normalized, fromToIndex);\n\n  let values = spectra.map((spectrum) =>\n    XY.integration(spectrum.normalized, fromToIndex),\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\n/**\n * @private\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n * @param {Array} [options.ranges] Array of object containing {from:'', to:'', label:''}\n * @param {Array} [options.calculations] Array of object containing {label:'', formula:''}\n * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[], ranges:[object] }\n */\n\nfunction getScaledData(spectraProcessor, options = {}) {\n  if (!spectraProcessor.spectra || !spectraProcessor.spectra[0]) return {};\n  const {\n    range: range$1,\n    targetID,\n    relative,\n    method,\n    ids,\n    ranges,\n    calculations,\n  } = options;\n  let targetSpectrum =\n    spectraProcessor.getSpectrum(targetID) || spectraProcessor.spectra[0];\n  let spectra = spectraProcessor.getSpectra(ids);\n  let result;\n\n  if (method === '' || method === undefined) {\n    result = getNormalizedData(spectra);\n  } else {\n    let matrix;\n    switch (method.toLowerCase()) {\n      case 'min':\n        matrix = min$1(spectra, targetSpectrum, range$1);\n        break;\n      case 'max':\n        matrix = max$1(spectra, targetSpectrum, range$1);\n        break;\n      case 'minmax':\n        matrix = minMax(spectra, targetSpectrum, range$1);\n        break;\n      case 'range':\n        matrix = range(spectra, targetSpectrum, range$1);\n        break;\n      default:\n        throw new Error(`getScaledData: unknown method: ${method}`);\n    }\n    let meta = [];\n    let currentIDs = [];\n    for (let spectrum of spectra) {\n      currentIDs.push(spectrum.id);\n      meta.push(spectrum.meta);\n    }\n    let x = spectra[0].normalized.x;\n    result = { ids: currentIDs, matrix, meta, x };\n  }\n\n  if (relative) {\n    for (let i = 0; i < result.matrix.length; i++) {\n      result.matrix[i] = X.subtract(\n        result.matrix[i],\n        targetSpectrum.normalized.y,\n      );\n    }\n  }\n\n  if (ranges) {\n    result.ranges = [];\n    for (let i = 0; i < result.matrix.length; i++) {\n      let rangesCopy = JSON.parse(JSON.stringify(ranges));\n      let yNormalized = result.matrix[i];\n      let resultRanges = {};\n      result.ranges.push(resultRanges);\n      for (let currentRange of rangesCopy) {\n        if (currentRange.label) {\n          let fromToIndex = getFromToIndex$1(\n            targetSpectrum.normalized.x,\n            currentRange,\n          );\n          currentRange.integration = XY.integration(\n            { x: result.x, y: yNormalized },\n            fromToIndex,\n          );\n          currentRange.maxPoint = XY.maxYPoint(\n            { x: result.x, y: yNormalized },\n            fromToIndex,\n          );\n          resultRanges[currentRange.label] = currentRange;\n        }\n      }\n    }\n  }\n\n  if (calculations && result.ranges) {\n    result.calculations = result.ranges.map(() => {\n      return {};\n    });\n    const parameters = Object.keys(result.ranges[0]);\n    for (let calculation of calculations) {\n      // eslint-disable-next-line no-new-func\n      const callback = new Function(\n        ...parameters,\n        `return ${calculation.formula}`,\n      );\n      for (let i = 0; i < result.ranges.length; i++) {\n        let oneRanges = result.ranges[i];\n        let values = parameters.map((key) => oneRanges[key].integration);\n        result.calculations[i][calculation.label] = callback(...values);\n      }\n    }\n  }\n\n  return result;\n}\n\nclass SpectraProcessor {\n  /**\n   * Manager a large number of spectra with the possibility to normalize the data\n   * and skip the original data.\n   * @param {object} [options={}]\n   * @param {boolean} [options.maxMemory=64M]\n   * @param {object} [options.normalization={}] options to normalize the spectra before comparison\n   * @param {number} [options.normalization.from]\n   * @param {number} [options.normalization.to]\n   * @param {number} [options.normalization.numberOfPoints]\n   * @param {array<object>} [options.normalization.filters]\n   * @param {string} [options.normalization.filters.X.name]\n   * @param {object} [options.normalization.filters.X.options]\n   * @param {array<object>} [options.normalization.exclusions]\n   * @param {string} [options.normalization.exclusions.X.from]\n   * @param {object} [options.normalization.exclusions.X.to]\n   */\n  constructor(options = {}) {\n    this.normalization = options.normalization;\n    this.maxMemory = options.maxMemory || 64 * 1024 * 1024;\n    this.keepOriginal = true;\n    this.spectra = [];\n    this.boundaries = {\n      minX: Number.MAX_VALUE,\n      maxX: Number.MIN_VALUE,\n      minY: Number.MAX_VALUE,\n      maxY: Number.MIN_VALUE,\n    };\n  }\n\n  getNormalizationAnnotations() {\n    return getNormalizationAnnotations(\n      this.normalization,\n      this.getNormalizedBoundary(),\n    );\n  }\n\n  /**\n   * Recalculate the normalized data using the stored original data if available\n   * This will throw an error in the original data is not present\n   * @param {number} [normalization.from]\n   * @param {number} [normalization.to]\n   * @param {number} [normalization.numberOfPoints]\n   * @param {array<object>} [normalization.filters]\n   * @param {string} [normalization.filters.X.name]\n   * @param {object} [normalization.filters.X.options]\n   * @param {array<object>} [normalization.exclusions]\n   * @param {string} [normalization.exclusions.X.from]\n   * @param {object} [normalization.exclusions.X.to]\n   */\n  setNormalization(normalization = {}) {\n    if (JSON.stringify(this.normalization) === JSON.stringify(normalization)) {\n      return;\n    }\n    this.normalization = normalization;\n    for (let spectrum of this.spectra) {\n      spectrum.updateNormalization(this.normalization);\n    }\n  }\n\n  getNormalization() {\n    return this.normalization;\n  }\n\n  /**\n   * Returns an object {x:[], y:[]} containing the autocorrelation for the\n   * specified index\n   * @param {integer} [index] point of the spectrum to autocorrelate\n   * @param {object} [options={}]\n   * @param {array} [options.ids=[]] list of ids, by default all spectra\n   */\n  getAutocorrelation(index, options) {\n    return getAutocorrelation(this.getNormalizedData(options), index);\n  }\n\n  /**\n   * Returns a {x:[], y:[]} containg the average of specified spectra\n   * @param {object} [options={}]\n   * @param {array} [options.ids=[]] list of ids, by default all spectra\n   */\n  getMeanData(options) {\n    return getMeanData(this.getNormalizedData(options));\n  }\n\n  /**\n   * Returns an object contains 4 parameters with the normalized data\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   */\n  getNormalizedData(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedData(spectra);\n  }\n\n  /**\n   * Returns a tab separated value containing the normalized data\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   * @param {string} [options.fs='\\t'] field separator\n   * @param {string} [options.rs='\\n'] record (line) separator\n   * @returns {string}\n   */\n  getNormalizedText(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedText(spectra, options);\n  }\n\n  getMinMaxX() {\n    let min = Number.MAX_VALUE;\n    let max = Number.MIN_VALUE;\n    for (let spectrum of this.spectra) {\n      if (spectrum.minX < min) min = spectrum.minX;\n      if (spectrum.maxX > max) max = spectrum.maxX;\n    }\n    return { min, max };\n  }\n\n  /**\n\n   * Returns an object contains 4 parameters with the scaled data\n   * @param {object} [options={}] scale spectra based on various parameters\n   * @param {object} [options.range] from - to\n   * @param {Array} [options.ids] ids of selected spectra, by default all\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   */\n  getScaledData(options) {\n    return getScaledData(this, options);\n  }\n\n  /**\n   * Add jcamp\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.parserOptions={}] XY parser options\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {object} [options.kind]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromText(text$1, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = text(text$1, options);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  /**\n   * Add jcamp\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} jcamp\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromJcamp(jcamp$1, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = jcamp(jcamp$1);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  updateRangesInfo(options) {\n    for (let spectrum of this.spectra) {\n      spectrum.updateRangesInfo(options);\n    }\n  }\n\n  /**\n   * Add a spectrum based on the data\n   * @param {object} data {x, y}}\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.id]\n   * @param {object} [options.normalization={}]\n   * @param {object} [options.normalized]\n   * @return {Spectrum}\n   */\n\n  addFromData(data, options = {}) {\n    if (this.spectra.length === 0) this.keepOriginal = true;\n    const id =\n      options.id ||\n      Math.random()\n        .toString(36)\n        .substring(2, 10);\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.spectra.length;\n    let spectrum = new Spectrum(data.x, data.y, id, {\n      meta: options.meta,\n      normalized: options.normalized,\n      normalization: this.normalization,\n    });\n    this.spectra[index] = spectrum;\n    if (!this.keepOriginal) {\n      spectrum.removeOriginal();\n    } else {\n      let memoryInfo = this.getMemoryInfo();\n      if (memoryInfo.total > this.maxMemory) {\n        this.keepOriginal = false;\n        this.removeOriginals();\n      }\n    }\n  }\n\n  removeOriginals() {\n    for (let spectrum of this.spectra) {\n      spectrum.removeOriginal();\n    }\n  }\n\n  /**\n   * Remove the spectrum from the SpectraProcessor for the specified id\n   * @param {string} id\n   */\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra.splice(index, 1);\n  }\n\n  /**\n   * Remove all the spectra not present in the list\n   * @param {Array} [ids] Array of ids of the spectra to keep\n   */\n  removeSpectraNotIn(ids) {\n    let currentIDs = this.spectra.map((spectrum) => spectrum.id);\n    for (let id of currentIDs) {\n      if (!ids.includes(id)) {\n        this.removeSpectrum(id);\n      }\n    }\n  }\n\n  /**\n   * Checks if the ID of a spectrum exists in the SpectraProcessor\n   * @param {string} id\n   */\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.spectra.length; i++) {\n      let spectrum = this.spectra[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns a spectrum from its ID\n   * @param {Array} ids\n   * @returns {Array<Spectrum}\n   */\n  getSpectra(ids) {\n    if (!ids || !Array.isArray(ids)) return this.spectra;\n    let spectra = [];\n    for (let id of ids) {\n      let index = this.getSpectrumIndex(id);\n      if (index !== undefined) {\n        spectra.push(this.spectra[index]);\n      }\n    }\n    return spectra;\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra[index];\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getChart() {\n    return getChart(this.spectra);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getAutocorrelationChart(index, options) {\n    return getAutocorrelationChart(this, index, options);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for the specified index\n   * @returns {object}\n   */\n  getTrackAnnotation(index, options) {\n    return getTrackAnnotation(this.spectra, index, options);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for box plot\n   * @returns {object}\n   */\n  getBoxPlotAnnotations(options) {\n    return getBoxPlotAnnotations(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @returns {object}\n   */\n  getNormalizedChart(options) {\n    return getNormalizedChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the scaled normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @param {object} [options.range] from - to\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object}\n   */\n  getScaledChart(options) {\n    return getScaledChart(this, options);\n  }\n\n  getMemoryInfo() {\n    let memoryInfo = { original: 0, normalized: 0, total: 0 };\n    this.spectra.forEach((spectrum) => {\n      let memory = spectrum.memory;\n      memoryInfo.original += memory.original;\n      memoryInfo.normalized += memory.normalized;\n      memoryInfo.total += memory.total;\n    });\n    memoryInfo.keepOriginal = this.keepOriginal;\n    memoryInfo.maxMemory = this.maxMemory;\n    return memoryInfo;\n  }\n\n  getNormalizedBoundary() {\n    let boundary = {\n      x: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n      y: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n    };\n    for (let spectrum of this.spectra) {\n      if (spectrum.normalizedBoundary.x.min < boundary.x.min) {\n        boundary.x.min = spectrum.normalizedBoundary.x.min;\n      }\n      if (spectrum.normalizedBoundary.x.max > boundary.x.max) {\n        boundary.x.max = spectrum.normalizedBoundary.x.max;\n      }\n      if (spectrum.normalizedBoundary.y.min < boundary.y.min) {\n        boundary.y.min = spectrum.normalizedBoundary.y.min;\n      }\n      if (spectrum.normalizedBoundary.y.max > boundary.y.max) {\n        boundary.y.max = spectrum.normalizedBoundary.y.max;\n      }\n    }\n    return boundary;\n  }\n\n  /**\n   * Create SpectraProcessor from normalized TSV\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.separator='\\t']\n   */\n  static fromNormalizedMatrix(text, options = {}) {\n    let parsed = matrix(text, options);\n    if (!parsed) {\n      throw new Error('Can not parse TSV file');\n    }\n    let spectraProcessor = new SpectraProcessor();\n\n    spectraProcessor.setNormalization({\n      from: parsed.x[0],\n      to: parsed.x[parsed.x.length - 1],\n      numberOfPoints: parsed.x.length,\n    });\n    spectraProcessor.keepOriginal = false;\n\n    for (let i = 0; i < parsed.ids.length; i++) {\n      spectraProcessor.addFromData(\n        { x: [], y: [] },\n        {\n          normalized: {\n            x: parsed.x,\n            y: parsed.matrix[i],\n          },\n          id: parsed.ids[i],\n          meta: parsed.meta[i],\n        },\n      );\n    }\n\n    return spectraProcessor;\n  }\n}\n\nexports.SpectraProcessor = SpectraProcessor;\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","defineProperty","exports","value","commonjsGlobal","globalThis","window","global","self","createCommonjsModule","fn","module","array","compareNumbers","a","b","sum","values","i","length","max","l","min","minMax","arithmeticMean","mean","geometricMean","mul","Math","pow","logMean","lnsum","log","grandMean","means","samples","n","truncatedMean","percent","alreadySorted","undefined","concat","sort","k","floor","harmonicMean","RangeError","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","theVariance","x","standardDeviation","sqrt","standardError","robustMeanAndStdev","y","stdev","averageDeviations","Array","abs","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","index","indexOf","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","g","kurtosis","s4","m4","v","c","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","result","standardize","standardDev","cumulativeSum","array_1","array_2","array_3","array_4","array_5","array_6","array_7","array_8","array_9","array_10","array_11","array_12","array_13","array_14","array_15","array_16","array_17","array_18","array_19","array_20","array_21","array_22","array_23","array_24","array_25","array_26","array_27","array_28","array_29","array_30","array_31","getZones","from","to","exclusions","filter","exclusion","JSON","parse","stringify","forEach","zones","currentFrom","push","filterX","points","options","currentZoneIndex","newX","newY","position","getData","spectrum","data","src","_typeof","obj","Symbol","iterator","constructor","sequentialFill","input","arguments","TypeError","_options","_options$from","_options$to","_options$size","size","step","Error","isArray","_i","integral","x0","x1","slope","intercept","equallySpacedSmooth","numberOfPoints","xLength","halfStep","output","initialOriginalStep","lastOriginalStep","previousX","Number","MIN_VALUE","previousY","nextX","nextY","currentValue","sumAtMin","sumAtMax","j","getSlope","y0","y1","main","add","equallySpacedSlot","lastStep","start","MAX_VALUE","frontOutsideSpectra","backOutsideSpectra","currentPoints","getZones$1","toRemove","reduce","previous","total","unitsPerPoint","totalPoints","currentNbPoints","round","equallySpaced","arrayXY","reverse","slice","variant","isNaN","xResult","yResult","zone","zoneResult","processZone","sumValue","norm","_options$algorithm","algorithm","toLowerCase","absoluteSumValue","absoluteSum","map","element","minValue","rescale","currentMin","currentMax","_options$min","autoMinMax","_options$max","factor","getNormalized","filters","name","meanFct","std","stdFct","process","kind","check","isAnyArray$1","findClosestIndex","target","low","high","middle","getFromToIndex","fromIndex","toIndex","integration","integral$1","maxY","maxYPoint","current","minYPoint","nbPoints","minY","slot","currentX","first","sortX","minClosestYPoint","targetIndex","previousIndex","MIN_SAFE_INTEGER","currentIndex","maxClosestYPoint","getTargetIndex","realMinYPoint","alpha","log10","beta","gamma","p","realMaxYPoint","maximaY","maxima","startEqualIndex","minimaY","peakInfo","currentDiff","multiplier","newDiff","after","before","inflectionBefore","inflectionAfter","extrema","inflectionMiddle","width","XY","array1","array2","isConstant","constant","array3","boxPlot","info","Q1","Q2","Q3","q1max","q3min","middleOver","divide","multiply","rotate","shift","subtract","correlation","A","B","sumA","sumA2","sumB","sumB2","sumAB","X","updateRangesInfo","ranges","range","label","fromToIndex","normalized","maxPoint","minPoint","Spectrum","id","meta","normalization","normalizedBoundary","updateNormalizedBoundary","updateNormalization","updateMemory","minX","maxX","original","memory","removeOriginal","getXY","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","defaultOptions","keepRecordsRegExp","xy","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","convert","jcamp","assign","wantXY","Date","now","ntuples","ldr","dataLabel","dataValue","ldrs","endLine","infos","logs","spectra","action","time","split","replace","substring","trim","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","firstX","firstY","last","lastX","lastY","vardim","xFactor","yFactor","units","xUnit","yUnit","datatable","deltaX","prepareSpectrum","match","fastParseXYData","parsePeakTable","parseXYA","title","dataType","twoD","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","isMSField","convertMSFieldToLabel","sampleDescription","keys","newNtuples","key","add2D","newData","complexChromatogram","simpleChromatogram","times","series","ms","dimension","existingGCMSFields","intensity","getMedian","convertTo3DZ","minZ","maxZ","ySize","xSize","xVector","noise","zData","contourLines","generateContourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","xN","dx","yN","dy","iter","contourLevels","lineZValue","level","contourLevel","side","exp","lines","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","isXYdata","currentData","currentY","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeSymbolRegExp","isXYAdata","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","JcampConverter","useWorker","postToWorker","stamps","worker","createWorker","Promise","resolve","stamp","random","postMessage","workerURL","URL","createObjectURL","Blob","type","Worker","revokeObjectURL","addEventListener","event","createTree","flatten","flat","stack","ntupleLevel","spaces","includes","line","labelLine","startsWith","join","children","finished","pop","entry","src$1","src_1","getJcampKind","datatype","IR_ABSORBANCE","IR_TRANSMITTANCE","importation","converter","transmittance","display","xLabel","xInverted","yLabel","parsed","uniqueX","counter","parseXY","text","uniqueX$1","xColumn","yColumn","keepInfo","maxNumberColumns","MAX_SAFE_INTEGER","minNumberColumns","fields","parserOptions","matrix","fs","ids","headers","labels","header","parts","oneMeta","getNormalizationAnnotations","boundary","annotations","ignore","annotation","strokeWidth","fillColor","getBoxPlotData","nbRow","nbColumn","aColumn","Float64Array","column","row","getBoxPlotAnnotations","q13FillColor","q13FillOpacity","q2StrokeColor","q2StrokeWidth","minMaxFillColor","minMaxFillOpacity","q13","layer","properties","fillOpacity","strokeColor","addChartDataStyle","styles","unselected","lineColor","color","lineWidth","lineStyle","selected","getChart","chart","chroma","factory","limit","clip_rgb","rgb","_clipped","_unclipped","classToType","list","unpack","args","keyOrder","PI","utils","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","format","autodetect","last$1","clip_rgb$1","type$1","Color","len","me","sorted","chk","test","apply","_rgb","hex","Color_1","Function","bind","version","chroma_1","unpack$1","rgb2cmyk","ref","r","f","m","rgb2cmyk_1","unpack$2","cmyk2rgb","cmyk2rgb_1","unpack$3","type$2","cmyk","unpack$4","last$2","rnd","hsl2css","hsla","hsl2css_1","unpack$5","rgb2hsl","s","h","NaN","rgb2hsl_1","unpack$6","last$3","rgb2css","rgba","substr","rgb2css_1","unpack$7","round$1","hsl2rgb","t3","t2","t1","h_","hsl2rgb_1","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$2","css2rgb","css","named","e","rgb$1","i$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","type$3","rest","unpack$8","gl","unpack$9","rgb2hcg","delta","_g","rgb2hcg_1","unpack$a","hcg2rgb","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","hcg2rgb_1","unpack$b","type$4","hcg","unpack$c","last$4","round$3","rgb2hex","u","str","hxa","rgb2hex_1","RE_HEX","RE_HEXA","hex2rgb","parseInt","u$1","r$1","g$1","b$1","hex2rgb_1","type$5","unpack$d","acos","rgb2hsi","min_","rgb2hsi_1","unpack$e","limit$1","TWOPI$1","cos","hsi2rgb","hsi2rgb_1","unpack$f","type$6","hsi","unpack$g","type$7","unpack$h","min$1","max$1","rgb2hsl$1","max_","rgb2hsv","unpack$i","floor$1","hsv2rgb","hsv2rgb_1","unpack$j","type$8","hsv","labConstants","Kn","Xn","Yn","Zn","t0","unpack$k","rgb2lab","ref$1","rgb2xyz","rgb_xyz","xyz_lab","rgb2lab_1","unpack$l","pow$1","lab2rgb","b_","lab_xyz","xyz_rgb","lab2rgb_1","unpack$m","type$9","lab","unpack$n","sqrt$1","atan2","round$4","lab2lch","lab2lch_1","unpack$o","rgb2lch","rgb2lch_1","unpack$p","sin","cos$1","lch2lab","lch2lab_1","unpack$q","lch2rgb","L","lch2rgb_1","unpack$r","hcl2rgb","hcl","hcl2rgb_1","unpack$s","type$a","lch","w3cx11","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","w3cx11_1","type$b","unpack$t","rgb2num","rgb2num_1","type$c","num2rgb","num","num2rgb_1","type$d","unpack$u","type$e","round$5","temperature2rgb","kelvin","temp","temperature2rgb_1","unpack$v","round$6","rgb2temperature","minTemp","maxTemp","rgb2temperature_1","temperature","type$f","mutate","clipped","darken","amount","brighten","darker","brighter","get","mc","channel","type$g","pow$2","EPS","MAX_ITER","luminance","lum","cur_lum","max_iter","mid","interpolate","lm","rgb2luminance","luminance_x","interpolator","type$h","mix","col1","col2","premultiply","saturate","desaturate","type$i","set","charAt","out","xyz0","xyz1","sqrt$2","pow$3","lrgb","z1","x2","y2","z2","lab$1","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","dh","lch$1","num$1","c1","c2","hcg$1","hsi$1","hsv$1","clip_rgb$2","pow$4","sqrt$3","PI$1","cos$2","sin$1","atan2$1","average","colors","_average_lrgb","xyz","cnt","ci","xyz2","A$1","col","type$j","pow$5","scale","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","getClass","tMapLightness","tMapDomain","getColor","val","bypassMap","classes","d","analyze","limits","domain","tOut","tBreaks","every","_m","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","dm","dd","__range__","end","asc","cache","nodata","left","right","inclusive","ascending","bezier","I","lab0","lab1","lab2","lab3","I0","I1","bezier_1","blend","bottom","top","blend_f","c0","each","normal","darken$1","lighten","screen","overlay","burn","dodge","blend_1","type$k","clip_rgb$3","TWOPI$2","pow$6","sin$2","cos$3","cubehelix","rotations","lightness","dl","fract","amp","cos_a","sin_a","digits","floor$2","random_1","code","log$1","pow$7","floor$3","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","contrast","l1","l2","sqrt$4","atan2$2","abs$1","cos$4","PI$2","deltaE","C","a1","b1","L2","a2","b2","sl","sc","h1","c4","sh","delL","delC","delA","delB","dH2","v1","v2","v3","distance","sum_sq","valid","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","list$1","colorbrewer_1","chroma_js","getAutocorrelationChart","spectraProcessor","autocorrelation","getAutocorrelation","colorCallback","colorScale","getMeanData","colorSpectrum","getNormalizedData","currentIDs","getTrackAnnotation","toPrecision","getNormalizedChart","getScaledChart","scaled","getScaledData","checkRowIndex","outer","rows","checkColumnIndex","columns","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","checkRowIndices","checkColumnIndices","rowOut","some","columnOut","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","varianceByRow","cols","sum1","sum2","varianceByColumn","varianceAll","centerByRow","centerByColumn","centerAll","getScaleByRow","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","inspectMatrix","indent","indentData","inspectData","maxRows","maxColumns","maxNumSize","maxI","maxJ","formatNumber","numStr","String","padEnd","precise","exponential","toExponential","eIndex","installMathOperations","AbstractMatrix","Matrix","addS","addM","checkMatrix","newMatrix","sub","subS","subM","subtractS","subtractM","mulS","mulM","multiplyS","multiplyM","div","divS","divM","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acosh","asin","asinh","atan","atanh","cbrt","clz32","cosh","expm1","fround","log1p","log2","sign","sinh","tanh","trunc","arg0","powS","powM","from1DArray","newRows","newColumns","rowVector","columnVector","zeros","ones","fill","rand","randInt","isInteger","interval","eye","diag","matrix1","matrix2","isMatrix","klass","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","iMax","swapRows","tmp","reducedEchelonForm","maxRow","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","dot","mmul","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","console","warn","embed","mat","resultat","blockMult","halfRows","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","flipColumns","kroneckerProduct","transpose","sortRows","compareFunction","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","for","randomInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","getNormalizedText","rs","allKeysObject","metum","allKeys","getFromToIndex$1","xs","targetSpectrum","targetValue","maybeToPrecision","checkArraySize","BaseRegression","new","predict","_predict","train","toLaTeX","score","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","SimpleLinearRegression","coefficients","regress","computeX","precision","absIntercept","operator","load","json","slr","numerator","regression","range$1","targetID","relative","method","calculations","getSpectrum","getSpectra","rangesCopy","yNormalized","resultRanges","currentRange","parameters","calculation","formula","oneRanges","SpectraProcessor","maxMemory","keepOriginal","boundaries","getNormalizedBoundary","setNormalization","getNormalization","getMinMaxX","addFromText","text$1","force","contains","addFromData","addFromJcamp","jcamp$1","getSpectrumIndex","memoryInfo","getMemoryInfo","removeOriginals","removeSpectrum","removeSpectraNotIn","fromNormalizedMatrix"],"mappings":"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"}