{"version":3,"sources":["webpack://SpectraProcessor/webpack/universalModuleDefinition","webpack://SpectraProcessor/webpack/bootstrap","webpack://SpectraProcessor/./node_modules/is-any-array/src/index.js","webpack://SpectraProcessor/./lib/index.js","webpack://SpectraProcessor//usr/lib/node_modules/cheminfo-tools/node_modules/process/browser.js","webpack://SpectraProcessor/./node_modules/ml-stat/array.js","webpack://SpectraProcessor/./node_modules/jcampconverter/src/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/check.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/findClosestIndex.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/getFromToIndex.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/integration.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/integral.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/maxY.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/maxYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/minYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/reduce.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/sortX.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/minClosestYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/maxClosestYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/getTargetIndex.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/realMinYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/realMaxYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xreim/zeroFilling.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xreim/sortX.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xreim/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/reim/absolute.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/reim/phaseCorrection.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/reim/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/rotate.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/subtract.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/add.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/multiply.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/divide.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/index.js","webpack://SpectraProcessor/./node_modules/ml-array-sequential-fill/lib-es6/index.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/integral.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/getZones.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/index.js","webpack://SpectraProcessor/./node_modules/ml-regression-base/src/index.js","webpack://SpectraProcessor/./node_modules/ml-regression-base/src/checkArrayLength.js","webpack://SpectraProcessor/./node_modules/ml-regression-base/src/maybeToPrecision.js","webpack://SpectraProcessor/./node_modules/ml-regression-simple-linear/src/index.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-filter-x/src/getZones.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-filter-x/src/index.js"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","module","exports","defineProperty","value","_interopDefault","ex","Stat","require","Stat__default","filterX","equallySpaced","mlSpectraProcessing","jcampconverter","SimpleLinearRegression","getData","spectrum","filter","data","x","y","getNormalized","options","Array","isArray","Error","from","to","length","numberOfPoints","filters","exclusions","slice","name","mean","meanFct","map","std","standardDeviation","stdFct","undefined","process","kind","result","updateRangesInfo","ranges","range","JSON","parse","stringify","label","fromToIndex","fromIndex","X","findClosestIndex","normalized","toIndex","integration","XY","maxPoint","maxYPoint","Spectrum","constructor","id","meta","normalization","reverse","normalizedBoundary","min","max","updateNormalizedBoundary","updateNormalization","updateMemory","original","memory","total","removeOriginal","getXY","minMax","getJcampKind","datatype","spectra","dataType","toLowerCase","yUnit","match","IR_ABSORBANCE","IR_TRANSMITTANCE","importation","converter","transmittance","Math","log10","display","xLabel","xInverted","yLabel","jcamp","parsed","convert","xy","keepRecordsRegExp","info","text","lines","split","fs","matrix","ids","headers","labels","i","header","isNaN","Number","line","parts","push","oneMeta","j","getNormalizationAnnotations","boundary","annotations","exclusion","ignore","annotation","type","position","strokeWidth","fillColor","addChartDataStyle","styles","unselected","lineColor","color","lineWidth","lineStyle","selected","getChart","chart","includes","getNormalizedChart","getScaledChart","spectraProcessor","scaled","getScaledData","getNormalizedData","currentIDs","getNormalizedText","rs","allKeysObject","metum","key","keys","allKeys","join","getFromToIndex","xs","targetSpectrum","targetValue","minYPoint","values","factor","multiply","regression","computeX","range$1","targetID","relative","method","getSpectrum","getSpectra","subtract","SpectraProcessor","maxMemory","keepOriginal","boundaries","minX","MAX_VALUE","maxX","MIN_VALUE","minY","maxY","getNormalizedBoundary","setNormalization","getNormalization","addFromJcamp","jcamp$1","force","contains","addFromData","random","substring","index","getSpectrumIndex","memoryInfo","getMemoryInfo","removeOriginals","removeSpectrum","splice","removeSpectraNotIn","forEach","fromNormalizedText","text$1","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","nextTick","args","arguments","Item","array","apply","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","compareNumbers","a","b","sum","l","arithmeticMean","geometricMean","mul","pow","logMean","lnsum","log","grandMean","means","samples","n","truncatedMean","percent","alreadySorted","sort","k","floor","harmonicMean","RangeError","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","theVariance","sqrt","standardError","robustMeanAndStdev","stdev","averageDeviations","abs","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","indexOf","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","g","kurtosis","s4","m4","v","c","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","standardize","standardDev","cumulativeSum","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","defaultOptions","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","assign","wantXY","start","Date","now","ntuples","ldr","dataLabel","dataValue","ldrs","endLine","infos","logs","TypeError","action","time","replace","trim","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","first","firstX","firstY","last","lastX","lastY","vardim","nbPoints","xFactor","yFactor","units","xUnit","datatable","deltaX","prepareSpectrum","fastParseXYData","parsePeakTable","parseXYA","twoD","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","isMSField","convertMSFieldToLabel","sampleDescription","newNtuples","add2D","newData","complexChromatogram","simpleChromatogram","times","series","ms","dimension","existingGCMSFields","intensity","shift","getMedian","convertTo3DZ","minZ","maxZ","ySize","xSize","xVector","noise","zData","contourLines","generateContourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","x0","xN","dx","y0","yN","dy","iter","contourLevels","lineZValue","level","contourLevel","side","exp","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","isXYdata","currentData","currentX","currentY","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeSymbolRegExp","isXYAdata","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","JcampConverter","input","useWorker","postToWorker","stamps","worker","createWorker","Promise","resolve","stamp","postMessage","workerURL","URL","createObjectURL","Blob","Worker","revokeObjectURL","addEventListener","event","output","createTree","flatten","flat","stack","current","ntupleLevel","spaces","labelLine","startsWith","children","finished","pop","entry","check","points","target","low","high","middle","integral","reduce","newX","newY","slot","sortX","minClosestYPoint","targetIndex","previousIndex","MIN_SAFE_INTEGER","currentIndex","maxClosestYPoint","getTargetIndex","realMinYPoint","alpha","beta","gamma","p","realMaxYPoint","zeroFilling","re","im","Float64Array","newRE","newIM","XReIm","absolute","newArray","phaseCorrection","phi0","phi1","isFinite","delta","sin","cosTheta","cos","sinTheta","newRe","newIm","ReIm","rotate","array1","array2","isConstant","constant","array3","add","divide","_typeof","obj","Symbol","iterator","sequentialFill","_options","_options$from","_options$to","_options$size","size","step","_i","x1","slope","intercept","equallySpacedSmooth","xLength","halfStep","initialOriginalStep","lastOriginalStep","previousX","previousY","nextX","nextY","sumAtMin","sumAtMax","getSlope","y1","main","equallySpacedSlot","lastStep","frontOutsideSpectra","backOutsideSpectra","currentPoints","getZones","toRemove","previous","unitsPerPoint","zones","currentFrom","totalPoints","currentNbPoints","round","arrayXY","variant","xResult","yResult","zone","zoneResult","processZone","BaseRegression","new","predict","_predict","train","toLaTeX","score","y2","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","r","checkArraySize","maybeToPrecision","digits","toPrecision","coefficients","checkArrayLength","regress","toJSON","precision","absIntercept","operator","load","json","slr","numerator","currentZoneIndex"],"mappings":"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","file":"spectra-processor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SpectraProcessor\"] = factory();\n\telse\n\t\troot[\"SpectraProcessor\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stat = require('ml-stat/array');\nvar Stat__default = _interopDefault(Stat);\nvar filterX = _interopDefault(require('ml-array-xy-filter-x'));\nvar equallySpaced = _interopDefault(require('ml-array-xy-equally-spaced'));\nvar mlSpectraProcessing = require('ml-spectra-processing');\nvar jcampconverter = require('jcampconverter');\nvar SimpleLinearRegression = _interopDefault(require('ml-regression-simple-linear'));\n\n/**\n *\n * @private\n * @param {Spectrum} spectrum\n * @param {object} [filter={}]\n * @param {array} [filter.from]\n * @param {array} [filter.to]\n * @param {array} [filter.exclusions=[]]\n */\n\nfunction getData(spectrum, filter = {}) {\n  let data = { x: spectrum.x, y: spectrum.y };\n\n  if (filter) {\n    data = filterX({ x: spectrum.x, y: spectrum.y }, filter);\n  }\n  return data;\n}\n\n/**\n *\n * @private\n * @param {*} spectrum\n * @param {*} options\n */\nfunction getNormalized(spectrum, options = {}) {\n  if (!Array.isArray(spectrum.x) || !Array.isArray(spectrum.y)) {\n    throw new Error(\n      'getNormalized: Can not get normalized data, missing original data.'\n    );\n  }\n\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints = 1024,\n    filters = [],\n    exclusions = []\n  } = options;\n\n  let y = spectrum.y.slice(0);\n\n  for (let filter of filters) {\n    switch (filter.name) {\n      case 'centerMean': {\n        let mean = Stat__default.mean(spectrum.y);\n        let meanFct = (y) => y - mean;\n        y = y.map(meanFct);\n        break;\n      }\n      case 'scaleSD': {\n        let std = Stat__default.standardDeviation(spectrum.y);\n        let stdFct = (y) => y / std;\n        y = y.map(stdFct);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n  let result = equallySpaced(\n    { x: spectrum.x, y },\n    { from, to, numberOfPoints, exclusions }\n  );\n  return result;\n}\n\n/**\n *  @private\n * @param {*} spectrum\n * @param {*} ranges\n */\nfunction updateRangesInfo(spectrum, ranges = []) {\n  spectrum.ranges = {};\n  for (let range of ranges) {\n    range = JSON.parse(JSON.stringify(range));\n    spectrum.ranges[range.label] = range;\n    let fromToIndex = {\n      fromIndex: mlSpectraProcessing.X.findClosestIndex(spectrum.normalized.x, range.from),\n      toIndex: mlSpectraProcessing.X.findClosestIndex(spectrum.normalized.x, range.to)\n    };\n    range.integration = mlSpectraProcessing.XY.integration(spectrum.normalized, fromToIndex);\n    range.maxPoint = mlSpectraProcessing.XY.maxYPoint(spectrum.normalized, fromToIndex);\n  }\n}\n\n/**\n * Class allowing manipulate one IR spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.x=[]] - x values\n * @param {Array} [json.y=[]] - y values\n */\nclass Spectrum {\n  /**\n   *\n   * @param {array} x\n   * @param {array} y\n   * @param {string} id\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.normalization]\n   * @param {object} [options.normalized]\n   */\n  constructor(x, y, id, options = {}) {\n    const { meta = {}, normalization = {}, normalized } = options;\n\n    if (x && x.length > 1 && x[0] > x[1]) {\n      this.x = x.reverse();\n      this.y = y.reverse();\n    } else {\n      this.x = x || [];\n      this.y = y || [];\n    }\n    this.id = id;\n    this.meta = meta;\n    this.normalizedBoundary = { x: { min: 0, max: 0 }, y: { min: 0, max: 0 } };\n    if (normalized) {\n      this.normalized = normalized;\n      this.updateNormalizedBoundary();\n    } else {\n      this.updateNormalization(normalization);\n    }\n\n    this.updateMemory();\n  }\n\n  updateMemory() {\n    let original = ((this.x && this.x.length) || 0) * 16;\n    let normalized = this.normalized.x.length * 16;\n    this.memory = { original, normalized, total: original + normalized };\n  }\n\n  removeOriginal() {\n    this.x = undefined;\n    this.y = undefined;\n    this.updateMemory();\n  }\n\n  getXY() {\n    if (!Array.isArray(this.x) || !Array.isArray(this.y)) {\n      throw new Error('Can not get normalized data');\n    }\n    return { x: this.x, y: this.y };\n  }\n}\n\nSpectrum.prototype.getData = function (options) {\n  return getData(this, options);\n};\n\nSpectrum.prototype.updateNormalization = function (normalization) {\n  this.normalized = getNormalized(this, normalization);\n  this.ranges = {};\n  this.updateMemory();\n  this.updateNormalizedBoundary();\n};\n\nSpectrum.prototype.updateRangesInfo = function (ranges) {\n  updateRangesInfo(this, ranges);\n};\n\nSpectrum.prototype.updateNormalizedBoundary = function () {\n  this.normalizedBoundary.x = {\n    min: this.normalized.x[0],\n    max: this.normalized.x[this.normalized.x.length - 1]\n  };\n  this.normalizedBoundary.y = Stat.minMax(this.normalized.y);\n};\n\nfunction getJcampKind(data) {\n  let datatype = data.spectra[0].dataType.toLowerCase();\n  let yUnit = data.spectra[0].yUnit.toLowerCase();\n\n  if (datatype.match(/infrared/)) {\n    if (yUnit.match(/absorbance/)) {\n      return IR_ABSORBANCE;\n    } else {\n      return IR_TRANSMITTANCE;\n    }\n  }\n  return undefined;\n}\n\nconst IR_TRANSMITTANCE = {\n  normalization: {},\n  importation: {\n    converter: (transmittance) => -Math.log10(transmittance)\n  },\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance'\n  }\n};\n\nconst IR_ABSORBANCE = {\n  normalization: {},\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance'\n  }\n};\n\n/**\n * Create a spectrum from a jcamp\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nfunction jcamp(jcamp) {\n  const parsed = jcampconverter.convert(jcamp, { xy: true, keepRecordsRegExp: /TITLE/ });\n  const kind = getJcampKind(parsed);\n  const data = parsed.spectra[0].data[0];\n  const meta = parsed.info;\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data, kind, meta };\n}\n\n/**\n * Creates a g\n * @param {string} text - String containing the JCAMP data\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] Field separator\n * @return {object} - {matrix, data, x, ids}\n */\nfunction text(text, options = {}) {\n  const lines = text.split(/[\\r\\n]+/).filter((value) => value);\n  const { fs = '\\t' } = options;\n  let matrix = [];\n  let ids = [];\n  let meta = [];\n  let x = [];\n\n  let headers = lines[0].split(fs);\n  let labels = [];\n\n  for (let i = 0; i < headers.length; i++) {\n    let header = headers[i];\n    if (isNaN(header)) {\n      labels[i] = header;\n    } else {\n      x = headers.slice(i).map((value) => Number(value));\n      break;\n    }\n  }\n\n  for (let i = 1; i < lines.length; i++) {\n    let line = lines[i];\n    let parts = line.split('\\t');\n    ids.push(parts[0]);\n    let oneMeta = {};\n    meta.push(oneMeta);\n    for (let j = 1; j < parts.length; j++) {\n      if (j < labels.length) {\n        oneMeta[labels[j]] = parts[j];\n      } else {\n        matrix.push(parts.slice(labels.length).map((value) => Number(value)));\n        break;\n      }\n    }\n  }\n  return { x, meta, matrix, ids };\n}\n\nfunction getNormalizationAnnotations(filter = {}, boundary) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    var annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max }\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: 0, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max }\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: 10000, y: boundary.y.max }\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    });\n  }\n  return annotations;\n}\n\nfunction addChartDataStyle(data, spectrum) {\n  data.styles = {\n    unselected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 1,\n      lineStyle: 1\n    },\n    selected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 3,\n      lineStyle: 1\n    }\n  };\n  data.label = spectrum.meta.id || spectrum.id;\n}\n\n/**\n * Retrieve a chart with selected original data\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by default all\n * @param {Array} [options.maxDataPoints=]\n */\nfunction getChart(spectra, options = {}) {\n  const { ids } = options;\n  let chart = {\n    data: []\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.getData();\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n\nfunction getNormalizedChart(spectra, options = {}) {\n  const { ids } = options;\n  let chart = {\n    data: []\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.normalized;\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n\n/**\n *\n * @param {SpectraProcessor} spectraProcessor\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n */\nfunction getScaledChart(spectraProcessor, options = {}) {\n  let scaled = spectraProcessor.getScaledData(options);\n\n  let chart = {\n    data: []\n  };\n\n  for (let i = 0; i < scaled.matrix.length; i++) {\n    let data = {\n      x: scaled.x,\n      y: scaled.matrix[i]\n    };\n    addChartDataStyle(data, { meta: scaled.meta[i], id: scaled.ids[i] });\n    chart.data.push(data);\n  }\n\n  return chart;\n}\n\n/**\n * @private\n * @param {*} spectra\n * @param {*} options\n */\n\nfunction getNormalizedData(spectra) {\n  if (!spectra || !spectra[0]) return {};\n  let matrix = [];\n  let meta = [];\n  let currentIDs = [];\n\n  for (let spectrum of spectra) {\n    currentIDs.push(spectrum.id);\n    matrix.push(spectrum.normalized.y);\n    meta.push(spectrum.meta);\n  }\n  let x = spectra[0].normalized.x;\n  return { ids: currentIDs, matrix, meta, x };\n}\n\n/**\n * @private\n * @param {*} spectra\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] field separator\n * @param {string} [options.rs='\\n'] record (line) separator\n */\n\nfunction getNormalizedText(spectra, options = {}) {\n  let { fs = '\\t', rs = '\\n' } = options;\n  let { matrix, meta, ids, x } = getNormalizedData(spectra);\n  let allKeysObject = {};\n  for (let metum of meta) {\n    for (let key of Object.keys(metum)) {\n      let type = typeof metum[key];\n      if (type === 'number' || type === 'string' || type === 'boolean') {\n        allKeysObject[key] = true;\n      }\n    }\n  }\n  let allKeys = Object.keys(allKeysObject);\n\n  let lines = [];\n  let line = [];\n  line.push('id', ...allKeys, ...x);\n  lines.push(line.join(fs));\n\n  for (let i = 0; i < ids.length; i++) {\n    line = [];\n    line.push(ids[i]);\n    for (let key of allKeys) {\n      line.push(meta[i][key]);\n    }\n    line.push(...matrix[i]);\n    lines.push(line.join(fs));\n  }\n\n  return lines.join(rs);\n}\n\nfunction getFromToIndex(xs, range) {\n  let { from, to } = range;\n  if (from === undefined) {\n    from = xs[0];\n  }\n  if (to === undefined) {\n    to = xs[xs.length - 1];\n  }\n\n  return {\n    fromIndex: mlSpectraProcessing.X.findClosestIndex(xs, from),\n    toIndex: mlSpectraProcessing.X.findClosestIndex(xs, to)\n  };\n}\n\nfunction min(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = mlSpectraProcessing.XY.minYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => mlSpectraProcessing.XY.minYPoint(spectrum.normalized, fromToIndex).y\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(mlSpectraProcessing.X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\nfunction max(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = mlSpectraProcessing.XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => mlSpectraProcessing.XY.maxYPoint(spectrum.normalized, fromToIndex).y\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(mlSpectraProcessing.X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\nfunction minMax(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = {\n    min: mlSpectraProcessing.XY.minYPoint(targetSpectrum.normalized, fromToIndex).y,\n    max: mlSpectraProcessing.XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y\n  };\n\n  let values = spectra.map((spectrum) => {\n    return {\n      min: mlSpectraProcessing.XY.minYPoint(spectrum.normalized, fromToIndex).y,\n      max: mlSpectraProcessing.XY.maxYPoint(spectrum.normalized, fromToIndex).y\n    };\n  });\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    const regression = new SimpleLinearRegression(\n      [targetValue.min, targetValue.max],\n      [values[i].min, values[i].max]\n    );\n\n    let length = spectrum.normalized.y.length;\n    let scaled = new Array(length);\n    for (let j = 0; j < length; j++) {\n      scaled[j] = regression.computeX(spectrum.normalized.y[j]);\n    }\n    matrix.push(scaled);\n  }\n\n  return matrix;\n}\n\nfunction range(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = mlSpectraProcessing.XY.integration(targetSpectrum.normalized, fromToIndex);\n\n  let values = spectra.map((spectrum) =>\n    mlSpectraProcessing.XY.integration(spectrum.normalized, fromToIndex)\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(mlSpectraProcessing.X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\n/**\n * @private\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n */\n\nfunction getScaledData(spectraProcessor, options = {}) {\n  if (!spectraProcessor.spectra || !spectraProcessor.spectra[0]) return {};\n  const { range: range$1, targetID, relative, method, ids } = options;\n\n  let targetSpectrum =\n    spectraProcessor.getSpectrum(targetID) || spectraProcessor.spectra[0];\n  let spectra = spectraProcessor.getSpectra(ids);\n\n  let result;\n  if (method === '' || method === undefined) {\n    result = getNormalizedData(spectra);\n  } else {\n    let matrix;\n    switch (method.toLowerCase()) {\n      case 'min':\n        matrix = min(spectra, targetSpectrum, range$1);\n        break;\n      case 'max':\n        matrix = max(spectra, targetSpectrum, range$1);\n        break;\n      case 'minmax':\n        matrix = minMax(spectra, targetSpectrum, range$1);\n        break;\n      case 'range':\n        matrix = range(spectra, targetSpectrum, range$1);\n        break;\n      default:\n        throw new Error(`getScaledData: unknown method: ${method}`);\n    }\n    let meta = [];\n    let currentIDs = [];\n    for (let spectrum of spectra) {\n      currentIDs.push(spectrum.id);\n      meta.push(spectrum.meta);\n    }\n    let x = spectra[0].normalized.x;\n    result = { ids: currentIDs, matrix, meta, x };\n  }\n\n  if (relative) {\n    for (let i = 0; i < result.matrix.length; i++) {\n      result.matrix[i] = mlSpectraProcessing.X.subtract(\n        result.matrix[i],\n        targetSpectrum.normalized.y\n      );\n    }\n  }\n\n  return result;\n}\n\nclass SpectraProcessor {\n  /**\n   * Manager a large number of spectra with the possibility to normalize the data\n   * and skip the original data.\n   * @param {object} [options={}]\n   * @param {boolean} [options.maxMemory=64M]\n   * @param {object} [options.normalization={}] options to normalize the spectra before comparison\n   * @param {number} [options.normalization.from]\n   * @param {number} [options.normalization.to]\n   * @param {number} [options.normalization.numberOfPoints]\n   * @param {array<object>} [options.normalization.filters]\n   * @param {string} [options.normalization.filters.X.name]\n   * @param {object} [options.normalization.filters.X.options]\n   * @param {array<object>} [options.normalization.exclusions]\n   * @param {string} [options.normalization.exclusions.X.from]\n   * @param {object} [options.normalization.exclusions.X.to]\n   */\n  constructor(options = {}) {\n    this.normalization = options.normalization;\n    this.maxMemory = options.maxMemory || 64 * 1024 * 1024;\n    this.keepOriginal = true;\n    this.spectra = [];\n    this.boundaries = {\n      minX: Number.MAX_VALUE,\n      maxX: Number.MIN_VALUE,\n      minY: Number.MAX_VALUE,\n      maxY: Number.MIN_VALUE\n    };\n  }\n\n  getNormalizationAnnotations() {\n    return getNormalizationAnnotations(\n      this.normalization,\n      this.getNormalizedBoundary()\n    );\n  }\n\n  /**\n   * Recalculate the normalized data using the stored original data if available\n   * This will throw an error in the original data is not present\n   * @param {number} [normalization.from]\n   * @param {number} [normalization.to]\n   * @param {number} [normalization.numberOfPoints]\n   * @param {array<object>} [normalization.filters]\n   * @param {string} [normalization.filters.X.name]\n   * @param {object} [normalization.filters.X.options]\n   * @param {array<object>} [normalization.exclusions]\n   * @param {string} [normalization.exclusions.X.from]\n   * @param {object} [normalization.exclusions.X.to]\n   */\n  setNormalization(normalization = {}) {\n    if (JSON.stringify(this.normalization) === JSON.stringify(normalization)) {\n      return;\n    }\n    this.normalization = normalization;\n    for (let spectrum of this.spectra) {\n      spectrum.updateNormalization(this.normalization);\n    }\n  }\n\n  getNormalization() {\n    return this.normalization;\n  }\n\n  /**\n   * Returns an object contains 4 parameters with the normalized data\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   */\n  getNormalizedData(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedData(spectra);\n  }\n\n  /**\n   * Returns a tab separated value containing the normalized data\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   * @param {string} [options.fs='\\t'] field separator\n   * @param {string} [options.rs='\\n'] record (line) separator\n   * @returns {string}\n   */\n  getNormalizedText(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedText(spectra, options);\n  }\n\n  /**\n\n   * Returns an object contains 4 parameters with the scaled data\n   * @param {object} [options={}] scale spectra based on various parameters\n   * @param {object} [options.range] from - to\n   * @param {Array} [options.ids] ids of selected spectra, by default all\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   */\n  getScaledData(options) {\n    return getScaledData(this, options);\n  }\n\n  /**\n   * Add jcamp\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} jcamp\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromJcamp(jcamp$1, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = jcamp(jcamp$1);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  updateRangesInfo(options) {\n    for (let spectrum of this.spectra) {\n      spectrum.updateRangesInfo(options);\n    }\n  }\n\n  /**\n   * Add a spectrum based on the data\n   * @param {object} data {x, y}}\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.id]\n   * @param {object} [options.normalization={}]\n   * @param {object} [options.normalized]\n   * @return {Spectrum}\n   */\n\n  addFromData(data, options = {}) {\n    if (this.spectra.length === 0) this.keepOriginal = true;\n    const id = options.id || Math.random(0).toString(36).substring;\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.spectra.length;\n    let spectrum = new Spectrum(data.x, data.y, id, {\n      meta: options.meta,\n      normalized: options.normalized,\n      normalization: this.normalization\n    });\n    this.spectra[index] = spectrum;\n    if (!this.keepOriginal) {\n      spectrum.removeOriginal();\n    } else {\n      let memoryInfo = this.getMemoryInfo();\n      if (memoryInfo.total > this.maxMemory) {\n        this.keepOriginal = false;\n        this.removeOriginals();\n      }\n    }\n  }\n\n  removeOriginals() {\n    for (let spectrum of this.spectra) {\n      spectrum.removeOriginal();\n    }\n  }\n\n  /**\n   * Remove the spectrum from the SpectraProcessor for the specified id\n   * @param {string} id\n   */\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra.splice(index, 1);\n  }\n\n  /**\n   * Remove all the spectra not present in the list\n   * @param {Array} [ids] Array of ids of the spectra to keep\n   */\n  removeSpectraNotIn(ids) {\n    let currentIDs = this.spectra.map((spectrum) => spectrum.id);\n    for (let id of currentIDs) {\n      if (!ids.includes(id)) {\n        this.removeSpectrum(id);\n      }\n    }\n  }\n\n  /**\n   * Checks if the ID of a spectrum exists in the SpectraProcessor\n   * @param {string} id\n   */\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.spectra.length; i++) {\n      let spectrum = this.spectra[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns a spectrum from its ID\n   * @param {Array} ids\n   * @returns {Array<Spectrum}\n   */\n  getSpectra(ids) {\n    if (!ids || !Array.isArray(ids) || ids.length === 0) return this.spectra;\n    let spectra = [];\n    for (let id of ids) {\n      let index = this.getSpectrumIndex(id);\n      if (index !== undefined) {\n        spectra.push(this.spectra[index]);\n      }\n    }\n    return spectra;\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra[index];\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getChart() {\n    return getChart(this.spectra);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @returns {object}\n   */\n  getNormalizedChart(options) {\n    return getNormalizedChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the scaled normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @param {object} [options.range] from - to\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object}\n   */\n  getScaledChart(options) {\n    return getScaledChart(this, options);\n  }\n\n  getMemoryInfo() {\n    let memoryInfo = { original: 0, normalized: 0, total: 0 };\n    this.spectra.forEach((spectrum) => {\n      let memory = spectrum.memory;\n      memoryInfo.original += memory.original;\n      memoryInfo.normalized += memory.normalized;\n      memoryInfo.total += memory.total;\n    });\n    memoryInfo.keepOriginal = this.keepOriginal;\n    memoryInfo.maxMemory = this.maxMemory;\n    return memoryInfo;\n  }\n\n  getNormalizedBoundary() {\n    let boundary = {\n      x: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n      y: { min: Number.MAX_VALUE, max: Number.MIN_VALUE }\n    };\n    for (let spectrum of this.spectra) {\n      if (spectrum.normalizedBoundary.x.min < boundary.x.min) {\n        boundary.x.min = spectrum.normalizedBoundary.x.min;\n      }\n      if (spectrum.normalizedBoundary.x.max > boundary.x.max) {\n        boundary.x.max = spectrum.normalizedBoundary.x.max;\n      }\n      if (spectrum.normalizedBoundary.y.min < boundary.y.min) {\n        boundary.y.min = spectrum.normalizedBoundary.y.min;\n      }\n      if (spectrum.normalizedBoundary.y.max > boundary.y.max) {\n        boundary.y.max = spectrum.normalizedBoundary.y.max;\n      }\n    }\n    return boundary;\n  }\n\n  /**\n   * Create SpectraProcessor from normalized TSV\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.separator='\\t']\n   */\n  static fromNormalizedText(text$1, options = {}) {\n    let parsed = text(text$1, options);\n    if (!parsed) {\n      throw new Error('Can not parse TSV file');\n    }\n    let spectraProcessor = new SpectraProcessor();\n\n    spectraProcessor.setNormalization({\n      from: parsed.x[0],\n      to: parsed.x[parsed.x.length - 1],\n      numberOfPoints: parsed.x.length\n    });\n    spectraProcessor.keepOriginal = false;\n\n    for (let i = 0; i < parsed.ids.length; i++) {\n      spectraProcessor.addFromData(\n        { x: [], y: [] },\n        {\n          normalized: {\n            x: parsed.x,\n            y: parsed.matrix[i]\n          },\n          id: parsed.ids[i],\n          meta: parsed.meta[i]\n        }\n      );\n    }\n\n    return spectraProcessor;\n  }\n}\n\nexports.SpectraProcessor = SpectraProcessor;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    var floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    var wantXY = !options.withoutXY;\n\n    var start = Date.now();\n\n    var ntuples = {};\n    var ldr, dataLabel, dataValue, ldrs;\n    var position, endLine, infos;\n\n    var result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    var spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    var spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      dataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (dataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          var xIndex = -1;\n          var yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            var firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1'\n            );\n            var secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1'\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            dataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            dataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (dataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue, result);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (dataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (dataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (dataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (dataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (dataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (dataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (dataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (dataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (dataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (dataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (dataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (dataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (dataLabel === '.OBSERVEFREQUENCY' || dataLabel === '$SFO1') {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (dataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$REFERENCEPOINT') {\n        // OFFSET for Varian spectra\n        // if we activate this part it does not work for ACD specmanager\n        //         } else if (dataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n        //                 var parts = dataValue.split(/ *, */);\n        //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n        //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n      } else if (dataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (dataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        var pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        var unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (dataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(dataLabel)) {\n        spectrum[convertMSFieldToLabel(dataLabel)] = dataValue;\n      } else if (dataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (dataLabel.match(options.keepRecordsRegExp)) {\n        if (result.info[dataLabel]) {\n          if (!Array.isArray(result.info[dataLabel])) {\n            result.info[dataLabel] = [result.info[dataLabel]];\n          }\n          result.info[dataLabel].push(dataValue.trim());\n        } else {\n          result.info[dataLabel] = dataValue.trim();\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      var newNtuples = [];\n      var keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              var data = spectrum.data[j];\n              var newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2)\n              };\n              for (var k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(dataLabel) {\n    return GC_MS_FIELDS.indexOf(dataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    var spectra = result.spectra;\n    var length = spectra.length;\n    var chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length)\n        }\n      }\n    };\n\n    var existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      var label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length)\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      var spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]]\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    var data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice()\n        }\n      }\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      var shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    var l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    var minZ = spectra[0].data[0][0];\n    var maxZ = minZ;\n    var ySize = spectra.length;\n    var xSize = spectra[0].data[0].length / 2;\n    var z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      var xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        var value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs))\n    };\n  }\n\n  function add2D(result, options) {\n    var zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    var noise = zData.noise;\n    var z = zData.z;\n    var povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    var isOver0, isOver1, isOver2, isOver3;\n    var nbSubSpectra = z.length;\n    var nbPovars = z[0].length;\n    var pAx, pAy, pBx, pBy;\n\n    var x0 = zData.minX;\n    var xN = zData.maxX;\n    var dx = (xN - x0) / (nbPovars - 1);\n    var y0 = zData.minY;\n    var yN = zData.maxY;\n    var dy = (yN - y0) / (nbSubSpectra - 1);\n    var minZ = zData.minZ;\n    var maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    var iter = options.nbContourLevels * 2;\n    var contourLevels = new Array(iter);\n    var lineZValue;\n    for (var level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      var contourLevel = {};\n      contourLevels[level] = contourLevel;\n      var side = level % 2;\n      var factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      var lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        var subSpectra = z[iSubSpectra];\n        var subSpectraAfter = z[iSubSpectra + 1];\n        for (var povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    var yFactor = spectrum.yFactor;\n    var deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var currentX = spectrum.firstX;\n    var currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    var endLine = false;\n    var ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    var newLine = true;\n    var isDifference = false;\n    var isLastDifference = false;\n    var lastDifference = 0;\n    var isDuplicate = false;\n    var inComment = false;\n    var currentValue = 0; // can be a difference or a duplicate\n    var lastValue = 0; // must be the real last value\n    var isNegative = false;\n    var inValue = false;\n    var skipFirstValue = false;\n    var decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                var duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (var j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            var ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    var removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    var removeCommentRegExp = /\\$\\$.*/;\n    var peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nvar convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nvar stamps = {};\nvar worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function (resolve) {\n    var stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options\n      })\n    );\n  });\n}\n\nfunction createWorker() {\n  var workerURL = URL.createObjectURL(\n    new Blob(\n      [`var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`],\n      { type: 'application/javascript' }\n    )\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function (event) {\n    var data = JSON.parse(event.data);\n    var stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (var i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: []\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      var finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      var match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        var dataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (dataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nmodule.exports = {\n  convert: JcampConverter,\n  createTree: createTree\n};\n","const isAnyArray = require('is-any-array');\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {object} [points={}]\n */\nexport function check(points = {}) {\n  if (!isAnyArray(points.x) || !isAnyArray(points.y)) {\n    throw new Error('Points must be an object of x and y arrays');\n  }\n  if (points.x.length !== points.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n","/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array} array\n * @param {number} target\n */\n\nexport function findClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n","import { findClosestIndex } from './findClosestIndex';\n\n/**\n * Returns an object with {fromIndex, toIndex} for a specific from / to\n * @param {array} x\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n */\n\nexport function getFromToIndex(x, options = {}) {\n  let { fromIndex, toIndex, from, to } = options;\n\n  if (fromIndex === undefined) {\n    if (from !== undefined) {\n      fromIndex = findClosestIndex(x, from);\n    } else {\n      fromIndex = 0;\n    }\n  }\n  if (toIndex === undefined) {\n    if (to !== undefined) {\n      toIndex = findClosestIndex(x, to);\n    } else {\n      toIndex = x.length - 1;\n    }\n  }\n  return { fromIndex, toIndex };\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Integration value on the specified range\n */\n\nexport function integration(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n  let integration = 0;\n  for (let i = fromIndex; i < toIndex; i++) {\n    integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n  }\n\n  return integration;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Generate a X / Y of the integral\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @param {boolean} [options.reverse=false] - Integrate from the larger value to the smallest value\n * @return {{x:[],y:[]}} An object with the integration function\n */\n\nexport function integral(points = {}, options = {}) {\n  const { reverse = false } = options;\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let integration = 0;\n  let integral;\n  if (reverse) {\n    integral = { x: [x[toIndex]], y: [0] };\n    for (let i = toIndex; i > fromIndex; i--) {\n      integration += ((x[i] - x[i - 1]) * (y[i - 1] + y[i])) / 2;\n      integral.x.push(x[i - 1]);\n      integral.y.push(integration);\n    }\n    integral.x.reverse();\n    integral.y.reverse();\n  } else {\n    integral = { x: [x[fromIndex]], y: [0] };\n    for (let i = fromIndex; i < toIndex; i++) {\n      integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n      integral.x.push(x[i + 1]);\n      integral.y.push(integration);\n    }\n  }\n\n  return integral;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Finds the max value in a zone\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Max y on the specified range\n */\n\nexport function maxY(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let maxY = y[fromIndex];\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > maxY) maxY = y[i];\n  }\n\n  return maxY;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nexport function maxYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nexport function minYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] < current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n","import { findClosestIndex } from '../x/findClosestIndex';\n\n/**\n * Reduce the number of points while keeping the same noise. Practical to\n * display many spectra as SVG\n * @param {array} x\n * @param {array} y\n * @param {object} [options={}]\n * @param {number} [from=x[0]]\n * @param {number} [to=x[x.length-1]]\n * @param {number} [nbPoints=4001] Number of points\n */\n\nexport function reduce(x, y, options = {}) {\n  let { from = x[0], to = x[x.length - 1], nbPoints = 4000 } = options;\n\n  let fromIndex = findClosestIndex(x, from);\n  let toIndex = findClosestIndex(x, to);\n\n  if (fromIndex > 0 && x[fromIndex] > from) fromIndex--;\n  if (toIndex < x.length - 1 && x[toIndex] < to) toIndex++;\n\n  if (toIndex - fromIndex < nbPoints) {\n    return {\n      x: x.slice(fromIndex, toIndex + 1),\n      y: y.slice(fromIndex, toIndex + 1),\n    };\n  }\n\n  let newX = [x[fromIndex]];\n  let newY = [y[fromIndex]];\n  let minY = Number.MAX_VALUE;\n  let maxY = Number.MIN_VALUE;\n  if (nbPoints % 2 === 0) {\n    nbPoints = nbPoints / 2 + 1;\n  } else {\n    nbPoints = (nbPoints - 1) / 2 + 1;\n  }\n\n  let slot = (x[toIndex] - x[fromIndex]) / (nbPoints - 1);\n  let currentX = x[fromIndex] + slot;\n  let first = true;\n  for (let i = fromIndex + 1; i <= toIndex; i++) {\n    if (first) {\n      minY = y[i];\n      maxY = y[i];\n      first = false;\n    } else {\n      if (y[i] < minY) minY = y[i];\n      if (y[i] > maxY) maxY = y[i];\n    }\n\n    if (x[i] >= currentX || i === toIndex) {\n      newX.push(currentX - slot / 2);\n      newY.push(minY);\n      newX.push(currentX);\n      newY.push(maxY);\n      currentX += slot;\n      first = true;\n    }\n  }\n\n  // we will need to make some kind of min / max because there are too many points\n  // we will always keep the first point and the last point\n\n  return { x: newX, y: newY };\n}\n","/**\n * Sort object of array, x has to be monotone.\n * @param {object} data Object of kind {x:[], re:[], im:[]}.\n * @return {SD}\n */\n\nexport function sortX(data) {\n  const { x, y } = data;\n\n  if (x.length !== y.length) {\n    throw TypeError('sortX: length of x and y must be identical');\n  }\n\n  if (x.length < 2 || x[0] < x[1]) return data;\n\n  return {\n    x: x.slice(0).reverse(),\n    y: y.slice(0).reverse(),\n  };\n}\n","import { findClosestIndex } from '../x/findClosestIndex';\n\nimport { check } from './check';\n\n/**\n * Find the closest minimum going down hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function minClosestYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let minY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] < minY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] < minY) {\n      currentIndex++;\n    }\n    minY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n","import { findClosestIndex } from '../x/findClosestIndex';\n\nimport { check } from './check';\n\n/**\n * Find the closest maximum going up hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function maxClosestYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let maxY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] > maxY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] > maxY) {\n      currentIndex++;\n    }\n    maxY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n","import { findClosestIndex } from './findClosestIndex';\n\n/**\n *  Returns the targetIndex\n * @param {array} [x]\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @param {number}\n */\n\nexport function getTargetIndex(x, options = {}) {\n  let { target, targetIndex } = options;\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      return findClosestIndex(x, target);\n    } else {\n      return 0;\n    }\n  }\n  return targetIndex;\n}\n","import { getTargetIndex } from '../x/getTargetIndex';\n\nimport { check } from './check';\n\nexport function realMinYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  const targetIndex = getTargetIndex(x, options);\n  // interpolation to a sin() function\n  if (\n    y[targetIndex - 1] < 0 &&\n    y[targetIndex + 1] < 0 &&\n    y[targetIndex] <= y[targetIndex - 1] &&\n    y[targetIndex] <= y[targetIndex + 1]\n  ) {\n    let alpha = 20 * Math.log10(-y[targetIndex - 1]);\n    let beta = 20 * Math.log10(-y[targetIndex]);\n    let gamma = 20 * Math.log10(-y[targetIndex + 1]);\n    let p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n    return {\n      x: x[targetIndex] + (x[targetIndex] - x[targetIndex - 1]) * p,\n      y: y[targetIndex] - 0.25 * (y[targetIndex - 1] - y[targetIndex + 1]) * p,\n      index: targetIndex,\n    };\n  } else {\n    return {\n      x: x[targetIndex],\n      y: y[targetIndex],\n      index: targetIndex,\n    };\n  }\n}\n","import { getTargetIndex } from '../x/getTargetIndex';\n\nimport { check } from './check';\n/**\n * Find the closest minimum going down hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function realMaxYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n  const targetIndex = getTargetIndex(x, options);\n  // interpolation to a sin() function\n  if (\n    y[targetIndex - 1] > 0 &&\n    y[targetIndex + 1] > 0 &&\n    y[targetIndex] >= y[targetIndex - 1] &&\n    y[targetIndex] >= y[targetIndex + 1]\n  ) {\n    let alpha = 20 * Math.log10(y[targetIndex - 1]);\n    let beta = 20 * Math.log10(y[targetIndex]);\n    let gamma = 20 * Math.log10(y[targetIndex + 1]);\n    let p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n    return {\n      x: x[targetIndex] + (x[targetIndex] - x[targetIndex - 1]) * p,\n      y: y[targetIndex] - 0.25 * (y[targetIndex - 1] - y[targetIndex + 1]) * p,\n      index: targetIndex,\n    };\n  } else {\n    return {\n      x: x[targetIndex],\n      y: y[targetIndex],\n      index: targetIndex,\n    };\n  }\n}\n","import { check } from './check';\nimport { integration } from './integration';\nimport { integral } from './integral';\nimport { maxY } from './maxY';\nimport { maxYPoint } from './maxYPoint';\nimport { minYPoint } from './minYPoint';\nimport { reduce } from './reduce';\nimport { sortX } from './sortX';\nimport { minClosestYPoint } from './minClosestYPoint';\nimport { maxClosestYPoint } from './maxClosestYPoint';\nimport { realMinYPoint } from './realMinYPoint';\nimport { realMaxYPoint } from './realMaxYPoint';\n\nexport const XY = {\n  check,\n  integral,\n  integration,\n  maxY,\n  maxYPoint,\n  minYPoint,\n  reduce,\n  sortX,\n  minClosestYPoint,\n  maxClosestYPoint,\n  realMaxYPoint,\n  realMinYPoint,\n};\n","/**\n * This function make a zero filling to re and im part.\n * @param {object} data Object of kind {x:[], re:[], im:[]}.\n * @param {number} zeroFilling - final number of points\n * @return {SD}\n */\nexport function zeroFilling(data, zeroFilling) {\n  let length = data.x.length;\n  if (zeroFilling === 0 || length === zeroFilling) return data;\n\n  if (length > zeroFilling) {\n    return {\n      x: data.x.slice(0, zeroFilling),\n      re: data.re.slice(0, zeroFilling),\n      im: data.im.slice(0, zeroFilling)\n    };\n  }\n\n  const x = data.x;\n  const re = data.re;\n  const im = data.im;\n\n  const newX = new Float64Array(zeroFilling);\n  const newRE = new Float64Array(zeroFilling);\n  const newIM = new Float64Array(zeroFilling);\n\n  for (let i = 0; i < length; i++) {\n    newX[i] = x[i];\n    newRE[i] = re[i];\n    newIM[i] = im[i];\n  }\n  const deltaX = (x[x.length - 1] - x[0]) / (length - 1);\n  for (let i = length; i < zeroFilling; i++) {\n    newX[i] = newX[i - 1] + deltaX;\n  }\n\n  return {\n    x: newX,\n    re: newRE,\n    im: newIM\n  };\n}\n\n","/**\n * Sort object of array, x has to be monotone.\n * @param {object} data Object of kind {x:[], re:[], im:[]}.\n * @return {SD}\n */\n\nexport function sortX(data) {\n  const { x, re, im } = data;\n\n  if (x.length !== re.length || x.length !== im.length) {\n    throw TypeError('sortX: length of x, re and im must be identical');\n  }\n\n  if (x.length < 2 || x[0] < x[1]) return data;\n\n  return {\n    x: x.slice(0).reverse(),\n    re: re.slice(0).reverse(),\n    im: im.slice(0).reverse(),\n  };\n}\n","import { zeroFilling } from './zeroFilling';\nimport { sortX } from './sortX';\n\nexport const XReIm = {\n  zeroFilling,\n  sortX,\n};\n","/**\n * Calculate absolute value of a spectrum\n * @param {object} reim - An object of kind {re:[], im:[]}\n * @return {Float64Array}\n */\nexport function absolute(data) {\n  const length = data.re.length;\n  const re = data.re;\n  const im = data.im;\n  const newArray = new Float64Array(length);\n  for (let i = 0; i < length; i++) {\n    newArray[i] = Math.sqrt(re[i] ** 2 + im[i] ** 2);\n  }\n\n  return newArray;\n}\n","/**\n * Phase correction filter\n * @param {object} reim - An object of kind {re:[], im:[]}\n * @param {number} [phi0 = 0] - value\n * @param {number} [phi1 = 0] - value\n * @return {object} returns a new object {re:[], im:[]}\n */\nexport function phaseCorrection(data, phi0, phi1) {\n  phi0 = Number.isFinite(phi0) ? phi0 : 0;\n  phi1 = Number.isFinite(phi1) ? phi1 : 0;\n\n  const re = data.re.slice(0);\n  const im = data.im.slice(0);\n  const length = data.re.length;\n\n  const delta = phi1 / length;\n  const alpha = 2 * Math.pow(Math.sin(delta / 2), 2);\n  const beta = Math.sin(delta);\n  let cosTheta = Math.cos(phi0);\n  let sinTheta = Math.sin(phi0);\n\n  const newRe = new Float64Array(length);\n  const newIm = new Float64Array(length);\n  for (let i = 0; i < length; i++) {\n    newRe[i] = re[i] * cosTheta - im[i] * sinTheta;\n    newIm[i] = re[i] * sinTheta + im[i] * cosTheta;\n    // calculate angles i+1 from i\n    cosTheta = cosTheta - (alpha * cosTheta + beta * sinTheta);\n    sinTheta = sinTheta - (alpha * sinTheta - beta * cosTheta);\n  }\n\n  return { re: newRe, im: newIm };\n}\n","import { absolute } from './absolute';\nimport { phaseCorrection } from './phaseCorrection';\n\nexport const ReIm = {\n  absolute,\n  phaseCorrection,\n};\n","/**\n * This function performs a circular shift to a new array\n * Positive values of shifts will shift to the right and negative values will do to the left\n * @example rotate([1,2,3,4],1) -> [4,1,2,3]\n * @example rotate([1,2,3,4],-1) -> [2,3,4,1]\n * @param {Array} array - the array that will be rotated\n * @param {number} shift\n * @return {Array}\n */\nexport function rotate(array, shift) {\n  shift = shift % array.length;\n  if (shift < 0) shift += array.length;\n  return array.slice(array.length - shift).concat(array.slice(0, array.length - shift));\n}\n\n","/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function subtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n\n","/**\n\n/**\n * This function add the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function add(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n\n","/**\n\n/**\n * This function multiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function multiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n\n","/**\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function divide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n\n","import { findClosestIndex } from './findClosestIndex';\nimport { rotate } from './rotate';\nimport { subtract } from './subtract';\nimport { add } from './add';\nimport { multiply } from './multiply';\nimport { divide } from './divide';\nimport { getTargetIndex } from './getTargetIndex';\n\nexport const X = {\n  findClosestIndex,\n  rotate,\n  subtract,\n  add,\n  multiply,\n  divide,\n  getTargetIndex,\n};\n","export { XY } from './xy/index.js';\nexport { XReIm } from './xreim/index.js';\nexport { ReIm } from './reim/index.js';\nexport { X } from './x/index.js';\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n\n  var output = new Array(numberOfPoints);\n\n  var initialOriginalStep = x[1] - x[0];\n  var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  var min = from - halfStep;\n  var max = from + halfStep;\n\n  var previousX = Number.MIN_VALUE;\n  var previousY = 0;\n  var nextX = x[0] - initialOriginalStep;\n  var nextY = 0;\n\n  var currentValue = 0;\n  var slope = 0;\n  var intercept = 0;\n  var sumAtMin = 0;\n  var sumAtMax = 0;\n\n  var i = 0; // index of input\n  var j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      var add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n  var lastStep = x[x.length - 1] - x[x.length - 2];\n\n  var start = from - halfStep;\n  var output = new Array(numberOfPoints);\n\n  // Init main variables\n  var min = start;\n  var max = start + step;\n\n  var previousX = -Number.MAX_VALUE;\n  var previousY = 0;\n  var nextX = x[0];\n  var nextY = y[0];\n  var frontOutsideSpectra = 0;\n  var backOutsideSpectra = true;\n\n  var currentValue = 0;\n\n  // for slot algorithm\n  var currentPoints = 0;\n\n  var i = 1; // index of input\n  var j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","export default function getZones(from, to, numberOfPoints, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to, numberOfPoints }];\n  }\n\n  // need to deal with overlapping exclusions and out of bound exclusions\n\n  let toRemove = exclusions.reduce(\n    (previous, exclusion) => (previous += exclusion.to - exclusion.from),\n    0\n  );\n  let total = to - from;\n  let unitsPerPoint = (total - toRemove) / numberOfPoints;\n  let zones = [];\n  let currentFrom = from;\n  let totalPoints = 0;\n  for (let exclusion of exclusions) {\n    let currentNbPoints = Math.round(\n      (exclusion.from - currentFrom) / unitsPerPoint\n    );\n    totalPoints += currentNbPoints;\n    if (currentNbPoints > 0) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n        numberOfPoints: currentNbPoints\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (numberOfPoints - totalPoints > 0) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n      numberOfPoints: numberOfPoints - totalPoints\n    });\n  }\n\n  return zones;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\nimport getZones from './getZones';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = []\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  let zones = getZones(from, to, numberOfPoints, exclusions);\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse\n    );\n    xResult.push(...zoneResult.x);\n    yResult.push(...zoneResult.y);\n  }\n\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  var output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints\n    }),\n    y: output\n  };\n}\n","export { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\n\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (Array.isArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n)\n    };\n  }\n}\n","export default function checkArraySize(x, y) {\n  if (!Array.isArray(x) || !Array.isArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\n\nexport default class SimpleLinearRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = [y.intercept, y.slope];\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'simpleLinearRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(x) {\n    return this.slope * x + this.intercept;\n  }\n\n  computeX(y) {\n    return (y - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    let result = 'f(x) = ';\n    if (this.slope !== 0) {\n      const xFactor = maybeToPrecision(this.slope, precision);\n      result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\n      if (this.intercept !== 0) {\n        const absIntercept = Math.abs(this.intercept);\n        const operator = absIntercept === this.intercept ? '+' : '-';\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'simpleLinearRegression') {\n      throw new TypeError('not a SLR model');\n    }\n    return new SimpleLinearRegression(true, json);\n  }\n}\n\nfunction regress(slr, x, y) {\n  const n = x.length;\n  let xSum = 0;\n  let ySum = 0;\n\n  let xSquared = 0;\n  let xY = 0;\n\n  for (let i = 0; i < n; i++) {\n    xSum += x[i];\n    ySum += y[i];\n    xSquared += x[i] * x[i];\n    xY += x[i] * y[i];\n  }\n\n  const numerator = n * xY - xSum * ySum;\n  slr.slope = numerator / (n * xSquared - xSum * xSum);\n  slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n  slr.coefficients = [slr.intercept, slr.slope];\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n"],"sourceRoot":""}