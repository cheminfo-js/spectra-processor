{"version":3,"sources":["webpack://SpectraProcessor/webpack/universalModuleDefinition","webpack://SpectraProcessor/webpack/bootstrap","webpack://SpectraProcessor/./node_modules/is-any-array/src/index.js","webpack://SpectraProcessor/./lib/index.js","webpack://SpectraProcessor/./node_modules/ml-stat/array.js","webpack://SpectraProcessor/./node_modules/jcampconverter/src/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/array/arrayFindClosestIndex.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/array/arrayGetFromToIndex.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/xyCheck.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/xyIntegration.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/xyIntegral.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/xyMaxY.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/xyMaxYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/index.js","webpack://SpectraProcessor/./node_modules/ml-array-sequential-fill/lib-es6/index.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/integral.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/getZones.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/index.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-filter-x/src/getZones.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-filter-x/src/index.js"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","module","exports","defineProperty","value","_interopDefault","ex","filterX","require","equallySpaced","Stat","mlSpectraProcessing","jcampconverter","getData","spectrum","options","filter","data","x","y","updateNormalized","from","to","length","numberOfPoints","processes","exclusions","slice","process","kind","mean","meanFct","map","std","standardDeviation","stdFct","Error","result","normalized","updateRangesInfo","ranges","range","JSON","parse","stringify","label","fromToIndex","fromIndex","arrayFindClosestIndex","toIndex","integration","xyIntegration","maxPoint","xyMaxYPoint","Spectrum","constructor","id","meta","reverse","undefined","getXY","getJcampKind","datatype","spectra","dataType","toLowerCase","yUnit","match","IR_ABSORBANCE","IR_TRANSMITTANCE","normalization","importation","converter","transmittance","Math","log10","display","xLabel","xInverted","yLabel","jcamp","parsed","convert","xy","getFilterAnnotations","annotations","exclusion","ignore","annotation","type","position","strokeWidth","fillColor","push","SpectraProcessor","keepOriginalData","normalizationFilter","setNormalizationFilter","addFromJcamp","jcamp$1","force","contains","createAndAddSpectrum","index","getSpectrumIndex","removeSpectrum","splice","removeSpectraNotIn","ids","currentIDs","includes","isNaN","i","getSpectrum","getNormalizedData","matrix","getNormalizedChart","chart","styles","unselected","lineColor","color","lineWidth","lineStyle","selected","getChart","compareNumbers","a","b","sum","values","max","l","min","minMax","arithmeticMean","geometricMean","mul","pow","logMean","lnsum","log","grandMean","means","samples","n","truncatedMean","percent","alreadySorted","concat","sort","k","floor","harmonicMean","RangeError","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","theVariance","sqrt","standardError","robustMeanAndStdev","stdev","averageDeviations","Array","abs","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","indexOf","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","g","kurtosis","s4","m4","v","c","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","standardize","standardDev","cumulativeSum","array","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","defaultOptions","keepRecordsRegExp","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","assign","wantXY","start","Date","now","ntuples","ldr","dataLabel","dataValue","ldrs","endLine","infos","logs","info","TypeError","action","time","split","replace","substring","trim","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","first","firstX","firstY","last","lastX","lastY","vardim","nbPoints","factor","xFactor","yFactor","units","xUnit","datatable","deltaX","prepareSpectrum","fastParseXYData","parsePeakTable","parseXYA","title","twoD","maxX","minX","maxY","minY","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","isMSField","convertMSFieldToLabel","sampleDescription","isArray","keys","newNtuples","key","j","add2D","newData","complexChromatogram","simpleChromatogram","times","series","ms","dimension","existingGCMSFields","intensity","shift","getMedian","convertTo3DZ","minZ","maxZ","ySize","xSize","xVector","noise","zData","contourLines","generateContourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","x0","xN","dx","y0","yN","dy","iter","contourLevels","lineZValue","level","contourLevel","side","exp","lines","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","isXYdata","currentData","currentX","currentY","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeSymbolRegExp","isXYAdata","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","JcampConverter","input","useWorker","postToWorker","stamps","worker","createWorker","Promise","resolve","stamp","random","postMessage","workerURL","URL","createObjectURL","Blob","Worker","revokeObjectURL","addEventListener","event","output","createTree","flatten","flat","stack","current","ntupleLevel","spaces","line","labelLine","startsWith","join","children","finished","pop","forEach","entry","target","low","high","middle","arrayGetFromToIndex","xyCheck","points","xyIntegral","integral","xyMaxY","_typeof","obj","Symbol","iterator","sequentialFill","arguments","_options","_options$from","_options$to","_options$size","size","step","_i","x1","slope","intercept","equallySpacedSmooth","xLength","halfStep","initialOriginalStep","lastOriginalStep","previousX","Number","MIN_VALUE","previousY","nextX","nextY","sumAtMin","sumAtMax","getSlope","y1","main","add","equallySpacedSlot","lastStep","MAX_VALUE","frontOutsideSpectra","backOutsideSpectra","currentPoints","getZones","toRemove","reduce","previous","total","unitsPerPoint","zones","currentFrom","totalPoints","currentNbPoints","round","arrayXY","variant","xResult","yResult","zone","zoneResult","processZone","currentZoneIndex","newX","newY"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;AClFa;;AAEb,MAAMA,QAAQ,GAAGC,MAAM,CAACC,SAAP,CAAiBF,QAAlC;;AAEA,SAASG,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,SAAOJ,QAAQ,CAACK,IAAT,CAAcD,MAAd,EAAsBE,QAAtB,CAA+B,QAA/B,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBL,UAAjB,C;;;;;;;ACRa;;AAEbF,MAAM,CAACQ,cAAP,CAAsBD,OAAtB,EAA+B,YAA/B,EAA6C;AAAEE,OAAK,EAAE;AAAT,CAA7C;;AAEA,SAASC,eAAT,CAA0BC,EAA1B,EAA8B;AAAE,SAAQA,EAAE,IAAK,OAAOA,EAAP,KAAc,QAArB,IAAkC,aAAaA,EAAhD,GAAsDA,EAAE,CAAC,SAAD,CAAxD,GAAsEA,EAA7E;AAAkF;;AAElH,IAAIC,OAAO,GAAGF,eAAe,CAACG,mBAAO,CAAC,CAAD,CAAR,CAA7B;;AACA,IAAIC,aAAa,GAAGJ,eAAe,CAACG,mBAAO,CAAC,CAAD,CAAR,CAAnC;;AACA,IAAIE,IAAI,GAAGL,eAAe,CAACG,mBAAO,CAAC,CAAD,CAAR,CAA1B;;AACA,IAAIG,mBAAmB,GAAGH,mBAAO,CAAC,CAAD,CAAjC;;AACA,IAAII,cAAc,GAAGJ,mBAAO,CAAC,CAAD,CAA5B;AAEA;;;;;;;;AAOA,SAASK,OAAT,CAAiBC,QAAjB,EAA2BC,OAAO,GAAG,EAArC,EAAyC;AAAA,QAC/BC,MAD+B,GACpBD,OADoB,CAC/BC,MAD+B;AAGvC,MAAIC,IAAI,GAAG;AAAEC,KAAC,EAAE,EAAL;AAASC,KAAC,EAAE;AAAZ,GAAX;;AAEA,MAAIH,MAAJ,EAAY;AACVC,QAAI,GAAGV,OAAO,CAAC;AAAEW,OAAC,EAAEJ,QAAQ,CAACI,CAAd;AAAiBC,OAAC,EAAEL,QAAQ,CAACK;AAA7B,KAAD,EAAmCH,MAAnC,CAAd;AACD;;AACD,SAAOC,IAAP;AACD;;AAED,SAASG,gBAAT,CAA0BN,QAA1B,EAAoCC,OAAO,GAAG,EAA9C,EAAkD;AAAA,sBAO5CA,OAP4C,CAE9CM,IAF8C;AAAA,MAE9CA,IAF8C,8BAEvCP,QAAQ,CAACI,CAAT,CAAW,CAAX,CAFuC;AAAA,oBAO5CH,OAP4C,CAG9CO,EAH8C;AAAA,MAG9CA,EAH8C,4BAGzCR,QAAQ,CAACI,CAAT,CAAWJ,QAAQ,CAACI,CAAT,CAAWK,MAAX,GAAoB,CAA/B,CAHyC;AAAA,8BAO5CR,OAP4C,CAI9CS,cAJ8C;AAAA,MAI9CA,cAJ8C,sCAI7B,IAJ6B;AAAA,2BAO5CT,OAP4C,CAK9CU,SAL8C;AAAA,MAK9CA,SAL8C,mCAKlC,EALkC;AAAA,4BAO5CV,OAP4C,CAM9CW,UAN8C;AAAA,MAM9CA,UAN8C,oCAMjC,EANiC;AAShD,MAAIP,CAAC,GAAGL,QAAQ,CAACK,CAAT,CAAWQ,KAAX,CAAiB,CAAjB,CAAR;;AACA,OAAK,IAAIC,OAAT,IAAoBH,SAApB,EAA+B;AAC7B,YAAQG,OAAO,CAACC,IAAhB;AACE,WAAK,YAAL;AAAmB;AACjB,cAAIC,IAAI,GAAGpB,IAAI,CAACoB,IAAL,CAAUhB,QAAQ,CAACK,CAAnB,CAAX;;AACA,cAAIY,OAAO,GAAIZ,CAAD,IAAOA,CAAC,GAAGW,IAAzB;;AACAX,WAAC,GAAGA,CAAC,CAACa,GAAF,CAAMD,OAAN,CAAJ;AACA;AACD;;AACD,WAAK,SAAL;AAAgB;AACd,cAAIE,GAAG,GAAGvB,IAAI,CAACwB,iBAAL,CAAuBpB,QAAQ,CAACK,CAAhC,CAAV;;AACA,cAAIgB,MAAM,GAAIhB,CAAD,IAAOA,CAAC,GAAGc,GAAxB;;AACAd,WAAC,GAAGA,CAAC,CAACa,GAAF,CAAMG,MAAN,CAAJ;AACA;AACD;;AACD;AACE,cAAM,IAAIC,KAAJ,CAAW,yBAAwBR,OAAO,CAACC,IAAK,EAAhD,CAAN;AAdJ;AAgBD;;AAED,MAAIQ,MAAM,GAAG5B,aAAa,CACxB;AAAES,KAAC,EAAEJ,QAAQ,CAACI,CAAd;AAAiBC;AAAjB,GADwB,EAExB;AAAEE,QAAF;AAAQC,MAAR;AAAYE,kBAAZ;AAA4BE;AAA5B,GAFwB,CAA1B;AAIAZ,UAAQ,CAACwB,UAAT,GAAsBD,MAAtB;AAEA,SAAOA,MAAP;AACD;;AAED,SAASE,gBAAT,CAA0BzB,QAA1B,EAAoC0B,MAAM,GAAG,EAA7C,EAAiD;AAC/C1B,UAAQ,CAAC0B,MAAT,GAAkB,EAAlB;;AACA,OAAK,IAAIC,KAAT,IAAkBD,MAAlB,EAA0B;AACxBC,SAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,KAAf,CAAX,CAAR;AACA3B,YAAQ,CAAC0B,MAAT,CAAgBC,KAAK,CAACI,KAAtB,IAA+BJ,KAA/B;AACA,QAAIK,WAAW,GAAG;AAChBC,eAAS,EAAEpC,mBAAmB,CAACqC,qBAApB,CAA0ClC,QAAQ,CAACwB,UAAT,CAAoBpB,CAA9D,EAAiEuB,KAAK,CAACpB,IAAvE,CADK;AAEhB4B,aAAO,EAAEtC,mBAAmB,CAACqC,qBAApB,CAA0ClC,QAAQ,CAACwB,UAAT,CAAoBpB,CAA9D,EAAiEuB,KAAK,CAACnB,EAAvE;AAFO,KAAlB;AAIAmB,SAAK,CAACS,WAAN,GAAoBvC,mBAAmB,CAACwC,aAApB,CAAkCrC,QAAQ,CAACwB,UAA3C,EAAuDQ,WAAvD,CAApB;AACAL,SAAK,CAACW,QAAN,GAAiBzC,mBAAmB,CAAC0C,WAApB,CAAgCvC,QAAQ,CAACwB,UAAzC,EAAqDQ,WAArD,CAAjB;AACD;AACF;AAED;;;;;;;;;AAOA,MAAMQ,QAAN,CAAe;AACbC,aAAW,CAACrC,CAAD,EAAIC,CAAJ,EAAOqC,EAAP,EAAWzC,OAAO,GAAG,EAArB,EAAyB;AAAA,0BACZA,OADY,CAC1B0C,IAD0B;AAAA,UAC1BA,IAD0B,8BACnB,EADmB;AAElC,QAAI,CAACD,EAAL,EAAS,MAAM,IAAIpB,KAAJ,CAAU,2BAAV,CAAN;;AAET,QAAIlB,CAAC,IAAIA,CAAC,CAACK,MAAF,GAAW,CAAhB,IAAqBL,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAjC,EAAsC;AACpC,WAAKA,CAAL,GAASA,CAAC,CAACwC,OAAF,EAAT;AACA,WAAKvC,CAAL,GAASA,CAAC,CAACuC,OAAF,EAAT;AACD,KAHD,MAGO;AACL,WAAKxC,CAAL,GAASA,CAAC,IAAI,EAAd;AACA,WAAKC,CAAL,GAASA,CAAC,IAAI,EAAd;AACD;;AACD,SAAKqC,EAAL,GAAUA,EAAV;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKnB,UAAL,GAAkBqB,SAAlB;AACD;;AAEDC,OAAK,GAAG;AACN,WAAO;AAAE1C,OAAC,EAAE,KAAKA,CAAV;AAAaC,OAAC,EAAE,KAAKA;AAArB,KAAP;AACD;;AAnBY;;AAsBfmC,QAAQ,CAAC1D,SAAT,CAAmBiB,OAAnB,GAA6B,UAAUE,OAAV,EAAmB;AAC9C,SAAOF,OAAO,CAAC,IAAD,EAAOE,OAAP,CAAd;AACD,CAFD;;AAIAuC,QAAQ,CAAC1D,SAAT,CAAmBwB,gBAAnB,GAAsC,UAAUL,OAAV,EAAmB;AACvD,SAAOK,gBAAgB,CAAC,IAAD,EAAOL,OAAP,CAAvB;AACD,CAFD;;AAIAuC,QAAQ,CAAC1D,SAAT,CAAmB2C,gBAAnB,GAAsC,UAAUC,MAAV,EAAkB;AACtDD,kBAAgB,CAAC,IAAD,EAAOC,MAAP,CAAhB;AACD,CAFD;;AAIA,SAASqB,YAAT,CAAsB5C,IAAtB,EAA4B;AAC1B,MAAI6C,QAAQ,GAAG7C,IAAI,CAAC8C,OAAL,CAAa,CAAb,EAAgBC,QAAhB,CAAyBC,WAAzB,EAAf;AACA,MAAIC,KAAK,GAAGjD,IAAI,CAAC8C,OAAL,CAAa,CAAb,EAAgBG,KAAhB,CAAsBD,WAAtB,EAAZ;;AAEA,MAAIH,QAAQ,CAACK,KAAT,CAAe,UAAf,CAAJ,EAAgC;AAC9B,QAAID,KAAK,CAACC,KAAN,CAAY,YAAZ,CAAJ,EAA+B;AAC7B,aAAOC,aAAP;AACD,KAFD,MAEO;AACL,aAAOC,gBAAP;AACD;AACF;;AACD,SAAOV,SAAP;AACD;;AAED,MAAMU,gBAAgB,GAAG;AACvBC,eAAa,EAAE,EADQ;AAEvBC,aAAW,EAAE;AACXC,aAAS,EAAGC,aAAD,IAAmB,CAACC,IAAI,CAACC,KAAL,CAAWF,aAAX;AADpB,GAFU;AAKvB5C,MAAI,EAAE,UALiB;AAMvB+C,SAAO,EAAE;AACPC,UAAM,EAAE,mBADD;AAEPC,aAAS,EAAE,IAFJ;AAGPC,UAAM,EAAE;AAHD;AANc,CAAzB;AAaA,MAAMX,aAAa,GAAG;AACpBE,eAAa,EAAE,EADK;AAEpBzC,MAAI,EAAE,UAFc;AAGpB+C,SAAO,EAAE;AACPC,UAAM,EAAE,mBADD;AAEPC,aAAS,EAAE,IAFJ;AAGPC,UAAM,EAAE;AAHD;AAHW,CAAtB;AAUA;;;;;;AAKA,SAASC,KAAT,CAAeA,KAAf,EAAsB;AACpB,QAAMC,MAAM,GAAGrE,cAAc,CAACsE,OAAf,CAAuBF,KAAvB,EAA8B;AAAEG,MAAE,EAAE;AAAN,GAA9B,CAAf;AACA,QAAMtD,IAAI,GAAGgC,YAAY,CAACoB,MAAD,CAAzB;AACA,QAAMhE,IAAI,GAAGgE,MAAM,CAAClB,OAAP,CAAe,CAAf,EAAkB9C,IAAlB,CAAuB,CAAvB,CAAb,CAHoB,CAIpB;;AACA,MAAIY,IAAI,IAAIA,IAAI,CAAC0C,WAAb,IAA4B1C,IAAI,CAAC0C,WAAL,CAAiBC,SAAjD,EAA4D;AAC1DvD,QAAI,CAACE,CAAL,GAASF,IAAI,CAACE,CAAL,CAAOa,GAAP,CAAWH,IAAI,CAAC0C,WAAL,CAAiBC,SAA5B,CAAT;AACD;;AAED,SAAO;AAAEvD,QAAF;AAAQY;AAAR,GAAP;AACD;;AAED,SAASuD,oBAAT,CAA8BpE,MAAM,GAAG,EAAvC,EAA2C;AAAA,2BACfA,MADe,CACnCU,UADmC;AAAA,MACnCA,UADmC,mCACtB,EADsB;AAEzC,MAAI2D,WAAW,GAAG,EAAlB;AACA3D,YAAU,GAAGA,UAAU,CAACV,MAAX,CAAmBsE,SAAD,IAAe,CAACA,SAAS,CAACC,MAA5C,CAAb;AACAF,aAAW,GAAG3D,UAAU,CAACM,GAAX,CAAgBsD,SAAD,IAAe;AAC1C,QAAIE,UAAU,GAAG;AACfC,UAAI,EAAE,MADS;AAEfC,cAAQ,EAAE,CAAC;AAAExE,SAAC,EAAEoE,SAAS,CAACjE,IAAf;AAAqBF,SAAC,EAAE,CAAC;AAAzB,OAAD,EAAiC;AAAED,SAAC,EAAEoE,SAAS,CAAChE,EAAf;AAAmBH,SAAC,EAAE;AAAtB,OAAjC,CAFK;AAGfwE,iBAAW,EAAE,CAHE;AAIfC,eAAS,EAAE;AAJI,KAAjB;AAMA,WAAOJ,UAAP;AACD,GARa,CAAd;;AASA,MAAIxE,MAAM,CAACK,IAAP,KAAgBsC,SAApB,EAA+B;AAC7B0B,eAAW,CAACQ,IAAZ,CAAiB;AACfJ,UAAI,EAAE,MADS;AAEfC,cAAQ,EAAE,CAAC;AAAExE,SAAC,EAAE,CAAL;AAAQC,SAAC,EAAE,CAAC;AAAZ,OAAD,EAAoB;AAAED,SAAC,EAAEF,MAAM,CAACK,IAAZ;AAAkBF,SAAC,EAAE;AAArB,OAApB,CAFK;AAGfwE,iBAAW,EAAE,CAHE;AAIfC,eAAS,EAAE;AAJI,KAAjB;AAMD;;AACD,MAAI5E,MAAM,CAACM,EAAP,KAAcqC,SAAlB,EAA6B;AAC3B0B,eAAW,CAACQ,IAAZ,CAAiB;AACfJ,UAAI,EAAE,MADS;AAEfC,cAAQ,EAAE,CAAC;AAAExE,SAAC,EAAEF,MAAM,CAACM,EAAZ;AAAgBH,SAAC,EAAE,CAAC;AAApB,OAAD,EAA4B;AAAED,SAAC,EAAE,KAAL;AAAYC,SAAC,EAAE;AAAf,OAA5B,CAFK;AAGfwE,iBAAW,EAAE,CAHE;AAIfC,eAAS,EAAE;AAJI,KAAjB;AAMD;;AACD,SAAOP,WAAP;AACD;;AAED,MAAMS,gBAAN,CAAuB;AACrBvC,aAAW,CAACxC,OAAO,GAAG,EAAX,EAAe;AACxB,SAAKgF,gBAAL,GACEhF,OAAO,CAACgF,gBAAR,KAA6BpC,SAA7B,GAAyC,KAAzC,GAAiD5C,OAAO,CAACgF,gBAD3D;AAEA,SAAKC,mBAAL,GAA2BrC,SAA3B;AACA,SAAKI,OAAL,GAAe,EAAf;AACD;;AAEDqB,sBAAoB,GAAG;AACrB,WAAOA,oBAAoB,CAAC,KAAKY,mBAAN,CAA3B;AACD;;AAEDC,wBAAsB,CAACD,mBAAmB,GAAG,EAAvB,EAA2B;AAC/C,QAAI,CAAC,KAAKD,gBAAN,IAA0B,KAAKhC,OAAL,CAAaxC,MAAb,GAAsB,CAApD,EAAuD;AACrD,YAAM,IAAIa,KAAJ,CACJ,mGADI,CAAN;AAGD;;AACD,SAAK4D,mBAAL,GAA2BA,mBAA3B;;AACA,SAAK,IAAIlF,QAAT,IAAqB,KAAKiD,OAA1B,EAAmC;AACjCjD,cAAQ,CAACM,gBAAT,CAA0B,KAAK4E,mBAA/B;AACD;AACF;AAED;;;;;;;;;;AAQAE,cAAY,CAACC,OAAD,EAAU3C,EAAV,EAAcC,IAAI,GAAG,EAArB,EAAyB2C,KAAK,GAAG,KAAjC,EAAwC;AAClD,QAAIA,KAAK,KAAK,KAAV,IAAmB,KAAKC,QAAL,CAAc7C,EAAd,CAAvB,EAA0C;AACxC;AACD;;AAED,QAAIyB,MAAM,GAAGD,KAAK,CAACmB,OAAD,CAAlB;AACA,SAAKG,oBAAL,CAA0BrB,MAA1B,EAAkCzB,EAAlC,EAAsCC,IAAtC;AACD;;AAEDlB,kBAAgB,CAACxB,OAAD,EAAU;AACxB,SAAK,IAAID,QAAT,IAAqB,KAAKiD,OAA1B,EAAmC;AACjCjD,cAAQ,CAACyB,gBAAT,CAA0BxB,OAA1B;AACD;AACF;AAED;;;;;;AAIAuF,sBAAoB,CAACrB,MAAD,EAASzB,EAAT,EAAaC,IAAb,EAAmB;AACrC,QAAI8C,KAAK,GAAG,KAAKC,gBAAL,CAAsBhD,EAAtB,CAAZ;AACA,QAAI+C,KAAK,KAAK5C,SAAd,EAAyB4C,KAAK,GAAG,KAAKxC,OAAL,CAAaxC,MAArB;AACzB,QAAIT,QAAQ,GAAG,IAAIwC,QAAJ,CAAa2B,MAAM,CAAChE,IAAP,CAAYC,CAAzB,EAA4B+D,MAAM,CAAChE,IAAP,CAAYE,CAAxC,EAA2CqC,EAA3C,EAA+C;AAC5DC;AAD4D,KAA/C,CAAf;AAGA3C,YAAQ,CAACM,gBAAT,CAA0B,KAAK4E,mBAA/B;AACA,SAAKjC,OAAL,CAAawC,KAAb,IAAsBzF,QAAtB;AACD;;AAED2F,gBAAc,CAACjD,EAAD,EAAK;AACjB,QAAI+C,KAAK,GAAG,KAAKC,gBAAL,CAAsBhD,EAAtB,CAAZ;AACA,QAAI+C,KAAK,KAAK5C,SAAd,EAAyB,OAAOA,SAAP;AACzB,WAAO,KAAKI,OAAL,CAAa2C,MAAb,CAAoBH,KAApB,EAA2B,CAA3B,CAAP;AACD;;AAEDI,oBAAkB,CAACC,GAAD,EAAM;AACtB,QAAIC,UAAU,GAAG,KAAK9C,OAAL,CAAa/B,GAAb,CAAkBlB,QAAD,IAAcA,QAAQ,CAAC0C,EAAxC,CAAjB;;AACA,SAAK,IAAIA,EAAT,IAAeqD,UAAf,EAA2B;AACzB,UAAI,CAACD,GAAG,CAACE,QAAJ,CAAatD,EAAb,CAAL,EAAuB;AACrB,aAAKiD,cAAL,CAAoBjD,EAApB;AACD;AACF;AACF;;AAED6C,UAAQ,CAAC7C,EAAD,EAAK;AACX,WAAO,CAACuD,KAAK,CAAC,KAAKP,gBAAL,CAAsBhD,EAAtB,CAAD,CAAb;AACD;;AAEDgD,kBAAgB,CAAChD,EAAD,EAAK;AACnB,QAAI,CAACA,EAAL,EAAS,OAAOG,SAAP;;AACT,SAAK,IAAIqD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKjD,OAAL,CAAaxC,MAAjC,EAAyCyF,CAAC,EAA1C,EAA8C;AAC5C,UAAIlG,QAAQ,GAAG,KAAKiD,OAAL,CAAaiD,CAAb,CAAf;AACA,UAAIlG,QAAQ,CAAC0C,EAAT,KAAgBA,EAApB,EAAwB,OAAOwD,CAAP;AACzB;;AACD,WAAOrD,SAAP;AACD;;AAEDsD,aAAW,CAACzD,EAAD,EAAK;AACd,QAAI+C,KAAK,GAAG,KAAKC,gBAAL,CAAsBhD,EAAtB,CAAZ;AACA,QAAI+C,KAAK,KAAK5C,SAAd,EAAyB,OAAOA,SAAP;AACzB,WAAO,KAAKI,OAAL,CAAawC,KAAb,CAAP;AACD;;AAEDW,mBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKnD,OAAN,IAAiB,CAAC,KAAKA,OAAL,CAAa,CAAb,CAAtB,EAAuC,OAAO,EAAP;AACvC,QAAIoD,MAAM,GAAG,EAAb;AACA,QAAI1D,IAAI,GAAG,EAAX;AACA,QAAImD,GAAG,GAAG,EAAV;;AACA,SAAK,IAAI9F,QAAT,IAAqB,KAAKiD,OAA1B,EAAmC;AACjC6C,SAAG,CAACf,IAAJ,CAAS/E,QAAQ,CAAC0C,EAAlB;AACA2D,YAAM,CAACtB,IAAP,CAAY/E,QAAQ,CAACwB,UAAT,CAAoBnB,CAAhC;AACAsC,UAAI,CAACoC,IAAL,CAAU/E,QAAQ,CAAC2C,IAAnB;AACD;;AACD,QAAIvC,CAAC,GAAG,KAAK6C,OAAL,CAAa,CAAb,EAAgBzB,UAAhB,CAA2BpB,CAAnC;AACA,WAAO;AAAE0F,SAAF;AAAOO,YAAP;AAAe1D,UAAf;AAAqBvC;AAArB,KAAP;AACD;;AAEDkG,oBAAkB,CAACrG,OAAO,GAAG,EAAX,EAAe;AAAA,UACvB6F,GADuB,GACf7F,OADe,CACvB6F,GADuB;AAE/B,QAAIS,KAAK,GAAG;AACVpG,UAAI,EAAE;AADI,KAAZ;;AAGA,SAAK,IAAIH,QAAT,IAAqB,KAAKiD,OAA1B,EAAmC;AACjC,UAAI,CAAC6C,GAAD,IAAQA,GAAG,CAACE,QAAJ,CAAahG,QAAQ,CAAC0C,EAAtB,CAAZ,EAAuC;AACrC,YAAIvC,IAAI,GAAGH,QAAQ,CAACwB,UAApB;AACArB,YAAI,CAACqG,MAAL,GAAc;AACZC,oBAAU,EAAE;AACVC,qBAAS,EAAE1G,QAAQ,CAAC2C,IAAT,CAAcgE,KAAd,IAAuB,UADxB;AAEVC,qBAAS,EAAE,CAFD;AAGVC,qBAAS,EAAE;AAHD,WADA;AAMZC,kBAAQ,EAAE;AACRJ,qBAAS,EAAE1G,QAAQ,CAAC2C,IAAT,CAAcgE,KAAd,IAAuB,UAD1B;AAERC,qBAAS,EAAE,CAFH;AAGRC,qBAAS,EAAE;AAHH;AANE,SAAd;AAYA1G,YAAI,CAAC4B,KAAL,GAAa/B,QAAQ,CAAC2C,IAAT,CAAcD,EAAd,IAAoB1C,QAAQ,CAAC0C,EAA1C;AACA6D,aAAK,CAACpG,IAAN,CAAW4E,IAAX,CAAgB5E,IAAhB;AACD;AACF;;AACD,WAAOoG,KAAP;AACD;;AAEDQ,UAAQ,CAAC9G,OAAO,GAAG,EAAX,EAAe;AAAA,UACb6F,GADa,GACQ7F,OADR,CACb6F,GADa;AAAA,4BACQ7F,OADR,CACRC,MADQ;AAAA,UACRA,MADQ,gCACC,EADD;AAErB,QAAIqG,KAAK,GAAG;AACVpG,UAAI,EAAE;AADI,KAAZ;;AAGA,SAAK,IAAIH,QAAT,IAAqB,KAAKiD,OAA1B,EAAmC;AACjC,UAAI,CAAC6C,GAAD,IAAQA,GAAG,CAACE,QAAJ,CAAahG,QAAQ,CAAC0C,EAAtB,CAAZ,EAAuC;AACrC,YAAIvC,IAAI,GAAGH,QAAQ,CAACD,OAAT,CAAiB;AAAEG;AAAF,SAAjB,CAAX;AACAC,YAAI,CAACqG,MAAL,GAAc;AACZC,oBAAU,EAAE;AACVC,qBAAS,EAAE1G,QAAQ,CAAC2C,IAAT,CAAcgE,KAAd,IAAuB,UADxB;AAEVC,qBAAS,EAAE,CAFD;AAGVC,qBAAS,EAAE;AAHD,WADA;AAMZC,kBAAQ,EAAE;AACRJ,qBAAS,EAAE1G,QAAQ,CAAC2C,IAAT,CAAcgE,KAAd,IAAuB,UAD1B;AAERC,qBAAS,EAAE,CAFH;AAGRC,qBAAS,EAAE;AAHH;AANE,SAAd;AAYA1G,YAAI,CAAC4B,KAAL,GAAa/B,QAAQ,CAAC2C,IAAT,CAAcD,EAAd,IAAoB1C,QAAQ,CAAC0C,EAA1C;AACA6D,aAAK,CAACpG,IAAN,CAAW4E,IAAX,CAAgB5E,IAAhB;AACD;AACF;;AACD,WAAOoG,KAAP;AACD;;AAjKoB;;AAoKvBnH,OAAO,CAAC4F,gBAAR,GAA2BA,gBAA3B,C;;;;;;;ACrXa;;AAEb,SAASgC,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AAC1B,SAAOD,CAAC,GAAGC,CAAX;AACH;AAED;;;;;;;AAKA9H,OAAO,CAAC+H,GAAR,GAAc,SAASA,GAAT,CAAaC,MAAb,EAAqB;AAC/B,MAAID,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,MAAM,CAAC3G,MAA3B,EAAmCyF,CAAC,EAApC,EAAwC;AACpCiB,OAAG,IAAIC,MAAM,CAAClB,CAAD,CAAb;AACH;;AACD,SAAOiB,GAAP;AACH,CAND;AAQA;;;;;;;AAKA/H,OAAO,CAACiI,GAAR,GAAc,SAASA,GAAT,CAAaD,MAAb,EAAqB;AAC/B,MAAIC,GAAG,GAAGD,MAAM,CAAC,CAAD,CAAhB;AACA,MAAIE,CAAC,GAAGF,MAAM,CAAC3G,MAAf;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxB,QAAIkB,MAAM,CAAClB,CAAD,CAAN,GAAYmB,GAAhB,EAAqBA,GAAG,GAAGD,MAAM,CAAClB,CAAD,CAAZ;AACxB;;AACD,SAAOmB,GAAP;AACH,CAPD;AASA;;;;;;;AAKAjI,OAAO,CAACmI,GAAR,GAAc,SAASA,GAAT,CAAaH,MAAb,EAAqB;AAC/B,MAAIG,GAAG,GAAGH,MAAM,CAAC,CAAD,CAAhB;AACA,MAAIE,CAAC,GAAGF,MAAM,CAAC3G,MAAf;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxB,QAAIkB,MAAM,CAAClB,CAAD,CAAN,GAAYqB,GAAhB,EAAqBA,GAAG,GAAGH,MAAM,CAAClB,CAAD,CAAZ;AACxB;;AACD,SAAOqB,GAAP;AACH,CAPD;AASA;;;;;;;AAKAnI,OAAO,CAACoI,MAAR,GAAiB,SAASA,MAAT,CAAgBJ,MAAhB,EAAwB;AACrC,MAAIG,GAAG,GAAGH,MAAM,CAAC,CAAD,CAAhB;AACA,MAAIC,GAAG,GAAGD,MAAM,CAAC,CAAD,CAAhB;AACA,MAAIE,CAAC,GAAGF,MAAM,CAAC3G,MAAf;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxB,QAAIkB,MAAM,CAAClB,CAAD,CAAN,GAAYqB,GAAhB,EAAqBA,GAAG,GAAGH,MAAM,CAAClB,CAAD,CAAZ;AACrB,QAAIkB,MAAM,CAAClB,CAAD,CAAN,GAAYmB,GAAhB,EAAqBA,GAAG,GAAGD,MAAM,CAAClB,CAAD,CAAZ;AACxB;;AACD,SAAO;AACHqB,OAAG,EAAEA,GADF;AAEHF,OAAG,EAAEA;AAFF,GAAP;AAIH,CAZD;AAcA;;;;;;;AAKAjI,OAAO,CAACqI,cAAR,GAAyB,SAASA,cAAT,CAAwBL,MAAxB,EAAgC;AACrD,MAAID,GAAG,GAAG,CAAV;AACA,MAAIG,CAAC,GAAGF,MAAM,CAAC3G,MAAf;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxBiB,OAAG,IAAIC,MAAM,CAAClB,CAAD,CAAb;AACH;;AACD,SAAOiB,GAAG,GAAGG,CAAb;AACH,CAPD;AASA;;;;;AAGAlI,OAAO,CAAC4B,IAAR,GAAe5B,OAAO,CAACqI,cAAvB;AAEA;;;;;;AAKArI,OAAO,CAACsI,aAAR,GAAwB,SAASA,aAAT,CAAuBN,MAAvB,EAA+B;AACnD,MAAIO,GAAG,GAAG,CAAV;AACA,MAAIL,CAAC,GAAGF,MAAM,CAAC3G,MAAf;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxByB,OAAG,IAAIP,MAAM,CAAClB,CAAD,CAAb;AACH;;AACD,SAAOtC,IAAI,CAACgE,GAAL,CAASD,GAAT,EAAc,IAAIL,CAAlB,CAAP;AACH,CAPD;AASA;;;;;;;;;AAOAlI,OAAO,CAACyI,OAAR,GAAkB,SAASA,OAAT,CAAiBT,MAAjB,EAAyB;AACvC,MAAIU,KAAK,GAAG,CAAZ;AACA,MAAIR,CAAC,GAAGF,MAAM,CAAC3G,MAAf;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxB4B,SAAK,IAAIlE,IAAI,CAACmE,GAAL,CAASX,MAAM,CAAClB,CAAD,CAAf,CAAT;AACH;;AACD,SAAO4B,KAAK,GAAGR,CAAf;AACH,CAPD;AASA;;;;;;;;AAMAlI,OAAO,CAAC4I,SAAR,GAAoB,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmC;AACnD,MAAIf,GAAG,GAAG,CAAV;AACA,MAAIgB,CAAC,GAAG,CAAR;AACA,MAAIb,CAAC,GAAGW,KAAK,CAACxH,MAAd;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxBiB,OAAG,IAAIe,OAAO,CAAChC,CAAD,CAAP,GAAa+B,KAAK,CAAC/B,CAAD,CAAzB;AACAiC,KAAC,IAAID,OAAO,CAAChC,CAAD,CAAZ;AACH;;AACD,SAAOiB,GAAG,GAAGgB,CAAb;AACH,CATD;AAWA;;;;;;;;;AAOA/I,OAAO,CAACgJ,aAAR,GAAwB,SAASA,aAAT,CAAuBhB,MAAvB,EAA+BiB,OAA/B,EAAwCC,aAAxC,EAAuD;AAC3E,MAAIA,aAAa,KAAKzF,SAAtB,EAAiCyF,aAAa,GAAG,KAAhB;;AACjC,MAAI,CAACA,aAAL,EAAoB;AAChBlB,UAAM,GAAG,GAAGmB,MAAH,CAAUnB,MAAV,EAAkBoB,IAAlB,CAAuBxB,cAAvB,CAAT;AACH;;AACD,MAAIM,CAAC,GAAGF,MAAM,CAAC3G,MAAf;AACA,MAAIgI,CAAC,GAAG7E,IAAI,CAAC8E,KAAL,CAAWpB,CAAC,GAAGe,OAAf,CAAR;AACA,MAAIlB,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIjB,CAAC,GAAGuC,CAAb,EAAgBvC,CAAC,GAAIoB,CAAC,GAAGmB,CAAzB,EAA6BvC,CAAC,EAA9B,EAAkC;AAC9BiB,OAAG,IAAIC,MAAM,CAAClB,CAAD,CAAb;AACH;;AACD,SAAOiB,GAAG,IAAIG,CAAC,GAAG,IAAImB,CAAZ,CAAV;AACH,CAZD;AAcA;;;;;;;AAKArJ,OAAO,CAACuJ,YAAR,GAAuB,SAASA,YAAT,CAAsBvB,MAAtB,EAA8B;AACjD,MAAID,GAAG,GAAG,CAAV;AACA,MAAIG,CAAC,GAAGF,MAAM,CAAC3G,MAAf;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxB,QAAIkB,MAAM,CAAClB,CAAD,CAAN,KAAc,CAAlB,EAAqB;AACjB,YAAM,IAAI0C,UAAJ,CAAe,oBAAoB1C,CAApB,GAAwB,SAAvC,CAAN;AACH;;AACDiB,OAAG,IAAI,IAAIC,MAAM,CAAClB,CAAD,CAAjB;AACH;;AACD,SAAOoB,CAAC,GAAGH,GAAX;AACH,CAVD;AAYA;;;;;;;AAKA/H,OAAO,CAACyJ,kBAAR,GAA6B,SAASA,kBAAT,CAA4BzB,MAA5B,EAAoC;AAC7D,MAAI0B,EAAE,GAAG,CAAT;AACA,MAAIC,EAAE,GAAG,CAAT;AACA,MAAIzB,CAAC,GAAGF,MAAM,CAAC3G,MAAf;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxB4C,MAAE,IAAI1B,MAAM,CAAClB,CAAD,CAAN,GAAYkB,MAAM,CAAClB,CAAD,CAAxB;AACA6C,MAAE,IAAI3B,MAAM,CAAClB,CAAD,CAAZ;AACH;;AACD,MAAI6C,EAAE,GAAG,CAAT,EAAY;AACR,UAAM,IAAIH,UAAJ,CAAe,2BAAf,CAAN;AACH;;AACD,SAAOE,EAAE,GAAGC,EAAZ;AACH,CAZD;AAcA;;;;;;;;AAMA3J,OAAO,CAAC4J,MAAR,GAAiB,SAASA,MAAT,CAAgB5B,MAAhB,EAAwBkB,aAAxB,EAAuC;AACpD,MAAIA,aAAa,KAAKzF,SAAtB,EAAiCyF,aAAa,GAAG,KAAhB;;AACjC,MAAI,CAACA,aAAL,EAAoB;AAChBlB,UAAM,GAAG,GAAGmB,MAAH,CAAUnB,MAAV,EAAkBoB,IAAlB,CAAuBxB,cAAvB,CAAT;AACH;;AACD,MAAIM,CAAC,GAAGF,MAAM,CAAC3G,MAAf;AACA,MAAIwI,IAAI,GAAGrF,IAAI,CAAC8E,KAAL,CAAWpB,CAAC,GAAG,CAAf,CAAX;;AACA,MAAIA,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACb,WAAO,CAACF,MAAM,CAAC6B,IAAI,GAAG,CAAR,CAAN,GAAmB7B,MAAM,CAAC6B,IAAD,CAA1B,IAAoC,GAA3C;AACH,GAFD,MAEO;AACH,WAAO7B,MAAM,CAAC6B,IAAD,CAAb;AACH;AACJ,CAZD;AAcA;;;;;;;;AAMA7J,OAAO,CAAC8J,QAAR,GAAmB,SAASA,QAAT,CAAkB9B,MAAlB,EAA0B+B,QAA1B,EAAoC;AACnD,MAAIA,QAAQ,KAAKtG,SAAjB,EAA4BsG,QAAQ,GAAG,IAAX;AAC5B,MAAIC,OAAO,GAAGhK,OAAO,CAAC4B,IAAR,CAAaoG,MAAb,CAAd;AACA,MAAIiC,WAAW,GAAG,CAAlB;AACA,MAAI/B,CAAC,GAAGF,MAAM,CAAC3G,MAAf;;AAEA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxB,QAAI9F,CAAC,GAAGgH,MAAM,CAAClB,CAAD,CAAN,GAAYkD,OAApB;AACAC,eAAW,IAAIjJ,CAAC,GAAGA,CAAnB;AACH;;AAED,MAAI+I,QAAJ,EAAc;AACV,WAAOE,WAAW,IAAI/B,CAAC,GAAG,CAAR,CAAlB;AACH,GAFD,MAEO;AACH,WAAO+B,WAAW,GAAG/B,CAArB;AACH;AACJ,CAhBD;AAkBA;;;;;;;;AAMAlI,OAAO,CAACgC,iBAAR,GAA4B,SAASA,iBAAT,CAA2BgG,MAA3B,EAAmC+B,QAAnC,EAA6C;AACrE,SAAOvF,IAAI,CAAC0F,IAAL,CAAUlK,OAAO,CAAC8J,QAAR,CAAiB9B,MAAjB,EAAyB+B,QAAzB,CAAV,CAAP;AACH,CAFD;;AAIA/J,OAAO,CAACmK,aAAR,GAAwB,SAASA,aAAT,CAAuBnC,MAAvB,EAA+B;AACnD,SAAOhI,OAAO,CAACgC,iBAAR,CAA0BgG,MAA1B,IAAoCxD,IAAI,CAAC0F,IAAL,CAAUlC,MAAM,CAAC3G,MAAjB,CAA3C;AACH,CAFD;AAIA;;;;;;;;AAMArB,OAAO,CAACoK,kBAAR,GAA6B,SAASA,kBAAT,CAA4BnJ,CAA5B,EAA+B;AACxD,MAAIW,IAAI,GAAG,CAAX;AAAA,MAAcyI,KAAK,GAAG,CAAtB;AACA,MAAIhJ,MAAM,GAAGJ,CAAC,CAACI,MAAf;AAAA,MAAuByF,CAAC,GAAG,CAA3B;;AACA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGzF,MAAhB,EAAwByF,CAAC,EAAzB,EAA6B;AACzBlF,QAAI,IAAIX,CAAC,CAAC6F,CAAD,CAAT;AACH;;AACDlF,MAAI,IAAIP,MAAR;AACA,MAAIiJ,iBAAiB,GAAG,IAAIC,KAAJ,CAAUlJ,MAAV,CAAxB;;AACA,OAAKyF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGzF,MAAhB,EAAwByF,CAAC,EAAzB,EACIwD,iBAAiB,CAACxD,CAAD,CAAjB,GAAuBtC,IAAI,CAACgG,GAAL,CAASvJ,CAAC,CAAC6F,CAAD,CAAD,GAAOlF,IAAhB,CAAvB;;AACJ0I,mBAAiB,CAAClB,IAAlB,CAAuBxB,cAAvB;;AACA,MAAIvG,MAAM,GAAG,CAAT,KAAe,CAAnB,EAAsB;AAClBgJ,SAAK,GAAGC,iBAAiB,CAAC,CAACjJ,MAAM,GAAG,CAAV,IAAe,CAAhB,CAAjB,GAAsC,MAA9C;AACH,GAFD,MAEO;AACHgJ,SAAK,GAAG,OAAOC,iBAAiB,CAACjJ,MAAM,GAAG,CAAV,CAAjB,GAAgCiJ,iBAAiB,CAACjJ,MAAM,GAAG,CAAT,GAAa,CAAd,CAAxD,IAA4E,MAApF;AACH;;AAED,SAAO;AACHO,QAAI,EAAEA,IADH;AAEHyI,SAAK,EAAEA;AAFJ,GAAP;AAIH,CArBD;;AAuBArK,OAAO,CAACyK,SAAR,GAAoB,SAASA,SAAT,CAAmBzC,MAAnB,EAA2BkB,aAA3B,EAA0C;AAC1D,MAAI,OAAQA,aAAR,KAA2B,WAA/B,EAA4CA,aAAa,GAAG,KAAhB;;AAC5C,MAAI,CAACA,aAAL,EAAoB;AAChBlB,UAAM,GAAG,GAAGmB,MAAH,CAAUnB,MAAV,EAAkBoB,IAAlB,CAAuBxB,cAAvB,CAAT;AACH;;AAED,MAAI8C,KAAK,GAAG1C,MAAM,CAAC3G,MAAP,GAAgB,CAA5B;AACA,MAAIsJ,EAAE,GAAG3C,MAAM,CAACxD,IAAI,CAACoG,IAAL,CAAUF,KAAV,IAAmB,CAApB,CAAf;AACA,MAAIG,EAAE,GAAG7K,OAAO,CAAC4J,MAAR,CAAe5B,MAAf,EAAuB,IAAvB,CAAT;AACA,MAAI8C,EAAE,GAAG9C,MAAM,CAACxD,IAAI,CAACoG,IAAL,CAAUF,KAAK,GAAG,CAAlB,IAAuB,CAAxB,CAAf;AAEA,SAAO;AAACC,MAAE,EAAEA,EAAL;AAASE,MAAE,EAAEA,EAAb;AAAiBC,MAAE,EAAEA;AAArB,GAAP;AACH,CAZD;;AAcA9K,OAAO,CAAC+K,uBAAR,GAAkC,SAASA,uBAAT,CAAiCjC,OAAjC,EAA0CiB,QAA1C,EAAoD;AAClF,SAAOvF,IAAI,CAAC0F,IAAL,CAAUlK,OAAO,CAACgL,cAAR,CAAuBlC,OAAvB,EAAgCiB,QAAhC,CAAV,CAAP;AACH,CAFD;;AAIA/J,OAAO,CAACgL,cAAR,GAAyB,SAASA,cAAT,CAAwBlC,OAAxB,EAAiCiB,QAAjC,EAA2C;AAChE,MAAI,OAAQA,QAAR,KAAsB,WAA1B,EAAuCA,QAAQ,GAAG,IAAX;AACvC,MAAIhC,GAAG,GAAG,CAAV;AACA,MAAI1G,MAAM,GAAG,CAAb;AAAA,MAAgB6G,CAAC,GAAGY,OAAO,CAACzH,MAA5B;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxB,QAAIkB,MAAM,GAAGc,OAAO,CAAChC,CAAD,CAApB;AACA,QAAImE,IAAI,GAAGjL,OAAO,CAAC8J,QAAR,CAAiB9B,MAAjB,CAAX;AAEAD,OAAG,IAAI,CAACC,MAAM,CAAC3G,MAAP,GAAgB,CAAjB,IAAsB4J,IAA7B;AAEA,QAAIlB,QAAJ,EACI1I,MAAM,IAAI2G,MAAM,CAAC3G,MAAP,GAAgB,CAA1B,CADJ,KAGIA,MAAM,IAAI2G,MAAM,CAAC3G,MAAjB;AACP;;AACD,SAAO0G,GAAG,GAAG1G,MAAb;AACH,CAhBD;;AAkBArB,OAAO,CAACkL,IAAR,GAAe,SAASA,IAAT,CAAclD,MAAd,EAAsB;AACjC,MAAIE,CAAC,GAAGF,MAAM,CAAC3G,MAAf;AAAA,MACI8J,SAAS,GAAG,IAAIZ,KAAJ,CAAUrC,CAAV,CADhB;AAAA,MAEIpB,CAFJ;;AAGA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoB,CAAhB,EAAmBpB,CAAC,EAApB,EAAwB;AACpBqE,aAAS,CAACrE,CAAD,CAAT,GAAe,CAAf;AACH;;AACD,MAAIsE,SAAS,GAAG,IAAIb,KAAJ,CAAUrC,CAAV,CAAhB;AACA,MAAImD,KAAK,GAAG,CAAZ;;AAEA,OAAKvE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoB,CAAhB,EAAmBpB,CAAC,EAApB,EAAwB;AACpB,QAAIT,KAAK,GAAG+E,SAAS,CAACE,OAAV,CAAkBtD,MAAM,CAAClB,CAAD,CAAxB,CAAZ;AACA,QAAIT,KAAK,IAAI,CAAb,EACI8E,SAAS,CAAC9E,KAAD,CAAT,GADJ,KAEK;AACD+E,eAAS,CAACC,KAAD,CAAT,GAAmBrD,MAAM,CAAClB,CAAD,CAAzB;AACAqE,eAAS,CAACE,KAAD,CAAT,GAAmB,CAAnB;AACAA,WAAK;AACR;AACJ;;AAED,MAAIE,QAAQ,GAAG,CAAf;AAAA,MAAkBC,QAAQ,GAAG,CAA7B;;AACA,OAAK1E,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGuE,KAAhB,EAAuBvE,CAAC,EAAxB,EAA4B;AACxB,QAAIqE,SAAS,CAACrE,CAAD,CAAT,GAAeyE,QAAnB,EAA6B;AACzBA,cAAQ,GAAGJ,SAAS,CAACrE,CAAD,CAApB;AACA0E,cAAQ,GAAG1E,CAAX;AACH;AACJ;;AAED,SAAOsE,SAAS,CAACI,QAAD,CAAhB;AACH,CA9BD;;AAgCAxL,OAAO,CAACyL,UAAR,GAAqB,SAASA,UAAT,CAAoBC,OAApB,EAA6BC,OAA7B,EAAsC5B,QAAtC,EAAgD;AACjE,MAAI,OAAQA,QAAR,KAAsB,WAA1B,EAAuCA,QAAQ,GAAG,IAAX;AACvC,MAAI6B,KAAK,GAAG5L,OAAO,CAAC4B,IAAR,CAAa8J,OAAb,CAAZ;AACA,MAAIG,KAAK,GAAG7L,OAAO,CAAC4B,IAAR,CAAa+J,OAAb,CAAZ;AAEA,MAAID,OAAO,CAACrK,MAAR,KAAmBsK,OAAO,CAACtK,MAA/B,EACI,MAAM,yCAAN;AAEJ,MAAIyK,GAAG,GAAG,CAAV;AAAA,MAAa5D,CAAC,GAAGwD,OAAO,CAACrK,MAAzB;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxB,QAAI9F,CAAC,GAAG0K,OAAO,CAAC5E,CAAD,CAAP,GAAa8E,KAArB;AACA,QAAI3K,CAAC,GAAG0K,OAAO,CAAC7E,CAAD,CAAP,GAAa+E,KAArB;AACAC,OAAG,IAAI9K,CAAC,GAAGC,CAAX;AACH;;AAED,MAAI8I,QAAJ,EACI,OAAO+B,GAAG,IAAI5D,CAAC,GAAG,CAAR,CAAV,CADJ,KAGI,OAAO4D,GAAG,GAAG5D,CAAb;AACP,CAnBD;;AAqBAlI,OAAO,CAAC+L,QAAR,GAAmB,SAASA,QAAT,CAAkB/D,MAAlB,EAA0B+B,QAA1B,EAAoC;AACnD,MAAI,OAAQA,QAAR,KAAsB,WAA1B,EAAuCA,QAAQ,GAAG,IAAX;AACvC,MAAIC,OAAO,GAAGhK,OAAO,CAAC4B,IAAR,CAAaoG,MAAb,CAAd;AAEA,MAAIgE,EAAE,GAAG,CAAT;AAAA,MAAYC,EAAE,GAAG,CAAjB;AAAA,MAAoB/D,CAAC,GAAGF,MAAM,CAAC3G,MAA/B;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxB,QAAIoF,GAAG,GAAGlE,MAAM,CAAClB,CAAD,CAAN,GAAYkD,OAAtB;AACAgC,MAAE,IAAIE,GAAG,GAAGA,GAAZ;AACAD,MAAE,IAAIC,GAAG,GAAGA,GAAN,GAAYA,GAAlB;AACH;;AACD,MAAIC,EAAE,GAAGH,EAAE,GAAG9D,CAAd;AACA,MAAIkE,EAAE,GAAGH,EAAE,GAAG/D,CAAd;AAEA,MAAImE,CAAC,GAAGD,EAAE,GAAI5H,IAAI,CAACgE,GAAL,CAAS2D,EAAT,EAAa,IAAI,GAAjB,CAAd;;AACA,MAAIpC,QAAJ,EAAc;AACV,QAAIlC,CAAC,GAAGrD,IAAI,CAAC0F,IAAL,CAAUhC,CAAC,IAAIA,CAAC,GAAG,CAAR,CAAX,CAAR;AACA,QAAIJ,CAAC,GAAGI,CAAC,GAAG,CAAZ;AACA,WAAQL,CAAC,GAAGC,CAAL,GAAUuE,CAAjB;AACH,GAJD,MAIO;AACH,WAAOA,CAAP;AACH;AACJ,CArBD;;AAuBArM,OAAO,CAACsM,QAAR,GAAmB,SAASA,QAAT,CAAkBtE,MAAlB,EAA0B+B,QAA1B,EAAoC;AACnD,MAAI,OAAQA,QAAR,KAAsB,WAA1B,EAAuCA,QAAQ,GAAG,IAAX;AACvC,MAAIC,OAAO,GAAGhK,OAAO,CAAC4B,IAAR,CAAaoG,MAAb,CAAd;AACA,MAAIe,CAAC,GAAGf,MAAM,CAAC3G,MAAf;AAAA,MAAuB2K,EAAE,GAAG,CAA5B;AAAA,MAA+BO,EAAE,GAAG,CAApC;;AAEA,OAAK,IAAIzF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,CAApB,EAAuBjC,CAAC,EAAxB,EAA4B;AACxB,QAAIoF,GAAG,GAAGlE,MAAM,CAAClB,CAAD,CAAN,GAAYkD,OAAtB;AACAgC,MAAE,IAAIE,GAAG,GAAGA,GAAZ;AACAK,MAAE,IAAIL,GAAG,GAAGA,GAAN,GAAYA,GAAZ,GAAkBA,GAAxB;AACH;;AACD,MAAIC,EAAE,GAAGH,EAAE,GAAGjD,CAAd;AACA,MAAIyD,EAAE,GAAGD,EAAE,GAAGxD,CAAd;;AAEA,MAAIgB,QAAJ,EAAc;AACV,QAAI0C,CAAC,GAAGT,EAAE,IAAIjD,CAAC,GAAG,CAAR,CAAV;AACA,QAAIlB,CAAC,GAAIkB,CAAC,IAAIA,CAAC,GAAG,CAAR,CAAF,IAAiB,CAACA,CAAC,GAAG,CAAL,KAAWA,CAAC,GAAG,CAAf,KAAqBA,CAAC,GAAG,CAAzB,CAAjB,CAAR;AACA,QAAIjB,CAAC,GAAGyE,EAAE,IAAIE,CAAC,GAAGA,CAAR,CAAV;AACA,QAAIC,CAAC,GAAI,CAAC3D,CAAC,GAAG,CAAL,KAAWA,CAAC,GAAG,CAAf,CAAD,IAAuB,CAACA,CAAC,GAAG,CAAL,KAAWA,CAAC,GAAG,CAAf,CAAvB,CAAR;AAEA,WAAOlB,CAAC,GAAGC,CAAJ,GAAQ,IAAI4E,CAAnB;AACH,GAPD,MAOO;AACH,WAAOF,EAAE,IAAIL,EAAE,GAAGA,EAAT,CAAF,GAAiB,CAAxB;AACH;AACJ,CAvBD;;AAyBAnM,OAAO,CAAC2M,OAAR,GAAkB,SAASA,OAAT,CAAiB3E,MAAjB,EAAyB4E,GAAzB,EAA8B;AAC5C,MAAI,OAAQA,GAAR,KAAiB,WAArB,EAAkCA,GAAG,GAAG,CAAN;AAClC,MAAI7E,GAAG,GAAG,CAAV;AAAA,MAAaG,CAAC,GAAGF,MAAM,CAAC3G,MAAxB;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EACIiB,GAAG,IAAIC,MAAM,CAAClB,CAAD,CAAN,GAAYtC,IAAI,CAACmE,GAAL,CAASX,MAAM,CAAClB,CAAD,CAAN,GAAY8F,GAArB,CAAnB;;AACJ,SAAO,CAAC7E,GAAR;AACH,CAND;;AAQA/H,OAAO,CAAC6M,YAAR,GAAuB,SAASA,YAAT,CAAsB7E,MAAtB,EAA8B8E,OAA9B,EAAuC;AAC1D,MAAI/E,GAAG,GAAG,CAAV;AAAA,MAAaG,CAAC,GAAGF,MAAM,CAAC3G,MAAxB;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EACIiB,GAAG,IAAIC,MAAM,CAAClB,CAAD,CAAN,GAAYgG,OAAO,CAAChG,CAAD,CAA1B;;AACJ,SAAOiB,GAAP;AACH,CALD;;AAOA/H,OAAO,CAAC+M,yBAAR,GAAoC,SAASA,yBAAT,CAAmC/E,MAAnC,EAA2C8E,OAA3C,EAAoD;AACpF,SAAOtI,IAAI,CAAC0F,IAAL,CAAUlK,OAAO,CAACgN,gBAAR,CAAyBhF,MAAzB,EAAiC8E,OAAjC,CAAV,CAAP;AACH,CAFD;;AAIA9M,OAAO,CAACgN,gBAAR,GAA2B,SAASA,gBAAT,CAA0BhF,MAA1B,EAAkC8E,OAAlC,EAA2C;AAClE,MAAI9C,OAAO,GAAGhK,OAAO,CAAC6M,YAAR,CAAqB7E,MAArB,EAA6B8E,OAA7B,CAAd;AACA,MAAI7B,IAAI,GAAG,CAAX;AAAA,MAAc/C,CAAC,GAAGF,MAAM,CAAC3G,MAAzB;AACA,MAAIwG,CAAC,GAAG,CAAR;AAAA,MAAWC,CAAC,GAAG,CAAf;;AAEA,OAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EAA4B;AACxB,QAAImG,CAAC,GAAGjF,MAAM,CAAClB,CAAD,CAAN,GAAYkD,OAApB;AACA,QAAIkD,CAAC,GAAGJ,OAAO,CAAChG,CAAD,CAAf;AAEAmE,QAAI,IAAIiC,CAAC,IAAID,CAAC,GAAGA,CAAR,CAAT;AACAnF,KAAC,IAAIoF,CAAL;AACArF,KAAC,IAAIqF,CAAC,GAAGA,CAAT;AACH;;AAED,SAAOjC,IAAI,IAAInD,CAAC,IAAIA,CAAC,GAAGA,CAAJ,GAAQD,CAAZ,CAAL,CAAX;AACH,CAfD;;AAiBA7H,OAAO,CAACmN,MAAR,GAAiB,SAASA,MAAT,CAAgBnF,MAAhB,EAAwBoF,OAAxB,EAAiC;AAC9C,MAAI,OAAQA,OAAR,KAAqB,WAAzB,EAAsCA,OAAO,GAAG,KAAV;AAEtC,MAAIjL,MAAM,GAAG6F,MAAb;AACA,MAAI,CAACoF,OAAL,EACIjL,MAAM,GAAG,GAAGgH,MAAH,CAAUnB,MAAV,CAAT;AAEJ,MAAIgC,OAAO,GAAGhK,OAAO,CAAC4B,IAAR,CAAaO,MAAb,CAAd;AAAA,MAAoC+F,CAAC,GAAG/F,MAAM,CAACd,MAA/C;;AACA,OAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EACI3E,MAAM,CAAC2E,CAAD,CAAN,IAAakD,OAAb;AACP,CAVD;;AAYAhK,OAAO,CAACqN,WAAR,GAAsB,SAASA,WAAT,CAAqBrF,MAArB,EAA6BsF,WAA7B,EAA0CF,OAA1C,EAAmD;AACrE,MAAI,OAAQE,WAAR,KAAyB,WAA7B,EAA0CA,WAAW,GAAGtN,OAAO,CAACgC,iBAAR,CAA0BgG,MAA1B,CAAd;AAC1C,MAAI,OAAQoF,OAAR,KAAqB,WAAzB,EAAsCA,OAAO,GAAG,KAAV;AACtC,MAAIlF,CAAC,GAAGF,MAAM,CAAC3G,MAAf;AACA,MAAIc,MAAM,GAAGiL,OAAO,GAAGpF,MAAH,GAAY,IAAIuC,KAAJ,CAAUrC,CAAV,CAAhC;;AACA,OAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EACI3E,MAAM,CAAC2E,CAAD,CAAN,GAAYkB,MAAM,CAAClB,CAAD,CAAN,GAAYwG,WAAxB;;AACJ,SAAOnL,MAAP;AACH,CARD;;AAUAnC,OAAO,CAACuN,aAAR,GAAwB,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAClD,MAAItF,CAAC,GAAGsF,KAAK,CAACnM,MAAd;AACA,MAAIc,MAAM,GAAG,IAAIoI,KAAJ,CAAUrC,CAAV,CAAb;AACA/F,QAAM,CAAC,CAAD,CAAN,GAAYqL,KAAK,CAAC,CAAD,CAAjB;;AACA,OAAK,IAAI1G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,CAApB,EAAuBpB,CAAC,EAAxB,EACI3E,MAAM,CAAC2E,CAAD,CAAN,GAAY3E,MAAM,CAAC2E,CAAC,GAAG,CAAL,CAAN,GAAgB0G,KAAK,CAAC1G,CAAD,CAAjC;;AACJ,SAAO3E,MAAP;AACH,CAPD,C;;;;;;;ACvda;;AAEb,SAASsL,YAAT,GAAwB;AACtB;AACA,QAAMC,gBAAgB,GAAG,SAAzB;AACA,QAAMC,YAAY,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,CAArB;;AAEA,WAASC,mBAAT,CAA6BC,WAA7B,EAA0C;AACxC,QAAIC,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAIhH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+G,WAAW,CAACxM,MAAhC,EAAwCyF,CAAC,EAAzC,EAA6C;AAC3CgH,gBAAU,CAACnI,IAAX,CAAgBoI,UAAU,CAACF,WAAW,CAAC/G,CAAD,CAAZ,CAA1B;AACD;;AACD,WAAOgH,UAAP;AACD;;AAED,QAAM1K,QAAN,CAAe;;AAEf,QAAM4K,cAAc,GAAG;AACrBC,qBAAiB,EAAE,IADE;AAErBhJ,MAAE,EAAE,KAFiB;AAGrBiJ,aAAS,EAAE,KAHU;AAIrBC,gBAAY,EAAE,KAJO;AAKrBC,eAAW,EAAE,KALQ;AAMrBC,aAAS,EAAE,KANU;AAOrBC,mBAAe,EAAE,CAPI;AAQrBC,mBAAe,EAAE,CARI;AASrBC,aAAS,EAAE;AATU,GAAvB;;AAYA,WAASxJ,OAAT,CAAiBF,KAAjB,EAAwBjE,OAAxB,EAAiC;AAC/BA,WAAO,GAAGpB,MAAM,CAACgP,MAAP,CAAc,EAAd,EAAkBT,cAAlB,EAAkCnN,OAAlC,CAAV;AAEA,QAAI6N,MAAM,GAAG,CAAC7N,OAAO,CAACqN,SAAtB;AAEA,QAAIS,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAZ;AAEA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,GAAJ,EAASC,SAAT,EAAoBC,SAApB,EAA+BC,IAA/B;AACA,QAAI1J,QAAJ,EAAc2J,OAAd,EAAuBC,KAAvB;AAEA,QAAIjN,MAAM,GAAG,EAAb;AACAA,UAAM,CAACqM,SAAP,GAAmB3N,OAAO,CAAC2N,SAAR,GAAoB,EAApB,GAAyB,KAA5C;AACArM,UAAM,CAACkN,IAAP,GAAc,EAAd;AACA,QAAIxL,OAAO,GAAG,EAAd;AACA1B,UAAM,CAAC0B,OAAP,GAAiBA,OAAjB;AACA1B,UAAM,CAACmN,IAAP,GAAc,EAAd;AACA,QAAI1O,QAAQ,GAAG,IAAIwC,QAAJ,EAAf;;AAEA,QAAI,EAAE,OAAO0B,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;AAChC,YAAM,IAAIyK,SAAJ,CAAc,8BAAd,CAAN;AACD;;AAED,QAAIpN,MAAM,CAACqM,SAAX,EAAsB;AACpBrM,YAAM,CAACqM,SAAP,CAAiB7I,IAAjB,CAAsB;AACpB6J,cAAM,EAAE,sBADY;AAEpBC,YAAI,EAAEb,IAAI,CAACC,GAAL,KAAaF;AAFC,OAAtB;AAID;;AAEDO,QAAI,GAAGpK,KAAK,CAAC4K,KAAN,CAAY,WAAZ,CAAP;;AAEA,QAAIvN,MAAM,CAACqM,SAAX,EAAsB;AACpBrM,YAAM,CAACqM,SAAP,CAAiB7I,IAAjB,CAAsB;AACpB6J,cAAM,EAAE,eADY;AAEpBC,YAAI,EAAEb,IAAI,CAACC,GAAL,KAAaF;AAFC,OAAtB;AAID;;AAED,QAAIO,IAAI,CAAC,CAAD,CAAR,EAAaA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQS,OAAR,CAAgB,aAAhB,EAA+B,EAA/B,CAAV;;AAEb,SAAK,IAAI7I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoI,IAAI,CAAC7N,MAAzB,EAAiCyF,CAAC,EAAlC,EAAsC;AACpCiI,SAAG,GAAGG,IAAI,CAACpI,CAAD,CAAV,CADoC,CAEpC;;AACAtB,cAAQ,GAAGuJ,GAAG,CAACzD,OAAJ,CAAY,GAAZ,CAAX;;AACA,UAAI9F,QAAQ,GAAG,CAAf,EAAkB;AAChBwJ,iBAAS,GAAGD,GAAG,CAACa,SAAJ,CAAc,CAAd,EAAiBpK,QAAjB,CAAZ;AACAyJ,iBAAS,GAAGF,GAAG,CAACa,SAAJ,CAAcpK,QAAQ,GAAG,CAAzB,EAA4BqK,IAA5B,EAAZ;AACD,OAHD,MAGO;AACLb,iBAAS,GAAGD,GAAZ;AACAE,iBAAS,GAAG,EAAZ;AACD;;AACDD,eAAS,GAAGA,SAAS,CAACW,OAAV,CAAkB,QAAlB,EAA4B,EAA5B,EAAgCG,WAAhC,EAAZ;;AAEA,UAAId,SAAS,KAAK,WAAlB,EAA+B;AAC7BG,eAAO,GAAGF,SAAS,CAAC3D,OAAV,CAAkB,IAAlB,CAAV;AACA,YAAI6D,OAAO,KAAK,CAAC,CAAjB,EAAoBA,OAAO,GAAGF,SAAS,CAAC3D,OAAV,CAAkB,IAAlB,CAAV;;AACpB,YAAI6D,OAAO,GAAG,CAAd,EAAiB;AACf,cAAIY,MAAM,GAAG,CAAC,CAAd;AACA,cAAIC,MAAM,GAAG,CAAC,CAAd,CAFe,CAGf;AACA;;AAEAZ,eAAK,GAAGH,SAAS,CAACW,SAAV,CAAoB,CAApB,EAAuBT,OAAvB,EAAgCO,KAAhC,CAAsC,UAAtC,CAAR;;AACA,cAAIN,KAAK,CAAC,CAAD,CAAL,CAAS9D,OAAT,CAAiB,IAAjB,IAAyB,CAA7B,EAAgC;AAC9B,gBAAI2E,aAAa,GAAGb,KAAK,CAAC,CAAD,CAAL,CAASO,OAAT,CAClB,0BADkB,EAElB,IAFkB,CAApB;AAIA,gBAAIO,cAAc,GAAGd,KAAK,CAAC,CAAD,CAAL,CAASO,OAAT,CACnB,wBADmB,EAEnB,IAFmB,CAArB;AAIAI,kBAAM,GAAGjB,OAAO,CAACqB,MAAR,CAAe7E,OAAf,CAAuB2E,aAAvB,CAAT;AACAD,kBAAM,GAAGlB,OAAO,CAACqB,MAAR,CAAe7E,OAAf,CAAuB4E,cAAvB,CAAT;AACD;;AAED,cAAIH,MAAM,KAAK,CAAC,CAAhB,EAAmBA,MAAM,GAAG,CAAT;AACnB,cAAIC,MAAM,KAAK,CAAC,CAAhB,EAAmBA,MAAM,GAAG,CAAT;;AAEnB,cAAIlB,OAAO,CAACsB,KAAZ,EAAmB;AACjB,gBAAItB,OAAO,CAACsB,KAAR,CAAc/O,MAAd,GAAuB0O,MAA3B,EAAmC;AACjCnP,sBAAQ,CAACyP,MAAT,GAAkBvB,OAAO,CAACsB,KAAR,CAAcL,MAAd,CAAlB;AACD;;AACD,gBAAIjB,OAAO,CAACsB,KAAR,CAAc/O,MAAd,GAAuB2O,MAA3B,EAAmC;AACjCpP,sBAAQ,CAAC0P,MAAT,GAAkBxB,OAAO,CAACsB,KAAR,CAAcJ,MAAd,CAAlB;AACD;AACF;;AACD,cAAIlB,OAAO,CAACyB,IAAZ,EAAkB;AAChB,gBAAIzB,OAAO,CAACyB,IAAR,CAAalP,MAAb,GAAsB0O,MAA1B,EAAkC;AAChCnP,sBAAQ,CAAC4P,KAAT,GAAiB1B,OAAO,CAACyB,IAAR,CAAaR,MAAb,CAAjB;AACD;;AACD,gBAAIjB,OAAO,CAACyB,IAAR,CAAalP,MAAb,GAAsB2O,MAA1B,EAAkC;AAChCpP,sBAAQ,CAAC6P,KAAT,GAAiB3B,OAAO,CAACyB,IAAR,CAAaP,MAAb,CAAjB;AACD;AACF;;AACD,cAAIlB,OAAO,CAAC4B,MAAR,IAAkB5B,OAAO,CAAC4B,MAAR,CAAerP,MAAf,GAAwB0O,MAA9C,EAAsD;AACpDnP,oBAAQ,CAAC+P,QAAT,GAAoB7B,OAAO,CAAC4B,MAAR,CAAeX,MAAf,CAApB;AACD;;AACD,cAAIjB,OAAO,CAAC8B,MAAZ,EAAoB;AAClB,gBAAI9B,OAAO,CAAC8B,MAAR,CAAevP,MAAf,GAAwB0O,MAA5B,EAAoC;AAClCnP,sBAAQ,CAACiQ,OAAT,GAAmB/B,OAAO,CAAC8B,MAAR,CAAeb,MAAf,CAAnB;AACD;;AACD,gBAAIjB,OAAO,CAAC8B,MAAR,CAAevP,MAAf,GAAwB2O,MAA5B,EAAoC;AAClCpP,sBAAQ,CAACkQ,OAAT,GAAmBhC,OAAO,CAAC8B,MAAR,CAAeZ,MAAf,CAAnB;AACD;AACF;;AACD,cAAIlB,OAAO,CAACiC,KAAZ,EAAmB;AACjB,gBAAIjC,OAAO,CAACiC,KAAR,CAAc1P,MAAd,GAAuB0O,MAA3B,EAAmC;AACjCnP,sBAAQ,CAACoQ,KAAT,GAAiBlC,OAAO,CAACiC,KAAR,CAAchB,MAAd,CAAjB;AACD;;AACD,gBAAIjB,OAAO,CAACiC,KAAR,CAAc1P,MAAd,GAAuB2O,MAA3B,EAAmC;AACjCpP,sBAAQ,CAACoD,KAAT,GAAiB8K,OAAO,CAACiC,KAAR,CAAcf,MAAd,CAAjB;AACD;AACF;;AACDpP,kBAAQ,CAACqQ,SAAT,GAAqB7B,KAAK,CAAC,CAAD,CAA1B;;AACA,cAAIA,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAAS9D,OAAT,CAAiB,OAAjB,IAA4B,CAAC,CAA7C,EAAgD;AAC9C0D,qBAAS,GAAG,WAAZ;AACD,WAFD,MAEO,IACLI,KAAK,CAAC,CAAD,CAAL,KACCA,KAAK,CAAC,CAAD,CAAL,CAAS9D,OAAT,CAAiB,QAAjB,KAA8B8D,KAAK,CAAC,CAAD,CAAL,CAAS9D,OAAT,CAAiB,IAAjB,IAAyB,CADxD,CADK,EAGL;AACA0D,qBAAS,GAAG,QAAZ;AACApO,oBAAQ,CAACsQ,MAAT,GACE,CAACtQ,QAAQ,CAAC4P,KAAT,GAAiB5P,QAAQ,CAACyP,MAA3B,KAAsCzP,QAAQ,CAAC+P,QAAT,GAAoB,CAA1D,CADF;AAED;AACF;AACF;;AAED,UAAI3B,SAAS,KAAK,QAAlB,EAA4B;AAC1B,YAAIN,MAAJ,EAAY;AACVyC,yBAAe,CAAChP,MAAD,EAASvB,QAAT,CAAf,CADU,CAEV;;AACA,cAAIqO,SAAS,CAAChL,KAAV,CAAgB,UAAhB,CAAJ,EAAiC;AAC/B;AACA,gBAAI,CAACrD,QAAQ,CAACsQ,MAAd,EAAsB;AACpBtQ,sBAAQ,CAACsQ,MAAT,GACE,CAACtQ,QAAQ,CAAC4P,KAAT,GAAiB5P,QAAQ,CAACyP,MAA3B,KAAsCzP,QAAQ,CAAC+P,QAAT,GAAoB,CAA1D,CADF;AAED;;AACDS,2BAAe,CAACxQ,QAAD,EAAWqO,SAAX,EAAsB9M,MAAtB,CAAf;AACD,WAPD,MAOO;AACLkP,0BAAc,CAACzQ,QAAD,EAAWqO,SAAX,EAAsB9M,MAAtB,CAAd;AACD;;AACD0B,iBAAO,CAAC8B,IAAR,CAAa/E,QAAb;AACAA,kBAAQ,GAAG,IAAIwC,QAAJ,EAAX;AACD;;AACD;AACD,OAlBD,MAkBO,IAAI4L,SAAS,KAAK,WAAlB,EAA+B;AACpC,YAAIN,MAAJ,EAAY;AACVyC,yBAAe,CAAChP,MAAD,EAASvB,QAAT,CAAf;AACAyQ,wBAAc,CAACzQ,QAAD,EAAWqO,SAAX,EAAsB9M,MAAtB,CAAd;AACA0B,iBAAO,CAAC8B,IAAR,CAAa/E,QAAb;AACAA,kBAAQ,GAAG,IAAIwC,QAAJ,EAAX;AACD;;AACD;AACD;;AACD,UAAI4L,SAAS,KAAK,iBAAlB,EAAqC;AACnC,YAAIN,MAAJ,EAAY;AACV,cAAIO,SAAS,CAAChL,KAAV,CAAgB,WAAhB,CAAJ,EAAkC;AAChC;AACAqN,oBAAQ,CAAC1Q,QAAD,EAAWqO,SAAX,CAAR;AACD;;AACDpL,iBAAO,CAAC8B,IAAR,CAAa/E,QAAb;AACAA,kBAAQ,GAAG,IAAIwC,QAAJ,EAAX;AACD;;AACD;AACD;;AAED,UAAI4L,SAAS,KAAK,OAAlB,EAA2B;AACzBpO,gBAAQ,CAAC2Q,KAAT,GAAiBtC,SAAjB;AACD,OAFD,MAEO,IAAID,SAAS,KAAK,UAAlB,EAA8B;AACnCpO,gBAAQ,CAACkD,QAAT,GAAoBmL,SAApB;;AACA,YAAIA,SAAS,CAAC3D,OAAV,CAAkB,IAAlB,IAA0B,CAAC,CAA/B,EAAkC;AAChCnJ,gBAAM,CAACqP,IAAP,GAAc,IAAd;AACD;AACF,OALM,MAKA,IAAIxC,SAAS,KAAK,SAAlB,EAA6B;AAClC,YAAIC,SAAS,CAAC3D,OAAV,CAAkB,IAAlB,IAA0B,CAAC,CAA/B,EAAkC;AAChCnJ,gBAAM,CAACqP,IAAP,GAAc,IAAd;AACD;AACF,OAJM,MAIA,IAAIxC,SAAS,KAAK,QAAlB,EAA4B;AACjCpO,gBAAQ,CAACoQ,KAAT,GAAiB/B,SAAjB;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,QAAlB,EAA4B;AACjCpO,gBAAQ,CAACoD,KAAT,GAAiBiL,SAAjB;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,QAAlB,EAA4B;AACjCpO,gBAAQ,CAACyP,MAAT,GAAkBtC,UAAU,CAACkB,SAAD,CAA5B;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,OAAlB,EAA2B;AAChCpO,gBAAQ,CAAC4P,KAAT,GAAiBzC,UAAU,CAACkB,SAAD,CAA3B;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,QAAlB,EAA4B;AACjCpO,gBAAQ,CAAC0P,MAAT,GAAkBvC,UAAU,CAACkB,SAAD,CAA5B;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,OAAlB,EAA2B;AAChCpO,gBAAQ,CAAC6P,KAAT,GAAiB1C,UAAU,CAACkB,SAAD,CAA3B;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,SAAlB,EAA6B;AAClCpO,gBAAQ,CAAC+P,QAAT,GAAoB5C,UAAU,CAACkB,SAAD,CAA9B;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,SAAlB,EAA6B;AAClCpO,gBAAQ,CAACiQ,OAAT,GAAmB9C,UAAU,CAACkB,SAAD,CAA7B;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,SAAlB,EAA6B;AAClCpO,gBAAQ,CAACkQ,OAAT,GAAmB/C,UAAU,CAACkB,SAAD,CAA7B;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,MAAlB,EAA0B;AAC/BpO,gBAAQ,CAAC6Q,IAAT,GAAgB1D,UAAU,CAACkB,SAAD,CAA1B;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,MAAlB,EAA0B;AAC/BpO,gBAAQ,CAAC8Q,IAAT,GAAgB3D,UAAU,CAACkB,SAAD,CAA1B;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,MAAlB,EAA0B;AAC/BpO,gBAAQ,CAAC+Q,IAAT,GAAgB5D,UAAU,CAACkB,SAAD,CAA1B;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,MAAlB,EAA0B;AAC/BpO,gBAAQ,CAACgR,IAAT,GAAgB7D,UAAU,CAACkB,SAAD,CAA1B;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,QAAlB,EAA4B;AACjCpO,gBAAQ,CAACsQ,MAAT,GAAkBnD,UAAU,CAACkB,SAAD,CAA5B;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,mBAAd,IAAqCA,SAAS,KAAK,OAAvD,EAAgE;AACrE,YAAI,CAACpO,QAAQ,CAACiR,gBAAd,EAAgC;AAC9BjR,kBAAQ,CAACiR,gBAAT,GAA4B9D,UAAU,CAACkB,SAAD,CAAtC;AACD;AACF,OAJM,MAIA,IAAID,SAAS,KAAK,iBAAlB,EAAqC;AAC1C,YAAI,CAACpO,QAAQ,CAACkR,KAAd,EAAqB;AACnB3P,gBAAM,CAAC2P,KAAP,GAAe7C,SAAS,CAACU,OAAV,CAAkB,eAAlB,EAAmC,EAAnC,CAAf;AACD;AACF,OAJM,MAIA,IAAIX,SAAS,KAAK,OAAlB,EAA2B;AAChC,YAAI,CAAC7M,MAAM,CAAC4P,iBAAZ,EAA+B;AAC7B5P,gBAAM,CAAC4P,iBAAP,GAA2BhE,UAAU,CAACkB,SAAD,CAArC;AACD;AACF,OAJM,MAIA,IAAID,SAAS,KAAK,SAAlB,EAA6B;AAClC;AACA7M,cAAM,CAAC6P,cAAP,GAAwB,CAAxB;;AACA,YAAI,CAACpR,QAAQ,CAACqR,cAAd,EAA8B;AAC5BrR,kBAAQ,CAACqR,cAAT,GAA0BlE,UAAU,CAACkB,SAAD,CAApC;AACD;AACF,OANM,MAMA,IAAID,SAAS,KAAK,iBAAlB,EAAqC,CAC1C;AACA;AACA;AACA;AACA;AACA;AACD,OAPM,MAOA,IAAIA,SAAS,KAAK,SAAlB,EAA6B;AAClCF,eAAO,CAACoD,OAAR,GAAkBjD,SAAS,CAACS,KAAV,CAAgBhC,gBAAhB,CAAlB;AACD,OAFM,MAEA,IAAIsB,SAAS,KAAK,QAAlB,EAA4B;AACjCF,eAAO,CAACqB,MAAR,GAAiBlB,SAAS,CAACS,KAAV,CAAgBhC,gBAAhB,CAAjB;AACD,OAFM,MAEA,IAAIsB,SAAS,KAAK,SAAlB,EAA6B;AAClCF,eAAO,CAACqD,OAAR,GAAkBlD,SAAS,CAACS,KAAV,CAAgBhC,gBAAhB,CAAlB;AACD,OAFM,MAEA,IAAIsB,SAAS,KAAK,SAAlB,EAA6B;AAClCF,eAAO,CAACsD,OAAR,GAAkBnD,SAAS,CAACS,KAAV,CAAgBhC,gBAAhB,CAAlB;AACD,OAFM,MAEA,IAAIsB,SAAS,KAAK,QAAlB,EAA4B;AACjCF,eAAO,CAAC4B,MAAR,GAAiB9C,mBAAmB,CAACqB,SAAS,CAACS,KAAV,CAAgBhC,gBAAhB,CAAD,CAApC;AACD,OAFM,MAEA,IAAIsB,SAAS,KAAK,OAAlB,EAA2B;AAChCF,eAAO,CAACiC,KAAR,GAAgB9B,SAAS,CAACS,KAAV,CAAgBhC,gBAAhB,CAAhB;AACD,OAFM,MAEA,IAAIsB,SAAS,KAAK,QAAlB,EAA4B;AACjCF,eAAO,CAAC8B,MAAR,GAAiBhD,mBAAmB,CAACqB,SAAS,CAACS,KAAV,CAAgBhC,gBAAhB,CAAD,CAApC;AACD,OAFM,MAEA,IAAIsB,SAAS,KAAK,OAAlB,EAA2B;AAChCF,eAAO,CAACsB,KAAR,GAAgBxC,mBAAmB,CAACqB,SAAS,CAACS,KAAV,CAAgBhC,gBAAhB,CAAD,CAAnC;AACD,OAFM,MAEA,IAAIsB,SAAS,KAAK,MAAlB,EAA0B;AAC/BF,eAAO,CAACyB,IAAR,GAAe3C,mBAAmB,CAACqB,SAAS,CAACS,KAAV,CAAgBhC,gBAAhB,CAAD,CAAlC;AACD,OAFM,MAEA,IAAIsB,SAAS,KAAK,KAAlB,EAAyB;AAC9BF,eAAO,CAAC3G,GAAR,GAAcyF,mBAAmB,CAACqB,SAAS,CAACS,KAAV,CAAgBhC,gBAAhB,CAAD,CAAjC;AACD,OAFM,MAEA,IAAIsB,SAAS,KAAK,KAAlB,EAAyB;AAC9BF,eAAO,CAAC7G,GAAR,GAAc2F,mBAAmB,CAACqB,SAAS,CAACS,KAAV,CAAgBhC,gBAAhB,CAAD,CAAjC;AACD,OAFM,MAEA,IAAIsB,SAAS,KAAK,UAAlB,EAA8B;AACnC,YAAI7M,MAAM,CAACqP,IAAX,EAAiB;AACfrP,gBAAM,CAACkQ,KAAP,GAAepD,SAAS,CAACS,KAAV,CAAgBhC,gBAAhB,EAAkC,CAAlC,CAAf;AACD;AACF,OAJM,MAIA,IAAIsB,SAAS,KAAK,MAAlB,EAA0B;AAC/BpO,gBAAQ,CAAC0R,IAAT,GAAgBrD,SAAS,CAACY,IAAV,EAAhB;AACAjP,gBAAQ,CAAC2R,SAAT,GAAqBxE,UAAU,CAACkB,SAAS,CAACU,OAAV,CAAkB,MAAlB,EAA0B,EAA1B,CAAD,CAA/B;AACA/O,gBAAQ,CAAC4R,UAAT,GAAsB5R,QAAQ,CAAC0R,IAAT,CAAc3C,OAAd,CAAsB,OAAtB,EAA+B,EAA/B,CAAtB;AACA,YAAI8C,eAAe,GAAG3D,OAAO,CAACqB,MAAR,CAAe7E,OAAf,CAAuB1K,QAAQ,CAAC4R,UAAhC,CAAtB;AACA,YAAIE,IAAI,GAAG,EAAX;;AACA,YAAI5D,OAAO,CAACiC,KAAR,IAAiBjC,OAAO,CAACiC,KAAR,CAAc0B,eAAd,CAArB,EAAqD;AACnDC,cAAI,GAAG5D,OAAO,CAACiC,KAAR,CAAc0B,eAAd,CAAP;AACD;;AACD,YAAItQ,MAAM,CAAC4P,iBAAP,IAA4BW,IAAI,KAAK,KAAzC,EAAgD;AAC9C9R,kBAAQ,CAAC2R,SAAT,IAAsBpQ,MAAM,CAAC4P,iBAA7B;AACD;AACF,OAZM,MAYA,IAAI/C,SAAS,KAAK,eAAlB,EAAmC;AACxCpO,gBAAQ,CAAC2R,SAAT,GAAqBxE,UAAU,CAACkB,SAAD,CAA/B;AACD,OAFM,MAEA,IAAI0D,SAAS,CAAC3D,SAAD,CAAb,EAA0B;AAC/BpO,gBAAQ,CAACgS,qBAAqB,CAAC5D,SAAD,CAAtB,CAAR,GAA6CC,SAA7C;AACD,OAFM,MAEA,IAAID,SAAS,KAAK,mBAAlB,EAAuC;AAC5CpO,gBAAQ,CAACiS,iBAAT,GAA6B5D,SAA7B;AACD;;AACD,UAAID,SAAS,CAAC/K,KAAV,CAAgBpD,OAAO,CAACoN,iBAAxB,CAAJ,EAAgD;AAC9C,YAAI9L,MAAM,CAACmN,IAAP,CAAYN,SAAZ,CAAJ,EAA4B;AAC1B,cAAI,CAACzE,KAAK,CAACuI,OAAN,CAAc3Q,MAAM,CAACmN,IAAP,CAAYN,SAAZ,CAAd,CAAL,EAA4C;AAC1C7M,kBAAM,CAACmN,IAAP,CAAYN,SAAZ,IAAyB,CAAC7M,MAAM,CAACmN,IAAP,CAAYN,SAAZ,CAAD,CAAzB;AACD;;AACD7M,gBAAM,CAACmN,IAAP,CAAYN,SAAZ,EAAuBrJ,IAAvB,CAA4BsJ,SAAS,CAACY,IAAV,EAA5B;AACD,SALD,MAKO;AACL1N,gBAAM,CAACmN,IAAP,CAAYN,SAAZ,IAAyBC,SAAS,CAACY,IAAV,EAAzB;AACD;AACF;AACF;;AAED,QAAI1N,MAAM,CAACqM,SAAX,EAAsB;AACpBrM,YAAM,CAACqM,SAAP,CAAiB7I,IAAjB,CAAsB;AACpB6J,cAAM,EAAE,kBADY;AAEpBC,YAAI,EAAEb,IAAI,CAACC,GAAL,KAAaF;AAFC,OAAtB;AAID;;AAED,QAAIlP,MAAM,CAACsT,IAAP,CAAYjE,OAAZ,EAAqBzN,MAArB,GAA8B,CAAlC,EAAqC;AACnC,UAAI2R,UAAU,GAAG,EAAjB;AACA,UAAID,IAAI,GAAGtT,MAAM,CAACsT,IAAP,CAAYjE,OAAZ,CAAX;;AACA,WAAK,IAAIhI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiM,IAAI,CAAC1R,MAAzB,EAAiCyF,CAAC,EAAlC,EAAsC;AACpC,YAAImM,GAAG,GAAGF,IAAI,CAACjM,CAAD,CAAd;AACA,YAAIkB,MAAM,GAAG8G,OAAO,CAACmE,GAAD,CAApB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlL,MAAM,CAAC3G,MAA3B,EAAmC6R,CAAC,EAApC,EAAwC;AACtC,cAAI,CAACF,UAAU,CAACE,CAAD,CAAf,EAAoBF,UAAU,CAACE,CAAD,CAAV,GAAgB,EAAhB;AACpBF,oBAAU,CAACE,CAAD,CAAV,CAAcD,GAAd,IAAqBjL,MAAM,CAACkL,CAAD,CAA3B;AACD;AACF;;AACD/Q,YAAM,CAAC2M,OAAP,GAAiBkE,UAAjB;AACD;;AAED,QAAI7Q,MAAM,CAACqP,IAAP,IAAe9C,MAAnB,EAA2B;AACzByE,WAAK,CAAChR,MAAD,EAAStB,OAAT,CAAL;;AACA,UAAIsB,MAAM,CAACqM,SAAX,EAAsB;AACpBrM,cAAM,CAACqM,SAAP,CAAiB7I,IAAjB,CAAsB;AACpB6J,gBAAM,EAAE,oCADY;AAEpBC,cAAI,EAAEb,IAAI,CAACC,GAAL,KAAaF;AAFC,SAAtB;AAID;;AACD,UAAI,CAAC9N,OAAO,CAACuN,WAAb,EAA0B;AACxB,eAAOjM,MAAM,CAAC0B,OAAd;AACD;AACF;;AAED,QAAIhD,OAAO,CAACsN,YAAZ,EAA0B;AACxBtN,aAAO,CAACoE,EAAR,GAAa,IAAb;AACD;;AAED,QAAIpE,OAAO,CAACoE,EAAR,IAAcyJ,MAAlB,EAA0B;AACxB;AACA,UAAI7K,OAAO,CAACxC,MAAR,GAAiB,CAArB,EAAwB;AACtB,aAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjD,OAAO,CAACxC,MAA5B,EAAoCyF,CAAC,EAArC,EAAyC;AACvClG,kBAAQ,GAAGiD,OAAO,CAACiD,CAAD,CAAlB;;AACA,cAAIlG,QAAQ,CAACG,IAAT,CAAcM,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,iBAAK,IAAI6R,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtS,QAAQ,CAACG,IAAT,CAAcM,MAAlC,EAA0C6R,CAAC,EAA3C,EAA+C;AAC7C,kBAAInS,IAAI,GAAGH,QAAQ,CAACG,IAAT,CAAcmS,CAAd,CAAX;AACA,kBAAIE,OAAO,GAAG;AACZpS,iBAAC,EAAE,IAAIuJ,KAAJ,CAAUxJ,IAAI,CAACM,MAAL,GAAc,CAAxB,CADS;AAEZJ,iBAAC,EAAE,IAAIsJ,KAAJ,CAAUxJ,IAAI,CAACM,MAAL,GAAc,CAAxB;AAFS,eAAd;;AAIA,mBAAK,IAAIgI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtI,IAAI,CAACM,MAAzB,EAAiCgI,CAAC,GAAGA,CAAC,GAAG,CAAzC,EAA4C;AAC1C+J,uBAAO,CAACpS,CAAR,CAAUqI,CAAC,GAAG,CAAd,IAAmBtI,IAAI,CAACsI,CAAD,CAAvB;AACA+J,uBAAO,CAACnS,CAAR,CAAUoI,CAAC,GAAG,CAAd,IAAmBtI,IAAI,CAACsI,CAAC,GAAG,CAAL,CAAvB;AACD;;AACDzI,sBAAQ,CAACG,IAAT,CAAcmS,CAAd,IAAmBE,OAAnB;AACD;AACF;AACF;AACF;AACF,KA5V8B,CA8V/B;;;AACA,QAAIvS,OAAO,CAACsN,YAAZ,EAA0B;AACxB,UAAIhM,MAAM,CAAC0B,OAAP,CAAexC,MAAf,GAAwB,CAA5B,EAA+B;AAC7BgS,2BAAmB,CAAClR,MAAD,CAAnB;AACD,OAFD,MAEO;AACLmR,0BAAkB,CAACnR,MAAD,CAAlB;AACD;;AACD,UAAIA,MAAM,CAACqM,SAAX,EAAsB;AACpBrM,cAAM,CAACqM,SAAP,CAAiB7I,IAAjB,CAAsB;AACpB6J,gBAAM,EAAE,mCADY;AAEpBC,cAAI,EAAEb,IAAI,CAACC,GAAL,KAAaF;AAFC,SAAtB;AAID;AACF;;AAED,QAAIxM,MAAM,CAACqM,SAAX,EAAsB;AACpBrM,YAAM,CAACqM,SAAP,CAAiB7I,IAAjB,CAAsB;AACpB6J,cAAM,EAAE,YADY;AAEpBC,YAAI,EAAEb,IAAI,CAACC,GAAL,KAAaF;AAFC,OAAtB;AAID;;AAED,WAAOxM,MAAP;AACD;;AAED,WAASyQ,qBAAT,CAA+B1S,KAA/B,EAAsC;AACpC,WAAOA,KAAK,CAAC6D,WAAN,GAAoB4L,OAApB,CAA4B,YAA5B,EAA0C,EAA1C,CAAP;AACD;;AAED,WAASgD,SAAT,CAAmB3D,SAAnB,EAA8B;AAC5B,WAAOrB,YAAY,CAACrC,OAAb,CAAqB0D,SAArB,MAAoC,CAAC,CAA5C;AACD;;AAED,WAASqE,mBAAT,CAA6BlR,MAA7B,EAAqC;AACnC,QAAI0B,OAAO,GAAG1B,MAAM,CAAC0B,OAArB;AACA,QAAIxC,MAAM,GAAGwC,OAAO,CAACxC,MAArB;AACA,QAAI8M,YAAY,GAAG;AACjBoF,WAAK,EAAE,IAAIhJ,KAAJ,CAAUlJ,MAAV,CADU;AAEjBmS,YAAM,EAAE;AACNC,UAAE,EAAE;AACFC,mBAAS,EAAE,CADT;AAEF3S,cAAI,EAAE,IAAIwJ,KAAJ,CAAUlJ,MAAV;AAFJ;AADE;AAFS,KAAnB;AAUA,QAAIsS,kBAAkB,GAAG,EAAzB;;AACA,SAAK,IAAI7M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6G,YAAY,CAACtM,MAAjC,EAAyCyF,CAAC,EAA1C,EAA8C;AAC5C,UAAInE,KAAK,GAAGiQ,qBAAqB,CAACjF,YAAY,CAAC7G,CAAD,CAAb,CAAjC;;AACA,UAAIjD,OAAO,CAAC,CAAD,CAAP,CAAWlB,KAAX,CAAJ,EAAuB;AACrBgR,0BAAkB,CAAChO,IAAnB,CAAwBhD,KAAxB;AACAwL,oBAAY,CAACqF,MAAb,CAAoB7Q,KAApB,IAA6B;AAC3B+Q,mBAAS,EAAE,CADgB;AAE3B3S,cAAI,EAAE,IAAIwJ,KAAJ,CAAUlJ,MAAV;AAFqB,SAA7B;AAID;AACF;;AAED,SAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzF,MAApB,EAA4ByF,CAAC,EAA7B,EAAiC;AAC/B,UAAIlG,QAAQ,GAAGiD,OAAO,CAACiD,CAAD,CAAtB;AACAqH,kBAAY,CAACoF,KAAb,CAAmBzM,CAAnB,IAAwBlG,QAAQ,CAAC2R,SAAjC;;AACA,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,kBAAkB,CAACtS,MAAvC,EAA+C6R,CAAC,EAAhD,EAAoD;AAClD/E,oBAAY,CAACqF,MAAb,CAAoBG,kBAAkB,CAACT,CAAD,CAAtC,EAA2CnS,IAA3C,CAAgD+F,CAAhD,IAAqDiH,UAAU,CAC7DnN,QAAQ,CAAC+S,kBAAkB,CAACT,CAAD,CAAnB,CADqD,CAA/D;AAGD;;AACD,UAAItS,QAAQ,CAACG,IAAb,EAAmB;AACjBoN,oBAAY,CAACqF,MAAb,CAAoBC,EAApB,CAAuB1S,IAAvB,CAA4B+F,CAA5B,IAAiC,CAC/BlG,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBC,CADc,EAE/BJ,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBE,CAFc,CAAjC;AAID;AACF;;AACDkB,UAAM,CAACgM,YAAP,GAAsBA,YAAtB;AACD;;AAED,WAASmF,kBAAT,CAA4BnR,MAA5B,EAAoC;AAClC,QAAIpB,IAAI,GAAGoB,MAAM,CAAC0B,OAAP,CAAe,CAAf,EAAkB9C,IAAlB,CAAuB,CAAvB,CAAX;AACAoB,UAAM,CAACgM,YAAP,GAAsB;AACpBoF,WAAK,EAAExS,IAAI,CAACC,CAAL,CAAOS,KAAP,EADa;AAEpB+R,YAAM,EAAE;AACNI,iBAAS,EAAE;AACTF,mBAAS,EAAE,CADF;AAET3S,cAAI,EAAEA,IAAI,CAACE,CAAL,CAAOQ,KAAP;AAFG;AADL;AAFY,KAAtB;AASD;;AAED,WAAS0P,eAAT,CAAyBhP,MAAzB,EAAiCvB,QAAjC,EAA2C;AACzC,QAAI,CAACA,QAAQ,CAACiQ,OAAd,EAAuBjQ,QAAQ,CAACiQ,OAAT,GAAmB,CAAnB;AACvB,QAAI,CAACjQ,QAAQ,CAACkQ,OAAd,EAAuBlQ,QAAQ,CAACkQ,OAAT,GAAmB,CAAnB;;AACvB,QAAIlQ,QAAQ,CAACiR,gBAAb,EAA+B;AAC7B,UAAIjR,QAAQ,CAACoQ,KAAT,IAAkBpQ,QAAQ,CAACoQ,KAAT,CAAelB,WAAf,OAAiC,IAAvD,EAA6D;AAC3DlP,gBAAQ,CAACoQ,KAAT,GAAiB,KAAjB;AACApQ,gBAAQ,CAACiQ,OAAT,GAAmBjQ,QAAQ,CAACiQ,OAAT,GAAmBjQ,QAAQ,CAACiR,gBAA/C;AACAjR,gBAAQ,CAACyP,MAAT,GAAkBzP,QAAQ,CAACyP,MAAT,GAAkBzP,QAAQ,CAACiR,gBAA7C;AACAjR,gBAAQ,CAAC4P,KAAT,GAAiB5P,QAAQ,CAAC4P,KAAT,GAAiB5P,QAAQ,CAACiR,gBAA3C;AACAjR,gBAAQ,CAACsQ,MAAT,GAAkBtQ,QAAQ,CAACsQ,MAAT,GAAkBtQ,QAAQ,CAACiR,gBAA7C;AACD;AACF;;AACD,QAAIjR,QAAQ,CAACqR,cAAb,EAA6B;AAC3B,UAAI4B,KAAK,GAAGjT,QAAQ,CAACyP,MAAT,GAAkBzP,QAAQ,CAACqR,cAAvC;AACArR,cAAQ,CAACyP,MAAT,GAAkBzP,QAAQ,CAACyP,MAAT,GAAkBwD,KAApC;AACAjT,cAAQ,CAAC4P,KAAT,GAAiB5P,QAAQ,CAAC4P,KAAT,GAAiBqD,KAAlC;AACD;AACF;;AAED,WAASC,SAAT,CAAmB/S,IAAnB,EAAyB;AACvBA,QAAI,GAAGA,IAAI,CAACqI,IAAL,CAAUxB,cAAV,CAAP;AACA,QAAIM,CAAC,GAAGnH,IAAI,CAACM,MAAb;AACA,WAAON,IAAI,CAACyD,IAAI,CAAC8E,KAAL,CAAWpB,CAAC,GAAG,CAAf,CAAD,CAAX;AACD;;AAED,WAASN,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AAC5B,WAAOD,CAAC,GAAGC,CAAX;AACD;;AAED,WAASiM,YAAT,CAAsBlQ,OAAtB,EAA+B;AAC7B,QAAImQ,IAAI,GAAGnQ,OAAO,CAAC,CAAD,CAAP,CAAW9C,IAAX,CAAgB,CAAhB,EAAmB,CAAnB,CAAX;AACA,QAAIkT,IAAI,GAAGD,IAAX;AACA,QAAIE,KAAK,GAAGrQ,OAAO,CAACxC,MAApB;AACA,QAAI8S,KAAK,GAAGtQ,OAAO,CAAC,CAAD,CAAP,CAAW9C,IAAX,CAAgB,CAAhB,EAAmBM,MAAnB,GAA4B,CAAxC;AACA,QAAI4L,CAAC,GAAG,IAAI1C,KAAJ,CAAU2J,KAAV,CAAR;;AACA,SAAK,IAAIpN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoN,KAApB,EAA2BpN,CAAC,EAA5B,EAAgC;AAC9BmG,OAAC,CAACnG,CAAD,CAAD,GAAO,IAAIyD,KAAJ,CAAU4J,KAAV,CAAP;AACA,UAAIC,OAAO,GAAGvQ,OAAO,CAACiD,CAAD,CAAP,CAAW/F,IAAX,CAAgB,CAAhB,CAAd;;AACA,WAAK,IAAImS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiB,KAApB,EAA2BjB,CAAC,EAA5B,EAAgC;AAC9B,YAAIhT,KAAK,GAAGkU,OAAO,CAAClB,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAnB;AACAjG,SAAC,CAACnG,CAAD,CAAD,CAAKoM,CAAL,IAAUhT,KAAV;AACA,YAAIA,KAAK,GAAG8T,IAAZ,EAAkBA,IAAI,GAAG9T,KAAP;AAClB,YAAIA,KAAK,GAAG+T,IAAZ,EAAkBA,IAAI,GAAG/T,KAAP;AACnB;AACF;;AAED,UAAMmQ,MAAM,GAAGxM,OAAO,CAAC,CAAD,CAAP,CAAW9C,IAAX,CAAgB,CAAhB,EAAmB,CAAnB,CAAf;AACA,UAAMyP,KAAK,GAAG3M,OAAO,CAAC,CAAD,CAAP,CAAW9C,IAAX,CAAgB,CAAhB,EAAmB8C,OAAO,CAAC,CAAD,CAAP,CAAW9C,IAAX,CAAgB,CAAhB,EAAmBM,MAAnB,GAA4B,CAA/C,CAAd,CAlB6B,CAkBoC;;AACjE,UAAMiP,MAAM,GAAGzM,OAAO,CAAC,CAAD,CAAP,CAAW0O,SAA1B;AACA,UAAM9B,KAAK,GAAG5M,OAAO,CAACqQ,KAAK,GAAG,CAAT,CAAP,CAAmB3B,SAAjC,CApB6B,CAsB7B;AACA;;AACA,QAAIlC,MAAM,GAAGG,KAAb,EAAoB;AAClB,WAAK,IAAI5P,QAAT,IAAqBqM,CAArB,EAAwB;AACtBrM,gBAAQ,CAAC4C,OAAT;AACD;AACF;;AACD,QAAI8M,MAAM,GAAGG,KAAb,EAAoB;AAClBxD,OAAC,CAACzJ,OAAF;AACD;;AAED,WAAO;AACLyJ,OAAC,EAAEA,CADE;AAELyE,UAAI,EAAElN,IAAI,CAAC2D,GAAL,CAASkI,MAAT,EAAiBG,KAAjB,CAFD;AAGLiB,UAAI,EAAEjN,IAAI,CAACyD,GAAL,CAASoI,MAAT,EAAiBG,KAAjB,CAHD;AAILoB,UAAI,EAAEpN,IAAI,CAAC2D,GAAL,CAASmI,MAAT,EAAiBG,KAAjB,CAJD;AAKLkB,UAAI,EAAEnN,IAAI,CAACyD,GAAL,CAASqI,MAAT,EAAiBG,KAAjB,CALD;AAMLuD,UAAI,EAAEA,IAND;AAOLC,UAAI,EAAEA,IAPD;AAQLI,WAAK,EAAEP,SAAS,CAAC7G,CAAC,CAAC,CAAD,CAAD,CAAKnL,GAAL,CAAS0C,IAAI,CAACgG,GAAd,CAAD;AARX,KAAP;AAUD;;AAED,WAAS2I,KAAT,CAAehR,MAAf,EAAuBtB,OAAvB,EAAgC;AAC9B,QAAIyT,KAAK,GAAGP,YAAY,CAAC5R,MAAM,CAAC0B,OAAR,CAAxB;;AACA,QAAI,CAAChD,OAAO,CAACwN,SAAb,EAAwB;AACtBlM,YAAM,CAACoS,YAAP,GAAsBC,oBAAoB,CAACF,KAAD,EAAQzT,OAAR,CAA1C;AACA,aAAOyT,KAAK,CAACrH,CAAb;AACD;;AACD9K,UAAM,CAACiG,MAAP,GAAgBkM,KAAhB;AACD;;AAED,WAASE,oBAAT,CAA8BF,KAA9B,EAAqCzT,OAArC,EAA8C;AAC5C,QAAIwT,KAAK,GAAGC,KAAK,CAACD,KAAlB;AACA,QAAIpH,CAAC,GAAGqH,KAAK,CAACrH,CAAd;AACA,QAAIwH,YAAJ,EAAkBC,YAAlB,EAAgCC,YAAhC,EAA8CC,YAA9C;AACA,QAAIC,OAAJ,EAAaC,OAAb,EAAsBC,OAAtB,EAA+BC,OAA/B;AACA,QAAIC,YAAY,GAAGhI,CAAC,CAAC5L,MAArB;AACA,QAAI6T,QAAQ,GAAGjI,CAAC,CAAC,CAAD,CAAD,CAAK5L,MAApB;AACA,QAAI8T,GAAJ,EAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB;AAEA,QAAIC,EAAE,GAAGjB,KAAK,CAAC5C,IAAf;AACA,QAAI8D,EAAE,GAAGlB,KAAK,CAAC7C,IAAf;AACA,QAAIgE,EAAE,GAAG,CAACD,EAAE,GAAGD,EAAN,KAAaL,QAAQ,GAAG,CAAxB,CAAT;AACA,QAAIQ,EAAE,GAAGpB,KAAK,CAAC1C,IAAf;AACA,QAAI+D,EAAE,GAAGrB,KAAK,CAAC3C,IAAf;AACA,QAAIiE,EAAE,GAAG,CAACD,EAAE,GAAGD,EAAN,KAAaT,YAAY,GAAG,CAA5B,CAAT;AACA,QAAIjB,IAAI,GAAGM,KAAK,CAACN,IAAjB;AACA,QAAIC,IAAI,GAAGK,KAAK,CAACL,IAAjB,CAhB4C,CAkB5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAI4B,IAAI,GAAGhV,OAAO,CAACyN,eAAR,GAA0B,CAArC;AACA,QAAIwH,aAAa,GAAG,IAAIvL,KAAJ,CAAUsL,IAAV,CAApB;AACA,QAAIE,UAAJ;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,IAA5B,EAAkCG,KAAK,EAAvC,EAA2C;AACzC;AACA,UAAIC,YAAY,GAAG,EAAnB;AACAH,mBAAa,CAACE,KAAD,CAAb,GAAuBC,YAAvB;AACA,UAAIC,IAAI,GAAGF,KAAK,GAAG,CAAnB;AACA,UAAIpF,MAAM,GACR,CAACqD,IAAI,GAAGpT,OAAO,CAAC0N,eAAR,GAA0B8F,KAAlC,IACA7P,IAAI,CAAC2R,GAAL,CAAS,CAACH,KAAK,IAAI,CAAV,IAAenV,OAAO,CAACyN,eAAhC,CAFF;;AAGA,UAAI4H,IAAI,KAAK,CAAb,EAAgB;AACdH,kBAAU,GAAGnF,MAAM,GAAG/P,OAAO,CAAC0N,eAAR,GAA0B8F,KAAhD;AACD,OAFD,MAEO;AACL0B,kBAAU,GAAG,IAAInF,MAAJ,GAAa/P,OAAO,CAAC0N,eAAR,GAA0B8F,KAApD;AACD;;AACD,UAAI+B,KAAK,GAAG,EAAZ;AACAH,kBAAY,CAACI,MAAb,GAAsBN,UAAtB;AACAE,kBAAY,CAACG,KAAb,GAAqBA,KAArB;AAEA,UAAIL,UAAU,IAAI/B,IAAd,IAAsB+B,UAAU,IAAI9B,IAAxC,EAA8C;;AAE9C,WAAK,IAAIqC,WAAW,GAAG,CAAvB,EAA0BA,WAAW,GAAGrB,YAAY,GAAG,CAAvD,EAA0DqB,WAAW,EAArE,EAAyE;AACvE,YAAIC,UAAU,GAAGtJ,CAAC,CAACqJ,WAAD,CAAlB;AACA,YAAIE,eAAe,GAAGvJ,CAAC,CAACqJ,WAAW,GAAG,CAAf,CAAvB;;AACA,aAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGvB,QAAQ,GAAG,CAAvC,EAA0CuB,KAAK,EAA/C,EAAmD;AACjDhC,sBAAY,GAAG8B,UAAU,CAACE,KAAD,CAAzB;AACA/B,sBAAY,GAAG6B,UAAU,CAACE,KAAK,GAAG,CAAT,CAAzB;AACA9B,sBAAY,GAAG6B,eAAe,CAACC,KAAD,CAA9B;AACA7B,sBAAY,GAAG4B,eAAe,CAACC,KAAK,GAAG,CAAT,CAA9B;AAEA5B,iBAAO,GAAGJ,YAAY,GAAGsB,UAAzB;AACAjB,iBAAO,GAAGJ,YAAY,GAAGqB,UAAzB;AACAhB,iBAAO,GAAGJ,YAAY,GAAGoB,UAAzB;AACAf,iBAAO,GAAGJ,YAAY,GAAGmB,UAAzB,CATiD,CAWjD;AACA;AACA;;AACA,cAAIlB,OAAO,KAAKC,OAAZ,IAAuBD,OAAO,KAAKE,OAAvC,EAAgD;AAC9CI,eAAG,GACDsB,KAAK,GACL,CAACV,UAAU,GAAGtB,YAAd,KAA+BC,YAAY,GAAGD,YAA9C,CAFF;AAGAW,eAAG,GAAGkB,WAAN;AACAjB,eAAG,GAAGoB,KAAN;AACAnB,eAAG,GACDgB,WAAW,GACX,CAACP,UAAU,GAAGtB,YAAd,KAA+BE,YAAY,GAAGF,YAA9C,CAFF;AAGA2B,iBAAK,CAACzQ,IAAN,CAAWwP,GAAG,GAAGM,EAAN,GAAWF,EAAtB;AACAa,iBAAK,CAACzQ,IAAN,CAAWyP,GAAG,GAAGQ,EAAN,GAAWF,EAAtB;AACAU,iBAAK,CAACzQ,IAAN,CAAW0P,GAAG,GAAGI,EAAN,GAAWF,EAAtB;AACAa,iBAAK,CAACzQ,IAAN,CAAW2P,GAAG,GAAGM,EAAN,GAAWF,EAAtB;AACD,WA3BgD,CA4BjD;;;AACA,cAAIV,OAAO,KAAKF,OAAZ,IAAuBE,OAAO,KAAKD,OAAvC,EAAgD;AAC9CI,eAAG,GAAGsB,KAAK,GAAG,CAAd;AACArB,eAAG,GACDkB,WAAW,GACX,CADA,GAEA,CAACP,UAAU,GAAGnB,YAAd,KAA+BF,YAAY,GAAGE,YAA9C,CAHF;AAIAS,eAAG,GACDoB,KAAK,GACL,CADA,GAEA,CAACV,UAAU,GAAGnB,YAAd,KAA+BD,YAAY,GAAGC,YAA9C,CAHF;AAIAU,eAAG,GAAGgB,WAAW,GAAG,CAApB;AACAF,iBAAK,CAACzQ,IAAN,CAAWwP,GAAG,GAAGM,EAAN,GAAWF,EAAtB;AACAa,iBAAK,CAACzQ,IAAN,CAAWyP,GAAG,GAAGQ,EAAN,GAAWF,EAAtB;AACAU,iBAAK,CAACzQ,IAAN,CAAW0P,GAAG,GAAGI,EAAN,GAAWF,EAAtB;AACAa,iBAAK,CAACzQ,IAAN,CAAW2P,GAAG,GAAGM,EAAN,GAAWF,EAAtB;AACD,WA5CgD,CA6CjD;;;AACA,cAAIZ,OAAO,KAAKC,OAAhB,EAAyB;AACvBI,eAAG,GACD,CAACsB,KAAK,GACJ,CADD,GAEC,CAACV,UAAU,GAAGrB,YAAd,KAA+BC,YAAY,GAAGD,YAA9C,CAFF,IAGEe,EAHF,GAIAF,EALF;AAMAH,eAAG,GACD,CAACkB,WAAW,GACV,CAACP,UAAU,GAAGrB,YAAd,KAA+BC,YAAY,GAAGD,YAA9C,CADF,IAEEkB,EAFF,GAGAF,EAJF;;AAKA,gBAAIZ,OAAO,KAAKD,OAAhB,EAAyB;AACvBQ,iBAAG,GACDoB,KAAK,GACL,CADA,GAEA,CAACV,UAAU,GAAGrB,YAAd,KAA+BD,YAAY,GAAGC,YAA9C,CAHF;AAIAY,iBAAG,GAAGgB,WAAN;AACAF,mBAAK,CAACzQ,IAAN,CAAWwP,GAAX;AACAiB,mBAAK,CAACzQ,IAAN,CAAWyP,GAAX;AACAgB,mBAAK,CAACzQ,IAAN,CAAW0P,GAAG,GAAGI,EAAN,GAAWF,EAAtB;AACAa,mBAAK,CAACzQ,IAAN,CAAW2P,GAAG,GAAGM,EAAN,GAAWF,EAAtB;AACD;;AACD,gBAAIX,OAAO,KAAKF,OAAhB,EAAyB;AACvBQ,iBAAG,GAAGoB,KAAN;AACAnB,iBAAG,GACDgB,WAAW,GACX,CADA,GAEA,CAACP,UAAU,GAAGpB,YAAd,KAA+BF,YAAY,GAAGE,YAA9C,CAHF;AAIAyB,mBAAK,CAACzQ,IAAN,CAAWwP,GAAX;AACAiB,mBAAK,CAACzQ,IAAN,CAAWyP,GAAX;AACAgB,mBAAK,CAACzQ,IAAN,CAAW0P,GAAG,GAAGI,EAAN,GAAWF,EAAtB;AACAa,mBAAK,CAACzQ,IAAN,CAAW2P,GAAG,GAAGM,EAAN,GAAWF,EAAtB;AACD;;AACD,gBAAIZ,OAAO,KAAKE,OAAhB,EAAyB;AACvBK,iBAAG,GAAGoB,KAAK,GAAG,CAAd;AACAnB,iBAAG,GACDgB,WAAW,GACX,CAACP,UAAU,GAAGrB,YAAd,KAA+BE,YAAY,GAAGF,YAA9C,CAFF;AAGA0B,mBAAK,CAACzQ,IAAN,CAAWwP,GAAX;AACAiB,mBAAK,CAACzQ,IAAN,CAAWyP,GAAX;AACAgB,mBAAK,CAACzQ,IAAN,CAAW0P,GAAG,GAAGI,EAAN,GAAWF,EAAtB;AACAa,mBAAK,CAACzQ,IAAN,CAAW2P,GAAG,GAAGM,EAAN,GAAWF,EAAtB;AACD;;AACD,gBAAIX,OAAO,KAAKC,OAAhB,EAAyB;AACvBK,iBAAG,GACDoB,KAAK,GACL,CAACV,UAAU,GAAGpB,YAAd,KAA+BC,YAAY,GAAGD,YAA9C,CAFF;AAGAW,iBAAG,GAAGgB,WAAW,GAAG,CAApB;AACAF,mBAAK,CAACzQ,IAAN,CAAWwP,GAAX;AACAiB,mBAAK,CAACzQ,IAAN,CAAWyP,GAAX;AACAgB,mBAAK,CAACzQ,IAAN,CAAW0P,GAAG,GAAGI,EAAN,GAAWF,EAAtB;AACAa,mBAAK,CAACzQ,IAAN,CAAW2P,GAAG,GAAGM,EAAN,GAAWF,EAAtB;AACD;AACF;AACF;AACF;AACF;;AAED,WAAO;AACLhE,UAAI,EAAE4C,KAAK,CAAC5C,IADP;AAELD,UAAI,EAAE6C,KAAK,CAAC7C,IAFP;AAGLG,UAAI,EAAE0C,KAAK,CAAC1C,IAHP;AAILD,UAAI,EAAE2C,KAAK,CAAC3C,IAJP;AAKL+E,cAAQ,EAAEZ;AALL,KAAP;AAOD;;AAED,WAAS1E,eAAT,CAAyBxQ,QAAzB,EAAmCV,KAAnC,EAA0C;AACxC;AACA;AACA;AAEA,QAAI4Q,OAAO,GAAGlQ,QAAQ,CAACkQ,OAAvB;AACA,QAAII,MAAM,GAAGtQ,QAAQ,CAACsQ,MAAtB;AAEAtQ,YAAQ,CAAC+V,QAAT,GAAoB,IAApB,CARwC,CASxC;;AACA,QAAIC,WAAW,GAAG,EAAlB;AACAhW,YAAQ,CAACG,IAAT,GAAgB,CAAC6V,WAAD,CAAhB;AAEA,QAAIC,QAAQ,GAAGjW,QAAQ,CAACyP,MAAxB;AACA,QAAIyG,QAAQ,GAAGlW,QAAQ,CAAC0P,MAAxB,CAdwC,CAgBxC;AACA;;AACA,QAAInB,OAAO,GAAG,KAAd;AACA,QAAI4H,KAAJ;AACA,QAAIjQ,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAG5G,KAAK,CAACmB,MAAjB,EAAyByF,CAAC,EAA1B,EAA8B;AAC5BiQ,WAAK,GAAG7W,KAAK,CAAC8W,UAAN,CAAiBlQ,CAAjB,CAAR;;AACA,UAAIiQ,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,EAA9B,EAAkC;AAChC5H,eAAO,GAAG,IAAV;AACD,OAFD,MAEO;AACL,YAAIA,OAAJ,EAAa;AACd;AACF,KA5BuC,CA8BxC;;;AACA,QAAI8H,OAAO,GAAG,IAAd;AACA,QAAIC,YAAY,GAAG,KAAnB;AACA,QAAIC,gBAAgB,GAAG,KAAvB;AACA,QAAIC,cAAc,GAAG,CAArB;AACA,QAAIC,WAAW,GAAG,KAAlB;AACA,QAAIC,SAAS,GAAG,KAAhB;AACA,QAAIC,YAAY,GAAG,CAAnB,CArCwC,CAqClB;;AACtB,QAAIC,SAAS,GAAG,CAAhB,CAtCwC,CAsCrB;;AACnB,QAAIC,UAAU,GAAG,KAAjB;AACA,QAAIC,OAAO,GAAG,KAAd;AACA,QAAIC,cAAc,GAAG,KAArB;AACA,QAAIC,eAAe,GAAG,CAAtB;;AACA,WAAO9Q,CAAC,IAAI5G,KAAK,CAACmB,MAAlB,EAA0ByF,CAAC,EAA3B,EAA+B;AAC7B,UAAIA,CAAC,KAAK5G,KAAK,CAACmB,MAAhB,EAAwB0V,KAAK,GAAG,EAAR,CAAxB,KACKA,KAAK,GAAG7W,KAAK,CAAC8W,UAAN,CAAiBlQ,CAAjB,CAAR;;AACL,UAAIwQ,SAAJ,EAAe;AACb;AACA,YAAIP,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,EAA9B,EAAkC;AAChCE,iBAAO,GAAG,IAAV;AACAK,mBAAS,GAAG,KAAZ;AACD;AACF,OAND,MAMO;AACL;AACA;AACA;AACA,YAAIP,KAAK,IAAI,EAAT,IAAeA,KAAK,IAAI,EAA5B,EAAgC;AAC9B;AACAW,iBAAO,GAAG,IAAV;;AACA,cAAIE,eAAe,GAAG,CAAtB,EAAyB;AACvBL,wBAAY,IAAI,CAACR,KAAK,GAAG,EAAT,IAAevS,IAAI,CAACgE,GAAL,CAAS,EAAT,EAAaoP,eAAe,EAA5B,CAA/B;AACD,WAFD,MAEO;AACLL,wBAAY,IAAI,EAAhB;AACAA,wBAAY,IAAIR,KAAK,GAAG,EAAxB;AACD;AACF,SATD,MASO,IAAIA,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,EAA9B,EAAkC;AACvC;AACAW,iBAAO,GAAG,IAAV;AACAE,yBAAe;AAChB,SAJM,MAIA;AACL,cAAIF,OAAJ,EAAa;AACX;AACA,gBAAIT,OAAJ,EAAa;AACXA,qBAAO,GAAG,KAAV,CADW,CACM;AACjB;AACA;AACA;;AACA,kBAAIE,gBAAJ,EAAsBQ,cAAc,GAAG,IAAjB;AACvB,aAND,MAMO;AACL;AACA,kBAAIA,cAAJ,EAAoB;AAClBA,8BAAc,GAAG,KAAjB;AACD,eAFD,MAEO;AACL,oBAAIT,YAAJ,EAAkB;AAChBE,gCAAc,GAAGK,UAAU,GAAG,IAAIF,YAAP,GAAsBA,YAAjD;AACAJ,kCAAgB,GAAG,IAAnB;AACAD,8BAAY,GAAG,KAAf;AACD,iBAJD,MAIO,IAAI,CAACG,WAAL,EAAkB;AACvBG,2BAAS,GAAGC,UAAU,GAAG,IAAIF,YAAP,GAAsBA,YAA5C;AACD;;AACD,oBAAIM,SAAS,GAAGR,WAAW,GAAGE,YAAY,GAAG,CAAlB,GAAsB,CAAjD;;AACA,qBAAK,IAAIrE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2E,SAApB,EAA+B3E,CAAC,EAAhC,EAAoC;AAClC,sBAAIiE,gBAAJ,EAAsB;AACpBL,4BAAQ,IAAIM,cAAZ;AACD,mBAFD,MAEO;AACLN,4BAAQ,GAAGU,SAAX;AACD;;AACDZ,6BAAW,CAACjR,IAAZ,CAAiBkR,QAAjB;AACAD,6BAAW,CAACjR,IAAZ,CAAiBmR,QAAQ,GAAGhG,OAA5B;AACA+F,0BAAQ,IAAI3F,MAAZ;AACD;AACF;AACF;;AACDuG,sBAAU,GAAG,KAAb;AACAF,wBAAY,GAAG,CAAf;AACAK,2BAAe,GAAG,CAAlB;AACAF,mBAAO,GAAG,KAAV;AACAL,uBAAW,GAAG,KAAd;AACD,WAvCI,CAyCL;;;AACA,cAAIN,KAAK,GAAG,EAAR,IAAcA,KAAK,GAAG,EAA1B,EAA8B;AAC5BW,mBAAO,GAAG,IAAV;AACAP,4BAAgB,GAAG,KAAnB;AACAI,wBAAY,GAAGR,KAAK,GAAG,EAAvB;AACD,WAJD,MAIO,IAAIA,KAAK,GAAG,EAAR,IAAcA,KAAK,GAAG,GAA1B,EAA+B;AACpC;AACAW,mBAAO,GAAG,IAAV;AACAP,4BAAgB,GAAG,KAAnB;AACAI,wBAAY,GAAGR,KAAK,GAAG,EAAvB;AACAU,sBAAU,GAAG,IAAb;AACD,WANM,MAMA,IAAIV,KAAK,KAAK,GAAd,EAAmB;AACxB;AACAW,mBAAO,GAAG,IAAV;AACAL,uBAAW,GAAG,IAAd;AACAE,wBAAY,GAAG,CAAf;AACD,WALM,MAKA,IAAIR,KAAK,GAAG,EAAR,IAAcA,KAAK,GAAG,EAA1B,EAA8B;AACnCW,mBAAO,GAAG,IAAV;AACAL,uBAAW,GAAG,IAAd;AACAE,wBAAY,GAAGR,KAAK,GAAG,EAAvB;AACD,WAJM,MAIA,IAAIA,KAAK,GAAG,EAAR,IAAcA,KAAK,GAAG,EAA1B,EAA8B;AACnC;AACAW,mBAAO,GAAG,IAAV;AACAR,wBAAY,GAAG,IAAf;AACAK,wBAAY,GAAGR,KAAK,GAAG,EAAvB;AACD,WALM,MAKA,IAAIA,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,GAA3B,EAAgC;AACrC;AACAW,mBAAO,GAAG,IAAV;AACAR,wBAAY,GAAG,IAAf;AACAK,wBAAY,GAAGR,KAAK,GAAG,GAAvB;AACAU,sBAAU,GAAG,IAAb;AACD,WANM,MAMA,IAAIV,KAAK,KAAK,EAAV,IAAgB7W,KAAK,CAAC8W,UAAN,CAAiBlQ,CAAC,GAAG,CAArB,MAA4B,EAAhD,EAAoD;AACzD;AACA4Q,mBAAO,GAAG,IAAV;AACAJ,qBAAS,GAAG,IAAZ;AACD,WAJM,MAIA,IAAIP,KAAK,KAAK,EAAd,EAAkB;AACvB;AACAW,mBAAO,GAAG,IAAV;AACAR,wBAAY,GAAG,IAAf;AACAK,wBAAY,GAAG,CAAf;AACAE,sBAAU,GAAG,KAAb;AACD,WANM,MAMA,IAAIV,KAAK,KAAK,EAAd,EAAkB;AACvB;AACA;AACA,gBAAIe,MAAM,GAAG5X,KAAK,CAAC8W,UAAN,CAAiBlQ,CAAC,GAAG,CAArB,CAAb;;AACA,gBACGgR,MAAM,IAAI,EAAV,IAAgBA,MAAM,IAAI,EAA3B,IACAA,MAAM,KAAK,EADX,IAEAA,MAAM,KAAK,EAHb,EAIE;AACAJ,qBAAO,GAAG,IAAV;AACA,kBAAI,CAACT,OAAL,EAAcE,gBAAgB,GAAG,KAAnB;AACdM,wBAAU,GAAG,IAAb;AACD;AACF,WAbM,MAaA,IAAIV,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,EAA9B,EAAkC;AACvCE,mBAAO,GAAG,IAAV;AACAK,qBAAS,GAAG,KAAZ;AACD,WAlGI,CAmGL;AACA;;AACD;AACF;AACF;AACF;;AAED,WAAShG,QAAT,CAAkB1Q,QAAlB,EAA4BV,KAA5B,EAAmC;AACjC,QAAI6X,kBAAkB,GAAG,sBAAzB;AAEAnX,YAAQ,CAACoX,SAAT,GAAqB,IAArB;AACA,QAAIhQ,MAAJ;AACA,QAAI4O,WAAW,GAAG,EAAlB;AACAhW,YAAQ,CAACG,IAAT,GAAgB,CAAC6V,WAAD,CAAhB;AAEA,QAAIR,KAAK,GAAGlW,KAAK,CAACwP,KAAN,CAAY,kBAAZ,CAAZ;;AAEA,SAAK,IAAI5I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsP,KAAK,CAAC/U,MAA1B,EAAkCyF,CAAC,EAAnC,EAAuC;AACrCkB,YAAM,GAAGoO,KAAK,CAACtP,CAAD,CAAL,CACN+I,IADM,GAENF,OAFM,CAEEoI,kBAFF,EAEsB,EAFtB,EAGNrI,KAHM,CAGA,GAHA,CAAT;AAIAkH,iBAAW,CAACjR,IAAZ,CAAiBoI,UAAU,CAAC/F,MAAM,CAAC,CAAD,CAAP,CAA3B;AACA4O,iBAAW,CAACjR,IAAZ,CAAiBoI,UAAU,CAAC/F,MAAM,CAAC,CAAD,CAAP,CAA3B;AACD;AACF;;AAED,WAASqJ,cAAT,CAAwBzQ,QAAxB,EAAkCV,KAAlC,EAAyCiC,MAAzC,EAAiD;AAC/C,QAAI8V,mBAAmB,GAAG,QAA1B;AACA,QAAIC,oBAAoB,GAAG,SAA3B;AAEAtX,YAAQ,CAACuX,WAAT,GAAuB,IAAvB;AACA,QAAInQ,MAAJ;AACA,QAAI4O,WAAW,GAAG,EAAlB;AACAhW,YAAQ,CAACG,IAAT,GAAgB,CAAC6V,WAAD,CAAhB,CAP+C,CAS/C;;AACA,QAAIR,KAAK,GAAGlW,KAAK,CAACwP,KAAN,CAAY,kBAAZ,CAAZ;;AAEA,SAAK,IAAI5I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsP,KAAK,CAAC/U,MAA1B,EAAkCyF,CAAC,EAAnC,EAAuC;AACrCkB,YAAM,GAAGoO,KAAK,CAACtP,CAAD,CAAL,CACN+I,IADM,GAENF,OAFM,CAEEsI,mBAFF,EAEuB,EAFvB,EAGNvI,KAHM,CAGAwI,oBAHA,CAAT;;AAIA,UAAIlQ,MAAM,CAAC3G,MAAP,GAAgB,CAAhB,KAAsB,CAA1B,EAA6B;AAC3B,aAAK,IAAI6R,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlL,MAAM,CAAC3G,MAA3B,EAAmC6R,CAAC,GAAGA,CAAC,GAAG,CAA3C,EAA8C;AAC5C;AACA0D,qBAAW,CAACjR,IAAZ,CAAiBoI,UAAU,CAAC/F,MAAM,CAACkL,CAAD,CAAP,CAAV,GAAwBtS,QAAQ,CAACiQ,OAAlD;AACA+F,qBAAW,CAACjR,IAAZ,CAAiBoI,UAAU,CAAC/F,MAAM,CAACkL,CAAC,GAAG,CAAL,CAAP,CAAV,GAA4BtS,QAAQ,CAACkQ,OAAtD;AACD;AACF,OAND,MAMO;AACL3O,cAAM,CAACkN,IAAP,CAAY1J,IAAZ,CAAkB,iBAAgBqC,MAAO,EAAzC;AACD;AACF;AACF;;AAED,SAAOhD,OAAP;AACD;;AAED,IAAIA,OAAO,GAAGyI,YAAY,EAA1B;;AAEA,SAAS2K,cAAT,CAAwBC,KAAxB,EAA+BxX,OAA/B,EAAwCyX,SAAxC,EAAmD;AACjD,MAAI,OAAOzX,OAAP,KAAmB,SAAvB,EAAkC;AAChCyX,aAAS,GAAGzX,OAAZ;AACAA,WAAO,GAAG,EAAV;AACD;;AACD,MAAIyX,SAAJ,EAAe;AACb,WAAOC,YAAY,CAACF,KAAD,EAAQxX,OAAR,CAAnB;AACD,GAFD,MAEO;AACL,WAAOmE,OAAO,CAACqT,KAAD,EAAQxX,OAAR,CAAd;AACD;AACF;;AAED,IAAI2X,MAAM,GAAG,EAAb;AACA,IAAIC,MAAJ;;AAEA,SAASF,YAAT,CAAsBF,KAAtB,EAA6BxX,OAA7B,EAAsC;AACpC,MAAI,CAAC4X,MAAL,EAAa;AACXC,gBAAY;AACb;;AACD,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpC,QAAIC,KAAK,GAAI,GAAEjK,IAAI,CAACC,GAAL,EAAW,GAAErK,IAAI,CAACsU,MAAL,EAAc,EAA1C;AACAN,UAAM,CAACK,KAAD,CAAN,GAAgBD,OAAhB;AACAH,UAAM,CAACM,WAAP,CACEvW,IAAI,CAACE,SAAL,CAAe;AACbmW,WAAK,EAAEA,KADM;AAEbR,WAAK,EAAEA,KAFM;AAGbxX,aAAO,EAAEA;AAHI,KAAf,CADF;AAOD,GAVM,CAAP;AAWD;;AAED,SAAS6X,YAAT,GAAwB;AACtB,MAAIM,SAAS,GAAGC,GAAG,CAACC,eAAJ,CACd,IAAIC,IAAJ,CACE,CAAE,qBAAoB1L,YAAY,CAACjO,QAAb,EAAwB,kMAA9C,CADF,EAEE;AAAE+F,QAAI,EAAE;AAAR,GAFF,CADc,CAAhB;AAMAkT,QAAM,GAAG,IAAIW,MAAJ,CAAWJ,SAAX,CAAT;AACAC,KAAG,CAACI,eAAJ,CAAoBL,SAApB;AACAP,QAAM,CAACa,gBAAP,CAAwB,SAAxB,EAAmC,UAAUC,KAAV,EAAiB;AAClD,QAAIxY,IAAI,GAAGyB,IAAI,CAACC,KAAL,CAAW8W,KAAK,CAACxY,IAAjB,CAAX;AACA,QAAI8X,KAAK,GAAG9X,IAAI,CAAC8X,KAAjB;;AACA,QAAIL,MAAM,CAACK,KAAD,CAAV,EAAmB;AACjBL,YAAM,CAACK,KAAD,CAAN,CAAc9X,IAAI,CAACyY,MAAnB;AACD;AACF,GAND;AAOD;;AAED,SAASC,UAAT,CAAoB3U,KAApB,EAA2BjE,OAAO,GAAG,EAArC,EAAyC;AAAA,2BACXA,OADW,CAC/B6Y,OAD+B;AAAA,QAC/BA,OAD+B,iCACrB,KADqB;;AAEvC,MAAI,OAAO5U,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIyK,SAAJ,CAAc,8BAAd,CAAN;AACD;;AAED,MAAI6G,KAAK,GAAGtR,KAAK,CAAC4K,KAAN,CAAY,SAAZ,CAAZ;AACA,MAAIiK,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIzX,MAAM,GAAG,EAAb;AACA,MAAI0X,OAAJ;AACA,MAAIC,WAAW,GAAG,CAAlB;AAEA,MAAIC,MAAM,GAAGjV,KAAK,CAAC8B,QAAN,CAAe,KAAf,CAAb;;AAEA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsP,KAAK,CAAC/U,MAA1B,EAAkCyF,CAAC,EAAnC,EAAuC;AACrC,QAAIkT,IAAI,GAAG5D,KAAK,CAACtP,CAAD,CAAhB;AACA,QAAImT,SAAS,GAAGF,MAAM,GAAGC,IAAI,CAACrK,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAH,GAA4BqK,IAAlD;;AAEA,QAAIC,SAAS,CAACrK,SAAV,CAAoB,CAApB,EAAuB,CAAvB,MAA8B,WAAlC,EAA+C;AAC7CkK,iBAAW;AACZ;;AAED,QAAIG,SAAS,CAACrK,SAAV,CAAoB,CAApB,EAAuB,CAAvB,MAA8B,SAAlC,EAA6C;AAC3C,UAAI2B,KAAK,GAAG,CAAC0I,SAAS,CAACrK,SAAV,CAAoB,CAApB,EAAuBC,IAAvB,EAAD,CAAZ;;AACA,WAAK,IAAIqD,CAAC,GAAGpM,CAAC,GAAG,CAAjB,EAAoBoM,CAAC,GAAGkD,KAAK,CAAC/U,MAA9B,EAAsC6R,CAAC,EAAvC,EAA2C;AACzC,YAAIkD,KAAK,CAAClD,CAAD,CAAL,CAASgH,UAAT,CAAoB,IAApB,CAAJ,EAA+B;AAC7B;AACD,SAFD,MAEO;AACL3I,eAAK,CAAC5L,IAAN,CAAWyQ,KAAK,CAAClD,CAAD,CAAL,CAASrD,IAAT,EAAX;AACD;AACF;;AACD+J,WAAK,CAACjU,IAAN,CAAW;AACT4L,aAAK,EAAEA,KAAK,CAAC4I,IAAN,CAAW,IAAX,CADE;AAETrV,aAAK,EAAG,GAAEkV,IAAK,IAFN;AAGTI,gBAAQ,EAAE;AAHD,OAAX;AAKAP,aAAO,GAAGD,KAAK,CAACA,KAAK,CAACvY,MAAN,GAAe,CAAhB,CAAf;AACAsY,UAAI,CAAChU,IAAL,CAAUkU,OAAV;AACD,KAhBD,MAgBO,IAAII,SAAS,CAACrK,SAAV,CAAoB,CAApB,EAAuB,CAAvB,MAA8B,OAA9B,IAAyCkK,WAAW,KAAK,CAA7D,EAAgE;AACrED,aAAO,CAAC/U,KAAR,IAAkB,GAAEkV,IAAK,IAAzB;AACA,UAAIK,QAAQ,GAAGT,KAAK,CAACU,GAAN,EAAf;;AACA,UAAIV,KAAK,CAACvY,MAAN,KAAiB,CAArB,EAAwB;AACtBwY,eAAO,GAAGD,KAAK,CAACA,KAAK,CAACvY,MAAN,GAAe,CAAhB,CAAf;AACAwY,eAAO,CAACO,QAAR,CAAiBzU,IAAjB,CAAsB0U,QAAtB;AACD,OAHD,MAGO;AACLR,eAAO,GAAGpW,SAAV;AACAtB,cAAM,CAACwD,IAAP,CAAY0U,QAAZ;AACD;AACF,KAVM,MAUA,IAAIR,OAAO,IAAIA,OAAO,CAAC/U,KAAvB,EAA8B;AACnC+U,aAAO,CAAC/U,KAAR,IAAkB,GAAEkV,IAAK,IAAzB;AACA,UAAI/V,KAAK,GAAGgW,SAAS,CAAChW,KAAV,CAAgB,eAAhB,CAAZ;;AACA,UAAIA,KAAJ,EAAW;AACT,YAAI+K,SAAS,GAAG/K,KAAK,CAAC,CAAD,CAAL,CAAS0L,OAAT,CAAiB,QAAjB,EAA2B,EAA3B,EAA+BG,WAA/B,EAAhB;;AACA,YAAId,SAAS,KAAK,UAAlB,EAA8B;AAC5B6K,iBAAO,CAAC/V,QAAR,GAAmBG,KAAK,CAAC,CAAD,CAAL,CAAS4L,IAAT,EAAnB;AACD;AACF;AACF;;AAED,QAAIoK,SAAS,CAACrK,SAAV,CAAoB,CAApB,EAAuB,CAAvB,MAA8B,OAA9B,IAAyCkK,WAAW,GAAG,CAA3D,EAA8D;AAC5DA,iBAAW;AACZ;AACF;;AACD,MAAIJ,OAAJ,EAAa;AACXC,QAAI,CAACY,OAAL,CAAcC,KAAD,IAAW;AACtBA,WAAK,CAACJ,QAAN,GAAiB3W,SAAjB;AACD,KAFD;AAGA,WAAOkW,IAAP;AACD,GALD,MAKO;AACL,WAAOxX,MAAP;AACD;AACF;;AAEDpC,MAAM,CAACC,OAAP,GAAiB;AACfgF,SAAO,EAAEoT,cADM;AAEfqB,YAAU,EAAEA;AAFG,CAAjB,C;;;;;;;;;;AChjCA;;;;;AAMO,SAAS3W,qBAAT,CAA+B0K,KAA/B,EAAsCiN,MAAtC,EAA8C;AACnD,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,IAAI,GAAGnN,KAAK,CAACnM,MAAN,GAAe,CAA1B;AACA,MAAIuZ,MAAM,GAAG,CAAb;;AACA,SAAOD,IAAI,GAAGD,GAAP,GAAa,CAApB,EAAuB;AACrBE,UAAM,GAAGF,GAAG,IAAKC,IAAI,GAAGD,GAAR,IAAgB,CAApB,CAAZ;;AACA,QAAIlN,KAAK,CAACoN,MAAD,CAAL,GAAgBH,MAApB,EAA4B;AAC1BC,SAAG,GAAGE,MAAN;AACD,KAFD,MAEO,IAAIpN,KAAK,CAACoN,MAAD,CAAL,GAAgBH,MAApB,EAA4B;AACjCE,UAAI,GAAGC,MAAP;AACD,KAFM,MAEA;AACL,aAAOA,MAAP;AACD;AACF;;AAED,MAAIF,GAAG,GAAGlN,KAAK,CAACnM,MAAN,GAAe,CAAzB,EAA4B;AAC1B,QAAImD,IAAI,CAACgG,GAAL,CAASiQ,MAAM,GAAGjN,KAAK,CAACkN,GAAD,CAAvB,IAAgClW,IAAI,CAACgG,GAAL,CAASgD,KAAK,CAACkN,GAAG,GAAG,CAAP,CAAL,GAAiBD,MAA1B,CAApC,EAAuE;AACrE,aAAOC,GAAP;AACD,KAFD,MAEO;AACL,aAAOA,GAAG,GAAG,CAAb;AACD;AACF,GAND,MAMO;AACL,WAAOA,GAAP;AACD;AACF,C;;AC9BD;AAEA;;;;;;;;;;AAUO,SAASG,mBAAT,CAA6B7Z,CAA7B,EAAgCH,OAAO,GAAG,EAA1C,EAA8C;AAAA,MAC7CgC,SAD6C,GACZhC,OADY,CAC7CgC,SAD6C;AAAA,MAClCE,OADkC,GACZlC,OADY,CAClCkC,OADkC;AAAA,MACzB5B,IADyB,GACZN,OADY,CACzBM,IADyB;AAAA,MACnBC,EADmB,GACZP,OADY,CACnBO,EADmB;;AAGnD,MAAIyB,SAAS,KAAKY,SAAlB,EAA6B;AAC3B,QAAItC,IAAI,KAAKsC,SAAb,EAAwB;AACtBZ,eAAS,GAAGC,qBAAqB,CAAC9B,CAAD,EAAIG,IAAJ,CAAjC;AACD,KAFD,MAEO;AACL0B,eAAS,GAAG,CAAZ;AACD;AACF;;AACD,MAAIE,OAAO,KAAKU,SAAhB,EAA2B;AACzB,QAAIrC,EAAE,KAAKqC,SAAX,EAAsB;AACpBV,aAAO,GAAGD,qBAAqB,CAAC9B,CAAD,EAAII,EAAJ,CAA/B;AACD,KAFD,MAEO;AACL2B,aAAO,GAAG/B,CAAC,CAACK,MAAF,GAAW,CAArB;AACD;AACF;;AACD,SAAO;AAAEwB,aAAF;AAAaE;AAAb,GAAP;AACD,C;;AC9BD,MAAMpD,UAAU,GAAGW,mBAAO,CAAC,CAAD,CAA1B;AAEA;;;;;;AAIO,SAASwa,OAAT,CAAiBC,MAAM,GAAG,EAA1B,EAA8B;AACnC,MAAI,CAACpb,UAAU,CAACob,MAAM,CAAC/Z,CAAR,CAAX,IAAyB,CAACrB,UAAU,CAACob,MAAM,CAAC9Z,CAAR,CAAxC,EAAoD;AAClD,UAAM,IAAIiB,KAAJ,CAAU,4CAAV,CAAN;AACD;;AACD,MAAI6Y,MAAM,CAAC/Z,CAAP,CAASK,MAAT,KAAoB0Z,MAAM,CAAC9Z,CAAP,CAASI,MAAjC,EAAyC;AACvC,UAAM,IAAIa,KAAJ,CAAU,8CAAV,CAAN;AACD;AACF,C;;ACbD;AAEA;AAEA;;;;;;;;;;;AAWO,SAASe,aAAT,CAAuB8X,MAAM,GAAG,EAAhC,EAAoCla,OAAO,GAAG,EAA9C,EAAkD;AACvDia,SAAO,CAACC,MAAD,CAAP;AADuD,QAE/C/Z,CAF+C,GAEtC+Z,MAFsC,CAE/C/Z,CAF+C;AAAA,QAE5CC,CAF4C,GAEtC8Z,MAFsC,CAE5C9Z,CAF4C;AAGvD,MAAID,CAAC,CAACK,MAAF,GAAW,CAAf,EAAkB,OAAO,CAAP;;AAHqC,+BAIxBwZ,mBAAmB,CAAC7Z,CAAD,EAAIH,OAAJ,CAJK;AAAA,QAI/CgC,SAJ+C,wBAI/CA,SAJ+C;AAAA,QAIpCE,OAJoC,wBAIpCA,OAJoC;;AAKvD,MAAIC,WAAW,GAAG,CAAlB;;AACA,OAAK,IAAI8D,CAAC,GAAGjE,SAAb,EAAwBiE,CAAC,GAAG/D,OAA5B,EAAqC+D,CAAC,EAAtC,EAA0C;AACxC9D,eAAW,IAAK,CAAChC,CAAC,CAAC8F,CAAC,GAAG,CAAL,CAAD,GAAW9F,CAAC,CAAC8F,CAAD,CAAb,KAAqB7F,CAAC,CAAC6F,CAAC,GAAG,CAAL,CAAD,GAAW7F,CAAC,CAAC6F,CAAD,CAAjC,CAAD,GAA0C,CAAzD;AACD;;AAED,SAAO9D,WAAP;AACD,C;;AC1BD;AAEA;AACA;;;;;;;;;;;AAWO,SAASgY,UAAT,CAAoBD,MAAM,GAAG,EAA7B,EAAiCla,OAAO,GAAG,EAA3C,EAA+C;AACpDia,SAAO,CAACC,MAAD,CAAP;AADoD,QAE5C/Z,CAF4C,GAEnC+Z,MAFmC,CAE5C/Z,CAF4C;AAAA,QAEzCC,CAFyC,GAEnC8Z,MAFmC,CAEzC9Z,CAFyC;AAGpD,MAAID,CAAC,CAACK,MAAF,GAAW,CAAf,EAAkB,OAAO,CAAP;;AAHkC,+BAKrBwZ,mBAAmB,CAAC7Z,CAAD,EAAIH,OAAJ,CALE;AAAA,QAK5CgC,SAL4C,wBAK5CA,SAL4C;AAAA,QAKjCE,OALiC,wBAKjCA,OALiC;;AAOpD,MAAIkY,QAAQ,GAAG;AAAEja,KAAC,EAAE,CAACA,CAAC,CAAC6B,SAAD,CAAF,CAAL;AAAqB5B,KAAC,EAAE,CAAC,CAAD;AAAxB,GAAf;AACA,MAAI+B,WAAW,GAAG,CAAlB;;AACA,OAAK,IAAI8D,CAAC,GAAGjE,SAAb,EAAwBiE,CAAC,GAAG/D,OAA5B,EAAqC+D,CAAC,EAAtC,EAA0C;AACxC9D,eAAW,IAAK,CAAChC,CAAC,CAAC8F,CAAC,GAAG,CAAL,CAAD,GAAW9F,CAAC,CAAC8F,CAAD,CAAb,KAAqB7F,CAAC,CAAC6F,CAAC,GAAG,CAAL,CAAD,GAAW7F,CAAC,CAAC6F,CAAD,CAAjC,CAAD,GAA0C,CAAzD;AACAmU,YAAQ,CAACja,CAAT,CAAW2E,IAAX,CAAgB3E,CAAC,CAAC8F,CAAC,GAAG,CAAL,CAAjB;AACAmU,YAAQ,CAACha,CAAT,CAAW0E,IAAX,CAAgB3C,WAAhB;AACD;;AAED,SAAOiY,QAAP;AACD,C;;AC9BD;AAEA;AACA;;;;;;;;;;;AAWO,SAASC,MAAT,CAAgBH,MAAM,GAAG,EAAzB,EAA6Bla,OAAO,GAAG,EAAvC,EAA2C;AAChDia,SAAO,CAACC,MAAD,CAAP;AADgD,QAExC/Z,CAFwC,GAE/B+Z,MAF+B,CAExC/Z,CAFwC;AAAA,QAErCC,CAFqC,GAE/B8Z,MAF+B,CAErC9Z,CAFqC;AAGhD,MAAID,CAAC,CAACK,MAAF,GAAW,CAAf,EAAkB,OAAO,CAAP;;AAH8B,+BAKjBwZ,mBAAmB,CAAC7Z,CAAD,EAAIH,OAAJ,CALF;AAAA,QAKxCgC,SALwC,wBAKxCA,SALwC;AAAA,QAK7BE,OAL6B,wBAK7BA,OAL6B;;AAOhD,MAAI4O,IAAI,GAAG1Q,CAAC,CAAC4B,SAAD,CAAZ;;AACA,OAAK,IAAIiE,CAAC,GAAGjE,SAAb,EAAwBiE,CAAC,IAAI/D,OAA7B,EAAsC+D,CAAC,EAAvC,EAA2C;AACzC,QAAI7F,CAAC,CAAC6F,CAAD,CAAD,GAAO6K,IAAX,EAAiBA,IAAI,GAAG1Q,CAAC,CAAC6F,CAAD,CAAR;AAClB;;AAED,SAAO6K,IAAP;AACD,C;;AC3BD;AAEA;AACA;;;;;;;;;;;AAWO,SAASxO,WAAT,CAAqB4X,MAAM,GAAG,EAA9B,EAAkCla,OAAO,GAAG,EAA5C,EAAgD;AACrDia,SAAO,CAACC,MAAD,CAAP;AADqD,QAE7C/Z,CAF6C,GAEpC+Z,MAFoC,CAE7C/Z,CAF6C;AAAA,QAE1CC,CAF0C,GAEpC8Z,MAFoC,CAE1C9Z,CAF0C;AAGrD,MAAID,CAAC,CAACK,MAAF,GAAW,CAAf,EAAkB,OAAO,CAAP;;AAHmC,+BAKtBwZ,mBAAmB,CAAC7Z,CAAD,EAAIH,OAAJ,CALG;AAAA,QAK7CgC,SAL6C,wBAK7CA,SAL6C;AAAA,QAKlCE,OALkC,wBAKlCA,OALkC;;AAOrD,MAAI8W,OAAO,GAAG;AAAE7Y,KAAC,EAAEA,CAAC,CAAC6B,SAAD,CAAN;AAAmB5B,KAAC,EAAEA,CAAC,CAAC4B,SAAD;AAAvB,GAAd;;AACA,OAAK,IAAIiE,CAAC,GAAGjE,SAAb,EAAwBiE,CAAC,IAAI/D,OAA7B,EAAsC+D,CAAC,EAAvC,EAA2C;AACzC,QAAI7F,CAAC,CAAC6F,CAAD,CAAD,GAAO+S,OAAO,CAAC5Y,CAAnB,EAAsB4Y,OAAO,GAAG;AAAE7Y,OAAC,EAAEA,CAAC,CAAC8F,CAAD,CAAN;AAAW7F,OAAC,EAAEA,CAAC,CAAC6F,CAAD;AAAf,KAAV;AACvB;;AAED,SAAO+S,OAAP;AACD,C;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACNA;;AAEA,SAASsB,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AACvEH,WAAO,GAAG,iBAAUC,GAAV,EAAe;AACvB,aAAO,OAAOA,GAAd;AACD,KAFD;AAGD,GAJD,MAIO;AACLD,WAAO,GAAG,iBAAUC,GAAV,EAAe;AACvB,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAAC/X,WAAJ,KAAoBgY,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAAC3b,SAApF,GAAgG,QAAhG,GAA2G,OAAO0b,GAAzH;AACD,KAFD;AAGD;;AAED,SAAOD,OAAO,CAACC,GAAD,CAAd;AACD;AAED;;;;;;;;;;;;AAWA,SAASG,cAAT,GAA0B;AACxB,MAAIlD,KAAK,GAAGmD,SAAS,CAACna,MAAV,GAAmB,CAAnB,IAAwBma,SAAS,CAAC,CAAD,CAAT,KAAiB/X,SAAzC,GAAqD+X,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AACA,MAAI3a,OAAO,GAAG2a,SAAS,CAACna,MAAV,GAAmB,CAAnB,IAAwBma,SAAS,CAAC,CAAD,CAAT,KAAiB/X,SAAzC,GAAqD+X,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;;AAEA,MAAIL,OAAO,CAAC9C,KAAD,CAAP,KAAmB,QAAnB,IAA+B,CAACvF,aAAO,CAACuF,KAAD,CAA3C,EAAoD;AAClDxX,WAAO,GAAGwX,KAAV;AACAA,SAAK,GAAG,EAAR;AACD;;AAED,MAAI,CAACvF,aAAO,CAACuF,KAAD,CAAZ,EAAqB;AACnB,UAAM,IAAI9I,SAAJ,CAAc,wBAAd,CAAN;AACD;;AAED,MAAIkM,QAAQ,GAAG5a,OAAf;AAAA,MACI6a,aAAa,GAAGD,QAAQ,CAACta,IAD7B;AAAA,MAEIA,IAAI,GAAGua,aAAa,KAAK,KAAK,CAAvB,GAA2B,CAA3B,GAA+BA,aAF1C;AAAA,MAGIC,WAAW,GAAGF,QAAQ,CAACra,EAH3B;AAAA,MAIIA,EAAE,GAAGua,WAAW,KAAK,KAAK,CAArB,GAAyB,EAAzB,GAA8BA,WAJvC;AAAA,MAKIC,aAAa,GAAGH,QAAQ,CAACI,IAL7B;AAAA,MAMIA,IAAI,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2BvD,KAAK,CAAChX,MAAjC,GAA0Cua,aANrD;AAAA,MAOIE,IAAI,GAAGL,QAAQ,CAACK,IAPpB;;AASA,MAAID,IAAI,IAAIC,IAAZ,EAAkB;AAChB,UAAM,IAAI5Z,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAED,MAAI,CAAC2Z,IAAL,EAAW;AACT,QAAIC,IAAJ,EAAU;AACRD,UAAI,GAAGrX,IAAI,CAAC8E,KAAL,CAAW,CAAClI,EAAE,GAAGD,IAAN,IAAc2a,IAAzB,IAAiC,CAAxC;AACD,KAFD,MAEO;AACLD,UAAI,GAAGza,EAAE,GAAGD,IAAL,GAAY,CAAnB;AACD;AACF;;AAED,MAAI,CAAC2a,IAAD,IAASD,IAAb,EAAmB;AACjBC,QAAI,GAAG,CAAC1a,EAAE,GAAGD,IAAN,KAAe0a,IAAI,GAAG,CAAtB,CAAP;AACD;;AAED,MAAItR,KAAK,CAACuI,OAAN,CAAcuF,KAAd,CAAJ,EAA0B;AACxBA,SAAK,CAAChX,MAAN,GAAe,CAAf,CADwB,CACN;;AAElB,SAAK,IAAIyF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+U,IAApB,EAA0B/U,CAAC,EAA3B,EAA+B;AAC7BuR,WAAK,CAAC1S,IAAN,CAAWxE,IAAX;AACAA,UAAI,IAAI2a,IAAR;AACD;AACF,GAPD,MAOO;AACL,QAAIzD,KAAK,CAAChX,MAAN,KAAiBwa,IAArB,EAA2B;AACzB,YAAM,IAAI3Z,KAAJ,CAAU,yDAAV,CAAN;AACD;;AAED,SAAK,IAAI6Z,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGF,IAAtB,EAA4BE,EAAE,EAA9B,EAAkC;AAChC1D,WAAK,CAAC0D,EAAD,CAAL,GAAY5a,IAAZ;AACAA,UAAI,IAAI2a,IAAR;AACD;AACF;;AAED,SAAOzD,KAAP;AACD;;AAEckD,0DAAf,E;;ACtFA;;;;;;;;;AASe,SAASN,QAAT,CAAkB1F,EAAlB,EAAsByG,EAAtB,EAA0BC,KAA1B,EAAiCC,SAAjC,EAA4C;AACzD,SACE,MAAMD,KAAN,GAAcD,EAAd,GAAmBA,EAAnB,GACAE,SAAS,GAAGF,EADZ,IAEC,MAAMC,KAAN,GAAc1G,EAAd,GAAmBA,EAAnB,GAAwB2G,SAAS,GAAG3G,EAFrC,CADF;AAKD,C;;ACfD;AAEA;;;;;;;;;;;AAUe,SAAS4G,mBAAT,CAA6Bnb,CAA7B,EAAgCC,CAAhC,EAAmCE,IAAnC,EAAyCC,EAAzC,EAA6CE,cAA7C,EAA6D;AAC1E,MAAI8a,OAAO,GAAGpb,CAAC,CAACK,MAAhB;AAEA,MAAIya,IAAI,GAAG,CAAC1a,EAAE,GAAGD,IAAN,KAAeG,cAAc,GAAG,CAAhC,CAAX;AACA,MAAI+a,QAAQ,GAAGP,IAAI,GAAG,CAAtB;AAEA,MAAItC,MAAM,GAAG,IAAIjP,KAAJ,CAAUjJ,cAAV,CAAb;AAEA,MAAIgb,mBAAmB,GAAGtb,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAlC;AACA,MAAIub,gBAAgB,GAAGvb,CAAC,CAACob,OAAO,GAAG,CAAX,CAAD,GAAiBpb,CAAC,CAACob,OAAO,GAAG,CAAX,CAAzC,CAT0E,CAW1E;;AACA,MAAIjU,GAAG,GAAGhH,IAAI,GAAGkb,QAAjB;AACA,MAAIpU,GAAG,GAAG9G,IAAI,GAAGkb,QAAjB;AAEA,MAAIG,SAAS,GAAGC,MAAM,CAACC,SAAvB;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,KAAK,GAAG5b,CAAC,CAAC,CAAD,CAAD,GAAOsb,mBAAnB;AACA,MAAIO,KAAK,GAAG,CAAZ;AAEA,MAAItF,YAAY,GAAG,CAAnB;AACA,MAAI0E,KAAK,GAAG,CAAZ;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIY,QAAQ,GAAG,CAAf;AACA,MAAIC,QAAQ,GAAG,CAAf;AAEA,MAAIjW,CAAC,GAAG,CAAR,CA1B0E,CA0B/D;;AACX,MAAIoM,CAAC,GAAG,CAAR,CA3B0E,CA2B/D;;AAEX,WAAS8J,QAAT,CAAkBzH,EAAlB,EAAsBG,EAAtB,EAA0BsG,EAA1B,EAA8BiB,EAA9B,EAAkC;AAChC,WAAO,CAACA,EAAE,GAAGvH,EAAN,KAAasG,EAAE,GAAGzG,EAAlB,CAAP;AACD;;AAED2H,MAAI,EAAE,OAAO,IAAP,EAAa;AACjB,QAAIV,SAAS,IAAIrU,GAAb,IAAoBA,GAAG,IAAIyU,KAA/B,EAAsC;AACpCO,SAAG,GAAGlC,QAAQ,CAAC,CAAD,EAAI9S,GAAG,GAAGqU,SAAV,EAAqBP,KAArB,EAA4BU,SAA5B,CAAd;AACAG,cAAQ,GAAGvF,YAAY,GAAG4F,GAA1B;AACD;;AAED,WAAOP,KAAK,GAAG3U,GAAR,IAAe,CAAtB,EAAyB;AACvB;AACA,UAAIkV,GAAG,GAAGlC,QAAQ,CAAC,CAAD,EAAIhT,GAAG,GAAGuU,SAAV,EAAqBP,KAArB,EAA4BU,SAA5B,CAAlB;AACAI,cAAQ,GAAGxF,YAAY,GAAG4F,GAA1B;AAEA3D,YAAM,CAACtG,CAAC,EAAF,CAAN,GAAc,CAAC6J,QAAQ,GAAGD,QAAZ,IAAwBhB,IAAtC;;AAEA,UAAI5I,CAAC,KAAK5R,cAAV,EAA0B;AACxB,cAAM4b,IAAN;AACD;;AAED/U,SAAG,GAAGF,GAAN;AACAA,SAAG,IAAI6T,IAAP;AACAgB,cAAQ,GAAGC,QAAX;AACD;;AAEDxF,gBAAY,IAAI0D,QAAQ,CAACuB,SAAD,EAAYI,KAAZ,EAAmBX,KAAnB,EAA0BC,SAA1B,CAAxB;AAEAM,aAAS,GAAGI,KAAZ;AACAD,aAAS,GAAGE,KAAZ;;AAEA,QAAI/V,CAAC,GAAGsV,OAAR,EAAiB;AACfQ,WAAK,GAAG5b,CAAC,CAAC8F,CAAD,CAAT;AACA+V,WAAK,GAAG5b,CAAC,CAAC6F,CAAD,CAAT;AACAA,OAAC;AACF,KAJD,MAIO,IAAIA,CAAC,KAAKsV,OAAV,EAAmB;AACxBQ,WAAK,IAAIL,gBAAT;AACAM,WAAK,GAAG,CAAR;AACD;;AAEDZ,SAAK,GAAGe,QAAQ,CAACR,SAAD,EAAYG,SAAZ,EAAuBC,KAAvB,EAA8BC,KAA9B,CAAhB;AACAX,aAAS,GAAG,CAACD,KAAD,GAASO,SAAT,GAAqBG,SAAjC;AACD;;AAED,SAAOnD,MAAP;AACD,C;;ACtFD;;;;;;;;;;AAUe,SAAS4D,iBAAT,CAA2Bpc,CAA3B,EAA8BC,CAA9B,EAAiCE,IAAjC,EAAuCC,EAAvC,EAA2CE,cAA3C,EAA2D;AACxE,MAAI8a,OAAO,GAAGpb,CAAC,CAACK,MAAhB;AAEA,MAAIya,IAAI,GAAG,CAAC1a,EAAE,GAAGD,IAAN,KAAeG,cAAc,GAAG,CAAhC,CAAX;AACA,MAAI+a,QAAQ,GAAGP,IAAI,GAAG,CAAtB;AACA,MAAIuB,QAAQ,GAAGrc,CAAC,CAACA,CAAC,CAACK,MAAF,GAAW,CAAZ,CAAD,GAAkBL,CAAC,CAACA,CAAC,CAACK,MAAF,GAAW,CAAZ,CAAlC;AAEA,MAAIsN,KAAK,GAAGxN,IAAI,GAAGkb,QAAnB;AACA,MAAI7C,MAAM,GAAG,IAAIjP,KAAJ,CAAUjJ,cAAV,CAAb,CARwE,CAUxE;;AACA,MAAI6G,GAAG,GAAGwG,KAAV;AACA,MAAI1G,GAAG,GAAG0G,KAAK,GAAGmN,IAAlB;AAEA,MAAIU,SAAS,GAAG,CAACC,MAAM,CAACa,SAAxB;AACA,MAAIX,SAAS,GAAG,CAAhB;AACA,MAAIC,KAAK,GAAG5b,CAAC,CAAC,CAAD,CAAb;AACA,MAAI6b,KAAK,GAAG5b,CAAC,CAAC,CAAD,CAAb;AACA,MAAIsc,mBAAmB,GAAG,CAA1B;AACA,MAAIC,kBAAkB,GAAG,IAAzB;AAEA,MAAIjG,YAAY,GAAG,CAAnB,CArBwE,CAuBxE;;AACA,MAAIkG,aAAa,GAAG,CAApB;AAEA,MAAI3W,CAAC,GAAG,CAAR,CA1BwE,CA0B7D;;AACX,MAAIoM,CAAC,GAAG,CAAR,CA3BwE,CA2B7D;;AAEXgK,MAAI,EAAE,OAAO,IAAP,EAAa;AACjB,QAAIV,SAAS,IAAII,KAAjB,EAAwB,MAAM,IAAI1a,KAAJ,CAAU,+BAAV,CAAN;;AACxB,WAAOsa,SAAS,GAAGvU,GAAZ,GAAkB,CAAzB,EAA4B;AAC1B;AACA,UAAIuV,kBAAJ,EAAwB;AACtBC,qBAAa;AACbD,0BAAkB,GAAG,KAArB;AACD;;AAEDhE,YAAM,CAACtG,CAAD,CAAN,GAAYuK,aAAa,IAAI,CAAjB,GAAqB,CAArB,GAAyBlG,YAAY,GAAGkG,aAApD;AACAvK,OAAC;;AAED,UAAIA,CAAC,KAAK5R,cAAV,EAA0B;AACxB,cAAM4b,IAAN;AACD;;AAED/U,SAAG,GAAGF,GAAN;AACAA,SAAG,IAAI6T,IAAP;AACAvE,kBAAY,GAAG,CAAf;AACAkG,mBAAa,GAAG,CAAhB;AACD;;AAED,QAAIjB,SAAS,GAAGrU,GAAhB,EAAqB;AACnBoP,kBAAY,IAAIoF,SAAhB;AACAc,mBAAa;AACd;;AAED,QAAIjB,SAAS,KAAK,CAACC,MAAM,CAACa,SAAtB,IAAmCC,mBAAmB,GAAG,CAA7D,EAAgE;AAC9DE,mBAAa;AACd;;AAEDjB,aAAS,GAAGI,KAAZ;AACAD,aAAS,GAAGE,KAAZ;;AAEA,QAAI/V,CAAC,GAAGsV,OAAR,EAAiB;AACfQ,WAAK,GAAG5b,CAAC,CAAC8F,CAAD,CAAT;AACA+V,WAAK,GAAG5b,CAAC,CAAC6F,CAAD,CAAT;AACAA,OAAC;AACF,KAJD,MAIO;AACL8V,WAAK,IAAIS,QAAT;AACAR,WAAK,GAAG,CAAR;AACAU,yBAAmB;AACpB;AACF;;AAED,SAAO/D,MAAP;AACD,C;;ACrFc,SAASkE,QAAT,CAAkBvc,IAAlB,EAAwBC,EAAxB,EAA4BE,cAA5B,EAA4CE,UAAU,GAAG,EAAzD,EAA6D;AAC1E,MAAIL,IAAI,GAAGC,EAAX,EAAe;AAAA,eACA,CAACA,EAAD,EAAKD,IAAL,CADA;AACZA,QADY;AACNC,MADM;AAEd,GAHyE,CAK1E;;;AACAI,YAAU,GAAGA,UAAU,CAACV,MAAX,CACVsE,SAAD,IAAeA,SAAS,CAACjE,IAAV,KAAmBsC,SAAnB,IAAgC2B,SAAS,CAAChE,EAAV,KAAiBqC,SADrD,CAAb;AAIAjC,YAAU,GAAGgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAelB,UAAf,CAAX,CAAb,CAV0E,CAW1E;;AACAA,YAAU,CAAC+Y,OAAX,CAAoBnV,SAAD,IAAe;AAChC,QAAIA,SAAS,CAACjE,IAAV,GAAiBiE,SAAS,CAAChE,EAA/B,EAAmC;AAAA,kBACA,CAACgE,SAAS,CAACjE,IAAX,EAAiBiE,SAAS,CAAChE,EAA3B,CADA;AAChCgE,eAAS,CAAChE,EADsB;AAClBgE,eAAS,CAACjE,IADQ;AAElC;AACF,GAJD;AAMAK,YAAU,CAAC4H,IAAX,CAAgB,CAACvB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAC1G,IAAF,GAAS2G,CAAC,CAAC3G,IAArC,EAlB0E,CAoB1E;;AACAK,YAAU,CAAC+Y,OAAX,CAAoBnV,SAAD,IAAe;AAChC,QAAIA,SAAS,CAACjE,IAAV,GAAiBA,IAArB,EAA2BiE,SAAS,CAACjE,IAAV,GAAiBA,IAAjB;AAC3B,QAAIiE,SAAS,CAAChE,EAAV,GAAeA,EAAnB,EAAuBgE,SAAS,CAAChE,EAAV,GAAeA,EAAf;AACxB,GAHD;;AAIA,OAAK,IAAI0F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtF,UAAU,CAACH,MAAX,GAAoB,CAAxC,EAA2CyF,CAAC,EAA5C,EAAgD;AAC9C,QAAItF,UAAU,CAACsF,CAAD,CAAV,CAAc1F,EAAd,GAAmBI,UAAU,CAACsF,CAAC,GAAG,CAAL,CAAV,CAAkB3F,IAAzC,EAA+C;AAC7CK,gBAAU,CAACsF,CAAD,CAAV,CAAc1F,EAAd,GAAmBI,UAAU,CAACsF,CAAC,GAAG,CAAL,CAAV,CAAkB3F,IAArC;AACD;AACF;;AACDK,YAAU,GAAGA,UAAU,CAACV,MAAX,CAAmBsE,SAAD,IAAeA,SAAS,CAACjE,IAAV,GAAiBiE,SAAS,CAAChE,EAA5D,CAAb;;AAEA,MAAI,CAACI,UAAD,IAAeA,UAAU,CAACH,MAAX,KAAsB,CAAzC,EAA4C;AAC1C,WAAO,CAAC;AAAEF,UAAF;AAAQC,QAAR;AAAYE;AAAZ,KAAD,CAAP;AACD,GAlCyE,CAoC1E;;;AAEA,MAAIqc,QAAQ,GAAGnc,UAAU,CAACoc,MAAX,CACb,CAACC,QAAD,EAAWzY,SAAX,KAA0ByY,QAAQ,IAAIzY,SAAS,CAAChE,EAAV,GAAegE,SAAS,CAACjE,IADlD,EAEb,CAFa,CAAf;AAIA,MAAI2c,KAAK,GAAG1c,EAAE,GAAGD,IAAjB;AACA,MAAI4c,aAAa,GAAG,CAACD,KAAK,GAAGH,QAAT,IAAqBrc,cAAzC;AACA,MAAI0c,KAAK,GAAG,EAAZ;AACA,MAAIC,WAAW,GAAG9c,IAAlB;AACA,MAAI+c,WAAW,GAAG,CAAlB;;AACA,OAAK,IAAI9Y,SAAT,IAAsB5D,UAAtB,EAAkC;AAChC,QAAI2c,eAAe,GAAG3Z,IAAI,CAAC4Z,KAAL,CACpB,CAAChZ,SAAS,CAACjE,IAAV,GAAiB8c,WAAlB,IAAiCF,aADb,CAAtB;AAGAG,eAAW,IAAIC,eAAf;;AACA,QAAIA,eAAe,GAAG,CAAtB,EAAyB;AACvBH,WAAK,CAACrY,IAAN,CAAW;AACTxE,YAAI,EAAE8c,WADG;AAET7c,UAAE,EAAEgE,SAAS,CAACjE,IAFL;AAGTG,sBAAc,EAAE6c;AAHP,OAAX;AAKD;;AAEDF,eAAW,GAAG7Y,SAAS,CAAChE,EAAxB;AACD;;AACD,MAAIE,cAAc,GAAG4c,WAAjB,GAA+B,CAAnC,EAAsC;AACpCF,SAAK,CAACrY,IAAN,CAAW;AACTxE,UAAI,EAAE8c,WADG;AAET7c,QAAE,EAAEA,EAFK;AAGTE,oBAAc,EAAEA,cAAc,GAAG4c;AAHxB,KAAX;AAKD;;AAED,SAAOF,KAAP;AACD,C;;ACvED;AAAA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0Be,SAASzd,aAAT,CAAuB8d,OAAO,GAAG,EAAjC,EAAqCxd,OAAO,GAAG,EAA/C,EAAmD;AAAA,MAC1DG,CAD0D,GACjDqd,OADiD,CAC1Drd,CAD0D;AAAA,MACvDC,CADuD,GACjDod,OADiD,CACvDpd,CADuD;AAEhE,MAAImb,OAAO,GAAGpb,CAAC,CAACK,MAAhB;AACA,MAAImC,OAAO,GAAG,KAAd;;AACA,MAAIxC,CAAC,CAACK,MAAF,GAAW,CAAX,IAAgBL,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAA5B,EAAiC;AAC/BA,KAAC,GAAGA,CAAC,CAACS,KAAF,GAAU+B,OAAV,EAAJ;AACAvC,KAAC,GAAGA,CAAC,CAACQ,KAAF,GAAU+B,OAAV,EAAJ;AACAA,WAAO,GAAG,IAAV;AACD;;AAR+D,sBAgB5D3C,OAhB4D,CAW9DM,IAX8D;AAAA,MAW9DA,IAX8D,8BAWvDH,CAAC,CAAC,CAAD,CAXsD;AAAA,oBAgB5DH,OAhB4D,CAY9DO,EAZ8D;AAAA,MAY9DA,EAZ8D,4BAYzDJ,CAAC,CAACob,OAAO,GAAG,CAAX,CAZwD;AAAA,yBAgB5Dvb,OAhB4D,CAa9Dyd,OAb8D;AAAA,MAa9DA,OAb8D,iCAapD,QAboD;AAAA,8BAgB5Dzd,OAhB4D,CAc9DS,cAd8D;AAAA,MAc9DA,cAd8D,sCAc7C,GAd6C;AAAA,4BAgB5DT,OAhB4D,CAe9DW,UAf8D;AAAA,MAe9DA,UAf8D,oCAejD,EAfiD;;AAkBhE,MAAI4a,OAAO,KAAKnb,CAAC,CAACI,MAAlB,EAA0B;AACxB,UAAM,IAAImI,UAAJ,CAAe,gDAAf,CAAN;AACD;;AAED,MAAI,OAAOrI,IAAP,KAAgB,QAAhB,IAA4B0F,KAAK,CAAC1F,IAAD,CAArC,EAA6C;AAC3C,UAAM,IAAIqI,UAAJ,CAAe,gCAAf,CAAN;AACD;;AAED,MAAI,OAAOpI,EAAP,KAAc,QAAd,IAA0ByF,KAAK,CAACzF,EAAD,CAAnC,EAAyC;AACvC,UAAM,IAAIoI,UAAJ,CAAe,8BAAf,CAAN;AACD;;AAED,MAAI,OAAOlI,cAAP,KAA0B,QAA1B,IAAsCuF,KAAK,CAACvF,cAAD,CAA/C,EAAiE;AAC/D,UAAM,IAAIkI,UAAJ,CAAe,0CAAf,CAAN;AACD;;AAED,MAAIwU,KAAK,GAAGN,QAAQ,CAACvc,IAAD,EAAOC,EAAP,EAAWE,cAAX,EAA2BE,UAA3B,CAApB;AAEA,MAAI+c,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,IAAT,IAAiBT,KAAjB,EAAwB;AACtB,QAAIU,UAAU,GAAGC,WAAW,CAC1B3d,CAD0B,EAE1BC,CAF0B,EAG1Bwd,IAAI,CAACtd,IAHqB,EAI1Bsd,IAAI,CAACrd,EAJqB,EAK1Bqd,IAAI,CAACnd,cALqB,EAM1Bgd,OAN0B,EAO1B9a,OAP0B,CAA5B;AASA+a,WAAO,CAAC5Y,IAAR,CAAa,GAAG+Y,UAAU,CAAC1d,CAA3B;AACAwd,WAAO,CAAC7Y,IAAR,CAAa,GAAG+Y,UAAU,CAACzd,CAA3B;AACD;;AAED,MAAIuC,OAAJ,EAAa;AACX,QAAIrC,IAAI,GAAGC,EAAX,EAAe;AACb,aAAO;AAAEJ,SAAC,EAAEud,OAAO,CAAC/a,OAAR,EAAL;AAAwBvC,SAAC,EAAEud,OAAO,CAAChb,OAAR;AAA3B,OAAP;AACD,KAFD,MAEO;AACL,aAAO;AAAExC,SAAC,EAAEud,OAAL;AAActd,SAAC,EAAEud;AAAjB,OAAP;AACD;AACF,GAND,MAMO;AACL,QAAIrd,IAAI,GAAGC,EAAX,EAAe;AACb,aAAO;AAAEJ,SAAC,EAAEud,OAAL;AAActd,SAAC,EAAEud;AAAjB,OAAP;AACD,KAFD,MAEO;AACL,aAAO;AAAExd,SAAC,EAAEud,OAAO,CAAC/a,OAAR,EAAL;AAAwBvC,SAAC,EAAEud,OAAO,CAAChb,OAAR;AAA3B,OAAP;AACD;AACF;AACF;;AAED,SAASmb,WAAT,CAAqB3d,CAArB,EAAwBC,CAAxB,EAA2BE,IAA3B,EAAiCC,EAAjC,EAAqCE,cAArC,EAAqDgd,OAArD,EAA8D;AAC5D,MAAIhd,cAAc,GAAG,CAArB,EAAwB;AACtB,UAAM,IAAIkI,UAAJ,CAAe,yCAAf,CAAN;AACD;;AAED,MAAIgQ,MAAM,GACR8E,OAAO,KAAK,MAAZ,GACIlB,iBAAiB,CAACpc,CAAD,EAAIC,CAAJ,EAAOE,IAAP,EAAaC,EAAb,EAAiBE,cAAjB,CADrB,GAEI6a,mBAAmB,CAACnb,CAAD,EAAIC,CAAJ,EAAOE,IAAP,EAAaC,EAAb,EAAiBE,cAAjB,CAHzB;AAKA,SAAO;AACLN,KAAC,EAAEua,OAAc,CAAC;AAChBpa,UADgB;AAEhBC,QAFgB;AAGhBya,UAAI,EAAEva;AAHU,KAAD,CADZ;AAMLL,KAAC,EAAEuY;AANE,GAAP;AAQD,C;;;;;;;;;;ACrHc,SAASkE,QAAT,CAAkBvc,IAAlB,EAAwBC,EAAxB,EAA4BI,UAAU,GAAG,EAAzC,EAA6C;AAC1D,MAAIL,IAAI,GAAGC,EAAX,EAAe;AAAA,eACA,CAACA,EAAD,EAAKD,IAAL,CADA;AACZA,QADY;AACNC,MADM;AAEd,GAHyD,CAK1D;;;AACAI,YAAU,GAAGA,UAAU,CAACV,MAAX,CACVsE,SAAD,IAAeA,SAAS,CAACjE,IAAV,KAAmBsC,SAAnB,IAAgC2B,SAAS,CAAChE,EAAV,KAAiBqC,SADrD,CAAb;AAIAjC,YAAU,GAAGgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAelB,UAAf,CAAX,CAAb,CAV0D,CAW1D;;AACAA,YAAU,CAAC+Y,OAAX,CAAoBnV,SAAD,IAAe;AAChC,QAAIA,SAAS,CAACjE,IAAV,GAAiBiE,SAAS,CAAChE,EAA/B,EAAmC;AAAA,kBACA,CAACgE,SAAS,CAACjE,IAAX,EAAiBiE,SAAS,CAAChE,EAA3B,CADA;AAChCgE,eAAS,CAAChE,EADsB;AAClBgE,eAAS,CAACjE,IADQ;AAElC;AACF,GAJD;AAMAK,YAAU,CAAC4H,IAAX,CAAgB,CAACvB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAC1G,IAAF,GAAS2G,CAAC,CAAC3G,IAArC,EAlB0D,CAoB1D;;AACAK,YAAU,CAAC+Y,OAAX,CAAoBnV,SAAD,IAAe;AAChC,QAAIA,SAAS,CAACjE,IAAV,GAAiBA,IAArB,EAA2BiE,SAAS,CAACjE,IAAV,GAAiBA,IAAjB;AAC3B,QAAIiE,SAAS,CAAChE,EAAV,GAAeA,EAAnB,EAAuBgE,SAAS,CAAChE,EAAV,GAAeA,EAAf;AACxB,GAHD;;AAIA,OAAK,IAAI0F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtF,UAAU,CAACH,MAAX,GAAoB,CAAxC,EAA2CyF,CAAC,EAA5C,EAAgD;AAC9C,QAAItF,UAAU,CAACsF,CAAD,CAAV,CAAc1F,EAAd,GAAmBI,UAAU,CAACsF,CAAC,GAAG,CAAL,CAAV,CAAkB3F,IAAzC,EAA+C;AAC7CK,gBAAU,CAACsF,CAAD,CAAV,CAAc1F,EAAd,GAAmBI,UAAU,CAACsF,CAAC,GAAG,CAAL,CAAV,CAAkB3F,IAArC;AACD;AACF;;AACDK,YAAU,GAAGA,UAAU,CAACV,MAAX,CAAmBsE,SAAD,IAAeA,SAAS,CAACjE,IAAV,GAAiBiE,SAAS,CAAChE,EAA5D,CAAb;;AAEA,MAAI,CAACI,UAAD,IAAeA,UAAU,CAACH,MAAX,KAAsB,CAAzC,EAA4C;AAC1C,WAAO,CAAC;AAAEF,UAAF;AAAQC;AAAR,KAAD,CAAP;AACD;;AAED,MAAI4c,KAAK,GAAG,EAAZ;AACA,MAAIC,WAAW,GAAG9c,IAAlB;;AACA,OAAK,IAAIiE,SAAT,IAAsB5D,UAAtB,EAAkC;AAChC,QAAIyc,WAAW,GAAG7Y,SAAS,CAACjE,IAA5B,EAAkC;AAChC6c,WAAK,CAACrY,IAAN,CAAW;AACTxE,YAAI,EAAE8c,WADG;AAET7c,UAAE,EAAEgE,SAAS,CAACjE;AAFL,OAAX;AAID;;AAED8c,eAAW,GAAG7Y,SAAS,CAAChE,EAAxB;AACD;;AACD,MAAI6c,WAAW,GAAG7c,EAAlB,EAAsB;AACpB4c,SAAK,CAACrY,IAAN,CAAW;AACTxE,UAAI,EAAE8c,WADG;AAET7c,QAAE,EAAEA;AAFK,KAAX;AAID;;AAED,SAAO4c,KAAP;AACD,C;;ACxDD;AAAA;AAEA;;;;;;;;;;;;AAYe,SAAS3d,OAAT,CAAiB0a,MAAjB,EAAyBla,OAAO,GAAG,EAAnC,EAAuC;AAAA,QAC5CG,CAD4C,GACnC+Z,MADmC,CAC5C/Z,CAD4C;AAAA,QACzCC,CADyC,GACnC8Z,MADmC,CACzC9Z,CADyC;AAAA,wBAEWJ,OAFX,CAE5CM,IAF4C;AAAA,QAE5CA,IAF4C,8BAErCH,CAAC,CAAC,CAAD,CAFoC;AAAA,sBAEWH,OAFX,CAE/BO,EAF+B;AAAA,QAE/BA,EAF+B,4BAE1BJ,CAAC,CAACA,CAAC,CAACK,MAAF,GAAW,CAAZ,CAFyB;AAAA,8BAEWR,OAFX,CAETW,UAFS;AAAA,QAETA,UAFS,oCAEI,EAFJ;AAIpD,MAAIwc,KAAK,GAAGN,QAAQ,CAACvc,IAAD,EAAOC,EAAP,EAAWI,UAAX,CAApB;AAGA,MAAIod,gBAAgB,GAAG,CAAvB;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAItZ,QAAQ,GAAG,CAAf;;AACA,SAAOA,QAAQ,GAAGxE,CAAC,CAACK,MAApB,EAA4B;AAC1B,QACEL,CAAC,CAACwE,QAAD,CAAD,IAAewY,KAAK,CAACY,gBAAD,CAAL,CAAwBxd,EAAvC,IACAJ,CAAC,CAACwE,QAAD,CAAD,IAAewY,KAAK,CAACY,gBAAD,CAAL,CAAwBzd,IAFzC,EAGE;AACA0d,UAAI,CAAClZ,IAAL,CAAU3E,CAAC,CAACwE,QAAD,CAAX;AACAsZ,UAAI,CAACnZ,IAAL,CAAU1E,CAAC,CAACuE,QAAD,CAAX;AACD,KAND,MAMO;AACL,UAAIxE,CAAC,CAACwE,QAAD,CAAD,GAAcwY,KAAK,CAACY,gBAAD,CAAL,CAAwBxd,EAA1C,EAA8C;AAC5Cwd,wBAAgB;AAChB,YAAI,CAACZ,KAAK,CAACY,gBAAD,CAAV,EAA8B;AAC/B;AACF;;AACDpZ,YAAQ;AACT;;AAED,SAAO;AACLxE,KAAC,EAAE6d,IADE;AAEL5d,KAAC,EAAE6d;AAFE,GAAP;AAID,C","file":"spectra-processor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SpectraProcessor\"] = factory();\n\telse\n\t\troot[\"SpectraProcessor\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar filterX = _interopDefault(require('ml-array-xy-filter-x'));\nvar equallySpaced = _interopDefault(require('ml-array-xy-equally-spaced'));\nvar Stat = _interopDefault(require('ml-stat/array'));\nvar mlSpectraProcessing = require('ml-spectra-processing');\nvar jcampconverter = require('jcampconverter');\n\n/**\n *\n * @param {*} spectrum\n * @param {object} [options={}]\n *\n */\n\nfunction getData(spectrum, options = {}) {\n  const { filter } = options;\n\n  let data = { x: [], y: [] };\n\n  if (filter) {\n    data = filterX({ x: spectrum.x, y: spectrum.y }, filter);\n  }\n  return data;\n}\n\nfunction updateNormalized(spectrum, options = {}) {\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints = 1024,\n    processes = [],\n    exclusions = []\n  } = options;\n\n  let y = spectrum.y.slice(0);\n  for (let process of processes) {\n    switch (process.kind) {\n      case 'centerMean': {\n        let mean = Stat.mean(spectrum.y);\n        let meanFct = (y) => y - mean;\n        y = y.map(meanFct);\n        break;\n      }\n      case 'scaleSD': {\n        let std = Stat.standardDeviation(spectrum.y);\n        let stdFct = (y) => y / std;\n        y = y.map(stdFct);\n        break;\n      }\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n\n  let result = equallySpaced(\n    { x: spectrum.x, y },\n    { from, to, numberOfPoints, exclusions }\n  );\n  spectrum.normalized = result;\n\n  return result;\n}\n\nfunction updateRangesInfo(spectrum, ranges = []) {\n  spectrum.ranges = {};\n  for (let range of ranges) {\n    range = JSON.parse(JSON.stringify(range));\n    spectrum.ranges[range.label] = range;\n    let fromToIndex = {\n      fromIndex: mlSpectraProcessing.arrayFindClosestIndex(spectrum.normalized.x, range.from),\n      toIndex: mlSpectraProcessing.arrayFindClosestIndex(spectrum.normalized.x, range.to)\n    };\n    range.integration = mlSpectraProcessing.xyIntegration(spectrum.normalized, fromToIndex);\n    range.maxPoint = mlSpectraProcessing.xyMaxYPoint(spectrum.normalized, fromToIndex);\n  }\n}\n\n/**\n * Class allowing manipulate one IR spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.x=[]] - x values\n * @param {Array} [json.y=[]] - y values\n */\nclass Spectrum {\n  constructor(x, y, id, options = {}) {\n    const { meta = {} } = options;\n    if (!id) throw new Error('Spectrum: id is mandatory');\n\n    if (x && x.length > 1 && x[0] > x[1]) {\n      this.x = x.reverse();\n      this.y = y.reverse();\n    } else {\n      this.x = x || [];\n      this.y = y || [];\n    }\n    this.id = id;\n    this.meta = meta;\n    this.normalized = undefined;\n  }\n\n  getXY() {\n    return { x: this.x, y: this.y };\n  }\n}\n\nSpectrum.prototype.getData = function (options) {\n  return getData(this, options);\n};\n\nSpectrum.prototype.updateNormalized = function (options) {\n  return updateNormalized(this, options);\n};\n\nSpectrum.prototype.updateRangesInfo = function (ranges) {\n  updateRangesInfo(this, ranges);\n};\n\nfunction getJcampKind(data) {\n  let datatype = data.spectra[0].dataType.toLowerCase();\n  let yUnit = data.spectra[0].yUnit.toLowerCase();\n\n  if (datatype.match(/infrared/)) {\n    if (yUnit.match(/absorbance/)) {\n      return IR_ABSORBANCE;\n    } else {\n      return IR_TRANSMITTANCE;\n    }\n  }\n  return undefined;\n}\n\nconst IR_TRANSMITTANCE = {\n  normalization: {},\n  importation: {\n    converter: (transmittance) => -Math.log10(transmittance)\n  },\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance'\n  }\n};\n\nconst IR_ABSORBANCE = {\n  normalization: {},\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance'\n  }\n};\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - New class element with the given data\n */\nfunction jcamp(jcamp) {\n  const parsed = jcampconverter.convert(jcamp, { xy: true });\n  const kind = getJcampKind(parsed);\n  const data = parsed.spectra[0].data[0];\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data, kind };\n}\n\nfunction getFilterAnnotations(filter = {}) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    var annotation = {\n      type: 'rect',\n      position: [{ x: exclusion.from, y: -200 }, { x: exclusion.to, y: 200 }],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [{ x: 0, y: -200 }, { x: filter.from, y: 200 }],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [{ x: filter.to, y: -200 }, { x: 10000, y: 200 }],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    });\n  }\n  return annotations;\n}\n\nclass SpectraProcessor {\n  constructor(options = {}) {\n    this.keepOriginalData =\n      options.keepOriginalData === undefined ? false : options.keepOriginalData;\n    this.normalizationFilter = undefined;\n    this.spectra = [];\n  }\n\n  getFilterAnnotations() {\n    return getFilterAnnotations(this.normalizationFilter);\n  }\n\n  setNormalizationFilter(normalizationFilter = {}) {\n    if (!this.keepOriginalData && this.spectra.length > 0) {\n      throw new Error(\n        'Can not change normalization filter, missing original data. Use the option keepOriginalData=true.'\n      );\n    }\n    this.normalizationFilter = normalizationFilter;\n    for (let spectrum of this.spectra) {\n      spectrum.updateNormalized(this.normalizationFilter);\n    }\n  }\n\n  /**\n   * Add jcamp\n   * @param {string} jcamp\n   * @param {string} id\n   * @param {boolean} [force=false]\n   * @param {object} [meta={}]\n   * @param {string} [meta.color]\n   */\n  addFromJcamp(jcamp$1, id, meta = {}, force = false) {\n    if (force === false && this.contains(id)) {\n      return;\n    }\n\n    let parsed = jcamp(jcamp$1);\n    this.createAndAddSpectrum(parsed, id, meta);\n  }\n\n  updateRangesInfo(options) {\n    for (let spectrum of this.spectra) {\n      spectrum.updateRangesInfo(options);\n    }\n  }\n\n  /**\n   * Add a spectrum\n   * @param {Spectrum} spectrum\n   */\n  createAndAddSpectrum(parsed, id, meta) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.spectra.length;\n    let spectrum = new Spectrum(parsed.data.x, parsed.data.y, id, {\n      meta\n    });\n    spectrum.updateNormalized(this.normalizationFilter);\n    this.spectra[index] = spectrum;\n  }\n\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra.splice(index, 1);\n  }\n\n  removeSpectraNotIn(ids) {\n    let currentIDs = this.spectra.map((spectrum) => spectrum.id);\n    for (let id of currentIDs) {\n      if (!ids.includes(id)) {\n        this.removeSpectrum(id);\n      }\n    }\n  }\n\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.spectra.length; i++) {\n      let spectrum = this.spectra[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  getSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra[index];\n  }\n\n  getNormalizedData() {\n    if (!this.spectra || !this.spectra[0]) return {};\n    let matrix = [];\n    let meta = [];\n    let ids = [];\n    for (let spectrum of this.spectra) {\n      ids.push(spectrum.id);\n      matrix.push(spectrum.normalized.y);\n      meta.push(spectrum.meta);\n    }\n    let x = this.spectra[0].normalized.x;\n    return { ids, matrix, meta, x };\n  }\n\n  getNormalizedChart(options = {}) {\n    const { ids } = options;\n    let chart = {\n      data: []\n    };\n    for (let spectrum of this.spectra) {\n      if (!ids || ids.includes(spectrum.id)) {\n        let data = spectrum.normalized;\n        data.styles = {\n          unselected: {\n            lineColor: spectrum.meta.color || 'darkgrey',\n            lineWidth: 1,\n            lineStyle: 1\n          },\n          selected: {\n            lineColor: spectrum.meta.color || 'darkgrey',\n            lineWidth: 3,\n            lineStyle: 1\n          }\n        };\n        data.label = spectrum.meta.id || spectrum.id;\n        chart.data.push(data);\n      }\n    }\n    return chart;\n  }\n\n  getChart(options = {}) {\n    const { ids, filter = {} } = options;\n    let chart = {\n      data: []\n    };\n    for (let spectrum of this.spectra) {\n      if (!ids || ids.includes(spectrum.id)) {\n        let data = spectrum.getData({ filter });\n        data.styles = {\n          unselected: {\n            lineColor: spectrum.meta.color || 'darkgrey',\n            lineWidth: 1,\n            lineStyle: 1\n          },\n          selected: {\n            lineColor: spectrum.meta.color || 'darkgrey',\n            lineWidth: 3,\n            lineStyle: 1\n          }\n        };\n        data.label = spectrum.meta.id || spectrum.id;\n        chart.data.push(data);\n      }\n    }\n    return chart;\n  }\n}\n\nexports.SpectraProcessor = SpectraProcessor;\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    var floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    var wantXY = !options.withoutXY;\n\n    var start = Date.now();\n\n    var ntuples = {};\n    var ldr, dataLabel, dataValue, ldrs;\n    var position, endLine, infos;\n\n    var result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    var spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    var spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      dataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (dataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          var xIndex = -1;\n          var yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            var firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1'\n            );\n            var secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1'\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            dataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            dataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (dataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue, result);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (dataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (dataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (dataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (dataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (dataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (dataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (dataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (dataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (dataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (dataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (dataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (dataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (dataLabel === '.OBSERVEFREQUENCY' || dataLabel === '$SFO1') {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (dataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$REFERENCEPOINT') {\n        // OFFSET for Varian spectra\n        // if we activate this part it does not work for ACD specmanager\n        //         } else if (dataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n        //                 var parts = dataValue.split(/ *, */);\n        //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n        //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n      } else if (dataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (dataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        var pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        var unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (dataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(dataLabel)) {\n        spectrum[convertMSFieldToLabel(dataLabel)] = dataValue;\n      } else if (dataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (dataLabel.match(options.keepRecordsRegExp)) {\n        if (result.info[dataLabel]) {\n          if (!Array.isArray(result.info[dataLabel])) {\n            result.info[dataLabel] = [result.info[dataLabel]];\n          }\n          result.info[dataLabel].push(dataValue.trim());\n        } else {\n          result.info[dataLabel] = dataValue.trim();\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      var newNtuples = [];\n      var keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              var data = spectrum.data[j];\n              var newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2)\n              };\n              for (var k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(dataLabel) {\n    return GC_MS_FIELDS.indexOf(dataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    var spectra = result.spectra;\n    var length = spectra.length;\n    var chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length)\n        }\n      }\n    };\n\n    var existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      var label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length)\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      var spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]]\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    var data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice()\n        }\n      }\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      var shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    var l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    var minZ = spectra[0].data[0][0];\n    var maxZ = minZ;\n    var ySize = spectra.length;\n    var xSize = spectra[0].data[0].length / 2;\n    var z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      var xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        var value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs))\n    };\n  }\n\n  function add2D(result, options) {\n    var zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    var noise = zData.noise;\n    var z = zData.z;\n    var povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    var isOver0, isOver1, isOver2, isOver3;\n    var nbSubSpectra = z.length;\n    var nbPovars = z[0].length;\n    var pAx, pAy, pBx, pBy;\n\n    var x0 = zData.minX;\n    var xN = zData.maxX;\n    var dx = (xN - x0) / (nbPovars - 1);\n    var y0 = zData.minY;\n    var yN = zData.maxY;\n    var dy = (yN - y0) / (nbSubSpectra - 1);\n    var minZ = zData.minZ;\n    var maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    var iter = options.nbContourLevels * 2;\n    var contourLevels = new Array(iter);\n    var lineZValue;\n    for (var level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      var contourLevel = {};\n      contourLevels[level] = contourLevel;\n      var side = level % 2;\n      var factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      var lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        var subSpectra = z[iSubSpectra];\n        var subSpectraAfter = z[iSubSpectra + 1];\n        for (var povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    var yFactor = spectrum.yFactor;\n    var deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var currentX = spectrum.firstX;\n    var currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    var endLine = false;\n    var ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    var newLine = true;\n    var isDifference = false;\n    var isLastDifference = false;\n    var lastDifference = 0;\n    var isDuplicate = false;\n    var inComment = false;\n    var currentValue = 0; // can be a difference or a duplicate\n    var lastValue = 0; // must be the real last value\n    var isNegative = false;\n    var inValue = false;\n    var skipFirstValue = false;\n    var decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                var duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (var j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            var ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    var removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    var removeCommentRegExp = /\\$\\$.*/;\n    var peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nvar convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nvar stamps = {};\nvar worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function (resolve) {\n    var stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options\n      })\n    );\n  });\n}\n\nfunction createWorker() {\n  var workerURL = URL.createObjectURL(\n    new Blob(\n      [`var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`],\n      { type: 'application/javascript' }\n    )\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function (event) {\n    var data = JSON.parse(event.data);\n    var stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (var i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: []\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      var finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      var match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        var dataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (dataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nmodule.exports = {\n  convert: JcampConverter,\n  createTree: createTree\n};\n","/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array} array\n * @param {number} target\n */\n\nexport function arrayFindClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n","import { arrayFindClosestIndex } from './arrayFindClosestIndex';\n\n/**\n * Returns an object with {fromIndex, toIndex} for a specific from / to\n * @param {array} x\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n */\n\nexport function arrayGetFromToIndex(x, options = {}) {\n  let { fromIndex, toIndex, from, to } = options;\n\n  if (fromIndex === undefined) {\n    if (from !== undefined) {\n      fromIndex = arrayFindClosestIndex(x, from);\n    } else {\n      fromIndex = 0;\n    }\n  }\n  if (toIndex === undefined) {\n    if (to !== undefined) {\n      toIndex = arrayFindClosestIndex(x, to);\n    } else {\n      toIndex = x.length - 1;\n    }\n  }\n  return { fromIndex, toIndex };\n}\n","const isAnyArray = require('is-any-array');\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {object} [points={}]\n */\nexport function xyCheck(points = {}) {\n  if (!isAnyArray(points.x) || !isAnyArray(points.y)) {\n    throw new Error('Points must be an object of x and y arrays');\n  }\n  if (points.x.length !== points.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n","import { arrayGetFromToIndex } from '../array/arrayGetFromToIndex';\n\nimport { xyCheck } from './xyCheck';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Integration value on the specified range\n */\n\nexport function xyIntegration(points = {}, options = {}) {\n  xyCheck(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n  const { fromIndex, toIndex } = arrayGetFromToIndex(x, options);\n  let integration = 0;\n  for (let i = fromIndex; i < toIndex; i++) {\n    integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n  }\n\n  return integration;\n}\n","import { arrayGetFromToIndex } from '../array/arrayGetFromToIndex';\n\nimport { xyCheck } from './xyCheck';\n/**\n * Generate a X / Y of the integral\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {{x:[],y:[]}} A object with the integration function\n */\n\nexport function xyIntegral(points = {}, options = {}) {\n  xyCheck(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = arrayGetFromToIndex(x, options);\n\n  let integral = { x: [x[fromIndex]], y: [0] };\n  let integration = 0;\n  for (let i = fromIndex; i < toIndex; i++) {\n    integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n    integral.x.push(x[i + 1]);\n    integral.y.push(integration);\n  }\n\n  return integral;\n}\n","import { arrayGetFromToIndex } from '../array/arrayGetFromToIndex';\n\nimport { xyCheck } from './xyCheck';\n/**\n * Finds the max value in a zone\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Max y on the specified range\n */\n\nexport function xyMaxY(points = {}, options = {}) {\n  xyCheck(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = arrayGetFromToIndex(x, options);\n\n  let maxY = y[fromIndex];\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > maxY) maxY = y[i];\n  }\n\n  return maxY;\n}\n","import { arrayGetFromToIndex } from '../array/arrayGetFromToIndex';\n\nimport { xyCheck } from './xyCheck';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nexport function xyMaxYPoint(points = {}, options = {}) {\n  xyCheck(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = arrayGetFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n","export * from './array/arrayFindClosestIndex';\nexport * from './array/arrayGetFromToIndex';\n\nexport * from './xy/xyIntegration';\nexport * from './xy/xyIntegral';\nexport * from './xy/xyCheck';\nexport * from './xy/xyMaxY';\nexport * from './xy/xyMaxYPoint';\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n\n  var output = new Array(numberOfPoints);\n\n  var initialOriginalStep = x[1] - x[0];\n  var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  var min = from - halfStep;\n  var max = from + halfStep;\n\n  var previousX = Number.MIN_VALUE;\n  var previousY = 0;\n  var nextX = x[0] - initialOriginalStep;\n  var nextY = 0;\n\n  var currentValue = 0;\n  var slope = 0;\n  var intercept = 0;\n  var sumAtMin = 0;\n  var sumAtMax = 0;\n\n  var i = 0; // index of input\n  var j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      var add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n  var lastStep = x[x.length - 1] - x[x.length - 2];\n\n  var start = from - halfStep;\n  var output = new Array(numberOfPoints);\n\n  // Init main variables\n  var min = start;\n  var max = start + step;\n\n  var previousX = -Number.MAX_VALUE;\n  var previousY = 0;\n  var nextX = x[0];\n  var nextY = y[0];\n  var frontOutsideSpectra = 0;\n  var backOutsideSpectra = true;\n\n  var currentValue = 0;\n\n  // for slot algorithm\n  var currentPoints = 0;\n\n  var i = 1; // index of input\n  var j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","export default function getZones(from, to, numberOfPoints, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to, numberOfPoints }];\n  }\n\n  // need to deal with overlapping exclusions and out of bound exclusions\n\n  let toRemove = exclusions.reduce(\n    (previous, exclusion) => (previous += exclusion.to - exclusion.from),\n    0\n  );\n  let total = to - from;\n  let unitsPerPoint = (total - toRemove) / numberOfPoints;\n  let zones = [];\n  let currentFrom = from;\n  let totalPoints = 0;\n  for (let exclusion of exclusions) {\n    let currentNbPoints = Math.round(\n      (exclusion.from - currentFrom) / unitsPerPoint\n    );\n    totalPoints += currentNbPoints;\n    if (currentNbPoints > 0) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n        numberOfPoints: currentNbPoints\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (numberOfPoints - totalPoints > 0) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n      numberOfPoints: numberOfPoints - totalPoints\n    });\n  }\n\n  return zones;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\nimport getZones from './getZones';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = []\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  let zones = getZones(from, to, numberOfPoints, exclusions);\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse\n    );\n    xResult.push(...zoneResult.x);\n    yResult.push(...zoneResult.y);\n  }\n\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  var output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints\n    }),\n    y: output\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n"],"sourceRoot":""}