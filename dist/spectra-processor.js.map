{"version":3,"sources":["webpack://SpectraProcessor/webpack/universalModuleDefinition","webpack://SpectraProcessor/webpack/bootstrap","webpack://SpectraProcessor/./node_modules/is-any-array/src/index.js","webpack://SpectraProcessor/./lib/index.js","webpack://SpectraProcessor//usr/lib/node_modules/cheminfo-tools/node_modules/process/browser.js","webpack://SpectraProcessor/./node_modules/ml-stat/array.js","webpack://SpectraProcessor/./node_modules/jcampconverter/src/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/check.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/findClosestIndex.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/getFromToIndex.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/integration.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/integral.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/maxY.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/maxYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/minYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/reduce.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/sortX.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xreim/zeroFilling.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xreim/sortX.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xreim/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/reim/absolute.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/reim/phaseCorrection.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/reim/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/rotate.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/subtract.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/add.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/multiply.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/divide.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/index.js","webpack://SpectraProcessor/./node_modules/ml-array-sequential-fill/lib-es6/index.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/integral.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/getZones.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/index.js","webpack://SpectraProcessor/./node_modules/ml-regression-base/src/index.js","webpack://SpectraProcessor/./node_modules/ml-regression-base/src/checkArrayLength.js","webpack://SpectraProcessor/./node_modules/ml-regression-base/src/maybeToPrecision.js","webpack://SpectraProcessor/./node_modules/ml-regression-simple-linear/src/index.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-filter-x/src/getZones.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-filter-x/src/index.js"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","module","exports","defineProperty","value","_interopDefault","ex","filterX","require","equallySpaced","Stat","mlSpectraProcessing","jcampconverter","SimpleLinearRegression","getData","spectrum","filter","data","x","y","getNormalized","options","Array","isArray","Error","from","to","length","numberOfPoints","filters","exclusions","slice","name","mean","meanFct","map","std","standardDeviation","stdFct","undefined","process","kind","result","updateRangesInfo","ranges","range","JSON","parse","stringify","label","fromToIndex","fromIndex","X","findClosestIndex","normalized","toIndex","integration","XY","maxPoint","maxYPoint","Spectrum","constructor","id","meta","keepOriginalData","normalization","reverse","getXY","updateNormalization","getJcampKind","datatype","spectra","dataType","toLowerCase","yUnit","match","IR_ABSORBANCE","IR_TRANSMITTANCE","importation","converter","transmittance","Math","log10","display","xLabel","xInverted","yLabel","jcamp","parsed","convert","xy","getNormalizationAnnotations","annotations","exclusion","ignore","annotation","type","position","strokeWidth","fillColor","push","addChartDataStyle","styles","unselected","lineColor","color","lineWidth","lineStyle","selected","getChart","ids","chart","includes","getNormalizedChart","getScaledChart","spectraProcessor","scaled","getScaledData","i","matrix","getNormalizedData","currentIDs","getFromToIndex","xs","min","targetSpectrum","targetValue","minYPoint","values","factor","multiply","max","minMax","regression","j","computeX","range$1","targetID","relative","method","getSpectrum","getSpectra","subtract","SpectraProcessor","setRescale","scale","setNormalization","checkOriginal","addFromJcamp","jcamp$1","force","contains","addFromData","random","substring","index","getSpectrumIndex","removeSpectrum","splice","removeSpectraNotIn","isNaN","console","log","message","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","nextTick","args","arguments","Item","array","apply","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","compareNumbers","a","b","sum","l","arithmeticMean","geometricMean","mul","pow","logMean","lnsum","grandMean","means","samples","n","truncatedMean","percent","alreadySorted","sort","k","floor","harmonicMean","RangeError","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","theVariance","sqrt","standardError","robustMeanAndStdev","stdev","averageDeviations","abs","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","indexOf","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","g","kurtosis","s4","m4","v","c","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","standardize","standardDev","cumulativeSum","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","defaultOptions","keepRecordsRegExp","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","assign","wantXY","start","Date","now","ntuples","ldr","dataLabel","dataValue","ldrs","endLine","infos","logs","info","TypeError","action","time","split","replace","trim","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","first","firstX","firstY","last","lastX","lastY","vardim","nbPoints","xFactor","yFactor","units","xUnit","datatable","deltaX","prepareSpectrum","fastParseXYData","parsePeakTable","parseXYA","twoD","maxX","minX","maxY","minY","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","isMSField","convertMSFieldToLabel","sampleDescription","keys","newNtuples","key","add2D","newData","complexChromatogram","simpleChromatogram","times","series","ms","dimension","existingGCMSFields","intensity","shift","getMedian","convertTo3DZ","minZ","maxZ","ySize","xSize","xVector","noise","zData","contourLines","generateContourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","x0","xN","dx","y0","yN","dy","iter","contourLevels","lineZValue","level","contourLevel","side","exp","lines","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","isXYdata","currentData","currentX","currentY","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeSymbolRegExp","isXYAdata","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","JcampConverter","input","useWorker","postToWorker","stamps","worker","createWorker","Promise","resolve","stamp","postMessage","workerURL","URL","createObjectURL","Blob","Worker","revokeObjectURL","addEventListener","event","output","createTree","flatten","flat","stack","current","ntupleLevel","spaces","line","labelLine","startsWith","join","children","finished","pop","forEach","entry","check","points","target","low","high","middle","integral","reduce","newX","newY","Number","MAX_VALUE","MIN_VALUE","slot","sortX","zeroFilling","re","im","Float64Array","newRE","newIM","XReIm","absolute","newArray","phaseCorrection","phi0","phi1","isFinite","delta","alpha","sin","beta","cosTheta","cos","sinTheta","newRe","newIm","ReIm","rotate","array1","array2","isConstant","constant","array3","add","divide","_typeof","obj","Symbol","iterator","sequentialFill","_options","_options$from","_options$to","_options$size","size","step","_i","x1","slope","intercept","equallySpacedSmooth","xLength","halfStep","initialOriginalStep","lastOriginalStep","previousX","previousY","nextX","nextY","sumAtMin","sumAtMax","getSlope","y1","main","equallySpacedSlot","lastStep","frontOutsideSpectra","backOutsideSpectra","currentPoints","getZones","toRemove","previous","total","unitsPerPoint","zones","currentFrom","totalPoints","currentNbPoints","round","arrayXY","variant","xResult","yResult","zone","zoneResult","processZone","BaseRegression","new","predict","_predict","train","toLaTeX","score","y2","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","r","checkArraySize","maybeToPrecision","digits","toPrecision","coefficients","checkArrayLength","regress","toJSON","precision","absIntercept","operator","load","json","slr","numerator","currentZoneIndex"],"mappings":"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","file":"spectra-processor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SpectraProcessor\"] = factory();\n\telse\n\t\troot[\"SpectraProcessor\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar filterX = _interopDefault(require('ml-array-xy-filter-x'));\nvar equallySpaced = _interopDefault(require('ml-array-xy-equally-spaced'));\nvar Stat = _interopDefault(require('ml-stat/array'));\nvar mlSpectraProcessing = require('ml-spectra-processing');\nvar jcampconverter = require('jcampconverter');\nvar SimpleLinearRegression = _interopDefault(require('ml-regression-simple-linear'));\n\n/**\n *\n * @param {Spectrum} spectrum\n * @param {object} [filter={}]\n * @param {array} [filter.from]\n * @param {array} [filter.to]\n * @param {array} [filter.exclusions=[]]\n */\n\nfunction getData(spectrum, filter = {}) {\n  let data = { x: spectrum.x, y: spectrum.y };\n\n  if (filter) {\n    data = filterX({ x: spectrum.x, y: spectrum.y }, filter);\n  }\n  return data;\n}\n\nfunction getNormalized(spectrum, options = {}) {\n  if (!Array.isArray(spectrum.x) || !Array.isArray(spectrum.y)) {\n    throw new Error('Can not get normalized data');\n  }\n\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints = 1024,\n    filters = [],\n    exclusions = []\n  } = options;\n\n  let y = spectrum.y.slice(0);\n\n  for (let filter of filters) {\n    switch (filter.name) {\n      case 'centerMean': {\n        let mean = Stat.mean(spectrum.y);\n        let meanFct = (y) => y - mean;\n        y = y.map(meanFct);\n        break;\n      }\n      case 'scaleSD': {\n        let std = Stat.standardDeviation(spectrum.y);\n        let stdFct = (y) => y / std;\n        y = y.map(stdFct);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n\n  let result = equallySpaced(\n    { x: spectrum.x, y },\n    { from, to, numberOfPoints, exclusions }\n  );\n\n  return result;\n}\n\nfunction updateRangesInfo(spectrum, ranges = []) {\n  spectrum.ranges = {};\n  for (let range of ranges) {\n    range = JSON.parse(JSON.stringify(range));\n    spectrum.ranges[range.label] = range;\n    let fromToIndex = {\n      fromIndex: mlSpectraProcessing.X.findClosestIndex(spectrum.normalized.x, range.from),\n      toIndex: mlSpectraProcessing.X.findClosestIndex(spectrum.normalized.x, range.to)\n    };\n    range.integration = mlSpectraProcessing.XY.integration(spectrum.normalized, fromToIndex);\n    range.maxPoint = mlSpectraProcessing.XY.maxYPoint(spectrum.normalized, fromToIndex);\n  }\n}\n\n/**\n * Class allowing manipulate one IR spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.x=[]] - x values\n * @param {Array} [json.y=[]] - y values\n */\nclass Spectrum {\n  /**\n   *\n   * @param {array} x\n   * @param {array} y\n   * @param {string} id\n   * @param {object} [options={}]\n   */\n  constructor(x, y, id, options = {}) {\n    const { meta = {}, keepOriginalData = false, normalization = {} } = options;\n    if (x && x.length > 1 && x[0] > x[1]) {\n      x = x.reverse();\n      y = y.reverse();\n    } else {\n      x = x || [];\n      y = y || [];\n    }\n    if (keepOriginalData) {\n      this.x = x;\n      this.y = y;\n    }\n    this.id = id;\n    this.meta = meta;\n    this.normalized = getNormalized({ x, y }, normalization);\n  }\n\n  getXY() {\n    if (!Array.isArray(this.x) || !Array.isArray(this.y)) {\n      throw new Error('Can not get normalized data');\n    }\n    return { x: this.x, y: this.y };\n  }\n}\n\nSpectrum.prototype.getData = function (options) {\n  return getData(this, options);\n};\n\nSpectrum.prototype.updateNormalization = function (normalization) {\n  this.normalized = getNormalized(this, normalization);\n  this.ranges = {};\n};\n\nSpectrum.prototype.updateRangesInfo = function (ranges) {\n  updateRangesInfo(this, ranges);\n};\n\nfunction getJcampKind(data) {\n  let datatype = data.spectra[0].dataType.toLowerCase();\n  let yUnit = data.spectra[0].yUnit.toLowerCase();\n\n  if (datatype.match(/infrared/)) {\n    if (yUnit.match(/absorbance/)) {\n      return IR_ABSORBANCE;\n    } else {\n      return IR_TRANSMITTANCE;\n    }\n  }\n  return undefined;\n}\n\nconst IR_TRANSMITTANCE = {\n  normalization: {},\n  importation: {\n    converter: (transmittance) => -Math.log10(transmittance)\n  },\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance'\n  }\n};\n\nconst IR_ABSORBANCE = {\n  normalization: {},\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance'\n  }\n};\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - New class element with the given data\n */\nfunction jcamp(jcamp) {\n  const parsed = jcampconverter.convert(jcamp, { xy: true });\n  const kind = getJcampKind(parsed);\n  const data = parsed.spectra[0].data[0];\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data, kind };\n}\n\nfunction getNormalizationAnnotations(filter = {}) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    var annotation = {\n      type: 'rect',\n      position: [{ x: exclusion.from, y: -200 }, { x: exclusion.to, y: 200 }],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [{ x: 0, y: -200 }, { x: filter.from, y: 200 }],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [{ x: filter.to, y: -200 }, { x: 10000, y: 200 }],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    });\n  }\n  return annotations;\n}\n\nfunction addChartDataStyle(data, spectrum) {\n  data.styles = {\n    unselected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 1,\n      lineStyle: 1\n    },\n    selected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 3,\n      lineStyle: 1\n    }\n  };\n  data.label = spectrum.meta.id || spectrum.id;\n}\n\n/**\n * Retrieve a chart with selected original data\n * @param {*} options\n */\nfunction getChart(spectra, options = {}) {\n  const { ids, filter = {} } = options;\n  let chart = {\n    data: []\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.getData({ filter });\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n\nfunction getNormalizedChart(spectra, options = {}) {\n  const { ids } = options;\n  let chart = {\n    data: []\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.normalized;\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n\n/**\n *\n * @param {SpectraProcessor} spectraProcessor\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n */\nfunction getScaledChart(spectraProcessor, options = {}) {\n  let scaled = spectraProcessor.getScaledData(options);\n\n  let chart = {\n    data: []\n  };\n\n  for (let i = 0; i < scaled.matrix.length; i++) {\n    let data = {\n      x: scaled.x,\n      y: scaled.matrix[i]\n    };\n    addChartDataStyle(data, { meta: scaled.meta[i], id: scaled.ids[i] });\n    chart.data.push(data);\n  }\n\n  return chart;\n}\n\nfunction getNormalizedData(spectra, options = {}) {\n  if (!spectra || !spectra[0]) return {};\n  let matrix = [];\n  let meta = [];\n  let currentIDs = [];\n\n  for (let spectrum of spectra) {\n    currentIDs.push(spectrum.id);\n    matrix.push(spectrum.normalized.y);\n    meta.push(spectrum.meta);\n  }\n  let x = spectra[0].normalized.x;\n  return { ids: currentIDs, matrix, meta, x };\n}\n\nfunction getFromToIndex(xs, range) {\n  let { from, to } = range;\n  if (from === undefined) {\n    from = xs[0];\n  }\n  if (to === undefined) {\n    to = xs[xs.length - 1];\n  }\n\n  return {\n    fromIndex: mlSpectraProcessing.X.findClosestIndex(xs, from),\n    toIndex: mlSpectraProcessing.X.findClosestIndex(xs, to)\n  };\n}\n\nfunction min(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = mlSpectraProcessing.XY.minYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => mlSpectraProcessing.XY.minYPoint(spectrum.normalized, fromToIndex).y\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(mlSpectraProcessing.X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\nfunction max(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = mlSpectraProcessing.XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => mlSpectraProcessing.XY.maxYPoint(spectrum.normalized, fromToIndex).y\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(mlSpectraProcessing.X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\nfunction minMax(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = {\n    min: mlSpectraProcessing.XY.minYPoint(targetSpectrum.normalized, fromToIndex).y,\n    max: mlSpectraProcessing.XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y\n  };\n\n  let values = spectra.map((spectrum) => {\n    return {\n      min: mlSpectraProcessing.XY.minYPoint(spectrum.normalized, fromToIndex).y,\n      max: mlSpectraProcessing.XY.maxYPoint(spectrum.normalized, fromToIndex).y\n    };\n  });\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    const regression = new SimpleLinearRegression(\n      [targetValue.min, targetValue.max],\n      [values[i].min, values[i].max]\n    );\n\n    let length = spectrum.normalized.y.length;\n    let scaled = new Array(length);\n    for (let j = 0; j < length; j++) {\n      scaled[j] = regression.computeX(spectrum.normalized.y[j]);\n    }\n    matrix.push(scaled);\n  }\n\n  return matrix;\n}\n\nfunction range(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = mlSpectraProcessing.XY.integration(targetSpectrum.normalized, fromToIndex);\n\n  let values = spectra.map((spectrum) =>\n    mlSpectraProcessing.XY.integration(spectrum.normalized, fromToIndex)\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(mlSpectraProcessing.X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\n/**\n *\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n */\n\nfunction getScaledData(spectraProcessor, options = {}) {\n  if (!spectraProcessor.spectra || !spectraProcessor.spectra[0]) return {};\n  const { range: range$1, targetID, relative, method, ids } = options;\n\n  let targetSpectrum =\n    spectraProcessor.getSpectrum(targetID) || spectraProcessor.spectra[0];\n  let spectra = spectraProcessor.getSpectra(ids);\n\n  let result;\n  if (method === '' || method === undefined) {\n    result = getNormalizedData(spectra);\n  } else {\n    let matrix;\n    switch (method.toLowerCase()) {\n      case 'min':\n        matrix = min(spectra, targetSpectrum, range$1);\n        break;\n      case 'max':\n        matrix = max(spectra, targetSpectrum, range$1);\n        break;\n      case 'minmax':\n        matrix = minMax(spectra, targetSpectrum, range$1);\n        break;\n      case 'range':\n        matrix = range(spectra, targetSpectrum, range$1);\n        break;\n      default:\n        throw new Error(`getScaledData: unknown method: ${method}`);\n    }\n    let meta = [];\n    let currentIDs = [];\n    for (let spectrum of spectra) {\n      currentIDs.push(spectrum.id);\n      meta.push(spectrum.meta);\n    }\n    let x = spectra[0].normalized.x;\n    result = { ids: currentIDs, matrix, meta, x };\n  }\n\n  if (relative) {\n    for (let i = 0; i < result.matrix.length; i++) {\n      result.matrix[i] = mlSpectraProcessing.X.subtract(\n        result.matrix[i],\n        targetSpectrum.normalized.y\n      );\n    }\n  }\n\n  return result;\n}\n\nclass SpectraProcessor {\n  /**\n   * Manager a large number of spectra with the possibility to normalize the data\n   * and skip the original data.\n   * It is important to set correctly the options directly because changes\n   * will not be possible if the keepOriginalData is not true\n   * @param {object} [options={}]\n   * @param {boolean} [options.keepOriginalData=False]\n   * @param {object} [options.normalization={}] options to normalize the spectra before comparison\n   * @param {number} [options.normalization.from]\n   * @param {number} [options.normalization.to]\n   * @param {number} [options.normalization.numberOfPoints]\n   * @param {array<object>} [options.normalization.filters]\n   * @param {string} [options.normalization.filters.X.name]\n   * @param {object} [options.normalization.filters.X.options]\n   * @param {array<object>} [options.normalization.exclusions]\n   * @param {string} [options.normalization.exclusions.X.from]\n   * @param {object} [options.normalization.exclusions.X.to]\n   * @param {object} [options.scale={}] scale spectra based on various parameters\n   * @param {string} [options.scale.range=]\n   * @param {string} [options.scale.targetID=spectra[0].id]\n   * @param {string} [options.scale.relative=false]\n   * @param {string} [options.scale.method='max'] min, max, range, minMax\n   */\n  constructor(options = {}) {\n    this.options = options;\n    this.spectra = [];\n  }\n\n  getNormalizationAnnotations() {\n    return getNormalizationAnnotations(this.options.normalization);\n  }\n\n  /**\n   *\n   */\n  setRescale(scale) {\n    this.options.scale = scale;\n  }\n\n  setNormalization(normalization = {}) {\n    checkOriginal(this, 'Can not change normalization filter.');\n    this.options.normalization = normalization;\n    for (let spectrum of this.spectra) {\n      spectrum.updateNormalization(this.options.normalization);\n    }\n  }\n\n  getNormalizedData() {\n    return getNormalizedData(this.spectra);\n  }\n\n  getScaledData(options) {\n    return getScaledData(this, options);\n  }\n\n  /**\n   * Add jcamp\n   * @param {string} jcamp\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromJcamp(jcamp$1, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n\n    let parsed = jcamp(jcamp$1);\n    this.addFromData(parsed.data, options);\n  }\n\n  updateRangesInfo(options) {\n    for (let spectrum of this.spectra) {\n      spectrum.updateRangesInfo(options);\n    }\n  }\n\n  /**\n   *\n   * @param {object} parsed\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @return {Spectrum}\n   */\n\n  addFromData(data, options = {}) {\n    const id = options.id || Math.random(0).toString(36).substring;\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.spectra.length;\n    let spectrum = new Spectrum(data.x, data.y, id, {\n      meta: options.meta,\n      keepOriginalData: this.options.keepOriginalData,\n      normalization: this.options.normalization\n    });\n    this.spectra[index] = spectrum;\n  }\n\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra.splice(index, 1);\n  }\n\n  removeSpectraNotIn(ids) {\n    let currentIDs = this.spectra.map((spectrum) => spectrum.id);\n    for (let id of currentIDs) {\n      if (!ids.includes(id)) {\n        this.removeSpectrum(id);\n      }\n    }\n  }\n\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.spectra.length; i++) {\n      let spectrum = this.spectra[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  getSpectra(ids) {\n    if (!ids || !Array.isArray(ids) || ids.length === 0) return this.spectra;\n    let spectra = [];\n    for (let id of ids) {\n      let index = this.getSpectrumIndex(id);\n      console.log({ index });\n      if (index !== undefined) {\n        spectra.push(this.spectra[index]);\n      }\n    }\n    return spectra;\n  }\n\n  getSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra[index];\n  }\n\n  getChart() {\n    checkOriginal(this, 'Can not getChart but you may try getNormalizedChart.');\n    return getChart(this.spectra);\n  }\n\n  getNormalizedChart(options) {\n    return getNormalizedChart(this.spectra, options);\n  }\n\n  getScaledChart(options) {\n    return getScaledChart(this, options);\n  }\n}\n\nfunction checkOriginal(spectraProcessor, message) {\n  if (\n    !spectraProcessor.options.keepOriginalData &&\n    spectraProcessor.spectra.length > 0\n  ) {\n    throw new Error(\n      `${message} Missing original data. Use the option keepOriginalData=true.`\n    );\n  }\n}\n\nexports.SpectraProcessor = SpectraProcessor;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    var floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    var wantXY = !options.withoutXY;\n\n    var start = Date.now();\n\n    var ntuples = {};\n    var ldr, dataLabel, dataValue, ldrs;\n    var position, endLine, infos;\n\n    var result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    var spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    var spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      dataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (dataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          var xIndex = -1;\n          var yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            var firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1'\n            );\n            var secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1'\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            dataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            dataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (dataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue, result);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (dataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (dataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (dataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (dataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (dataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (dataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (dataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (dataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (dataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (dataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (dataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (dataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (dataLabel === '.OBSERVEFREQUENCY' || dataLabel === '$SFO1') {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (dataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$REFERENCEPOINT') {\n        // OFFSET for Varian spectra\n        // if we activate this part it does not work for ACD specmanager\n        //         } else if (dataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n        //                 var parts = dataValue.split(/ *, */);\n        //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n        //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n      } else if (dataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (dataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        var pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        var unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (dataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(dataLabel)) {\n        spectrum[convertMSFieldToLabel(dataLabel)] = dataValue;\n      } else if (dataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (dataLabel.match(options.keepRecordsRegExp)) {\n        if (result.info[dataLabel]) {\n          if (!Array.isArray(result.info[dataLabel])) {\n            result.info[dataLabel] = [result.info[dataLabel]];\n          }\n          result.info[dataLabel].push(dataValue.trim());\n        } else {\n          result.info[dataLabel] = dataValue.trim();\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      var newNtuples = [];\n      var keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              var data = spectrum.data[j];\n              var newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2)\n              };\n              for (var k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(dataLabel) {\n    return GC_MS_FIELDS.indexOf(dataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    var spectra = result.spectra;\n    var length = spectra.length;\n    var chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length)\n        }\n      }\n    };\n\n    var existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      var label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length)\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      var spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]]\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    var data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice()\n        }\n      }\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      var shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    var l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    var minZ = spectra[0].data[0][0];\n    var maxZ = minZ;\n    var ySize = spectra.length;\n    var xSize = spectra[0].data[0].length / 2;\n    var z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      var xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        var value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs))\n    };\n  }\n\n  function add2D(result, options) {\n    var zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    var noise = zData.noise;\n    var z = zData.z;\n    var povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    var isOver0, isOver1, isOver2, isOver3;\n    var nbSubSpectra = z.length;\n    var nbPovars = z[0].length;\n    var pAx, pAy, pBx, pBy;\n\n    var x0 = zData.minX;\n    var xN = zData.maxX;\n    var dx = (xN - x0) / (nbPovars - 1);\n    var y0 = zData.minY;\n    var yN = zData.maxY;\n    var dy = (yN - y0) / (nbSubSpectra - 1);\n    var minZ = zData.minZ;\n    var maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    var iter = options.nbContourLevels * 2;\n    var contourLevels = new Array(iter);\n    var lineZValue;\n    for (var level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      var contourLevel = {};\n      contourLevels[level] = contourLevel;\n      var side = level % 2;\n      var factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      var lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        var subSpectra = z[iSubSpectra];\n        var subSpectraAfter = z[iSubSpectra + 1];\n        for (var povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    var yFactor = spectrum.yFactor;\n    var deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var currentX = spectrum.firstX;\n    var currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    var endLine = false;\n    var ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    var newLine = true;\n    var isDifference = false;\n    var isLastDifference = false;\n    var lastDifference = 0;\n    var isDuplicate = false;\n    var inComment = false;\n    var currentValue = 0; // can be a difference or a duplicate\n    var lastValue = 0; // must be the real last value\n    var isNegative = false;\n    var inValue = false;\n    var skipFirstValue = false;\n    var decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                var duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (var j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            var ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    var removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    var removeCommentRegExp = /\\$\\$.*/;\n    var peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nvar convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nvar stamps = {};\nvar worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function (resolve) {\n    var stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options\n      })\n    );\n  });\n}\n\nfunction createWorker() {\n  var workerURL = URL.createObjectURL(\n    new Blob(\n      [`var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`],\n      { type: 'application/javascript' }\n    )\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function (event) {\n    var data = JSON.parse(event.data);\n    var stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (var i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: []\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      var finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      var match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        var dataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (dataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nmodule.exports = {\n  convert: JcampConverter,\n  createTree: createTree\n};\n","const isAnyArray = require('is-any-array');\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {object} [points={}]\n */\nexport function check(points = {}) {\n  if (!isAnyArray(points.x) || !isAnyArray(points.y)) {\n    throw new Error('Points must be an object of x and y arrays');\n  }\n  if (points.x.length !== points.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n","/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array} array\n * @param {number} target\n */\n\nexport function findClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n","import { findClosestIndex } from './findClosestIndex';\n\n/**\n * Returns an object with {fromIndex, toIndex} for a specific from / to\n * @param {array} x\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n */\n\nexport function getFromToIndex(x, options = {}) {\n  let { fromIndex, toIndex, from, to } = options;\n\n  if (fromIndex === undefined) {\n    if (from !== undefined) {\n      fromIndex = findClosestIndex(x, from);\n    } else {\n      fromIndex = 0;\n    }\n  }\n  if (toIndex === undefined) {\n    if (to !== undefined) {\n      toIndex = findClosestIndex(x, to);\n    } else {\n      toIndex = x.length - 1;\n    }\n  }\n  return { fromIndex, toIndex };\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Integration value on the specified range\n */\n\nexport function integration(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n  let integration = 0;\n  for (let i = fromIndex; i < toIndex; i++) {\n    integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n  }\n\n  return integration;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Generate a X / Y of the integral\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @param {boolean} [options.reverse=false] - Integrate from the larger value to the smallest value\n * @return {{x:[],y:[]}} A object with the integration function\n */\n\nexport function integral(points = {}, options = {}) {\n  const { reverse = false } = options;\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let integration = 0;\n  let integral;\n  if (reverse) {\n    integral = { x: [x[toIndex]], y: [0] };\n    for (let i = toIndex; i > fromIndex; i--) {\n      integration += ((x[i] - x[i - 1]) * (y[i - 1] + y[i])) / 2;\n      integral.x.push(x[i - 1]);\n      integral.y.push(integration);\n    }\n    integral.x.reverse();\n    integral.y.reverse();\n  } else {\n    integral = { x: [x[fromIndex]], y: [0] };\n    for (let i = fromIndex; i < toIndex; i++) {\n      integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n      integral.x.push(x[i + 1]);\n      integral.y.push(integration);\n    }\n  }\n\n  return integral;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Finds the max value in a zone\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Max y on the specified range\n */\n\nexport function maxY(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let maxY = y[fromIndex];\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > maxY) maxY = y[i];\n  }\n\n  return maxY;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nexport function maxYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nexport function minYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] < current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n","import { findClosestIndex } from '../x/findClosestIndex';\n\n/**\n * Reduce the number of points while keeping the same noise. Practical to\n * display many spectra as SVG\n * @param {array} x\n * @param {array} y\n * @param {object} [options={}]\n * @param {number} [from=x[0]]\n * @param {number} [to=x[x.length-1]]\n * @param {number} [nbPoints=4001] Number of points\n */\n\nexport function reduce(x, y, options = {}) {\n  let { from = x[0], to = x[x.length - 1], nbPoints = 4000 } = options;\n\n  let fromIndex = findClosestIndex(x, from);\n  let toIndex = findClosestIndex(x, to);\n\n  if (fromIndex > 0 && x[fromIndex] > from) fromIndex--;\n  if (toIndex < x.length - 1 && x[toIndex] < to) toIndex++;\n\n  if (toIndex - fromIndex < nbPoints) {\n    return {\n      x: x.slice(fromIndex, toIndex + 1),\n      y: y.slice(fromIndex, toIndex + 1),\n    };\n  }\n\n  let newX = [x[fromIndex]];\n  let newY = [y[fromIndex]];\n  let minY = Number.MAX_VALUE;\n  let maxY = Number.MIN_VALUE;\n  if (nbPoints % 2 === 0) {\n    nbPoints = nbPoints / 2 + 1;\n  } else {\n    nbPoints = (nbPoints - 1) / 2 + 1;\n  }\n\n  let slot = (x[toIndex] - x[fromIndex]) / (nbPoints - 1);\n  let currentX = x[fromIndex] + slot;\n  let first = true;\n  for (let i = fromIndex + 1; i <= toIndex; i++) {\n    if (first) {\n      minY = y[i];\n      maxY = y[i];\n      first = false;\n    } else {\n      if (y[i] < minY) minY = y[i];\n      if (y[i] > maxY) maxY = y[i];\n    }\n\n    if (x[i] >= currentX || i === toIndex) {\n      newX.push(currentX - slot / 2);\n      newY.push(minY);\n      newX.push(currentX);\n      newY.push(maxY);\n      currentX += slot;\n      first = true;\n    }\n  }\n\n  // we will need to make some kind of min / max because there are too many points\n  // we will always keep the first point and the last point\n\n  return { x: newX, y: newY };\n}\n","/**\n * Sort object of array, x has to be monotone.\n * @param {object} data Object of kind {x:[], re:[], im:[]}.\n * @return {SD}\n */\n\nexport function sortX(data) {\n  const { x, y } = data;\n\n  if (x.length !== y.length) {\n    throw TypeError('sortX: length of x and y must be identical');\n  }\n\n  if (x.length < 2 || x[0] < x[1]) return data;\n\n  return {\n    x: x.slice(0).reverse(),\n    y: y.slice(0).reverse(),\n  };\n}\n","import { check } from './check';\nimport { integration } from './integration';\nimport { integral } from './integral';\nimport { maxY } from './maxY';\nimport { maxYPoint } from './maxYPoint';\nimport { minYPoint } from './minYPoint';\nimport { reduce } from './reduce';\nimport { sortX } from './sortX';\n\n\nexport const XY = {\n  check,\n  integral,\n  integration,\n  maxY,\n  maxYPoint,\n  minYPoint,\n  reduce,\n  sortX,\n};\n","/**\n * This function make a zero filling to re and im part.\n * @param {object} data Object of kind {x:[], re:[], im:[]}.\n * @param {number} zeroFilling - final number of points\n * @return {SD}\n */\nexport function zeroFilling(data, zeroFilling) {\n  let length = data.x.length;\n  if (zeroFilling === 0 || length === zeroFilling) return data;\n\n  if (length > zeroFilling) {\n    return {\n      x: data.x.slice(0, zeroFilling),\n      re: data.re.slice(0, zeroFilling),\n      im: data.im.slice(0, zeroFilling)\n    };\n  }\n\n  const x = data.x;\n  const re = data.re;\n  const im = data.im;\n\n  const newX = new Float64Array(zeroFilling);\n  const newRE = new Float64Array(zeroFilling);\n  const newIM = new Float64Array(zeroFilling);\n\n  for (let i = 0; i < length; i++) {\n    newX[i] = x[i];\n    newRE[i] = re[i];\n    newIM[i] = im[i];\n  }\n  const deltaX = (x[x.length - 1] - x[0]) / (length - 1);\n  for (let i = length; i < zeroFilling; i++) {\n    newX[i] = newX[i - 1] + deltaX;\n  }\n\n  return {\n    x: newX,\n    re: newRE,\n    im: newIM\n  };\n}\n\n","/**\n * Sort object of array, x has to be monotone.\n * @param {object} data Object of kind {x:[], re:[], im:[]}.\n * @return {SD}\n */\n\nexport function sortX(data) {\n  const { x, re, im } = data;\n\n  if (x.length !== re.length || x.length !== im.length) {\n    throw TypeError('sortX: length of x, re and im must be identical');\n  }\n\n  if (x.length < 2 || x[0] < x[1]) return data;\n\n  return {\n    x: x.slice(0).reverse(),\n    re: re.slice(0).reverse(),\n    im: im.slice(0).reverse(),\n  };\n}\n","import { zeroFilling } from './zeroFilling';\nimport { sortX } from './sortX';\n\nexport const XReIm = {\n  zeroFilling,\n  sortX,\n};\n","/**\n * Calculate absolute value of a spectrum\n * @param {object} reim - An object of kind {re:[], im:[]}\n * @return {Float64Array}\n */\nexport function absolute(data) {\n  const length = data.re.length;\n  const re = data.re;\n  const im = data.im;\n  const newArray = new Float64Array(length);\n  for (let i = 0; i < length; i++) {\n    newArray[i] = Math.sqrt(re[i] ** 2 + im[i] ** 2);\n  }\n\n  return newArray;\n}\n","/**\n * Phase correction filter\n * @param {object} reim - An object of kind {re:[], im:[]}\n * @param {number} [phi0 = 0] - value\n * @param {number} [phi1 = 0] - value\n * @return {object} returns a new object {re:[], im:[]}\n */\nexport function phaseCorrection(data, phi0, phi1) {\n  phi0 = Number.isFinite(phi0) ? phi0 : 0;\n  phi1 = Number.isFinite(phi1) ? phi1 : 0;\n\n  const re = data.re.slice(0);\n  const im = data.im.slice(0);\n  const length = data.re.length;\n\n  const delta = phi1 / length;\n  const alpha = 2 * Math.pow(Math.sin(delta / 2), 2);\n  const beta = Math.sin(delta);\n  let cosTheta = Math.cos(phi0);\n  let sinTheta = Math.sin(phi0);\n\n  const newRe = new Float64Array(length);\n  const newIm = new Float64Array(length);\n  for (let i = 0; i < length; i++) {\n    newRe[i] = re[i] * cosTheta - im[i] * sinTheta;\n    newIm[i] = re[i] * sinTheta + im[i] * cosTheta;\n    // calculate angles i+1 from i\n    cosTheta = cosTheta - (alpha * cosTheta + beta * sinTheta);\n    sinTheta = sinTheta - (alpha * sinTheta - beta * cosTheta);\n  }\n\n  return { re: newRe, im: newIm };\n}\n","import { absolute } from './absolute';\nimport { phaseCorrection } from './phaseCorrection';\n\nexport const ReIm = {\n  absolute,\n  phaseCorrection,\n};\n","/**\n * This function performs a circular shift to a new array\n * Positive values of shifts will shift to the right and negative values will do to the left\n * @example rotate([1,2,3,4],1) -> [4,1,2,3]\n * @example rotate([1,2,3,4],-1) -> [2,3,4,1]\n * @param {Array} array - the array that will be rotated\n * @param {number} shift\n * @return {Array}\n */\nexport function rotate(array, shift) {\n  shift = shift % array.length;\n  if (shift < 0) shift += array.length;\n  return array.slice(array.length - shift).concat(array.slice(0, array.length - shift));\n}\n\n","/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function subtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n\n","/**\n\n/**\n * This function add the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function add(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n\n","/**\n\n/**\n * This function multiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function multiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n\n","/**\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function divide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n\n","import { findClosestIndex } from './findClosestIndex';\nimport { rotate } from './rotate';\nimport { subtract } from './subtract';\nimport { add } from './add';\nimport { multiply } from './multiply';\nimport { divide } from './divide';\n\nexport const X = {\n  findClosestIndex,\n  rotate,\n  subtract,\n  add,\n  multiply,\n  divide\n};\n","export { XY } from './xy/index.js';\nexport { XReIm } from './xreim/index.js';\nexport { ReIm } from './reim/index.js';\nexport { X } from './x/index.js';\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n\n  var output = new Array(numberOfPoints);\n\n  var initialOriginalStep = x[1] - x[0];\n  var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  var min = from - halfStep;\n  var max = from + halfStep;\n\n  var previousX = Number.MIN_VALUE;\n  var previousY = 0;\n  var nextX = x[0] - initialOriginalStep;\n  var nextY = 0;\n\n  var currentValue = 0;\n  var slope = 0;\n  var intercept = 0;\n  var sumAtMin = 0;\n  var sumAtMax = 0;\n\n  var i = 0; // index of input\n  var j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      var add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n  var lastStep = x[x.length - 1] - x[x.length - 2];\n\n  var start = from - halfStep;\n  var output = new Array(numberOfPoints);\n\n  // Init main variables\n  var min = start;\n  var max = start + step;\n\n  var previousX = -Number.MAX_VALUE;\n  var previousY = 0;\n  var nextX = x[0];\n  var nextY = y[0];\n  var frontOutsideSpectra = 0;\n  var backOutsideSpectra = true;\n\n  var currentValue = 0;\n\n  // for slot algorithm\n  var currentPoints = 0;\n\n  var i = 1; // index of input\n  var j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","export default function getZones(from, to, numberOfPoints, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to, numberOfPoints }];\n  }\n\n  // need to deal with overlapping exclusions and out of bound exclusions\n\n  let toRemove = exclusions.reduce(\n    (previous, exclusion) => (previous += exclusion.to - exclusion.from),\n    0\n  );\n  let total = to - from;\n  let unitsPerPoint = (total - toRemove) / numberOfPoints;\n  let zones = [];\n  let currentFrom = from;\n  let totalPoints = 0;\n  for (let exclusion of exclusions) {\n    let currentNbPoints = Math.round(\n      (exclusion.from - currentFrom) / unitsPerPoint\n    );\n    totalPoints += currentNbPoints;\n    if (currentNbPoints > 0) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n        numberOfPoints: currentNbPoints\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (numberOfPoints - totalPoints > 0) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n      numberOfPoints: numberOfPoints - totalPoints\n    });\n  }\n\n  return zones;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\nimport getZones from './getZones';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = []\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  let zones = getZones(from, to, numberOfPoints, exclusions);\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse\n    );\n    xResult.push(...zoneResult.x);\n    yResult.push(...zoneResult.y);\n  }\n\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  var output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints\n    }),\n    y: output\n  };\n}\n","export { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\n\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (Array.isArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n)\n    };\n  }\n}\n","export default function checkArraySize(x, y) {\n  if (!Array.isArray(x) || !Array.isArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\n\nexport default class SimpleLinearRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = [y.intercept, y.slope];\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'simpleLinearRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(x) {\n    return this.slope * x + this.intercept;\n  }\n\n  computeX(y) {\n    return (y - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    let result = 'f(x) = ';\n    if (this.slope !== 0) {\n      const xFactor = maybeToPrecision(this.slope, precision);\n      result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\n      if (this.intercept !== 0) {\n        const absIntercept = Math.abs(this.intercept);\n        const operator = absIntercept === this.intercept ? '+' : '-';\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'simpleLinearRegression') {\n      throw new TypeError('not a SLR model');\n    }\n    return new SimpleLinearRegression(true, json);\n  }\n}\n\nfunction regress(slr, x, y) {\n  const n = x.length;\n  let xSum = 0;\n  let ySum = 0;\n\n  let xSquared = 0;\n  let xY = 0;\n\n  for (let i = 0; i < n; i++) {\n    xSum += x[i];\n    ySum += y[i];\n    xSquared += x[i] * x[i];\n    xY += x[i] * y[i];\n  }\n\n  const numerator = n * xY - xSum * ySum;\n  slr.slope = numerator / (n * xSquared - xSum * xSum);\n  slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n  slr.coefficients = [slr.intercept, slr.slope];\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n"],"sourceRoot":""}