{"version":3,"sources":["webpack://SpectraProcessor/webpack/universalModuleDefinition","webpack://SpectraProcessor/webpack/bootstrap","webpack://SpectraProcessor/./node_modules/is-any-array/src/index.js","webpack://SpectraProcessor/./node_modules/ml-array-max/lib-es6/index.js","webpack://SpectraProcessor/./lib/index.js","webpack://SpectraProcessor//usr/lib/node_modules/cheminfo-tools/node_modules/process/browser.js","webpack://SpectraProcessor/./node_modules/ml-stat/array.js","webpack://SpectraProcessor/./node_modules/jcampconverter/src/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/check.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/findClosestIndex.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/getFromToIndex.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/integration.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/integral.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/maxY.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/maxYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/minYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/reduce.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/sortX.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/minClosestYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/maxClosestYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/getTargetIndex.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/realMinYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/realMaxYPoint.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xy/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xreim/zeroFilling.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xreim/sortX.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/xreim/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/reim/absolute.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/reim/phaseCorrection.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/reim/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/add.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/boxPlot.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/divide.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/multiply.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/rotate.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/subtract.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/x/index.js","webpack://SpectraProcessor/./node_modules/ml-spectra-processing/src/index.js","webpack://SpectraProcessor/./node_modules/ml-array-sequential-fill/lib-es6/index.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/integral.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/getZones.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-equally-spaced/src/index.js","webpack://SpectraProcessor/./node_modules/ml-regression-base/src/index.js","webpack://SpectraProcessor/./node_modules/ml-regression-base/src/checkArrayLength.js","webpack://SpectraProcessor/./node_modules/ml-regression-base/src/maybeToPrecision.js","webpack://SpectraProcessor/./node_modules/ml-regression-simple-linear/src/index.js","webpack://SpectraProcessor/./node_modules/ml-array-min/lib-es6/index.js","webpack://SpectraProcessor/./node_modules/ml-array-rescale/lib-es6/index.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-filter-x/src/getZones.js","webpack://SpectraProcessor/./node_modules/ml-array-xy-filter-x/src/index.js","webpack://SpectraProcessor/./node_modules/ml-array-sum/lib-es6/index.js","webpack://SpectraProcessor/./node_modules/ml-array-normed/lib-es6/index.js"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","module","exports","max","input","isArray","TypeError","length","maxValue","i","defineProperty","value","_interopDefault","ex","Stat","require","Stat__default","filterX","equallySpaced","normed","rescale","mlSpectraProcessing","jcampconverter","SimpleLinearRegression","getData","spectrum","filter","data","x","y","getNormalized","options","Array","Error","from","to","numberOfPoints","filters","exclusions","slice","name","mean","meanFct","map","std","standardDeviation","stdFct","undefined","process","kind","result","updateRangesInfo","ranges","range","JSON","parse","stringify","label","fromToIndex","fromIndex","X","findClosestIndex","normalized","toIndex","integration","XY","maxPoint","maxYPoint","Spectrum","constructor","id","meta","normalization","reverse","normalizedBoundary","min","updateNormalizedBoundary","updateNormalization","updateMemory","original","memory","total","removeOriginal","getXY","minMax","getJcampKind","datatype","spectra","dataType","toLowerCase","yUnit","match","IR_ABSORBANCE","IR_TRANSMITTANCE","importation","converter","transmittance","Math","log10","display","xLabel","xInverted","yLabel","jcamp","parsed","convert","xy","keepRecordsRegExp","info","text","lines","split","fs","matrix","ids","headers","labels","header","isNaN","Number","line","parts","push","oneMeta","j","getNormalizationAnnotations","boundary","annotations","exclusion","ignore","annotation","type","position","strokeWidth","fillColor","getBoxPlotData","nbRow","nbColumn","aColumn","Float64Array","column","row","boxPlot","key","getBoxPlotAnnotations","q13FillColor","q13FillOpacity","q2StrokeColor","q2StrokeWidth","minMaxFillColor","minMaxFillOpacity","q13","Q1","Q3","layer","properties","fillOpacity","q2","Q2","strokeColor","addChartDataStyle","styles","unselected","lineColor","color","lineWidth","lineStyle","selected","getChart","chart","includes","getNormalizedChart","getScaledChart","spectraProcessor","scaled","getScaledData","getNormalizedData","currentIDs","getNormalizedText","rs","allKeysObject","metum","keys","allKeys","join","getFromToIndex","xs","targetSpectrum","targetValue","minYPoint","values","factor","multiply","regression","computeX","range$1","targetID","relative","method","getSpectrum","getSpectra","subtract","SpectraProcessor","maxMemory","keepOriginal","boundaries","minX","MAX_VALUE","maxX","MIN_VALUE","minY","maxY","getNormalizedBoundary","setNormalization","getNormalization","addFromJcamp","jcamp$1","force","contains","addFromData","random","substring","index","getSpectrumIndex","memoryInfo","getMemoryInfo","removeOriginals","removeSpectrum","splice","removeSpectraNotIn","forEach","fromNormalizedText","text$1","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","nextTick","args","arguments","Item","array","apply","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","compareNumbers","a","b","sum","l","arithmeticMean","geometricMean","mul","pow","logMean","lnsum","log","grandMean","means","samples","n","truncatedMean","percent","alreadySorted","sort","k","floor","harmonicMean","RangeError","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","theVariance","sqrt","standardError","robustMeanAndStdev","stdev","averageDeviations","abs","quartiles","quart","q1","ceil","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","indexOf","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","g","kurtosis","s4","m4","v","c","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","standardize","standardDev","cumulativeSum","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","defaultOptions","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","assign","wantXY","start","Date","now","ntuples","ldr","dataLabel","dataValue","ldrs","endLine","infos","logs","action","time","replace","trim","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","first","firstX","firstY","last","lastX","lastY","vardim","nbPoints","xFactor","yFactor","units","xUnit","datatable","deltaX","prepareSpectrum","fastParseXYData","parsePeakTable","parseXYA","twoD","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","isMSField","convertMSFieldToLabel","sampleDescription","newNtuples","add2D","newData","complexChromatogram","simpleChromatogram","times","series","ms","dimension","existingGCMSFields","intensity","shift","getMedian","convertTo3DZ","minZ","maxZ","ySize","xSize","xVector","noise","zData","contourLines","generateContourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","x0","xN","dx","y0","yN","dy","iter","contourLevels","lineZValue","level","contourLevel","side","exp","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","isXYdata","currentData","currentX","currentY","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeSymbolRegExp","isXYAdata","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","JcampConverter","useWorker","postToWorker","stamps","worker","createWorker","Promise","resolve","stamp","postMessage","workerURL","URL","createObjectURL","Blob","Worker","revokeObjectURL","addEventListener","event","output","createTree","flatten","flat","stack","current","ntupleLevel","spaces","labelLine","startsWith","children","finished","pop","entry","check","points","target","low","high","middle","integral","reduce","newX","newY","slot","sortX","minClosestYPoint","targetIndex","previousIndex","MIN_SAFE_INTEGER","currentIndex","maxClosestYPoint","getTargetIndex","realMinYPoint","alpha","beta","gamma","p","realMaxYPoint","zeroFilling","re","im","newRE","newIM","XReIm","absolute","newArray","phaseCorrection","phi0","phi1","isFinite","delta","sin","cosTheta","cos","sinTheta","newRe","newIm","ReIm","add","array1","array2","isConstant","constant","array3","q1max","q3min","middleOver","divide","rotate","_typeof","obj","Symbol","iterator","sequentialFill","_options","_options$from","_options$to","_options$size","size","step","_i","x1","slope","intercept","equallySpacedSmooth","xLength","halfStep","initialOriginalStep","lastOriginalStep","previousX","previousY","nextX","nextY","sumAtMin","sumAtMax","getSlope","y1","main","equallySpacedSlot","lastStep","frontOutsideSpectra","backOutsideSpectra","currentPoints","getZones","toRemove","previous","unitsPerPoint","zones","currentFrom","totalPoints","currentNbPoints","round","arrayXY","variant","xResult","yResult","zone","zoneResult","processZone","BaseRegression","new","predict","_predict","train","toLaTeX","score","y2","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","r","checkArraySize","maybeToPrecision","digits","toPrecision","coefficients","checkArrayLength","regress","toJSON","precision","absIntercept","operator","load","json","slr","numerator","minValue","currentMin","currentMax","_options$min","autoMinMax","_options$max","currentZoneIndex","sumValue","norm","_options$algorithm","algorithm","absoluteSumValue","absoluteSum","element"],"mappings":"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","file":"spectra-processor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SpectraProcessor\"] = factory();\n\telse\n\t\troot[\"SpectraProcessor\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stat = require('ml-stat/array');\nvar Stat__default = _interopDefault(Stat);\nvar filterX = _interopDefault(require('ml-array-xy-filter-x'));\nvar equallySpaced = _interopDefault(require('ml-array-xy-equally-spaced'));\nvar normed = _interopDefault(require('ml-array-normed'));\nvar rescale = _interopDefault(require('ml-array-rescale'));\nvar mlSpectraProcessing = require('ml-spectra-processing');\nvar jcampconverter = require('jcampconverter');\nvar SimpleLinearRegression = _interopDefault(require('ml-regression-simple-linear'));\n\n/**\n *\n * @private\n * @param {Spectrum} spectrum\n * @param {object} [filter={}]\n * @param {array} [filter.from]\n * @param {array} [filter.to]\n * @param {array} [filter.exclusions=[]]\n */\n\nfunction getData(spectrum, filter = {}) {\n  let data = { x: spectrum.x, y: spectrum.y };\n\n  if (filter) {\n    data = filterX({ x: spectrum.x, y: spectrum.y }, filter);\n  }\n  return data;\n}\n\n/**\n *\n * @private\n * @param {*} spectrum\n * @param {*} options\n */\nfunction getNormalized(spectrum, options = {}) {\n  if (!Array.isArray(spectrum.x) || !Array.isArray(spectrum.y)) {\n    throw new Error(\n      'getNormalized: Can not get normalized data, missing original data.'\n    );\n  }\n\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints = 1024,\n    filters = [],\n    exclusions = []\n  } = options;\n\n  let y = spectrum.y.slice(0);\n\n  for (let filter of filters) {\n    switch (filter.name) {\n      case 'centerMean': {\n        let mean = Stat__default.mean(spectrum.y);\n        let meanFct = (y) => y - mean;\n        y = y.map(meanFct);\n        break;\n      }\n      case 'scaleSD': {\n        let std = Stat__default.standardDeviation(spectrum.y);\n        let stdFct = (y) => y / std;\n        y = y.map(stdFct);\n        break;\n      }\n      case 'normalize': {\n        y = normed(y);\n        break;\n      }\n      case 'rescale': {\n        y = rescale(y);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n  let result = equallySpaced(\n    { x: spectrum.x, y },\n    { from, to, numberOfPoints, exclusions }\n  );\n  return result;\n}\n\n/**\n *  @private\n * @param {*} spectrum\n * @param {*} ranges\n */\nfunction updateRangesInfo(spectrum, ranges = []) {\n  spectrum.ranges = {};\n  for (let range of ranges) {\n    range = JSON.parse(JSON.stringify(range));\n    spectrum.ranges[range.label] = range;\n    let fromToIndex = {\n      fromIndex: mlSpectraProcessing.X.findClosestIndex(spectrum.normalized.x, range.from),\n      toIndex: mlSpectraProcessing.X.findClosestIndex(spectrum.normalized.x, range.to)\n    };\n    range.integration = mlSpectraProcessing.XY.integration(spectrum.normalized, fromToIndex);\n    range.maxPoint = mlSpectraProcessing.XY.maxYPoint(spectrum.normalized, fromToIndex);\n  }\n}\n\n/**\n * Class allowing manipulate one IR spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.x=[]] - x values\n * @param {Array} [json.y=[]] - y values\n */\nclass Spectrum {\n  /**\n   *\n   * @param {array} x\n   * @param {array} y\n   * @param {string} id\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.normalization]\n   * @param {object} [options.normalized]\n   */\n  constructor(x, y, id, options = {}) {\n    const { meta = {}, normalization = {}, normalized } = options;\n\n    if (x && x.length > 1 && x[0] > x[1]) {\n      this.x = x.reverse();\n      this.y = y.reverse();\n    } else {\n      this.x = x || [];\n      this.y = y || [];\n    }\n    this.id = id;\n    this.meta = meta;\n    this.normalizedBoundary = { x: { min: 0, max: 0 }, y: { min: 0, max: 0 } };\n    if (normalized) {\n      this.normalized = normalized;\n      this.updateNormalizedBoundary();\n    } else {\n      this.updateNormalization(normalization);\n    }\n\n    this.updateMemory();\n  }\n\n  updateMemory() {\n    let original = ((this.x && this.x.length) || 0) * 16;\n    let normalized = this.normalized.x.length * 16;\n    this.memory = { original, normalized, total: original + normalized };\n  }\n\n  removeOriginal() {\n    this.x = undefined;\n    this.y = undefined;\n    this.updateMemory();\n  }\n\n  getXY() {\n    if (!Array.isArray(this.x) || !Array.isArray(this.y)) {\n      throw new Error('Can not get normalized data');\n    }\n    return { x: this.x, y: this.y };\n  }\n}\n\nSpectrum.prototype.getData = function (options) {\n  return getData(this, options);\n};\n\nSpectrum.prototype.updateNormalization = function (normalization) {\n  this.normalized = getNormalized(this, normalization);\n  this.ranges = {};\n  this.updateMemory();\n  this.updateNormalizedBoundary();\n};\n\nSpectrum.prototype.updateRangesInfo = function (ranges) {\n  updateRangesInfo(this, ranges);\n};\n\nSpectrum.prototype.updateNormalizedBoundary = function () {\n  this.normalizedBoundary.x = {\n    min: this.normalized.x[0],\n    max: this.normalized.x[this.normalized.x.length - 1]\n  };\n  this.normalizedBoundary.y = Stat.minMax(this.normalized.y);\n};\n\nfunction getJcampKind(data) {\n  let datatype = data.spectra[0].dataType.toLowerCase();\n  let yUnit = data.spectra[0].yUnit.toLowerCase();\n\n  if (datatype.match(/infrared/)) {\n    if (yUnit.match(/absorbance/)) {\n      return IR_ABSORBANCE;\n    } else {\n      return IR_TRANSMITTANCE;\n    }\n  }\n  return undefined;\n}\n\nconst IR_TRANSMITTANCE = {\n  normalization: {},\n  importation: {\n    converter: (transmittance) => -Math.log10(transmittance)\n  },\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance'\n  }\n};\n\nconst IR_ABSORBANCE = {\n  normalization: {},\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance'\n  }\n};\n\n/**\n * Create a spectrum from a jcamp\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nfunction jcamp(jcamp) {\n  const parsed = jcampconverter.convert(jcamp, { xy: true, keepRecordsRegExp: /TITLE/ });\n  const kind = getJcampKind(parsed);\n  const data = parsed.spectra[0].data[0];\n  const meta = parsed.info;\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data, kind, meta };\n}\n\n/**\n * Creates a g\n * @param {string} text - String containing the JCAMP data\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] Field separator\n * @return {object} - {matrix, data, x, ids}\n */\nfunction text(text, options = {}) {\n  const lines = text.split(/[\\r\\n]+/).filter((value) => value);\n  const { fs = '\\t' } = options;\n  let matrix = [];\n  let ids = [];\n  let meta = [];\n  let x = [];\n\n  let headers = lines[0].split(fs);\n  let labels = [];\n\n  for (let i = 0; i < headers.length; i++) {\n    let header = headers[i];\n    if (isNaN(header)) {\n      labels[i] = header;\n    } else {\n      x = headers.slice(i).map((value) => Number(value));\n      break;\n    }\n  }\n\n  for (let i = 1; i < lines.length; i++) {\n    let line = lines[i];\n    let parts = line.split('\\t');\n    ids.push(parts[0]);\n    let oneMeta = {};\n    meta.push(oneMeta);\n    for (let j = 1; j < parts.length; j++) {\n      if (j < labels.length) {\n        oneMeta[labels[j]] = parts[j];\n      } else {\n        matrix.push(parts.slice(labels.length).map((value) => Number(value)));\n        break;\n      }\n    }\n  }\n  return { x, meta, matrix, ids };\n}\n\nfunction getNormalizationAnnotations(filter = {}, boundary) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    var annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max }\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: 0, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max }\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: 10000, y: boundary.y.max }\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    });\n  }\n  return annotations;\n}\n\n/**\n * @private\n * @param {*} spectra\n */\n\nfunction getBoxPlotData(spectra) {\n  let matrix = [];\n  let x = spectra[0].normalized.x;\n  for (let spectrum of spectra) {\n    matrix.push(spectrum.normalized.y);\n  }\n\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let result;\n  let aColumn = new Float64Array(nbRow);\n  for (let column = 0; column < nbColumn; column++) {\n    for (let row = 0; row < nbRow; row++) {\n      aColumn[row] = matrix[row][column];\n    }\n    let info = mlSpectraProcessing.X.boxPlot(aColumn);\n    if (!result) {\n      result = { x };\n      for (let key in info) {\n        result[key] = [];\n      }\n    }\n    for (let key in info) {\n      result[key].push(info[key]);\n    }\n  }\n  return result;\n}\n\nfunction getBoxPlotAnnotations(spectra, options = {}) {\n  const {\n    q13FillColor = '#000',\n    q13FillOpacity = 0.3,\n    q2StrokeColor = '#000',\n    q2StrokeWidth = 3,\n    minMaxFillColor = '#000',\n    minMaxFillOpacity = 0.15\n  } = options;\n  let annotations = [];\n\n  let data = getBoxPlotData(spectra);\n  if (q13FillOpacity && q13FillColor) {\n    let q13 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q1[i]\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q3[i]\n      });\n    }\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: q13FillColor,\n        fillOpacity: q13FillOpacity,\n        strokeWidth: 0.0000001,\n        position: q13\n      }\n    });\n  }\n\n  if (q2StrokeColor && q2StrokeWidth) {\n    let q2 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i]\n      });\n    }\n    // Temp code because polyline is not working\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i]\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        strokeWidth: q2StrokeWidth,\n        strokeColor: q2StrokeColor,\n        position: q2\n      }\n    });\n  }\n\n  if (minMaxFillColor && minMaxFillOpacity) {\n    let minMax = [];\n    for (let i = 0; i < data.x.length; i++) {\n      minMax.push({\n        x: data.x[i],\n        y: data.min[i]\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      minMax.push({\n        x: data.x[i],\n        y: data.max[i]\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: minMaxFillColor,\n        fillOpacity: minMaxFillOpacity,\n        strokeWidth: 0.0000001,\n        strokeColor: '#FFF',\n        position: minMax\n      }\n    });\n  }\n\n  return annotations;\n}\n\nfunction addChartDataStyle(data, spectrum) {\n  data.styles = {\n    unselected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 1,\n      lineStyle: 1\n    },\n    selected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 3,\n      lineStyle: 1\n    }\n  };\n  data.label = spectrum.meta.id || spectrum.id;\n}\n\n/**\n * Retrieve a chart with selected original data\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by default all\n * @param {Array} [options.maxDataPoints=]\n */\nfunction getChart(spectra, options = {}) {\n  const { ids } = options;\n  let chart = {\n    data: []\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.getData();\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n\nfunction getNormalizedChart(spectra, options = {}) {\n  const { ids } = options;\n  let chart = {\n    data: []\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.normalized;\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n\n/**\n *\n * @param {SpectraProcessor} spectraProcessor\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n */\nfunction getScaledChart(spectraProcessor, options = {}) {\n  let scaled = spectraProcessor.getScaledData(options);\n\n  let chart = {\n    data: []\n  };\n\n  for (let i = 0; i < scaled.matrix.length; i++) {\n    let data = {\n      x: scaled.x,\n      y: scaled.matrix[i]\n    };\n    addChartDataStyle(data, { meta: scaled.meta[i], id: scaled.ids[i] });\n    chart.data.push(data);\n  }\n\n  return chart;\n}\n\n/**\n * @private\n * @param {*} spectra\n * @param {*} options\n */\n\nfunction getNormalizedData(spectra) {\n  if (!spectra || !spectra[0]) return {};\n  let matrix = [];\n  let meta = [];\n  let currentIDs = [];\n\n  for (let spectrum of spectra) {\n    currentIDs.push(spectrum.id);\n    matrix.push(spectrum.normalized.y);\n    meta.push(spectrum.meta);\n  }\n  let x = spectra[0].normalized.x;\n  return { ids: currentIDs, matrix, meta, x };\n}\n\n/**\n * @private\n * @param {*} spectra\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] field separator\n * @param {string} [options.rs='\\n'] record (line) separator\n */\n\nfunction getNormalizedText(spectra, options = {}) {\n  let { fs = '\\t', rs = '\\n' } = options;\n  let { matrix, meta, ids, x } = getNormalizedData(spectra);\n  let allKeysObject = {};\n  for (let metum of meta) {\n    for (let key of Object.keys(metum)) {\n      let type = typeof metum[key];\n      if (type === 'number' || type === 'string' || type === 'boolean') {\n        allKeysObject[key] = true;\n      }\n    }\n  }\n  let allKeys = Object.keys(allKeysObject);\n\n  let lines = [];\n  let line = [];\n  line.push('id', ...allKeys, ...x);\n  lines.push(line.join(fs));\n\n  for (let i = 0; i < ids.length; i++) {\n    line = [];\n    line.push(ids[i]);\n    for (let key of allKeys) {\n      line.push(meta[i][key]);\n    }\n    line.push(...matrix[i]);\n    lines.push(line.join(fs));\n  }\n\n  return lines.join(rs);\n}\n\nfunction getFromToIndex(xs, range) {\n  let { from, to } = range;\n  if (from === undefined) {\n    from = xs[0];\n  }\n  if (to === undefined) {\n    to = xs[xs.length - 1];\n  }\n\n  return {\n    fromIndex: mlSpectraProcessing.X.findClosestIndex(xs, from),\n    toIndex: mlSpectraProcessing.X.findClosestIndex(xs, to)\n  };\n}\n\nfunction min(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = mlSpectraProcessing.XY.minYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => mlSpectraProcessing.XY.minYPoint(spectrum.normalized, fromToIndex).y\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(mlSpectraProcessing.X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\nfunction max(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = mlSpectraProcessing.XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => mlSpectraProcessing.XY.maxYPoint(spectrum.normalized, fromToIndex).y\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(mlSpectraProcessing.X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\nfunction minMax(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = {\n    min: mlSpectraProcessing.XY.minYPoint(targetSpectrum.normalized, fromToIndex).y,\n    max: mlSpectraProcessing.XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y\n  };\n\n  let values = spectra.map((spectrum) => {\n    return {\n      min: mlSpectraProcessing.XY.minYPoint(spectrum.normalized, fromToIndex).y,\n      max: mlSpectraProcessing.XY.maxYPoint(spectrum.normalized, fromToIndex).y\n    };\n  });\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    const regression = new SimpleLinearRegression(\n      [targetValue.min, targetValue.max],\n      [values[i].min, values[i].max]\n    );\n\n    let length = spectrum.normalized.y.length;\n    let scaled = new Array(length);\n    for (let j = 0; j < length; j++) {\n      scaled[j] = regression.computeX(spectrum.normalized.y[j]);\n    }\n    matrix.push(scaled);\n  }\n\n  return matrix;\n}\n\nfunction range(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = mlSpectraProcessing.XY.integration(targetSpectrum.normalized, fromToIndex);\n\n  let values = spectra.map((spectrum) =>\n    mlSpectraProcessing.XY.integration(spectrum.normalized, fromToIndex)\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(mlSpectraProcessing.X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\n/**\n * @private\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n */\n\nfunction getScaledData(spectraProcessor, options = {}) {\n  if (!spectraProcessor.spectra || !spectraProcessor.spectra[0]) return {};\n  const { range: range$1, targetID, relative, method, ids } = options;\n\n  let targetSpectrum =\n    spectraProcessor.getSpectrum(targetID) || spectraProcessor.spectra[0];\n  let spectra = spectraProcessor.getSpectra(ids);\n\n  let result;\n  if (method === '' || method === undefined) {\n    result = getNormalizedData(spectra);\n  } else {\n    let matrix;\n    switch (method.toLowerCase()) {\n      case 'min':\n        matrix = min(spectra, targetSpectrum, range$1);\n        break;\n      case 'max':\n        matrix = max(spectra, targetSpectrum, range$1);\n        break;\n      case 'minmax':\n        matrix = minMax(spectra, targetSpectrum, range$1);\n        break;\n      case 'range':\n        matrix = range(spectra, targetSpectrum, range$1);\n        break;\n      default:\n        throw new Error(`getScaledData: unknown method: ${method}`);\n    }\n    let meta = [];\n    let currentIDs = [];\n    for (let spectrum of spectra) {\n      currentIDs.push(spectrum.id);\n      meta.push(spectrum.meta);\n    }\n    let x = spectra[0].normalized.x;\n    result = { ids: currentIDs, matrix, meta, x };\n  }\n\n  if (relative) {\n    for (let i = 0; i < result.matrix.length; i++) {\n      result.matrix[i] = mlSpectraProcessing.X.subtract(\n        result.matrix[i],\n        targetSpectrum.normalized.y\n      );\n    }\n  }\n\n  return result;\n}\n\nclass SpectraProcessor {\n  /**\n   * Manager a large number of spectra with the possibility to normalize the data\n   * and skip the original data.\n   * @param {object} [options={}]\n   * @param {boolean} [options.maxMemory=64M]\n   * @param {object} [options.normalization={}] options to normalize the spectra before comparison\n   * @param {number} [options.normalization.from]\n   * @param {number} [options.normalization.to]\n   * @param {number} [options.normalization.numberOfPoints]\n   * @param {array<object>} [options.normalization.filters]\n   * @param {string} [options.normalization.filters.X.name]\n   * @param {object} [options.normalization.filters.X.options]\n   * @param {array<object>} [options.normalization.exclusions]\n   * @param {string} [options.normalization.exclusions.X.from]\n   * @param {object} [options.normalization.exclusions.X.to]\n   */\n  constructor(options = {}) {\n    this.normalization = options.normalization;\n    this.maxMemory = options.maxMemory || 64 * 1024 * 1024;\n    this.keepOriginal = true;\n    this.spectra = [];\n    this.boundaries = {\n      minX: Number.MAX_VALUE,\n      maxX: Number.MIN_VALUE,\n      minY: Number.MAX_VALUE,\n      maxY: Number.MIN_VALUE\n    };\n  }\n\n  getNormalizationAnnotations() {\n    return getNormalizationAnnotations(\n      this.normalization,\n      this.getNormalizedBoundary()\n    );\n  }\n\n  /**\n   * Recalculate the normalized data using the stored original data if available\n   * This will throw an error in the original data is not present\n   * @param {number} [normalization.from]\n   * @param {number} [normalization.to]\n   * @param {number} [normalization.numberOfPoints]\n   * @param {array<object>} [normalization.filters]\n   * @param {string} [normalization.filters.X.name]\n   * @param {object} [normalization.filters.X.options]\n   * @param {array<object>} [normalization.exclusions]\n   * @param {string} [normalization.exclusions.X.from]\n   * @param {object} [normalization.exclusions.X.to]\n   */\n  setNormalization(normalization = {}) {\n    if (JSON.stringify(this.normalization) === JSON.stringify(normalization)) {\n      return;\n    }\n    this.normalization = normalization;\n    for (let spectrum of this.spectra) {\n      spectrum.updateNormalization(this.normalization);\n    }\n  }\n\n  getNormalization() {\n    return this.normalization;\n  }\n\n  /**\n   * Returns an object contains 4 parameters with the normalized data\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   */\n  getNormalizedData(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedData(spectra);\n  }\n\n  /**\n   * Returns a tab separated value containing the normalized data\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   * @param {string} [options.fs='\\t'] field separator\n   * @param {string} [options.rs='\\n'] record (line) separator\n   * @returns {string}\n   */\n  getNormalizedText(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedText(spectra, options);\n  }\n\n  /**\n   * Returns an object contains 4 parameters with the scaled data\n   * @param {object} [options={}] scale spectra based on various parameters\n   * @param {object} [options.range] from - to\n   * @param {Array} [options.ids] ids of selected spectra, by default all\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   */\n  getScaledData(options) {\n    return getScaledData(this, options);\n  }\n\n  /**\n   * Add jcamp\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} jcamp\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromJcamp(jcamp$1, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = jcamp(jcamp$1);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  updateRangesInfo(options) {\n    for (let spectrum of this.spectra) {\n      spectrum.updateRangesInfo(options);\n    }\n  }\n\n  /**\n   * Add a spectrum based on the data\n   * @param {object} data {x, y}}\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.id]\n   * @param {object} [options.normalization={}]\n   * @param {object} [options.normalized]\n   * @return {Spectrum}\n   */\n\n  addFromData(data, options = {}) {\n    if (this.spectra.length === 0) this.keepOriginal = true;\n    const id = options.id || Math.random(0).toString(36).substring;\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.spectra.length;\n    let spectrum = new Spectrum(data.x, data.y, id, {\n      meta: options.meta,\n      normalized: options.normalized,\n      normalization: this.normalization\n    });\n    // ensure that the normalization is the same for all the spectra\n    if (!this.normalization.from) {\n      this.normalization.from = spectrum.normalizedBoundary.x.min;\n    }\n    if (!this.normalization.to) {\n      this.normalization.to = spectrum.normalizedBoundary.x.max;\n    }\n    this.spectra[index] = spectrum;\n    if (!this.keepOriginal) {\n      spectrum.removeOriginal();\n    } else {\n      let memoryInfo = this.getMemoryInfo();\n      if (memoryInfo.total > this.maxMemory) {\n        this.keepOriginal = false;\n        this.removeOriginals();\n      }\n    }\n  }\n\n  removeOriginals() {\n    for (let spectrum of this.spectra) {\n      spectrum.removeOriginal();\n    }\n  }\n\n  /**\n   * Remove the spectrum from the SpectraProcessor for the specified id\n   * @param {string} id\n   */\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra.splice(index, 1);\n  }\n\n  /**\n   * Remove all the spectra not present in the list\n   * @param {Array} [ids] Array of ids of the spectra to keep\n   */\n  removeSpectraNotIn(ids) {\n    let currentIDs = this.spectra.map((spectrum) => spectrum.id);\n    for (let id of currentIDs) {\n      if (!ids.includes(id)) {\n        this.removeSpectrum(id);\n      }\n    }\n  }\n\n  /**\n   * Checks if the ID of a spectrum exists in the SpectraProcessor\n   * @param {string} id\n   */\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.spectra.length; i++) {\n      let spectrum = this.spectra[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns a spectrum from its ID\n   * @param {Array} ids\n   * @returns {Array<Spectrum}\n   */\n  getSpectra(ids) {\n    if (!ids || !Array.isArray(ids)) return this.spectra;\n    let spectra = [];\n    for (let id of ids) {\n      let index = this.getSpectrumIndex(id);\n      if (index !== undefined) {\n        spectra.push(this.spectra[index]);\n      }\n    }\n    return spectra;\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra[index];\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getChart() {\n    return getChart(this.spectra);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for box plot\n   * @returns {object}\n   */\n  getBoxPlotAnnotations(options) {\n    return getBoxPlotAnnotations(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @returns {object}\n   */\n  getNormalizedChart(options) {\n    return getNormalizedChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the scaled normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @param {object} [options.range] from - to\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object}\n   */\n  getScaledChart(options) {\n    return getScaledChart(this, options);\n  }\n\n  getMemoryInfo() {\n    let memoryInfo = { original: 0, normalized: 0, total: 0 };\n    this.spectra.forEach((spectrum) => {\n      let memory = spectrum.memory;\n      memoryInfo.original += memory.original;\n      memoryInfo.normalized += memory.normalized;\n      memoryInfo.total += memory.total;\n    });\n    memoryInfo.keepOriginal = this.keepOriginal;\n    memoryInfo.maxMemory = this.maxMemory;\n    return memoryInfo;\n  }\n\n  getNormalizedBoundary() {\n    let boundary = {\n      x: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n      y: { min: Number.MAX_VALUE, max: Number.MIN_VALUE }\n    };\n    for (let spectrum of this.spectra) {\n      if (spectrum.normalizedBoundary.x.min < boundary.x.min) {\n        boundary.x.min = spectrum.normalizedBoundary.x.min;\n      }\n      if (spectrum.normalizedBoundary.x.max > boundary.x.max) {\n        boundary.x.max = spectrum.normalizedBoundary.x.max;\n      }\n      if (spectrum.normalizedBoundary.y.min < boundary.y.min) {\n        boundary.y.min = spectrum.normalizedBoundary.y.min;\n      }\n      if (spectrum.normalizedBoundary.y.max > boundary.y.max) {\n        boundary.y.max = spectrum.normalizedBoundary.y.max;\n      }\n    }\n    return boundary;\n  }\n\n  /**\n   * Create SpectraProcessor from normalized TSV\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.separator='\\t']\n   */\n  static fromNormalizedText(text$1, options = {}) {\n    let parsed = text(text$1, options);\n    if (!parsed) {\n      throw new Error('Can not parse TSV file');\n    }\n    let spectraProcessor = new SpectraProcessor();\n\n    spectraProcessor.setNormalization({\n      from: parsed.x[0],\n      to: parsed.x[parsed.x.length - 1],\n      numberOfPoints: parsed.x.length\n    });\n    spectraProcessor.keepOriginal = false;\n\n    for (let i = 0; i < parsed.ids.length; i++) {\n      spectraProcessor.addFromData(\n        { x: [], y: [] },\n        {\n          normalized: {\n            x: parsed.x,\n            y: parsed.matrix[i]\n          },\n          id: parsed.ids[i],\n          meta: parsed.meta[i]\n        }\n      );\n    }\n\n    return spectraProcessor;\n  }\n}\n\nexports.SpectraProcessor = SpectraProcessor;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    var floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    var wantXY = !options.withoutXY;\n\n    var start = Date.now();\n\n    var ntuples = {};\n    var ldr, dataLabel, dataValue, ldrs;\n    var position, endLine, infos;\n\n    var result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    var spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    var spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      dataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (dataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          var xIndex = -1;\n          var yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            var firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1'\n            );\n            var secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1'\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            dataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            dataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (dataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue, result);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (dataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (dataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (dataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (dataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (dataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (dataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (dataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (dataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (dataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (dataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (dataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (dataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (dataLabel === '.OBSERVEFREQUENCY' || dataLabel === '$SFO1') {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (dataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$REFERENCEPOINT') {\n        // OFFSET for Varian spectra\n        // if we activate this part it does not work for ACD specmanager\n        //         } else if (dataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n        //                 var parts = dataValue.split(/ *, */);\n        //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n        //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n      } else if (dataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (dataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        var pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        var unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (dataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(dataLabel)) {\n        spectrum[convertMSFieldToLabel(dataLabel)] = dataValue;\n      } else if (dataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (dataLabel.match(options.keepRecordsRegExp)) {\n        if (result.info[dataLabel]) {\n          if (!Array.isArray(result.info[dataLabel])) {\n            result.info[dataLabel] = [result.info[dataLabel]];\n          }\n          result.info[dataLabel].push(dataValue.trim());\n        } else {\n          result.info[dataLabel] = dataValue.trim();\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      var newNtuples = [];\n      var keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              var data = spectrum.data[j];\n              var newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2)\n              };\n              for (var k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(dataLabel) {\n    return GC_MS_FIELDS.indexOf(dataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    var spectra = result.spectra;\n    var length = spectra.length;\n    var chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length)\n        }\n      }\n    };\n\n    var existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      var label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length)\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      var spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]]\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    var data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice()\n        }\n      }\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      var shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    var l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    var minZ = spectra[0].data[0][0];\n    var maxZ = minZ;\n    var ySize = spectra.length;\n    var xSize = spectra[0].data[0].length / 2;\n    var z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      var xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        var value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs))\n    };\n  }\n\n  function add2D(result, options) {\n    var zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    var noise = zData.noise;\n    var z = zData.z;\n    var povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    var isOver0, isOver1, isOver2, isOver3;\n    var nbSubSpectra = z.length;\n    var nbPovars = z[0].length;\n    var pAx, pAy, pBx, pBy;\n\n    var x0 = zData.minX;\n    var xN = zData.maxX;\n    var dx = (xN - x0) / (nbPovars - 1);\n    var y0 = zData.minY;\n    var yN = zData.maxY;\n    var dy = (yN - y0) / (nbSubSpectra - 1);\n    var minZ = zData.minZ;\n    var maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    var iter = options.nbContourLevels * 2;\n    var contourLevels = new Array(iter);\n    var lineZValue;\n    for (var level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      var contourLevel = {};\n      contourLevels[level] = contourLevel;\n      var side = level % 2;\n      var factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      var lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        var subSpectra = z[iSubSpectra];\n        var subSpectraAfter = z[iSubSpectra + 1];\n        for (var povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    var yFactor = spectrum.yFactor;\n    var deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var currentX = spectrum.firstX;\n    var currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    var endLine = false;\n    var ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    var newLine = true;\n    var isDifference = false;\n    var isLastDifference = false;\n    var lastDifference = 0;\n    var isDuplicate = false;\n    var inComment = false;\n    var currentValue = 0; // can be a difference or a duplicate\n    var lastValue = 0; // must be the real last value\n    var isNegative = false;\n    var inValue = false;\n    var skipFirstValue = false;\n    var decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                var duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (var j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            var ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    var removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    var removeCommentRegExp = /\\$\\$.*/;\n    var peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nvar convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nvar stamps = {};\nvar worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function (resolve) {\n    var stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options\n      })\n    );\n  });\n}\n\nfunction createWorker() {\n  var workerURL = URL.createObjectURL(\n    new Blob(\n      [`var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`],\n      { type: 'application/javascript' }\n    )\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function (event) {\n    var data = JSON.parse(event.data);\n    var stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (var i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: []\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      var finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      var match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        var dataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (dataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nmodule.exports = {\n  convert: JcampConverter,\n  createTree: createTree\n};\n","const isAnyArray = require('is-any-array');\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {object} [points={}]\n */\nexport function check(points = {}) {\n  if (!isAnyArray(points.x) || !isAnyArray(points.y)) {\n    throw new Error('Points must be an object of x and y arrays');\n  }\n  if (points.x.length !== points.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n","/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array} array\n * @param {number} target\n */\n\nexport function findClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n","import { findClosestIndex } from './findClosestIndex';\n\n/**\n * Returns an object with {fromIndex, toIndex} for a specific from / to\n * @param {array} x\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n */\n\nexport function getFromToIndex(x, options = {}) {\n  let { fromIndex, toIndex, from, to } = options;\n\n  if (fromIndex === undefined) {\n    if (from !== undefined) {\n      fromIndex = findClosestIndex(x, from);\n    } else {\n      fromIndex = 0;\n    }\n  }\n  if (toIndex === undefined) {\n    if (to !== undefined) {\n      toIndex = findClosestIndex(x, to);\n    } else {\n      toIndex = x.length - 1;\n    }\n  }\n  return { fromIndex, toIndex };\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Integration value on the specified range\n */\n\nexport function integration(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n  let integration = 0;\n  for (let i = fromIndex; i < toIndex; i++) {\n    integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n  }\n\n  return integration;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Generate a X / Y of the integral\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @param {boolean} [options.reverse=false] - Integrate from the larger value to the smallest value\n * @return {{x:[],y:[]}} An object with the integration function\n */\n\nexport function integral(points = {}, options = {}) {\n  const { reverse = false } = options;\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let integration = 0;\n  let integral;\n  if (reverse) {\n    integral = { x: [x[toIndex]], y: [0] };\n    for (let i = toIndex; i > fromIndex; i--) {\n      integration += ((x[i] - x[i - 1]) * (y[i - 1] + y[i])) / 2;\n      integral.x.push(x[i - 1]);\n      integral.y.push(integration);\n    }\n    integral.x.reverse();\n    integral.y.reverse();\n  } else {\n    integral = { x: [x[fromIndex]], y: [0] };\n    for (let i = fromIndex; i < toIndex; i++) {\n      integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n      integral.x.push(x[i + 1]);\n      integral.y.push(integration);\n    }\n  }\n\n  return integral;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Finds the max value in a zone\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Max y on the specified range\n */\n\nexport function maxY(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let maxY = y[fromIndex];\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > maxY) maxY = y[i];\n  }\n\n  return maxY;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nexport function maxYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nexport function minYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] < current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n","import { findClosestIndex } from '../x/findClosestIndex';\n\n/**\n * Reduce the number of points while keeping the same noise. Practical to\n * display many spectra as SVG\n * @param {array} x\n * @param {array} y\n * @param {object} [options={}]\n * @param {number} [from=x[0]]\n * @param {number} [to=x[x.length-1]]\n * @param {number} [nbPoints=4001] Number of points\n */\n\nexport function reduce(x, y, options = {}) {\n  let { from = x[0], to = x[x.length - 1], nbPoints = 4000 } = options;\n\n  let fromIndex = findClosestIndex(x, from);\n  let toIndex = findClosestIndex(x, to);\n\n  if (fromIndex > 0 && x[fromIndex] > from) fromIndex--;\n  if (toIndex < x.length - 1 && x[toIndex] < to) toIndex++;\n\n  if (toIndex - fromIndex < nbPoints) {\n    return {\n      x: x.slice(fromIndex, toIndex + 1),\n      y: y.slice(fromIndex, toIndex + 1),\n    };\n  }\n\n  let newX = [x[fromIndex]];\n  let newY = [y[fromIndex]];\n  let minY = Number.MAX_VALUE;\n  let maxY = Number.MIN_VALUE;\n  if (nbPoints % 2 === 0) {\n    nbPoints = nbPoints / 2 + 1;\n  } else {\n    nbPoints = (nbPoints - 1) / 2 + 1;\n  }\n\n  let slot = (x[toIndex] - x[fromIndex]) / (nbPoints - 1);\n  let currentX = x[fromIndex] + slot;\n  let first = true;\n  for (let i = fromIndex + 1; i <= toIndex; i++) {\n    if (first) {\n      minY = y[i];\n      maxY = y[i];\n      first = false;\n    } else {\n      if (y[i] < minY) minY = y[i];\n      if (y[i] > maxY) maxY = y[i];\n    }\n\n    if (x[i] >= currentX || i === toIndex) {\n      newX.push(currentX - slot / 2);\n      newY.push(minY);\n      newX.push(currentX);\n      newY.push(maxY);\n      currentX += slot;\n      first = true;\n    }\n  }\n\n  // we will need to make some kind of min / max because there are too many points\n  // we will always keep the first point and the last point\n\n  return { x: newX, y: newY };\n}\n","/**\n * Sort object of array, x has to be monotone.\n * @param {object} data Object of kind {x:[], re:[], im:[]}.\n * @return {SD}\n */\n\nexport function sortX(data) {\n  const { x, y } = data;\n\n  if (x.length !== y.length) {\n    throw TypeError('sortX: length of x and y must be identical');\n  }\n\n  if (x.length < 2 || x[0] < x[1]) return data;\n\n  return {\n    x: x.slice(0).reverse(),\n    y: y.slice(0).reverse(),\n  };\n}\n","import { findClosestIndex } from '../x/findClosestIndex';\n\nimport { check } from './check';\n\n/**\n * Find the closest minimum going down hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function minClosestYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let minY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] < minY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] < minY) {\n      currentIndex++;\n    }\n    minY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n","import { findClosestIndex } from '../x/findClosestIndex';\n\nimport { check } from './check';\n\n/**\n * Find the closest maximum going up hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function maxClosestYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let maxY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] > maxY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] > maxY) {\n      currentIndex++;\n    }\n    maxY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n","import { findClosestIndex } from './findClosestIndex';\n\n/**\n *  Returns the targetIndex\n * @param {array} [x]\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @param {number}\n */\n\nexport function getTargetIndex(x, options = {}) {\n  let { target, targetIndex } = options;\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      return findClosestIndex(x, target);\n    } else {\n      return 0;\n    }\n  }\n  return targetIndex;\n}\n","import { getTargetIndex } from '../x/getTargetIndex';\n\nimport { check } from './check';\n\nexport function realMinYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  const targetIndex = getTargetIndex(x, options);\n  // interpolation to a sin() function\n  if (\n    y[targetIndex - 1] < 0 &&\n    y[targetIndex + 1] < 0 &&\n    y[targetIndex] <= y[targetIndex - 1] &&\n    y[targetIndex] <= y[targetIndex + 1]\n  ) {\n    let alpha = 20 * Math.log10(-y[targetIndex - 1]);\n    let beta = 20 * Math.log10(-y[targetIndex]);\n    let gamma = 20 * Math.log10(-y[targetIndex + 1]);\n    let p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n    return {\n      x: x[targetIndex] + (x[targetIndex] - x[targetIndex - 1]) * p,\n      y: y[targetIndex] - 0.25 * (y[targetIndex - 1] - y[targetIndex + 1]) * p,\n      index: targetIndex,\n    };\n  } else {\n    return {\n      x: x[targetIndex],\n      y: y[targetIndex],\n      index: targetIndex,\n    };\n  }\n}\n","import { getTargetIndex } from '../x/getTargetIndex';\n\nimport { check } from './check';\n/**\n * Find the closest minimum going down hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function realMaxYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n  const targetIndex = getTargetIndex(x, options);\n  // interpolation to a sin() function\n  if (\n    y[targetIndex - 1] > 0 &&\n    y[targetIndex + 1] > 0 &&\n    y[targetIndex] >= y[targetIndex - 1] &&\n    y[targetIndex] >= y[targetIndex + 1]\n  ) {\n    let alpha = 20 * Math.log10(y[targetIndex - 1]);\n    let beta = 20 * Math.log10(y[targetIndex]);\n    let gamma = 20 * Math.log10(y[targetIndex + 1]);\n    let p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n    return {\n      x: x[targetIndex] + (x[targetIndex] - x[targetIndex - 1]) * p,\n      y: y[targetIndex] - 0.25 * (y[targetIndex - 1] - y[targetIndex + 1]) * p,\n      index: targetIndex,\n    };\n  } else {\n    return {\n      x: x[targetIndex],\n      y: y[targetIndex],\n      index: targetIndex,\n    };\n  }\n}\n","import { check } from './check';\nimport { integration } from './integration';\nimport { integral } from './integral';\nimport { maxY } from './maxY';\nimport { maxYPoint } from './maxYPoint';\nimport { minYPoint } from './minYPoint';\nimport { reduce } from './reduce';\nimport { sortX } from './sortX';\nimport { minClosestYPoint } from './minClosestYPoint';\nimport { maxClosestYPoint } from './maxClosestYPoint';\nimport { realMinYPoint } from './realMinYPoint';\nimport { realMaxYPoint } from './realMaxYPoint';\n\nexport const XY = {\n  check,\n  integral,\n  integration,\n  maxY,\n  maxYPoint,\n  minYPoint,\n  reduce,\n  sortX,\n  minClosestYPoint,\n  maxClosestYPoint,\n  realMaxYPoint,\n  realMinYPoint,\n};\n","/**\n * This function make a zero filling to re and im part.\n * @param {object} data Object of kind {x:[], re:[], im:[]}.\n * @param {number} zeroFilling - final number of points\n * @return {SD}\n */\nexport function zeroFilling(data, zeroFilling) {\n  let length = data.x.length;\n  if (zeroFilling === 0 || length === zeroFilling) return data;\n\n  if (length > zeroFilling) {\n    return {\n      x: data.x.slice(0, zeroFilling),\n      re: data.re.slice(0, zeroFilling),\n      im: data.im.slice(0, zeroFilling)\n    };\n  }\n\n  const x = data.x;\n  const re = data.re;\n  const im = data.im;\n\n  const newX = new Float64Array(zeroFilling);\n  const newRE = new Float64Array(zeroFilling);\n  const newIM = new Float64Array(zeroFilling);\n\n  for (let i = 0; i < length; i++) {\n    newX[i] = x[i];\n    newRE[i] = re[i];\n    newIM[i] = im[i];\n  }\n  const deltaX = (x[x.length - 1] - x[0]) / (length - 1);\n  for (let i = length; i < zeroFilling; i++) {\n    newX[i] = newX[i - 1] + deltaX;\n  }\n\n  return {\n    x: newX,\n    re: newRE,\n    im: newIM\n  };\n}\n\n","/**\n * Sort object of array, x has to be monotone.\n * @param {object} data Object of kind {x:[], re:[], im:[]}.\n * @return {SD}\n */\n\nexport function sortX(data) {\n  const { x, re, im } = data;\n\n  if (x.length !== re.length || x.length !== im.length) {\n    throw TypeError('sortX: length of x, re and im must be identical');\n  }\n\n  if (x.length < 2 || x[0] < x[1]) return data;\n\n  return {\n    x: x.slice(0).reverse(),\n    re: re.slice(0).reverse(),\n    im: im.slice(0).reverse(),\n  };\n}\n","import { zeroFilling } from './zeroFilling';\nimport { sortX } from './sortX';\n\nexport const XReIm = {\n  zeroFilling,\n  sortX,\n};\n","/**\n * Calculate absolute value of a spectrum\n * @param {object} reim - An object of kind {re:[], im:[]}\n * @return {Float64Array}\n */\nexport function absolute(data) {\n  const length = data.re.length;\n  const re = data.re;\n  const im = data.im;\n  const newArray = new Float64Array(length);\n  for (let i = 0; i < length; i++) {\n    newArray[i] = Math.sqrt(re[i] ** 2 + im[i] ** 2);\n  }\n\n  return newArray;\n}\n","/**\n * Phase correction filter\n * @param {object} reim - An object of kind {re:[], im:[]}\n * @param {number} [phi0 = 0] - value\n * @param {number} [phi1 = 0] - value\n * @return {object} returns a new object {re:[], im:[]}\n */\nexport function phaseCorrection(data, phi0, phi1) {\n  phi0 = Number.isFinite(phi0) ? phi0 : 0;\n  phi1 = Number.isFinite(phi1) ? phi1 : 0;\n\n  const re = data.re.slice(0);\n  const im = data.im.slice(0);\n  const length = data.re.length;\n\n  const delta = phi1 / length;\n  const alpha = 2 * Math.pow(Math.sin(delta / 2), 2);\n  const beta = Math.sin(delta);\n  let cosTheta = Math.cos(phi0);\n  let sinTheta = Math.sin(phi0);\n\n  const newRe = new Float64Array(length);\n  const newIm = new Float64Array(length);\n  for (let i = 0; i < length; i++) {\n    newRe[i] = re[i] * cosTheta - im[i] * sinTheta;\n    newIm[i] = re[i] * sinTheta + im[i] * cosTheta;\n    // calculate angles i+1 from i\n    cosTheta = cosTheta - (alpha * cosTheta + beta * sinTheta);\n    sinTheta = sinTheta - (alpha * sinTheta - beta * cosTheta);\n  }\n\n  return { re: newRe, im: newIm };\n}\n","import { absolute } from './absolute';\nimport { phaseCorrection } from './phaseCorrection';\n\nexport const ReIm = {\n  absolute,\n  phaseCorrection,\n};\n","/**\n\n/**\n * This function add the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function add(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n\n","/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @return {object}\n */\nexport function boxPlot(array) {\n  array = array.slice(0).sort((a, b) => a - b);\n  if (array.length < 5) {\n    throw Error('boxPlot: can not calculate info if array contains less than 3 elements');\n  }\n  let info = { Q1: 0.0, Q2: 0.0, Q3: 0.0, min: array[0], max: array[array.length - 1] };\n  let q1max, q3min;\n  if (array.length % 2 === 1) { // odd\n    let middle = (array.length - 1) / 2;\n    info.Q2 = array[middle];\n    q1max = middle - 1;\n    q3min = middle + 1;\n  } else { // even\n    q3min = array.length / 2;\n    q1max = q3min - 1;\n    info.Q2 = (array[q1max] + array[q3min]) / 2;\n  }\n  if (q1max % 2 === 0) {\n    info.Q1 = array[q1max / 2];\n    info.Q3 = array[(array.length + q3min - 1) / 2];\n  } else {\n    info.Q1 = (array[(q1max + 1) / 2] + array[(q1max - 1) / 2]) / 2;\n    let middleOver = (array.length + q3min) / 2;\n    info.Q3 = (array[middleOver] + array[middleOver - 1]) / 2;\n  }\n  return info;\n}\n\n","/**\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function divide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n\n","/**\n\n/**\n * This function multiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function multiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n\n","/**\n * This function performs a circular shift to a new array\n * Positive values of shifts will shift to the right and negative values will do to the left\n * @example rotate([1,2,3,4],1) -> [4,1,2,3]\n * @example rotate([1,2,3,4],-1) -> [2,3,4,1]\n * @param {Array} array - the array that will be rotated\n * @param {number} shift\n * @return {Array}\n */\nexport function rotate(array, shift) {\n  shift = shift % array.length;\n  if (shift < 0) shift += array.length;\n  return array.slice(array.length - shift).concat(array.slice(0, array.length - shift));\n}\n\n","/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function subtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n\n","import { add } from './add';\nimport { boxPlot } from './boxPlot';\nimport { divide } from './divide';\nimport { findClosestIndex } from './findClosestIndex';\nimport { getTargetIndex } from './getTargetIndex';\nimport { multiply } from './multiply';\nimport { rotate } from './rotate';\nimport { subtract } from './subtract';\n\nexport const X = {\n  add,\n  boxPlot,\n  divide,\n  findClosestIndex,\n  getTargetIndex,\n  multiply,\n  rotate,\n  subtract,\n};\n","export { XY } from './xy/index.js';\nexport { XReIm } from './xreim/index.js';\nexport { ReIm } from './reim/index.js';\nexport { X } from './x/index.js';\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n\n  var output = new Array(numberOfPoints);\n\n  var initialOriginalStep = x[1] - x[0];\n  var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  var min = from - halfStep;\n  var max = from + halfStep;\n\n  var previousX = Number.MIN_VALUE;\n  var previousY = 0;\n  var nextX = x[0] - initialOriginalStep;\n  var nextY = 0;\n\n  var currentValue = 0;\n  var slope = 0;\n  var intercept = 0;\n  var sumAtMin = 0;\n  var sumAtMax = 0;\n\n  var i = 0; // index of input\n  var j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      var add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n  var lastStep = x[x.length - 1] - x[x.length - 2];\n\n  var start = from - halfStep;\n  var output = new Array(numberOfPoints);\n\n  // Init main variables\n  var min = start;\n  var max = start + step;\n\n  var previousX = -Number.MAX_VALUE;\n  var previousY = 0;\n  var nextX = x[0];\n  var nextY = y[0];\n  var frontOutsideSpectra = 0;\n  var backOutsideSpectra = true;\n\n  var currentValue = 0;\n\n  // for slot algorithm\n  var currentPoints = 0;\n\n  var i = 1; // index of input\n  var j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","export default function getZones(from, to, numberOfPoints, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to, numberOfPoints }];\n  }\n\n  // need to deal with overlapping exclusions and out of bound exclusions\n\n  let toRemove = exclusions.reduce(\n    (previous, exclusion) => (previous += exclusion.to - exclusion.from),\n    0\n  );\n  let total = to - from;\n  let unitsPerPoint = (total - toRemove) / numberOfPoints;\n  let zones = [];\n  let currentFrom = from;\n  let totalPoints = 0;\n  for (let exclusion of exclusions) {\n    let currentNbPoints = Math.round(\n      (exclusion.from - currentFrom) / unitsPerPoint\n    );\n    totalPoints += currentNbPoints;\n    if (currentNbPoints > 0) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n        numberOfPoints: currentNbPoints\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (numberOfPoints - totalPoints > 0) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n      numberOfPoints: numberOfPoints - totalPoints\n    });\n  }\n\n  return zones;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\nimport getZones from './getZones';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = []\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  let zones = getZones(from, to, numberOfPoints, exclusions);\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse\n    );\n    xResult.push(...zoneResult.x);\n    yResult.push(...zoneResult.y);\n  }\n\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  var output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints\n    }),\n    y: output\n  };\n}\n","export { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\n\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (Array.isArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n)\n    };\n  }\n}\n","export default function checkArraySize(x, y) {\n  if (!Array.isArray(x) || !Array.isArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\n\nexport default class SimpleLinearRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = [y.intercept, y.slope];\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'simpleLinearRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(x) {\n    return this.slope * x + this.intercept;\n  }\n\n  computeX(y) {\n    return (y - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    let result = 'f(x) = ';\n    if (this.slope !== 0) {\n      const xFactor = maybeToPrecision(this.slope, precision);\n      result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\n      if (this.intercept !== 0) {\n        const absIntercept = Math.abs(this.intercept);\n        const operator = absIntercept === this.intercept ? '+' : '-';\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'simpleLinearRegression') {\n      throw new TypeError('not a SLR model');\n    }\n    return new SimpleLinearRegression(true, json);\n  }\n}\n\nfunction regress(slr, x, y) {\n  const n = x.length;\n  let xSum = 0;\n  let ySum = 0;\n\n  let xSquared = 0;\n  let xY = 0;\n\n  for (let i = 0; i < n; i++) {\n    xSum += x[i];\n    ySum += y[i];\n    xSquared += x[i] * x[i];\n    xY += x[i] * y[i];\n  }\n\n  const numerator = n * xY - xSum * ySum;\n  slr.slope = numerator / (n * xSquared - xSum * xSum);\n  slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n  slr.coefficients = [slr.intercept, slr.slope];\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport isArray from 'is-any-array';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm;\n\n  if (!Array.isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input);\n        if (absoluteSumValue === 0) return input.slice(0);\n        return input.map(function (element) {\n          return element / absoluteSumValue;\n        });\n      }\n\n    case 'max':\n      {\n        var maxValue = max(input);\n        if (maxValue === 0) return input.slice(0);\n        return input.map(function (element) {\n          return element / maxValue;\n        });\n      }\n\n    case 'sum':\n      {\n        var sumValue = sum(input);\n        if (sumValue === 0) return input.slice(0);\n        return input.map(function (element) {\n          return element / sumValue;\n        });\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n"],"sourceRoot":""}