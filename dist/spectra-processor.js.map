{"version":3,"file":"spectra-processor.js","sources":["../node_modules/ml-stat/array.js","../node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/ml-array-xy-filter-x/src/index.js","../src/spectrum/getData.js","../node_modules/is-any-array/src/index.js","../node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/ml-zones/src/normalize.js","../node_modules/ml-zones/src/invert.js","../node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/ml-array-normed/node_modules/is-any-array/src/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-sum/lib-es6/index.js","../node_modules/ml-array-normed/lib-es6/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../src/spectrum/getNormalized.js","../node_modules/ml-spectra-processing/node_modules/is-any-array/src/index.js","../node_modules/ml-spectra-processing/src/xy/check.js","../node_modules/ml-spectra-processing/src/util/normalizeZones.js","../node_modules/ml-spectra-processing/src/xy/extract.js","../node_modules/ml-spectra-processing/src/x/findClosestIndex.js","../node_modules/ml-spectra-processing/src/x/getFromToIndex.js","../node_modules/ml-spectra-processing/src/xy/integration.js","../node_modules/ml-spectra-processing/src/xy/integral.js","../node_modules/ml-spectra-processing/src/xy/maxY.js","../node_modules/ml-spectra-processing/src/xy/maxYPoint.js","../node_modules/ml-spectra-processing/src/xy/minYPoint.js","../node_modules/ml-spectra-processing/src/xy/reduce.js","../node_modules/ml-spectra-processing/src/xy/growingX.js","../node_modules/ml-spectra-processing/src/xy/minClosestYPoint.js","../node_modules/ml-spectra-processing/src/xy/maxClosestYPoint.js","../node_modules/ml-spectra-processing/src/x/getTargetIndex.js","../node_modules/ml-spectra-processing/src/xy/realMinYPoint.js","../node_modules/ml-spectra-processing/src/xy/realMaxYPoint.js","../node_modules/ml-spectra-processing/src/xy/maximaY.js","../node_modules/ml-spectra-processing/src/xy/minimaY.js","../node_modules/ml-spectra-processing/src/xy/peakInfo.js","../node_modules/ml-spectra-processing/src/xy/toXYObject.js","../node_modules/ml-spectra-processing/src/xy/index.js","../node_modules/ml-spectra-processing/src/x/add.js","../node_modules/ml-spectra-processing/src/x/boxPlot.js","../node_modules/ml-spectra-processing/src/x/multiply.js","../node_modules/ml-spectra-processing/src/x/dotProduct.js","../node_modules/ml-spectra-processing/src/x/crossCorrelation.js","../node_modules/ml-spectra-processing/src/x/autoCorrelation.js","../node_modules/ml-spectra-processing/src/x/correlation.js","../node_modules/ml-spectra-processing/src/x/divide.js","../node_modules/ml-spectra-processing/src/x/rotate.js","../node_modules/ml-spectra-processing/src/x/subtract.js","../node_modules/ml-spectra-processing/src/x/index.js","../src/spectrum/updateRangesInfo.js","../src/spectrum/Spectrum.js","../node_modules/jcampconverter/src/index.js","../src/Kinds.js","../src/parser/jcamp.js","../node_modules/ml-arrayxy-uniquex/src/index.js","../node_modules/xy-parser/src/index.js","../src/parser/text.js","../src/parser/matrix.js","../src/jsgraph/getNormalizationAnnotations.js","../src/spectra/getBoxPlotData.js","../src/jsgraph/getBoxPlotAnnotations.js","../src/jsgraph/addChartDataStyle.js","../src/jsgraph/getChart.js","../node_modules/chroma-js/chroma.js","../src/jsgraph/getAutocorrelationChart.js","../src/spectra/getNormalizedData.js","../src/jsgraph/getTrackAnnotation.js","../src/jsgraph/getNormalizedChart.js","../src/jsgraph/getScaledChart.js","../src/spectra/getAutocorrelation.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/matrix.js","../src/spectra/getMeanData.js","../src/spectra/getNormalizedText.js","../src/spectra/scaled/getFromToIndex.js","../src/spectra/scaled/min.js","../src/spectra/scaled/max.js","../node_modules/ml-regression-base/src/maybeToPrecision.js","../node_modules/ml-regression-base/src/checkArrayLength.js","../node_modules/ml-regression-base/src/index.js","../node_modules/ml-regression-simple-linear/src/index.js","../src/spectra/scaled/minMax.js","../src/spectra/scaled/range.js","../src/spectra/getScaledData.js","../src/metadata/getMetadata.js","../src/metadata/getCategoriesStats.js","../src/metadata/getClasses.js","../src/SpectraProcessor.js"],"sourcesContent":["'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","import filterX from 'ml-array-xy-filter-x';\n\n/**\n *\n * @private\n * @param {Spectrum} spectrum\n * @param {object} [options.xFilter={}]\n * @param {array} [options.xFilter.from]\n * @param {array} [options.xFilter.to]\n * @param {array} [options.xFilter.exclusions=[]]\n * @param {array} [options.yFactor=1]\n */\n\nexport function getData(spectrum, options = {}) {\n  const { xFilter = {}, yFactor = 1 } = options;\n  let data = { x: spectrum.x, y: spectrum.y };\n\n  if (xFilter) {\n    data = filterX({ x: spectrum.x, y: spectrum.y }, xFilter);\n  }\n  if (yFactor && yFactor !== 1) {\n    data.y = data.y.map((y) => y * yFactor);\n  }\n  return data;\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @param {number} [options.maxValue=1] new max value for algo max\n * @param {number} [options.sumValue=1] new max value for algo absolute and sum\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\n/**\n *\n * @param {Array} input\n * @param {object} [options={}]\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n */\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","import equallySpaced from 'ml-array-xy-equally-spaced';\nimport Stat from 'ml-stat/array';\nimport normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\n\n/**\n *\n * @private\n * @param {*} spectrum\n * @param {*} options\n */\nexport function getNormalized(spectrum, options = {}) {\n  if (!Array.isArray(spectrum.x) || !Array.isArray(spectrum.y)) {\n    throw new Error(\n      'getNormalized: Can not get normalized data, missing original data.',\n    );\n  }\n\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints = 1024,\n    filters = [],\n    exclusions = [],\n  } = options;\n\n  let y = spectrum.y.slice(0);\n\n  for (let filter of filters) {\n    switch (filter.name) {\n      case 'centerMean': {\n        let mean = Stat.mean(spectrum.y);\n        let meanFct = (y) => y - mean;\n        y = y.map(meanFct);\n        break;\n      }\n      case 'scaleSD': {\n        let std = Stat.standardDeviation(spectrum.y);\n        let stdFct = (y) => y / std;\n        y = y.map(stdFct);\n        break;\n      }\n      case 'normalize': {\n        y = normed(y);\n        break;\n      }\n      case 'rescale': {\n        y = rescale(y);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n  let result = equallySpaced(\n    { x: spectrum.x, y },\n    { from, to, numberOfPoints, exclusions },\n  );\n  return result;\n}\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isAnyArray from 'is-any-array';\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {object} [points={}]\n */\nexport function check(points = {}) {\n  if (!isAnyArray(points.x) || !isAnyArray(points.y)) {\n    throw new Error('Points must be an object of x and y arrays');\n  }\n  if (points.x.length !== points.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n * @param {object} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.MIN_VALUE]\n * @param {number} [options.to=Number.MAX_VALUE]\n */\n\nexport function normalizeZones(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","import { normalizeZones } from '../util/normalizeZones';\n\nimport { check } from './check';\n\n/**\n * Extract zones from a XY data\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {Array} [options.zones=[]]\n * @return {Array} Array of points\n */\n\nexport function extract(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  let { zones } = options;\n\n  zones = normalizeZones(zones);\n\n  if (!Array.isArray(zones) || zones.length === 0) return points;\n\n  let newX = [];\n  let newY = [];\n\n  let currentZone = zones[0];\n  let position = 0;\n  loop: for (let i = 0; i < x.length; i++) {\n    while (currentZone.to < x[i]) {\n      position++;\n      currentZone = zones[position];\n      if (!currentZone) {\n        i = x.length;\n        break loop;\n      }\n    }\n    if (x[i] >= currentZone.from) {\n      newX.push(x[i]);\n      newY.push(y[i]);\n    }\n  }\n  return { x: newX, y: newY };\n}\n","/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array} array\n * @param {number} target\n */\n\nexport function findClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n","import { findClosestIndex } from './findClosestIndex';\n\n/**\n * Returns an object with {fromIndex, toIndex} for a specific from / to\n * @param {array} x\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n */\n\nexport function getFromToIndex(x, options = {}) {\n  let { fromIndex, toIndex, from, to } = options;\n\n  if (fromIndex === undefined) {\n    if (from !== undefined) {\n      fromIndex = findClosestIndex(x, from);\n    } else {\n      fromIndex = 0;\n    }\n  }\n  if (toIndex === undefined) {\n    if (to !== undefined) {\n      toIndex = findClosestIndex(x, to);\n    } else {\n      toIndex = x.length - 1;\n    }\n  }\n  if (fromIndex > toIndex) [fromIndex, toIndex] = [toIndex, fromIndex];\n  return { fromIndex, toIndex };\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Integration value on the specified range\n */\n\nexport function integration(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n  let integration = 0;\n  for (let i = fromIndex; i < toIndex; i++) {\n    integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n  }\n\n  return integration;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Generate a X / Y of the integral\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @param {boolean} [options.reverse=false] - Integrate from the larger value to the smallest value\n * @return {{x:[],y:[]}} An object with the integration function\n */\n\nexport function integral(points = {}, options = {}) {\n  const { reverse = false } = options;\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let integration = 0;\n  let integral;\n  if (reverse) {\n    integral = { x: [x[toIndex]], y: [0] };\n    for (let i = toIndex; i > fromIndex; i--) {\n      integration += ((x[i] - x[i - 1]) * (y[i - 1] + y[i])) / 2;\n      integral.x.push(x[i - 1]);\n      integral.y.push(integration);\n    }\n    integral.x.reverse();\n    integral.y.reverse();\n  } else {\n    integral = { x: [x[fromIndex]], y: [0] };\n    for (let i = fromIndex; i < toIndex; i++) {\n      integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n      integral.x.push(x[i + 1]);\n      integral.y.push(integration);\n    }\n  }\n\n  return integral;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Finds the max value in a zone\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Max y on the specified range\n */\n\nexport function maxY(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let maxY = y[fromIndex];\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > maxY) maxY = y[i];\n  }\n\n  return maxY;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nexport function maxYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex], index: fromIndex };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > current.y) current = { x: x[i], y: y[i], index: i };\n  }\n\n  return current;\n}\n","import { getFromToIndex } from '../x/getFromToIndex';\n\nimport { check } from './check';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nexport function minYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex], index: fromIndex };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] < current.y) current = { x: x[i], y: y[i], index: i };\n  }\n\n  return current;\n}\n","import { findClosestIndex } from '../x/findClosestIndex';\nimport { normalizeZones } from '../util/normalizeZones';\n\nimport { check } from './check';\n/**\n * Reduce the number of points while keeping visually the same noise. Practical to\n * display many spectra as SVG.\n * SHOULD NOT BE USED FOR DATA PROCESSING !!!\n * You should rather use ml-xy-equally-spaced to make further processing\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {number} [options.nbPoints=4001] Number of points\n * @param {number} [options.zones=[]] Array of zones to keep (from/to object)\n * @param {number} [options.optimize=false] If optimize we may have less than nbPoints at the end\n */\n\nexport function reduce(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n  let {\n    from = x[0],\n    to = x[x.length - 1],\n    nbPoints = 4001,\n    optimize = false,\n    zones = [],\n  } = options;\n\n  zones = normalizeZones(zones, { from, to });\n  if (zones.length === 0) zones = [{ from, to }]; // we take everything\n\n  // for each zone we should know the first index, the last index and the number of points\n\n  let totalPoints = 0;\n  for (let zone of zones) {\n    zone.fromIndex = findClosestIndex(x, zone.from);\n    zone.toIndex = findClosestIndex(x, zone.to);\n    if (zone.fromIndex > 0 && x[zone.fromIndex] > zone.from) {\n      zone.fromIndex--;\n    }\n    if (zone.toIndex < x.length - 1 && x[zone.toIndex] < zone.to) {\n      zone.toIndex++;\n    }\n\n    zone.nbPoints = zone.toIndex - zone.fromIndex + 1;\n    totalPoints += zone.nbPoints;\n  }\n  // we calculate the number of points per zone that we should keep\n  if (totalPoints > nbPoints) {\n    // need to reduce number of points\n    let ratio = nbPoints / totalPoints;\n    let currentTotal = 0;\n    for (let i = 0; i < zones.length - 1; i++) {\n      const zone = zones[i];\n      zone.nbPoints = Math.round(zone.nbPoints * ratio);\n      currentTotal += zone.nbPoints;\n    }\n    zones[zones.length - 1].nbPoints = nbPoints - currentTotal;\n  } else {\n    let newX = new Float64Array(totalPoints);\n    let newY = new Float64Array(totalPoints);\n    let index = 0;\n    for (let zone of zones) {\n      for (let i = zone.fromIndex; i < zone.toIndex + 1; i++) {\n        newX[index] = x[i];\n        newY[index] = y[i];\n        index++;\n      }\n    }\n    return {\n      x: newX,\n      y: newY,\n    };\n  }\n\n  let newX = [];\n  let newY = [];\n  for (let zone of zones) {\n    if (!zone.nbPoints) continue;\n    appendFromTo(zone.fromIndex, zone.toIndex, zone.nbPoints);\n  }\n  return { x: newX, y: newY };\n\n  function appendFromTo(fromIndex, toIndex, zoneNbPoints) {\n    if (zoneNbPoints === 1) {\n      newX.push(x[Math.round((toIndex - fromIndex) / 2)]);\n      newY.push(y[Math.round((toIndex - fromIndex) / 2)]);\n      return;\n    }\n    if (zoneNbPoints === 2) {\n      newX.push(x[fromIndex], x[toIndex]);\n      newY.push(y[fromIndex], y[toIndex]);\n      return;\n    }\n    newX.push(x[fromIndex]);\n    newY.push(y[fromIndex]);\n    let minY = Number.MAX_VALUE;\n    let maxY = Number.MIN_VALUE;\n    if (zoneNbPoints % 2 === 0) {\n      zoneNbPoints = zoneNbPoints / 2 + 1;\n    } else {\n      zoneNbPoints = (zoneNbPoints - 1) / 2 + 1;\n    }\n\n    // we will need to make some kind of min / max because there are too many points\n    // we will always keep the first point and the last point\n    let slot = (x[toIndex] - x[fromIndex]) / (zoneNbPoints - 1);\n    let currentX = x[fromIndex] + slot;\n    let first = true;\n    for (let i = fromIndex + 1; i <= toIndex; i++) {\n      if (first) {\n        minY = y[i];\n        maxY = y[i];\n        first = false;\n      } else {\n        if (y[i] < minY) minY = y[i];\n        if (y[i] > maxY) maxY = y[i];\n      }\n      if (x[i] >= currentX || i === toIndex) {\n        if (optimize) {\n          if (minY > newY[newX.length - 1]) {\n            // we can skip the intermediate value\n          } else if (maxY < newY[newX.length - 1]) {\n            // we can skip the intermediate value\n            maxY = minY;\n          } else {\n            newX.push(currentX - slot / 2);\n            newY.push(minY);\n          }\n        } else {\n          newX.push(currentX - slot / 2);\n          newY.push(minY);\n        }\n\n        newX.push(currentX);\n        newY.push(maxY);\n\n        currentX += slot;\n        first = true;\n      }\n    }\n  }\n}\n","/**\n * Order object of array, x has to be monotone.\n * Ensure x is growing\n * @param {object} data Object of kind {x:[], y:[]}.\n * @return {SD}\n */\n\nexport function growingX(data) {\n  const { x, y } = data;\n\n  if (x.length !== y.length) {\n    throw TypeError('sortX: length of x and y must be identical');\n  }\n\n  if (x.length < 2 || x[0] < x[1]) return data;\n\n  return {\n    x: x.slice(0).reverse(),\n    y: y.slice(0).reverse(),\n  };\n}\n","import { findClosestIndex } from '../x/findClosestIndex';\n\nimport { check } from './check';\n\n/**\n * Find the closest minimum going down hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function minClosestYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let minY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] < minY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] < minY) {\n      currentIndex++;\n    }\n    minY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n","import { findClosestIndex } from '../x/findClosestIndex';\n\nimport { check } from './check';\n\n/**\n * Find the closest maximum going up hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function maxClosestYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let maxY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] > maxY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] > maxY) {\n      currentIndex++;\n    }\n    maxY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n","import { findClosestIndex } from './findClosestIndex';\n\n/**\n *  Returns the targetIndex\n * @param {array} [x]\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @param {number}\n */\n\nexport function getTargetIndex(x, options = {}) {\n  let { target, targetIndex } = options;\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      return findClosestIndex(x, target);\n    } else {\n      return 0;\n    }\n  }\n  return targetIndex;\n}\n","import { getTargetIndex } from '../x/getTargetIndex';\n\nimport { check } from './check';\n\nexport function realMinYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  const targetIndex = getTargetIndex(x, options);\n  // interpolation to a sin() function\n  if (\n    y[targetIndex - 1] < 0 &&\n    y[targetIndex + 1] < 0 &&\n    y[targetIndex] <= y[targetIndex - 1] &&\n    y[targetIndex] <= y[targetIndex + 1]\n  ) {\n    let alpha = 20 * Math.log10(-y[targetIndex - 1]);\n    let beta = 20 * Math.log10(-y[targetIndex]);\n    let gamma = 20 * Math.log10(-y[targetIndex + 1]);\n    let p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n    return {\n      x: x[targetIndex] + (x[targetIndex] - x[targetIndex - 1]) * p,\n      y: y[targetIndex] - 0.25 * (y[targetIndex - 1] - y[targetIndex + 1]) * p,\n      index: targetIndex,\n    };\n  } else {\n    return {\n      x: x[targetIndex],\n      y: y[targetIndex],\n      index: targetIndex,\n    };\n  }\n}\n","import { getTargetIndex } from '../x/getTargetIndex';\n\nimport { check } from './check';\n/**\n * Find the closest minimum going down hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function realMaxYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n  const targetIndex = getTargetIndex(x, options);\n  // interpolation to a sin() function\n  if (\n    y[targetIndex - 1] > 0 &&\n    y[targetIndex + 1] > 0 &&\n    y[targetIndex] >= y[targetIndex - 1] &&\n    y[targetIndex] >= y[targetIndex + 1]\n  ) {\n    let alpha = 20 * Math.log10(y[targetIndex - 1]);\n    let beta = 20 * Math.log10(y[targetIndex]);\n    let gamma = 20 * Math.log10(y[targetIndex + 1]);\n    let p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n    return {\n      x: x[targetIndex] + (x[targetIndex] - x[targetIndex - 1]) * p,\n      y: y[targetIndex] - 0.25 * (y[targetIndex - 1] - y[targetIndex + 1]) * p,\n      index: targetIndex,\n    };\n  } else {\n    return {\n      x: x[targetIndex],\n      y: y[targetIndex],\n      index: targetIndex,\n    };\n  }\n}\n","import { check } from './check';\n/**\n * Finds all the max values\n * If the values are equal the middle\n * of the equal part will be the position of the signal!\n *\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @return {Array} Array of points\n */\n\nexport function maximaY(points = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 3) return [];\n  let maxima = [];\n  let startEqualIndex = -1;\n  for (let i = 1; i < x.length - 1; i++) {\n    if (y[i - 1] < y[i] && y[i + 1] < y[i]) {\n      maxima.push({ x: x[i], y: y[i], index: i });\n    } else if (y[i - 1] < y[i] && y[i + 1] === y[i]) {\n      startEqualIndex = i;\n    } else if (y[i - 1] === y[i] && y[i + 1] < y[i]) {\n      let index = ((i + startEqualIndex) / 2) >> 0;\n      maxima.push({ x: x[index], y: y[index], index });\n    }\n  }\n  return maxima;\n}\n","import { check } from './check';\n/**\n * Finds all the min values\n * If the values are equal the middle\n * of the equal part will be the position of the signal!\n *\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @return {Array} Array of points\n */\n\nexport function minimaY(points = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 3) return [];\n  let maxima = [];\n  let startEqualIndex = -1;\n  for (let i = 1; i < x.length - 1; i++) {\n    if (y[i - 1] > y[i] && y[i + 1] > y[i]) {\n      maxima.push({ x: x[i], y: y[i], index: i });\n    } else if (y[i - 1] > y[i] && y[i + 1] === y[i]) {\n      startEqualIndex = i;\n    } else if (y[i - 1] === y[i] && y[i + 1] > y[i]) {\n      let index = ((i + startEqualIndex) / 2) >> 0;\n      maxima.push({ x: x[index], y: y[index], index });\n    }\n  }\n  return maxima;\n}\n","import { findClosestIndex } from '../x/findClosestIndex';\n\nimport { check } from './check';\n\n/**\n * Returns an information about a signal\n *\n * We expect ordered data and equidistant X axis\n * You can use the method helper if required:\n * ML.ArrayXY.uniqueX\n * ML.ArrayXY.sortX\n * ML.ArrayXY.equallySpaced\n *\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex]\n * @return {object} Information about signal\n */\n\nexport function peakInfo(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 3) return undefined;\n  let { targetIndex, target } = options;\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    }\n  }\n\n  if (targetIndex === undefined) {\n    throw new Error('peakInfo: need to specify target or targetIndex');\n  }\n\n  let i = targetIndex;\n  let currentDiff = y[i] - y[i + 1];\n\n  let multiplier = currentDiff < 0 ? -1 : 1;\n  currentDiff *= multiplier;\n  while (i < x.length - 1) {\n    i++;\n    let newDiff = (y[i] - y[i + 1]) * multiplier;\n    if (newDiff < currentDiff) break;\n    currentDiff = newDiff;\n  }\n  let after = { x: x[i], y: y[i] };\n\n  i = targetIndex;\n  currentDiff = (y[i] - y[i - 1]) * multiplier;\n  while (i > 1) {\n    i--;\n    let newDiff = (y[i] - y[i - 1]) * multiplier;\n    if (newDiff < currentDiff) break;\n    currentDiff = newDiff;\n  }\n  let before = { x: x[i], y: y[i] };\n\n  return {\n    inflectionBefore: before,\n    inflectionAfter: after,\n    extrema: { x: x[targetIndex], y: y[targetIndex] },\n    inflectionMiddle: {\n      x: (before.x + after.x) / 2,\n      y: (before.y + after.y) / 2,\n    },\n    width: Math.abs(before.x - after.x),\n  };\n}\n","import { check } from './check';\n\n/**\n *\n * @param {array} [data] array of points {x,y}\n */\nexport function toXYObject(points) {\n  check(points);\n  const { x, y } = points;\n  let data = [];\n  for (let i = 0; i < x.length; i++) {\n    data.push({ x: x[i], y: y[i] });\n  }\n  return data;\n}\n","import { check } from './check';\nimport { extract } from './extract';\nimport { integration } from './integration';\nimport { integral } from './integral';\nimport { maxY } from './maxY';\nimport { maxYPoint } from './maxYPoint';\nimport { minYPoint } from './minYPoint';\nimport { reduce } from './reduce';\nimport { growingX } from './growingX';\nimport { minClosestYPoint } from './minClosestYPoint';\nimport { maxClosestYPoint } from './maxClosestYPoint';\nimport { realMinYPoint } from './realMinYPoint';\nimport { realMaxYPoint } from './realMaxYPoint';\nimport { maximaY } from './maximaY';\nimport { minimaY } from './minimaY';\nimport { peakInfo } from './peakInfo';\nimport { toXYObject } from './toXYObject';\n\nexport const XY = {\n  check,\n  extract,\n  integral,\n  integration,\n  maxY,\n  maximaY,\n  maxYPoint,\n  minimaY,\n  minYPoint,\n  reduce,\n  growingX,\n  minClosestYPoint,\n  maxClosestYPoint,\n  realMaxYPoint,\n  realMinYPoint,\n  peakInfo,\n  toXYObject,\n};\n","/**\n\n/**\n * This function add the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function add(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @return {object}\n */\nexport function boxPlot(array) {\n  array = array.slice(0).sort((a, b) => a - b);\n  if (array.length < 5) {\n    throw Error(\n      'boxPlot: can not calculate info if array contains less than 3 elements',\n    );\n  }\n  let info = {\n    Q1: 0.0,\n    Q2: 0.0,\n    Q3: 0.0,\n    min: array[0],\n    max: array[array.length - 1],\n  };\n  let q1max, q3min;\n  if (array.length % 2 === 1) {\n    // odd\n    let middle = (array.length - 1) / 2;\n    info.Q2 = array[middle];\n    q1max = middle - 1;\n    q3min = middle + 1;\n  } else {\n    // even\n    q3min = array.length / 2;\n    q1max = q3min - 1;\n    info.Q2 = (array[q1max] + array[q3min]) / 2;\n  }\n  if (q1max % 2 === 0) {\n    info.Q1 = array[q1max / 2];\n    info.Q3 = array[(array.length + q3min - 1) / 2];\n  } else {\n    info.Q1 = (array[(q1max + 1) / 2] + array[(q1max - 1) / 2]) / 2;\n    let middleOver = (array.length + q3min) / 2;\n    info.Q3 = (array[middleOver] + array[middleOver - 1]) / 2;\n  }\n  return info;\n}\n","/**\n\n/**\n * This function multiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Float64Array}\n */\nexport function multiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Float64Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n","import { multiply } from './multiply';\n\nexport function dotProduct(A, B) {\n  let g = multiply(A, B);\n  let result = 0;\n  for (let i = 0; i < A.length; i++) {\n    result += g[i];\n  }\n  return result;\n}\n","import { dotProduct } from './dotProduct';\n\n/**\n * Calculates the cross-correlation between 2 vectors\n * @param {Array} [A] - fixed array\n * @param {Array} [B] - sweeping array\n * @param {object} [options={}]\n * @param {number} [options.tau = 1] - sweep increment size (in number of points, min = 1, max = A.length)\n * @param {number} [options.lag = A.length - 1] - scalar lag parameter\n */\n\nexport function crossCorrelation(A, B, options = {}) {\n  let { tau = 1, lag = A.length - 1 } = options;\n  let result = new Float64Array(1 + (2 * lag) / tau);\n  if (A.length === B.length) {\n    let n = B.length;\n    let g = new Float64Array(2 * n);\n    let q = new Float64Array(2 * n);\n    for (let i = 0; i < n; i++) {\n      q[n + i] = B[i];\n    }\n    for (let i = n * 2 - (tau - 1); i > 0; i -= tau) {\n      let k = 0;\n      for (let j = i; j < n * 2; j++) {\n        g[k] = q[j];\n        k++;\n      }\n      let w = [];\n      for (let l = 0; l < n; l++) {\n        w[l] = g[l];\n      }\n      result[(k - (n - lag)) / tau] = dotProduct(A, w);\n    }\n  }\n  return result;\n}\n","import { crossCorrelation } from './crossCorrelation';\n\n/**\n * Calculates the auto-correlation of a vector\n * @param {Array} [A] - the array that will be fixed\n * @param {object} [options={}]\n * @param {number} [options.tau = 1] - sweep increment size (in number of points, min = 1, max = A.length)\n * @param {number} [options.lag = A.length - 1] - scalar lag parameter\n */\n\nexport function autoCorrelation(A, options = {}) {\n  return crossCorrelation(A, A, options);\n}\n","/**\n\n/**\n * Calculates the correlation between 2 vectors\n * https://en.wikipedia.org/wiki/Correlation_and_dependence\n *\n * @param {Array} [A] - the array that will be rotated\n * @param {Array} [B]\n * @return {Array}\n */\nexport function correlation(A, B) {\n  let n = A.length;\n  let sumA = 0;\n  let sumA2 = 0;\n  let sumB = 0;\n  let sumB2 = 0;\n  let sumAB = 0;\n  for (let i = 0; i < n; i++) {\n    let a = A[i];\n    let b = B[i];\n    sumA += a;\n    sumA2 += a ** 2;\n    sumB += b;\n    sumB2 += b ** 2;\n    sumAB += a * b;\n  }\n  return (\n    (n * sumAB - sumA * sumB) /\n    (Math.sqrt(n * sumA2 - sumA ** 2) * Math.sqrt(n * sumB2 - sumB ** 2))\n  );\n}\n","/**\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function divide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n * This function performs a circular shift to a new array\n * Positive values of shifts will shift to the right and negative values will do to the left\n * @example rotate([1,2,3,4],1) -> [4,1,2,3]\n * @example rotate([1,2,3,4],-1) -> [2,3,4,1]\n * @param {Array} array - the array that will be rotated\n * @param {number} shift\n * @return {Array}\n */\nexport function rotate(array, shift) {\n  shift = shift % array.length;\n  if (shift < 0) shift += array.length;\n  return array\n    .slice(array.length - shift)\n    .concat(array.slice(0, array.length - shift));\n}\n","/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function subtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n","import { add } from './add';\nimport { boxPlot } from './boxPlot';\nimport { autoCorrelation } from './autoCorrelation';\nimport { crossCorrelation } from './crossCorrelation';\nimport { correlation } from './correlation';\nimport { divide } from './divide';\nimport { findClosestIndex } from './findClosestIndex';\nimport { getFromToIndex } from './getFromToIndex';\nimport { getTargetIndex } from './getTargetIndex';\nimport { multiply } from './multiply';\nimport { rotate } from './rotate';\nimport { subtract } from './subtract';\n\nexport const X = {\n  add,\n  autoCorrelation,\n  boxPlot,\n  correlation,\n  crossCorrelation,\n  divide,\n  findClosestIndex,\n  getFromToIndex,\n  getTargetIndex,\n  multiply,\n  rotate,\n  subtract,\n};\n","import { XY, X } from 'ml-spectra-processing';\n\n/**\n * @private\n * @param {*} spectrum\n * @param {*} ranges\n */\nexport function updateRangesInfo(spectrum, ranges = []) {\n  spectrum.ranges = {};\n  for (let range of ranges) {\n    range = JSON.parse(JSON.stringify(range));\n    spectrum.ranges[range.label] = range;\n    let fromToIndex = {\n      fromIndex: X.findClosestIndex(spectrum.normalized.x, range.from),\n      toIndex: X.findClosestIndex(spectrum.normalized.x, range.to),\n    };\n    range.integration = XY.integration(spectrum.normalized, fromToIndex);\n    range.maxPoint = XY.maxYPoint(spectrum.normalized, fromToIndex);\n    range.minPoint = XY.minYPoint(spectrum.normalized, fromToIndex);\n    range.x = spectrum.normalized.x.slice(\n      fromToIndex.fromIndex,\n      fromToIndex.toIndex + 1,\n    );\n    range.y = spectrum.normalized.y.slice(\n      fromToIndex.fromIndex,\n      fromToIndex.toIndex + 1,\n    );\n  }\n}\n","import { minMax } from 'ml-stat/array';\n\nimport { getData } from './getData';\nimport { getNormalized } from './getNormalized';\nimport { updateRangesInfo } from './updateRangesInfo';\n\n/**\n * Class allowing manipulate one IR spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.x=[]] - x values\n * @param {Array} [json.y=[]] - y values\n */\nexport class Spectrum {\n  /**\n   *\n   * @param {array} x\n   * @param {array} y\n   * @param {string} id\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.normalization]\n   * @param {object} [options.normalized]\n   */\n  constructor(x, y, id, options = {}) {\n    const { meta = {}, normalization = {}, normalized } = options;\n\n    if (x && x.length > 1 && x[0] > x[1]) {\n      this.x = x.reverse();\n      this.y = y.reverse();\n    } else {\n      this.x = x || [];\n      this.y = y || [];\n    }\n    this.id = id;\n    this.meta = meta;\n    this.normalizedBoundary = { x: { min: 0, max: 0 }, y: { min: 0, max: 0 } };\n    if (normalized) {\n      this.normalized = normalized;\n      this.updateNormalizedBoundary();\n    } else {\n      this.updateNormalization(normalization);\n    }\n\n    this.updateMemory();\n  }\n\n  get minX() {\n    return this.x[0];\n  }\n\n  get maxX() {\n    return this.x[this.x.length - 1];\n  }\n\n  updateMemory() {\n    let original = ((this.x && this.x.length) || 0) * 16;\n    let normalized = this.normalized.x.length * 16;\n    this.memory = { original, normalized, total: original + normalized };\n  }\n\n  removeOriginal() {\n    this.x = undefined;\n    this.y = undefined;\n    this.updateMemory();\n  }\n\n  getXY() {\n    if (!Array.isArray(this.x) || !Array.isArray(this.y)) {\n      throw new Error('Can not get normalized data');\n    }\n    return { x: this.x, y: this.y };\n  }\n}\n\nSpectrum.prototype.getData = function (options) {\n  return getData(this, options);\n};\n\nSpectrum.prototype.updateNormalization = function (normalization) {\n  this.normalized = getNormalized(this, normalization);\n  this.ranges = {};\n  this.updateMemory();\n  this.updateNormalizedBoundary();\n};\n\nSpectrum.prototype.updateRangesInfo = function (ranges) {\n  updateRangesInfo(this, ranges);\n};\n\nSpectrum.prototype.updateNormalizedBoundary = function () {\n  this.normalizedBoundary.x = {\n    min: this.normalized.x[0],\n    max: this.normalized.x[this.normalized.x.length - 1],\n  };\n  this.normalizedBoundary.y = minMax(this.normalized.y);\n};\n","'use strict';\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    let floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    canonicDataLabels: true,\n    dynamicTyping: false,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false,\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    let wantXY = !options.withoutXY;\n\n    let start = Date.now();\n\n    let ntuples = {};\n    let ldr, dataValue, ldrs;\n    let position, endLine, infos;\n\n    let result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    let spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    let spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start,\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start,\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      let dataLabel;\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (canonicDataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          let xIndex = -1;\n          let yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            let firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1',\n            );\n            let secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1',\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            canonicDataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            canonicDataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (canonicDataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue, result);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (canonicDataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (canonicDataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (canonicDataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (canonicDataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (canonicDataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (canonicDataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (canonicDataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (\n        canonicDataLabel === '.OBSERVEFREQUENCY' ||\n        canonicDataLabel === '$SFO1'\n      ) {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (canonicDataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (canonicDataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (canonicDataLabel === '$REFERENCEPOINT') {\n        // OFFSET for Varian spectra\n        // if we activate this part it does not work for ACD specmanager\n        //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n        //                 var parts = dataValue.split(/ *, */);\n        //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n        //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n      } else if (canonicDataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (canonicDataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        let pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        let unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (canonicDataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(canonicDataLabel)) {\n        spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n      } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (canonicDataLabel.match(options.keepRecordsRegExp)) {\n        let label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        let value = dataValue.trim();\n        if (options.dynamicTyping && !isNaN(value)) {\n          value = Number(value);\n        }\n        if (result.info[label]) {\n          if (!Array.isArray(result.info[label])) {\n            result.info[label] = [result.info[label]];\n          }\n          result.info[label].push(value);\n        } else {\n          result.info[label] = value;\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start,\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start,\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data && spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              let data = spectrum.data[j];\n              let newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2),\n              };\n              for (let k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start,\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start,\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(canonicDataLabel) {\n    return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    let spectra = result.spectra;\n    let length = spectra.length;\n    let chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length),\n        },\n      },\n    };\n\n    let existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length),\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      let spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]],\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y,\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    let data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice(),\n        },\n      },\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      let shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    let l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    let minZ = spectra[0].data[0][0];\n    let maxZ = minZ;\n    let ySize = spectra.length;\n    let xSize = spectra[0].data[0].length / 2;\n    let z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      let xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        let value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs)),\n    };\n  }\n\n  function add2D(result, options) {\n    let zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    let noise = zData.noise;\n    let z = zData.z;\n    let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    let isOver0, isOver1, isOver2, isOver3;\n    let nbSubSpectra = z.length;\n    let nbPovars = z[0].length;\n    let pAx, pAy, pBx, pBy;\n\n    let x0 = zData.minX;\n    let xN = zData.maxX;\n    let dx = (xN - x0) / (nbPovars - 1);\n    let y0 = zData.minY;\n    let yN = zData.maxY;\n    let dy = (yN - y0) / (nbSubSpectra - 1);\n    let minZ = zData.minZ;\n    let maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    let iter = options.nbContourLevels * 2;\n    let contourLevels = new Array(iter);\n    let lineZValue;\n    for (let level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      let contourLevel = {};\n      contourLevels[level] = contourLevel;\n      let side = level % 2;\n      let factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      let lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        let subSpectra = z[iSubSpectra];\n        let subSpectraAfter = z[iSubSpectra + 1];\n        for (let povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels,\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    let yFactor = spectrum.yFactor;\n    let deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    let currentData = [];\n    spectrum.data = [currentData];\n\n    let currentX = spectrum.firstX;\n    let currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    let endLine = false;\n    let ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    let newLine = true;\n    let isDifference = false;\n    let isLastDifference = false;\n    let lastDifference = 0;\n    let isDuplicate = false;\n    let inComment = false;\n    let currentValue = 0; // can be a difference or a duplicate\n    let lastValue = 0; // must be the real last value\n    let isNegative = false;\n    let inValue = false;\n    let skipFirstValue = false;\n    let decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                let duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (let j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            let ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    let values;\n    let currentData = [];\n    spectrum.data = [currentData];\n\n    let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    let removeCommentRegExp = /\\$\\$.*/;\n    let peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    let values;\n    let currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nlet convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nlet stamps = {};\nlet worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function (resolve) {\n    let stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options,\n      }),\n    );\n  });\n}\n\nfunction createWorker() {\n  let workerURL = URL.createObjectURL(\n    new Blob(\n      [\n        `var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`,\n      ],\n      { type: 'application/javascript' },\n    ),\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function (event) {\n    let data = JSON.parse(event.data);\n    let stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: [],\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      let finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      let match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        let canonicDataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (canonicDataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nmodule.exports = {\n  convert: JcampConverter,\n  createTree: createTree,\n};\n","export function getJcampKind(data) {\n  let datatype = data.spectra[0].dataType.toLowerCase();\n  let yUnit = data.spectra[0].yUnit.toLowerCase();\n\n  if (datatype.match(/infrared/)) {\n    if (yUnit.match(/absorbance/)) {\n      return IR_ABSORBANCE;\n    } else {\n      return IR_TRANSMITTANCE;\n    }\n  }\n  return undefined;\n}\n\nexport const IR_TRANSMITTANCE = {\n  normalization: {},\n  importation: {\n    converter: (transmittance) => -Math.log10(transmittance),\n  },\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance',\n  },\n};\n\nexport const IR_ABSORBANCE = {\n  normalization: {},\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance',\n  },\n};\n\nexport const nmr1H = {\n  display: {\n    xLabel: 'δ [ppm]',\n    xInverted: true,\n    yLabel: 'Intensity',\n  },\n};\n\nexport const nmr13C = {\n  display: {\n    xLabel: 'δ [ppm]',\n    xInverted: true,\n    yLabel: 'Intensity',\n  },\n};\n","import { convert } from 'jcampconverter';\n\nimport { getJcampKind } from '../Kinds';\n/**\n * Create a spectrum from a jcamp\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nexport default function jcamp(jcamp) {\n  const parsed = convert(jcamp, { xy: true, keepRecordsRegExp: /TITLE/ });\n  const kind = getJcampKind(parsed);\n  const data = parsed.spectra[0].data[0];\n  const meta = parsed.info;\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data, kind, meta };\n}\n","\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] : Object of points contains property x (an array) and y (an array)\n * @return points\n */\n\nexport default function uniqueX(points = {}) {\n  const { x, y } = points;\n  if (x.length < 2) return;\n  if (x.length !== y.length) {\n    throw new Error('The X and Y arrays mush have the same length');\n  }\n\n  let current = x[0];\n  let counter = 0;\n\n  for (let i = 1; i < x.length; i++) {\n    if (current !== x[i]) {\n      counter++;\n      current = x[i];\n      x[counter] = x[i];\n      if (i !== counter) {\n        y[counter] = 0;\n      }\n    }\n    if (i !== counter) {\n      y[counter] += y[i];\n    }\n  }\n\n  x.length = counter + 1;\n  y.length = counter + 1;\n}\n","import uniqueXFunction from 'ml-arrayxy-uniquex';\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options={}]\n * @param {boolean} [options.rescale = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.min(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {object{x:<Array<number>>,y:<Array<number>>}\n */\nexport function parseXY(text, options = {}) {\n  let {\n    rescale = false,\n    uniqueX = false,\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Number.MAX_SAFE_INTEGER,\n    minNumberColumns = 2,\n  } = options;\n\n  maxNumberColumns = Math.max(maxNumberColumns, xColumn + 1, yColumn + 1);\n  minNumberColumns = Math.max(xColumn + 1, yColumn + 1, minNumberColumns);\n\n  let lines = text.split(/[\\r\\n]+/);\n\n  let maxY = Number.MIN_VALUE;\n  let result = { x: [], y: [] };\n  let info = [];\n  for (let l = 0; l < lines.length; l++) {\n    let line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      let fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n        fields.length >= minNumberColumns &&\n        fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result.x.push(x);\n        result.y.push(y);\n      }\n    } else if (line) {\n      info.push({ position: result.x.length, value: line });\n    }\n  }\n\n  if (uniqueX) {\n    uniqueXFunction(result);\n  }\n\n  if (rescale) {\n    for (let i = 0; i < result.y.length; i++) {\n      result.y[i] /= maxY;\n    }\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result,\n  };\n}\n","import { parseXY } from 'xy-parser';\n\n/**\n * Create a spectrum from a text file\n * @param {string} text - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nexport default function text(text, options = {}) {\n  const { kind, parserOptions = {} } = options;\n\n  const data = parseXY(text, parserOptions);\n\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data };\n}\n","/**\n * Creates a g\n * @param {string} text - String containing the text data\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] Field separator\n * @return {object} - {matrix, data, x, ids}\n */\nexport default function matrix(text, options = {}) {\n  const lines = text.split(/[\\r\\n]+/).filter((value) => value);\n  const { fs = '\\t' } = options;\n  let matrix = [];\n  let ids = [];\n  let meta = [];\n  let x = [];\n\n  let headers = lines[0].split(fs);\n  let labels = [];\n\n  for (let i = 0; i < headers.length; i++) {\n    let header = headers[i];\n    if (isNaN(header)) {\n      labels[i] = header;\n    } else {\n      x = headers.slice(i).map((value) => Number(value));\n      break;\n    }\n  }\n\n  for (let i = 1; i < lines.length; i++) {\n    let line = lines[i];\n    let parts = line.split('\\t');\n    ids.push(parts[0]);\n    let oneMeta = {};\n    meta.push(oneMeta);\n    for (let j = 1; j < parts.length; j++) {\n      if (j < labels.length) {\n        oneMeta[labels[j]] = parts[j];\n      } else {\n        matrix.push(parts.slice(labels.length).map((value) => Number(value)));\n        break;\n      }\n    }\n  }\n  return { x, meta, matrix, ids };\n}\n","export function getNormalizationAnnotations(filter = {}, boundary) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: Number.MIN_SAFE_INTEGER, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: Number.MAX_SAFE_INTEGER, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n","import { X } from 'ml-spectra-processing';\n\n/**\n * @private\n * @param {*} spectra\n */\n\nexport function getBoxPlotData(spectra) {\n  let matrix = [];\n  let x = spectra[0].normalized.x;\n  for (let spectrum of spectra) {\n    matrix.push(spectrum.normalized.y);\n  }\n\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let result;\n  let aColumn = new Float64Array(nbRow);\n  for (let column = 0; column < nbColumn; column++) {\n    for (let row = 0; row < nbRow; row++) {\n      aColumn[row] = matrix[row][column];\n    }\n    let info = X.boxPlot(aColumn);\n    if (!result) {\n      result = { x };\n      for (let key in info) {\n        result[key] = [];\n      }\n    }\n    for (let key in info) {\n      result[key].push(info[key]);\n    }\n  }\n  return result;\n}\n","import { getBoxPlotData } from '../spectra/getBoxPlotData';\n\nexport function getBoxPlotAnnotations(spectra, options = {}) {\n  const {\n    q13FillColor = '#000',\n    q13FillOpacity = 0.3,\n    q2StrokeColor = '#000',\n    q2StrokeWidth = 3,\n    minMaxFillColor = '#000',\n    minMaxFillOpacity = 0.15,\n  } = options;\n  let annotations = [];\n\n  let data = getBoxPlotData(spectra);\n  if (q13FillOpacity && q13FillColor) {\n    let q13 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q1[i],\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q3[i],\n      });\n    }\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: q13FillColor,\n        fillOpacity: q13FillOpacity,\n        strokeWidth: 0.0000001,\n        position: q13,\n      },\n    });\n  }\n\n  if (q2StrokeColor && q2StrokeWidth) {\n    let q2 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i],\n      });\n    }\n    // Temp code because polyline is not working\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i],\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        strokeWidth: q2StrokeWidth,\n        strokeColor: q2StrokeColor,\n        position: q2,\n      },\n    });\n  }\n\n  if (minMaxFillColor && minMaxFillOpacity) {\n    let minMax = [];\n    for (let i = 0; i < data.x.length; i++) {\n      minMax.push({\n        x: data.x[i],\n        y: data.min[i],\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      minMax.push({\n        x: data.x[i],\n        y: data.max[i],\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: minMaxFillColor,\n        fillOpacity: minMaxFillOpacity,\n        strokeWidth: 0.0000001,\n        strokeColor: '#FFF',\n        position: minMax,\n      },\n    });\n  }\n\n  return annotations;\n}\n","export function addChartDataStyle(data, spectrum) {\n  data.styles = {\n    unselected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 1,\n      lineStyle: 1,\n    },\n    selected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 3,\n      lineStyle: 1,\n    },\n  };\n  data.label = spectrum.meta.id || spectrum.id;\n}\n","import { addChartDataStyle } from './addChartDataStyle';\n/**\n * Retrieve a chart with selected original data\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by default all\n * @param {Array} [options.yFactor=1]\n */\nexport function getChart(spectra, options = {}) {\n  const { ids, yFactor, xFilter = {} } = options;\n  let chart = {\n    data: [],\n  };\n\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.getData({ yFactor, xFilter });\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n","/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.chroma = factory());\n}(this, (function () { 'use strict';\n\n    var limit = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var clip_rgb = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n        var name = list[i];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var unpack = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var last = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb,\n    \tlimit: limit,\n    \ttype: type,\n    \tunpack: unpack,\n    \tlast: last,\n    \tPI: PI,\n    \tTWOPI: PI*2,\n    \tPITHIRD: PI/3,\n    \tDEG2RAD: PI / 180,\n    \tRAD2DEG: 180 / PI\n    };\n\n    var input = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$1 = utils.last;\n    var clip_rgb$1 = utils.clip_rgb;\n    var type$1 = utils.type;\n\n\n    var Color = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$1(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$1(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!input.sorted) {\n                input.autodetect = input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (input.format[mode]) {\n            var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$1(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color.prototype.toString = function toString () {\n        if (type$1(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color;\n\n    var chroma = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma.Color, [ null ].concat( args) ));\n    };\n\n    chroma.Color = Color_1;\n    chroma.version = '2.1.0';\n\n    var chroma_1 = chroma;\n\n    var unpack$1 = utils.unpack;\n    var max = Math.max;\n\n    var rgb2cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$1(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max(r,max(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk;\n\n    var unpack$2 = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$2(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var unpack$3 = utils.unpack;\n    var type$2 = utils.type;\n\n\n\n    Color_1.prototype.cmyk = function() {\n        return rgb2cmyk_1(this._rgb);\n    };\n\n    chroma_1.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input.format.cmyk = cmyk2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'cmyk');\n            if (type$2(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$4 = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$4(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css;\n\n    var unpack$5 = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$5(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl;\n\n    var unpack$6 = utils.unpack;\n    var last$3 = utils.last;\n\n\n    var round = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$6(args, 'rgba');\n        var mode = last$3(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css_1(rgb2hsl_1(rgba), mode);\n        }\n        rgba[0] = round(rgba[0]);\n        rgba[1] = round(rgba[1]);\n        rgba[2] = round(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css;\n\n    var unpack$7 = utils.unpack;\n    var round$1 = Math.round;\n\n    var hsl2rgb = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$7(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$1(c[0]*255),round$1(c[1]*255),round$1(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$2 = Math.round;\n\n    var css2rgb = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input.format.named) {\n            try {\n                return input.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb_1(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb_1(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb;\n\n    var type$3 = utils.type;\n\n\n\n\n    Color_1.prototype.css = function(mode) {\n        return rgb2css_1(this._rgb, mode);\n    };\n\n    chroma_1.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['css']) ));\n    };\n\n    input.format.css = css2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    input.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$8(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma_1.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color_1.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$9 = utils.unpack;\n\n    var rgb2hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$9(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg;\n\n    var unpack$a = utils.unpack;\n    var floor = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$a(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$b = utils.unpack;\n    var type$4 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hcg = function() {\n        return rgb2hcg_1(this._rgb);\n    };\n\n    chroma_1.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input.format.hcg = hcg2rgb_1;\n\n    input.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$b(args, 'hcg');\n            if (type$4(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$c = utils.unpack;\n    var last$4 = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$c(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last$4(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb;\n\n    var type$5 = utils.type;\n\n\n\n\n    Color_1.prototype.hex = function(mode) {\n        return rgb2hex_1(this._rgb, mode);\n    };\n\n    chroma_1.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hex']) ));\n    };\n\n    input.format.hex = hex2rgb_1;\n    input.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$5(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$d = utils.unpack;\n    var TWOPI = utils.TWOPI;\n    var min = Math.min;\n    var sqrt = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI - h;\n            }\n            h /= TWOPI;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi;\n\n    var unpack$e = utils.unpack;\n    var limit$1 = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$e(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit$1(i*r*3);\n        g = limit$1(i*g*3);\n        b = limit$1(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$f = utils.unpack;\n    var type$6 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsi = function() {\n        return rgb2hsi_1(this._rgb);\n    };\n\n    chroma_1.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input.format.hsi = hsi2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'hsi');\n            if (type$6(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$g = utils.unpack;\n    var type$7 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsl = function() {\n        return rgb2hsl_1(this._rgb);\n    };\n\n    chroma_1.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input.format.hsl = hsl2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$g(args, 'hsl');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$h = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$h(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv = rgb2hsl$1;\n\n    var unpack$i = utils.unpack;\n    var floor$1 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$i(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$1(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$j = utils.unpack;\n    var type$8 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma_1.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input.format.hsv = hsv2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$j(args, 'hsv');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var unpack$k = utils.unpack;\n    var pow = Math.pow;\n\n    var rgb2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$k(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > labConstants.t3) { return pow(t, 1 / 3); }\n        return t / labConstants.t2 + labConstants.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab;\n\n    var unpack$l = utils.unpack;\n    var pow$1 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$l(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = labConstants.Yn * lab_xyz(y);\n        x = labConstants.Xn * lab_xyz(x);\n        z = labConstants.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$9 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lab = function() {\n        return rgb2lab_1(this._rgb);\n    };\n\n    chroma_1.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lab']) ));\n    };\n\n    input.format.lab = lab2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'lab');\n            if (type$9(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$n = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$1 = Math.sqrt;\n    var atan2 = Math.atan2;\n    var round$4 = Math.round;\n\n    var lab2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$n(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$1(a * a + b * b);\n        var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n        if (round$4(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch;\n\n    var unpack$o = utils.unpack;\n\n\n\n    var rgb2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab_1(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch_1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch;\n\n    var unpack$p = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin = Math.sin;\n    var cos$1 = Math.cos;\n\n    var lch2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$p(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$1(h) * c, sin(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab;\n\n    var unpack$q = utils.unpack;\n\n\n\n    var lch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$q(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab_1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb_1 (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb;\n\n    var unpack$r = utils.unpack;\n\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$r(args, 'hcl').reverse();\n        return lch2rgb_1.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$s = utils.unpack;\n    var type$a = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lch = function() { return rgb2lch_1(this._rgb); };\n    Color_1.prototype.hcl = function() { return rgb2lch_1(this._rgb).reverse(); };\n\n    chroma_1.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lch']) ));\n    };\n    chroma_1.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input.format.lch = lch2rgb_1;\n    input.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$s(args, m);\n            if (type$a(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11;\n\n    var type$b = utils.type;\n\n\n\n\n\n    Color_1.prototype.name = function() {\n        var hex = rgb2hex_1(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11_1[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11_1[name]) { return hex2rgb_1(w3cx11_1[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$t = utils.unpack;\n\n    var rgb2num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$t(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num;\n\n    var type$c = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var type$d = utils.type;\n\n\n\n    Color_1.prototype.num = function() {\n        return rgb2num_1(this._rgb);\n    };\n\n    chroma_1.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['num']) ));\n    };\n\n    input.format.num = num2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var unpack$u = utils.unpack;\n    var type$e = utils.type;\n    var round$5 = Math.round;\n\n    Color_1.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$5);\n    };\n\n    Color_1.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$5(v)) : v;\n        });\n    };\n\n    chroma_1.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$u(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$u(args, 'rgba');\n            if (type$e(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log = Math.log;\n\n    var temperature2rgb = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n\n    var unpack$v = utils.unpack;\n    var round$6 = Math.round;\n\n    var rgb2temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$v(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb_1(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round$6(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature;\n\n    Color_1.prototype.temp =\n    Color_1.prototype.kelvin =\n    Color_1.prototype.temperature = function() {\n        return rgb2temperature_1(this._rgb);\n    };\n\n    chroma_1.temp =\n    chroma_1.kelvin =\n    chroma_1.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['temp']) ));\n    };\n\n    input.format.temp =\n    input.format.kelvin =\n    input.format.temperature = temperature2rgb_1;\n\n    var type$f = utils.type;\n\n    Color_1.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$f(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    Color_1.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    Color_1.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= labConstants.Kn * amount;\n    \treturn new Color_1(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color_1.prototype.darker = Color_1.prototype.darken;\n    Color_1.prototype.brighter = Color_1.prototype.brighten;\n\n    Color_1.prototype.get = function(mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var type$g = utils.type;\n    var pow$2 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color_1.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$g(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color_1([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color_1([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color_1([0,0,0]), this) : test(this, new Color_1([255,255,255]))).rgb();\n            return new Color_1(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$2((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator = {};\n\n    var type$h = utils.type;\n\n\n    var mix = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$h(col1) !== 'object') { col1 = new Color_1(col1); }\n        if (type$h(col2) !== 'object') { col2 = new Color_1(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    Color_1.prototype.mix =\n    Color_1.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    Color_1.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color_1([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    Color_1.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += labConstants.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color_1(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var type$i = utils.type;\n\n    Color_1.prototype.set = function(mc, value, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) {\n                if (type$i(value) == 'string') {\n                    switch(value.charAt(0)) {\n                        case '+': src[i] += +value; break;\n                        case '-': src[i] += +value; break;\n                        case '*': src[i] *= +(value.substr(1)); break;\n                        case '/': src[i] /= +(value.substr(1)); break;\n                        default: src[i] = +value;\n                    }\n                } else if (type$i(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color_1(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var rgb$1 = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.rgb = rgb$1;\n\n    var sqrt$2 = Math.sqrt;\n    var pow$3 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color_1(\n            sqrt$2(pow$3(x1,2) * (1-f) + pow$3(x2,2) * f),\n            sqrt$2(pow$3(y1,2) * (1-f) + pow$3(y2,2) * f),\n            sqrt$2(pow$3(z1,2) * (1-f) + pow$3(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.lrgb = lrgb;\n\n    var lab$1 = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator.lab = lab$1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1-(hue0+360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1+360-hue0;\n            } else{\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1-lbv0);\n        return new Color_1([hue, sat, lbv], m);\n    };\n\n    var lch$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator.lch = lch$1;\n    interpolator.hcl = lch$1;\n\n    var num$1 = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color_1(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator.num = num$1;\n\n    var hcg$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator.hcg = hcg$1;\n\n    var hsi$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator.hsi = hsi$1;\n\n    var hsl$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator.hsl = hsl$1;\n\n    var hsv$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator.hsv = hsv$1;\n\n    var clip_rgb$2 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$3 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$1 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$1(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$1(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color_1(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$3(xyz[0]);\n        xyz[1] = sqrt$3(xyz[1]);\n        xyz[2] = sqrt$3(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color_1(clip_rgb$2(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n\n    var type$j = utils.type;\n\n    var pow$5 = Math.pow;\n\n    var scale = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma_1('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$j(colors) === 'string' && chroma_1.brewer &&\n                chroma_1.brewer[colors.toLowerCase()]) {\n                colors = chroma_1.brewer[colors.toLowerCase()];\n            }\n            if (type$j(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma_1(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$5(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$j(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma_1.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$j(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma_1(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$j(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma_1.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma_1.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors, _pos);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$j(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma_1[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma_1(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n\n\n\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 5) {\n            var I0 = bezier(colors.slice(0, 3));\n            var I1 = bezier(colors.slice(2, 5));\n            I = function(t) {\n                if (t < 0.5) {\n                    return I0(t*2);\n                } else {\n                    return I1((t-0.5)*2);\n                }\n            };\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n\n\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma_1(top).rgb();\n            var c1 = chroma_1(bottom).rgb();\n            return chroma_1.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken$1 = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken$1));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$k = utils.type;\n    var clip_rgb$3 = utils.clip_rgb;\n    var TWOPI$2 = utils.TWOPI;\n    var pow$6 = Math.pow;\n    var sin$2 = Math.sin;\n    var cos$3 = Math.cos;\n\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$k(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI$2 * (((start+120)/360) + (rotations * fract));\n            var l = pow$6(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$3(a);\n            var sin_a = sin$2(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma_1(clip_rgb$3([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$k(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$k(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma_1.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var digits = '0123456789abcdef';\n\n    var floor$2 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$2(random() * 16));\n        }\n        return new Color_1(code, 'hex');\n    };\n\n    var log$1 = Math.log;\n    var pow$7 = Math.pow;\n    var floor$3 = Math.floor;\n    var abs = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log$1(min);\n            var max_log = Math.LOG10E * log$1(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$7(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor$3(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var sqrt$4 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var abs$1 = Math.abs;\n    var cos$4 = Math.cos;\n    var PI$2 = Math.PI;\n\n    var deltaE = function(a, b, L, C) {\n        if ( L === void 0 ) L=1;\n        if ( C === void 0 ) C=1;\n\n        // Delta E (CMC)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var c1 = sqrt$4((a1 * a1) + (b1 * b1));\n        var c2 = sqrt$4((a2 * a2) + (b2 * b2));\n        var sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + (0.01765 * L1));\n        var sc = ((0.0638 * c1) / (1.0 + (0.0131 * c1))) + 0.638;\n        var h1 = c1 < 0.000001 ? 0.0 : (atan2$2(b1, a1) * 180.0) / PI$2;\n        while (h1 < 0) { h1 += 360; }\n        while (h1 >= 360) { h1 -= 360; }\n        var t = (h1 >= 164.0) && (h1 <= 345.0) ? (0.56 + abs$1(0.2 * cos$4((PI$2 * (h1 + 168.0)) / 180.0))) : (0.36 + abs$1(0.4 * cos$4((PI$2 * (h1 + 35.0)) / 180.0)));\n        var c4 = c1 * c1 * c1 * c1;\n        var f = sqrt$4(c4 / (c4 + 1900.0));\n        var sh = sc * (((f * t) + 1.0) - f);\n        var delL = L1 - L2;\n        var delC = c1 - c2;\n        var delA = a1 - a2;\n        var delB = b1 - b2;\n        var dH2 = ((delA * delA) + (delB * delB)) - (delC * delC);\n        var v1 = delL / (L * sl);\n        var v2 = delC / (C * sc);\n        var v3 = sh;\n        return sqrt$4((v1 * v1) + (v2 * v2) + (dH2 / (v3 * v3)));\n    };\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color_1, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n\n\n\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma_1.hsl(180,1,.9), chroma_1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff'], [0,.25,.75,1]).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n        var key = list$1[i$1];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma_1.average = average;\n    chroma_1.bezier = bezier_1;\n    chroma_1.blend = blend_1;\n    chroma_1.cubehelix = cubehelix;\n    chroma_1.mix = chroma_1.interpolate = mix;\n    chroma_1.random = random_1;\n    chroma_1.scale = scale;\n\n    // other utility methods\n    chroma_1.analyze = analyze_1.analyze;\n    chroma_1.contrast = contrast;\n    chroma_1.deltaE = deltaE;\n    chroma_1.distance = distance;\n    chroma_1.limits = analyze_1.limits;\n    chroma_1.valid = valid;\n\n    // scale\n    chroma_1.scales = scales;\n\n    // colors\n    chroma_1.colors = w3cx11_1;\n    chroma_1.brewer = colorbrewer_1;\n\n    var chroma_js = chroma_1;\n\n    return chroma_js;\n\n})));\n","import chroma from 'chroma-js';\n\n/**\n * Retrieve a chart with autocorrelation color\n * @param {SpectraProcessor} [spectraProcessor]\n * @param {number} [index]\n * @param {object} [options={}]\n * @param {Array} [options.autocorrelation] precalculated autocorrelation {x,y}\n * @param {Array} [options.maxDataPoints=]\n */\nexport function getAutocorrelationChart(spectraProcessor, index, options = {}) {\n  const {\n    autocorrelation = spectraProcessor.getAutocorrelation(index),\n  } = options;\n\n  let max = autocorrelation.y.reduce(function (a, b) {\n    return isNaN(b) ? a : Math.max(a, b);\n  }, Number.MIN_VALUE);\n\n  let min = autocorrelation.y.reduce(function (a, b) {\n    return isNaN(b) ? a : Math.min(a, b);\n  }, Number.MAX_VALUE);\n\n  let colorCallback = chroma\n    .scale(['blue', 'cyan', 'yellow', 'red'])\n    .domain([min, max])\n    .mode('lch');\n\n  let colorScale = autocorrelation.y.map((y) => colorCallback(y));\n\n  let mean = spectraProcessor.getMeanData();\n\n  let colorSpectrum = {\n    type: 'color',\n    x: mean.x,\n    y: mean.y,\n    color: colorScale,\n    styles: {\n      unselected: {\n        lineWidth: 1,\n        lineStyle: 1,\n      },\n      selected: {\n        lineWidth: 3,\n        lineStyle: 1,\n      },\n    },\n  };\n\n  return colorSpectrum;\n}\n","/**\n * @private\n * @param {*} spectra\n * @param {object} options\n */\n\nexport function getNormalizedData(spectra, options = {}) {\n  const { ids } = options;\n\n  let matrix = [];\n  let meta = [];\n  let currentIDs = [];\n  let x = [];\n\n  if (Array.isArray(spectra) && spectra.length > 0) {\n    for (let spectrum of spectra) {\n      if (!ids || ids.includes(spectrum.id)) {\n        currentIDs.push(spectrum.id);\n        matrix.push(spectrum.normalized.y);\n        meta.push(spectrum.meta);\n      }\n    }\n    x = spectra[0].normalized.x;\n  }\n\n  return { ids: currentIDs, matrix, meta, x };\n}\n","import { getNormalizedData } from '../spectra/getNormalizedData';\n\nexport function getTrackAnnotation(spectra, index, options = {}) {\n  const { ids, showSpectrumID = true } = options;\n  let annotations = [];\n\n  let normalized = getNormalizedData(spectra, { ids });\n\n  if (normalized.ids.length === 0) return annotations;\n  let line = 0;\n\n  // header containing X coordinate\n  annotations.push({\n    type: 'line',\n    position: [\n      { x: `${70}px`, y: `${15 + 15 * line}px` },\n      { x: `${85}px`, y: `${15 + 15 * line}px` },\n    ],\n    strokeWidth: 0.0000001,\n    label: {\n      size: 16,\n      text: `x: ${normalized.x[index].toPrecision(6)}`,\n      position: { x: `${130}px`, y: `${20 + 15 * line}px` },\n    },\n  });\n  line++;\n\n  for (let i = 0; i < normalized.ids.length; i++) {\n    let id = normalized.ids[i];\n    let meta = normalized.meta[i];\n    let y = normalized.matrix[i][index];\n    annotations.push({\n      type: 'line',\n      position: [\n        { x: `${70}px`, y: `${15 + 15 * line}px` },\n        { x: `${85}px`, y: `${15 + 15 * line}px` },\n      ],\n      strokeColor: meta.color,\n      strokeWidth: 2,\n      label: {\n        text: `${y.toPrecision(4)}${showSpectrumID ? ` - ${id}` : ''}`,\n        position: { x: `${90}px`, y: `${20 + 15 * line}px` },\n      },\n    });\n    line++;\n  }\n\n  return annotations;\n}\n","import { addChartDataStyle } from './addChartDataStyle';\n\nexport function getNormalizedChart(spectra, options = {}) {\n  const { ids } = options;\n  let chart = {\n    data: [],\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.normalized;\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n","import { addChartDataStyle } from './addChartDataStyle';\n/**\n *\n * @param {SpectraProcessor} spectraProcessor\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {Array} [options.ranges] Array of object containing {from:'', to:'', label:''}\n * @param {Array} [options.calculations] Array of object containing {label:'', formula:''}\n * @param {boolean} [options.relative=false]\n */\nexport function getScaledChart(spectraProcessor, options = {}) {\n  let scaled = spectraProcessor.getScaledData(options);\n\n  let chart = {\n    data: [],\n  };\n  if (!scaled || !scaled.matrix) return chart;\n\n  for (let i = 0; i < scaled.matrix.length; i++) {\n    let data = {\n      x: scaled.x,\n      y: Array.from(scaled.matrix[i]), // need to ensure not a typed array\n    };\n    addChartDataStyle(data, { meta: scaled.meta[i], id: scaled.ids[i] });\n    chart.data.push(data);\n  }\n\n  return chart;\n}\n","import { X } from 'ml-spectra-processing';\n\n/**\n * @private\n */\n\nexport function getAutocorrelation(normalized, index) {\n  let matrix = normalized.matrix;\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let array1 = new Float64Array(nbRow);\n  let array2 = new Float64Array(nbRow);\n  let result = new Array(nbColumn);\n  for (let j = 0; j < nbRow; j++) {\n    array1[j] = matrix[j][index];\n  }\n  for (let i = 0; i < nbColumn; i++) {\n    for (let j = 0; j < nbRow; j++) {\n      array2[j] = matrix[j][i];\n    }\n    result[i] = X.correlation(array1, array2);\n  }\n  return {\n    x: normalized.x,\n    y: result,\n  };\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","export function inspectMatrix() {\n  const indent = ' '.repeat(2);\n  const indentData = ' '.repeat(4);\n  return `${this.constructor.name} {\n${indent}[\n${indentData}${inspectData(this, indentData)}\n${indent}]\n${indent}rows: ${this.rows}\n${indent}columns: ${this.columns}\n}`;\n}\n\nconst maxRows = 15;\nconst maxColumns = 10;\nconst maxNumSize = 8;\n\nfunction inspectData(matrix, indent) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j)));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indent}`);\n}\n\nfunction formatNumber(num) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.substring(eIndex);\n  return exponential.substring(0, maxNumSize - e.length) + e;\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import rescale from 'ml-array-rescale';\n\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport { inspectMatrix } from './inspect';\nimport { installMathOperations } from './mathOperations';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { Matrix } from 'ml-matrix';\n\n/**\n * @private\n */\n\nexport function getMeanData(normalized) {\n  let matrix = new Matrix(normalized.matrix);\n  return {\n    x: normalized.x,\n    y: matrix.mean('column'),\n  };\n}\n","import { getNormalizedData } from './getNormalizedData.js';\n\n/**\n * @private\n * @param {*} spectra\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] field separator\n * @param {string} [options.rs='\\n'] record (line) separator\n */\n\nexport function getNormalizedText(spectra, options = {}) {\n  let { fs = '\\t', rs = '\\n' } = options;\n  let { matrix, meta, ids, x } = getNormalizedData(spectra);\n  let allKeysObject = {};\n  for (let metum of meta) {\n    for (let key of Object.keys(metum)) {\n      let type = typeof metum[key];\n      if (type === 'number' || type === 'string' || type === 'boolean') {\n        allKeysObject[key] = true;\n      }\n    }\n  }\n  let allKeys = Object.keys(allKeysObject);\n\n  let lines = [];\n  let line = [];\n  line.push('id', ...allKeys, ...x);\n  lines.push(line.join(fs));\n\n  for (let i = 0; i < ids.length; i++) {\n    line = [];\n    line.push(ids[i]);\n    for (let key of allKeys) {\n      line.push(meta[i][key]);\n    }\n    line.push(...matrix[i]);\n    lines.push(line.join(fs));\n  }\n\n  return lines.join(rs);\n}\n","import { X } from 'ml-spectra-processing';\n\nexport function getFromToIndex(xs, range) {\n  let { from, to } = range;\n  if (from === undefined) {\n    from = xs[0];\n  }\n  if (to === undefined) {\n    to = xs[xs.length - 1];\n  }\n\n  return {\n    fromIndex: X.findClosestIndex(xs, from),\n    toIndex: X.findClosestIndex(xs, to),\n  };\n}\n","import { XY, X } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function min(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = XY.minYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => XY.minYPoint(spectrum.normalized, fromToIndex).y,\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n","import { XY, X } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function max(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => XY.maxYPoint(spectrum.normalized, fromToIndex).y,\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","export default function checkArraySize(x, y) {\n  if (!Array.isArray(x) || !Array.isArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","export { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\n\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (Array.isArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n)\n    };\n  }\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\n\nexport default class SimpleLinearRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = [y.intercept, y.slope];\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'simpleLinearRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(x) {\n    return this.slope * x + this.intercept;\n  }\n\n  computeX(y) {\n    return (y - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    let result = 'f(x) = ';\n    if (this.slope !== 0) {\n      const xFactor = maybeToPrecision(this.slope, precision);\n      result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\n      if (this.intercept !== 0) {\n        const absIntercept = Math.abs(this.intercept);\n        const operator = absIntercept === this.intercept ? '+' : '-';\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'simpleLinearRegression') {\n      throw new TypeError('not a SLR model');\n    }\n    return new SimpleLinearRegression(true, json);\n  }\n}\n\nfunction regress(slr, x, y) {\n  const n = x.length;\n  let xSum = 0;\n  let ySum = 0;\n\n  let xSquared = 0;\n  let xY = 0;\n\n  for (let i = 0; i < n; i++) {\n    xSum += x[i];\n    ySum += y[i];\n    xSquared += x[i] * x[i];\n    xY += x[i] * y[i];\n  }\n\n  const numerator = n * xY - xSum * ySum;\n  slr.slope = numerator / (n * xSquared - xSum * xSum);\n  slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n  slr.coefficients = [slr.intercept, slr.slope];\n}\n","import { XY } from 'ml-spectra-processing';\nimport SimpleLinearRegression from 'ml-regression-simple-linear';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function minMax(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = {\n    min: XY.minYPoint(targetSpectrum.normalized, fromToIndex).y,\n    max: XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y,\n  };\n\n  let values = spectra.map((spectrum) => {\n    return {\n      min: XY.minYPoint(spectrum.normalized, fromToIndex).y,\n      max: XY.maxYPoint(spectrum.normalized, fromToIndex).y,\n    };\n  });\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    const regression = new SimpleLinearRegression(\n      [targetValue.min, targetValue.max],\n      [values[i].min, values[i].max],\n    );\n\n    let length = spectrum.normalized.y.length;\n    let scaled = new Array(length);\n    for (let j = 0; j < length; j++) {\n      scaled[j] = regression.computeX(spectrum.normalized.y[j]);\n    }\n    matrix.push(scaled);\n  }\n\n  return matrix;\n}\n","import { XY, X } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function range(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = XY.integration(targetSpectrum.normalized, fromToIndex);\n\n  let values = spectra.map((spectrum) =>\n    XY.integration(spectrum.normalized, fromToIndex),\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n","import { X, XY } from 'ml-spectra-processing';\n\nimport { getNormalizedData } from './getNormalizedData';\nimport { min } from './scaled/min';\nimport { max } from './scaled/max';\nimport { minMax } from './scaled/minMax';\nimport { range as rangeFct } from './scaled/range';\nimport { getFromToIndex } from './scaled/getFromToIndex';\n/**\n * @private\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n * @param {Array} [options.ranges] Array of object containing {from:'', to:'', label:''}\n * @param {Array} [options.calculations] Array of object containing {label:'', formula:''}\n * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[], ranges:[object] }\n */\n\nexport function getScaledData(spectraProcessor, options = {}) {\n  if (!spectraProcessor.spectra || !spectraProcessor.spectra[0]) return {};\n  const {\n    range,\n    targetID,\n    relative,\n    method,\n    ids,\n    ranges,\n    calculations,\n  } = options;\n  let targetSpectrum =\n    spectraProcessor.getSpectrum(targetID) || spectraProcessor.spectra[0];\n  let spectra = spectraProcessor.getSpectra(ids);\n  let result;\n\n  if (method === '' || method === undefined) {\n    result = getNormalizedData(spectra);\n  } else {\n    let matrix;\n    switch (method.toLowerCase()) {\n      case 'min':\n        matrix = min(spectra, targetSpectrum, range);\n        break;\n      case 'max':\n        matrix = max(spectra, targetSpectrum, range);\n        break;\n      case 'minmax':\n        matrix = minMax(spectra, targetSpectrum, range);\n        break;\n      case 'range':\n        matrix = rangeFct(spectra, targetSpectrum, range);\n        break;\n      default:\n        throw new Error(`getScaledData: unknown method: ${method}`);\n    }\n    let meta = [];\n    let currentIDs = [];\n    for (let spectrum of spectra) {\n      currentIDs.push(spectrum.id);\n      meta.push(spectrum.meta);\n    }\n    let x = spectra[0].normalized.x;\n    result = { ids: currentIDs, matrix, meta, x };\n  }\n\n  if (relative) {\n    for (let i = 0; i < result.matrix.length; i++) {\n      result.matrix[i] = X.subtract(\n        result.matrix[i],\n        targetSpectrum.normalized.y,\n      );\n    }\n  }\n\n  if (ranges) {\n    result.ranges = [];\n    for (let i = 0; i < result.matrix.length; i++) {\n      let rangesCopy = JSON.parse(JSON.stringify(ranges));\n      let yNormalized = result.matrix[i];\n      let resultRanges = {};\n      result.ranges.push(resultRanges);\n      for (let currentRange of rangesCopy) {\n        if (currentRange.label) {\n          let fromToIndex = getFromToIndex(\n            targetSpectrum.normalized.x,\n            currentRange,\n          );\n          currentRange.integration = XY.integration(\n            { x: result.x, y: yNormalized },\n            fromToIndex,\n          );\n          currentRange.maxPoint = XY.maxYPoint(\n            { x: result.x, y: yNormalized },\n            fromToIndex,\n          );\n          resultRanges[currentRange.label] = currentRange;\n        }\n      }\n    }\n  }\n\n  if (calculations && result.ranges) {\n    result.calculations = result.ranges.map(() => {\n      return {};\n    });\n    const parameters = Object.keys(result.ranges[0]);\n    for (let calculation of calculations) {\n      // eslint-disable-next-line no-new-func\n      const callback = new Function(\n        ...parameters,\n        `return ${calculation.formula}`,\n      );\n      for (let i = 0; i < result.ranges.length; i++) {\n        let oneRanges = result.ranges[i];\n        let values = parameters.map((key) => oneRanges[key].integration);\n        result.calculations[i][calculation.label] = callback(...values);\n      }\n    }\n  }\n\n  return result;\n}\n","/**\n * @private\n * @param {*} spectra\n * @param {object} options\n */\n\nexport function getMetadata(spectra, options = {}) {\n  const { ids } = options;\n\n  let metadata = [];\n\n  if (Array.isArray(spectra) && spectra.length > 0) {\n    for (let spectrum of spectra) {\n      if (!ids || ids.includes(spectrum.id)) {\n        metadata.push(spectrum.meta);\n      }\n    }\n  }\n\n  return metadata;\n}\n","/**\n * @private\n * @param {Array<object>} [metadata]\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {string} [options.propertyName=\"category\"]\n */\n\nexport function getCategoriesStats(metadata, options = {}) {\n  const { propertyName = 'category' } = options;\n  let categories = {};\n  let classNumber = 0;\n  for (let metadatum of metadata) {\n    let value = metadatum[propertyName];\n    if (!categories[value]) {\n      categories[value] = {\n        classNumber: classNumber++,\n        counter: 0,\n      };\n    }\n    categories[value].counter++;\n  }\n  return categories;\n}\n","import { getCategoriesStats } from './getCategoriesStats';\n\n/**\n * @private\n * @param {Array<object>} [metadata]\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {string} [options.propertyName=\"category\"]\n */\n\nexport function getClasses(metadata, options = {}) {\n  const { propertyName = 'category' } = options;\n  const categoriesStats = getCategoriesStats(metadata, options);\n  const result = new Array(metadata.length);\n  for (let i = 0; i < metadata.length; i++) {\n    result[i] = categoriesStats[metadata[i][propertyName]].classNumber;\n  }\n  return result;\n}\n","import { Spectrum } from './spectrum/Spectrum';\nimport parseJcamp from './parser/jcamp';\nimport parseText from './parser/text';\nimport parseMatrix from './parser/matrix';\nimport { getNormalizationAnnotations } from './jsgraph/getNormalizationAnnotations';\nimport { getBoxPlotAnnotations } from './jsgraph/getBoxPlotAnnotations';\nimport { getChart } from './jsgraph/getChart';\nimport { getAutocorrelationChart } from './jsgraph/getAutocorrelationChart';\nimport { getTrackAnnotation } from './jsgraph/getTrackAnnotation';\nimport { getNormalizedChart } from './jsgraph/getNormalizedChart';\nimport { getScaledChart } from './jsgraph/getScaledChart';\nimport { getAutocorrelation } from './spectra/getAutocorrelation';\nimport { getMeanData } from './spectra/getMeanData';\nimport { getNormalizedData } from './spectra/getNormalizedData';\nimport { getNormalizedText } from './spectra/getNormalizedText';\nimport { getScaledData } from './spectra/getScaledData';\nimport { getMetadata } from './metadata/getMetadata';\nimport { getClasses } from './metadata/getClasses';\nimport { getCategoriesStats } from './metadata/getCategoriesStats';\n\nexport class SpectraProcessor {\n  /**\n   * Manager a large number of spectra with the possibility to normalize the data\n   * and skip the original data.\n   * @param {object} [options={}]\n   * @param {boolean} [options.maxMemory=64M]\n   * @param {object} [options.normalization={}] options to normalize the spectra before comparison\n   * @param {number} [options.normalization.from]\n   * @param {number} [options.normalization.to]\n   * @param {number} [options.normalization.numberOfPoints]\n   * @param {array<object>} [options.normalization.filters]\n   * @param {string} [options.normalization.filters.X.name]\n   * @param {object} [options.normalization.filters.X.options]\n   * @param {array<object>} [options.normalization.exclusions]\n   * @param {string} [options.normalization.exclusions.X.from]\n   * @param {object} [options.normalization.exclusions.X.to]\n   */\n  constructor(options = {}) {\n    this.normalization = options.normalization;\n    this.maxMemory = options.maxMemory || 64 * 1024 * 1024;\n    this.keepOriginal = true;\n    this.spectra = [];\n    this.boundaries = {\n      minX: Number.MAX_VALUE,\n      maxX: Number.MIN_VALUE,\n      minY: Number.MAX_VALUE,\n      maxY: Number.MIN_VALUE,\n    };\n  }\n\n  getNormalizationAnnotations() {\n    return getNormalizationAnnotations(\n      this.normalization,\n      this.getNormalizedBoundary(),\n    );\n  }\n\n  /**\n   * Recalculate the normalized data using the stored original data if available\n   * This will throw an error in the original data is not present\n   * @param {number} [normalization.from]\n   * @param {number} [normalization.to]\n   * @param {number} [normalization.numberOfPoints]\n   * @param {array<object>} [normalization.filters]\n   * @param {string} [normalization.filters.X.name]\n   * @param {object} [normalization.filters.X.options]\n   * @param {array<object>} [normalization.exclusions]\n   * @param {string} [normalization.exclusions.X.from]\n   * @param {object} [normalization.exclusions.X.to]\n   */\n  setNormalization(normalization = {}) {\n    if (JSON.stringify(this.normalization) === JSON.stringify(normalization)) {\n      return;\n    }\n    this.normalization = normalization;\n    for (let spectrum of this.spectra) {\n      spectrum.updateNormalization(this.normalization);\n    }\n  }\n\n  getNormalization() {\n    return this.normalization;\n  }\n\n  /**\n   * Returns an object {x:[], y:[]} containing the autocorrelation for the\n   * specified index\n   * @param {integer} [index] point of the spectrum to autocorrelate\n   * @param {object} [options={}]\n   * @param {array} [options.ids=[]] list of ids, by default all spectra\n   */\n  getAutocorrelation(index, options) {\n    return getAutocorrelation(this.getNormalizedData(options), index);\n  }\n\n  /**\n   * Returns a {x:[], y:[]} containg the average of specified spectra\n   * @param {object} [options={}]\n   * @param {array} [options.ids=[]] list of ids, by default all spectra\n   */\n  getMeanData(options) {\n    return getMeanData(this.getNormalizedData(options));\n  }\n\n  /**\n   * Returns an object contains 4 parameters with the normalized data\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   */\n  getNormalizedData(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedData(spectra);\n  }\n\n  /**\n   * Returns a tab separated value containing the normalized data\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   * @param {string} [options.fs='\\t'] field separator\n   * @param {string} [options.rs='\\n'] record (line) separator\n   * @returns {string}\n   */\n  getNormalizedText(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedText(spectra, options);\n  }\n\n  getMinMaxX() {\n    let min = Number.MAX_VALUE;\n    let max = Number.MIN_VALUE;\n    for (let spectrum of this.spectra) {\n      if (spectrum.minX < min) min = spectrum.minX;\n      if (spectrum.maxX > max) max = spectrum.maxX;\n    }\n    return { min, max };\n  }\n\n  /**\n\n   * Returns an object contains 4 parameters with the scaled data\n   * @param {object} [options={}] scale spectra based on various parameters\n   * @param {object} [options.range] from - to\n   * @param {Array} [options.ids] ids of selected spectra, by default all\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   */\n  getScaledData(options) {\n    return getScaledData(this, options);\n  }\n\n  /**\n   * Add from text\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.parserOptions={}] XY parser options\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {object} [options.kind]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromText(text, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = parseText(text, options);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  /**\n   * Add jcamp\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} jcamp\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromJcamp(jcamp, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = parseJcamp(jcamp);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  updateRangesInfo(options) {\n    for (let spectrum of this.spectra) {\n      spectrum.updateRangesInfo(options);\n    }\n  }\n\n  getMetadata() {\n    return getMetadata(this.spectra);\n  }\n\n  /**\n   *\n   * @param {object} [options={}]\n   * @param {string} [options.propertyName=\"category\"]\n   */\n  getClasses(options) {\n    return getClasses(this.getMetadata(), options);\n  }\n\n  /**\n   *\n   * @param {object} [options={}]\n   * @param {string} [options.propertyName=\"category\"]\n   */\n  getCategoriesStats(options) {\n    return getCategoriesStats(this.getMetadata(), options);\n  }\n\n  /**\n   * Add a spectrum based on the data\n   * @param {object} data {x, y}}\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.id]\n   * @param {object} [options.normalization={}]\n   * @param {object} [options.normalized]\n   * @return {Spectrum}\n   */\n\n  addFromData(data, options = {}) {\n    if (this.spectra.length === 0) this.keepOriginal = true;\n    const id = options.id || Math.random().toString(36).substring(2, 10);\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.spectra.length;\n    let spectrum = new Spectrum(data.x, data.y, id, {\n      meta: options.meta,\n      normalized: options.normalized,\n      normalization: this.normalization,\n    });\n    this.spectra[index] = spectrum;\n    if (!this.keepOriginal) {\n      spectrum.removeOriginal();\n    } else {\n      let memoryInfo = this.getMemoryInfo();\n      if (memoryInfo.total > this.maxMemory) {\n        this.keepOriginal = false;\n        this.removeOriginals();\n      }\n    }\n  }\n\n  removeOriginals() {\n    for (let spectrum of this.spectra) {\n      spectrum.removeOriginal();\n    }\n  }\n\n  /**\n   * Remove the spectrum from the SpectraProcessor for the specified id\n   * @param {string} id\n   */\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra.splice(index, 1);\n  }\n\n  /**\n   * Remove all the spectra not present in the list\n   * @param {Array} [ids] Array of ids of the spectra to keep\n   */\n  removeSpectraNotIn(ids) {\n    let currentIDs = this.spectra.map((spectrum) => spectrum.id);\n    for (let id of currentIDs) {\n      if (!ids.includes(id)) {\n        this.removeSpectrum(id);\n      }\n    }\n  }\n\n  /**\n   * Checks if the ID of a spectrum exists in the SpectraProcessor\n   * @param {string} id\n   */\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.spectra.length; i++) {\n      let spectrum = this.spectra[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns an array of spectrum from their ids\n   * @param {Array} ids\n   * @returns {Array<Spectrum}\n   */\n  getSpectra(ids) {\n    if (!ids || !Array.isArray(ids)) return this.spectra;\n    let spectra = [];\n    for (let id of ids) {\n      let index = this.getSpectrumIndex(id);\n      if (index !== undefined) {\n        spectra.push(this.spectra[index]);\n      }\n    }\n    return spectra;\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra[index];\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getChart(options) {\n    return getChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getAutocorrelationChart(index, options) {\n    return getAutocorrelationChart(this, index, options);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for the specified index\n   * @returns {object}\n   */\n  getTrackAnnotation(index, options) {\n    return getTrackAnnotation(this.spectra, index, options);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for box plot\n   * @returns {object}\n   */\n  getBoxPlotAnnotations(options) {\n    return getBoxPlotAnnotations(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @returns {object}\n   */\n  getNormalizedChart(options) {\n    return getNormalizedChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the scaled normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @param {object} [options.range] from - to\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object}\n   */\n  getScaledChart(options) {\n    return getScaledChart(this, options);\n  }\n\n  getMemoryInfo() {\n    let memoryInfo = { original: 0, normalized: 0, total: 0 };\n    this.spectra.forEach((spectrum) => {\n      let memory = spectrum.memory;\n      memoryInfo.original += memory.original;\n      memoryInfo.normalized += memory.normalized;\n      memoryInfo.total += memory.total;\n    });\n    memoryInfo.keepOriginal = this.keepOriginal;\n    memoryInfo.maxMemory = this.maxMemory;\n    return memoryInfo;\n  }\n\n  getNormalizedBoundary() {\n    let boundary = {\n      x: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n      y: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n    };\n    for (let spectrum of this.spectra) {\n      if (spectrum.normalizedBoundary.x.min < boundary.x.min) {\n        boundary.x.min = spectrum.normalizedBoundary.x.min;\n      }\n      if (spectrum.normalizedBoundary.x.max > boundary.x.max) {\n        boundary.x.max = spectrum.normalizedBoundary.x.max;\n      }\n      if (spectrum.normalizedBoundary.y.min < boundary.y.min) {\n        boundary.y.min = spectrum.normalizedBoundary.y.min;\n      }\n      if (spectrum.normalizedBoundary.y.max > boundary.y.max) {\n        boundary.y.max = spectrum.normalizedBoundary.y.max;\n      }\n    }\n    return boundary;\n  }\n\n  /**\n   * Create SpectraProcessor from normalized TSV\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.separator='\\t']\n   */\n  static fromNormalizedMatrix(text, options = {}) {\n    let parsed = parseMatrix(text, options);\n    if (!parsed) {\n      throw new Error('Can not parse TSV file');\n    }\n    let spectraProcessor = new SpectraProcessor();\n\n    spectraProcessor.setNormalization({\n      from: parsed.x[0],\n      to: parsed.x[parsed.x.length - 1],\n      numberOfPoints: parsed.x.length,\n    });\n    spectraProcessor.keepOriginal = false;\n\n    for (let i = 0; i < parsed.ids.length; i++) {\n      spectraProcessor.addFromData(\n        { x: [], y: [] },\n        {\n          normalized: {\n            x: parsed.x,\n            y: parsed.matrix[i],\n          },\n          id: parsed.ids[i],\n          meta: parsed.meta[i],\n        },\n      );\n    }\n\n    return spectraProcessor;\n  }\n}\n"],"names":["compareNumbers","a","b","exports","sum","values","i","length","max","l","min","minMax","arithmeticMean","geometricMean","mul","Math","pow","logMean","lnsum","log","grandMean","means","samples","n","truncatedMean","percent","alreadySorted","undefined","concat","sort","k","floor","harmonicMean","RangeError","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","mean","theVariance","x","standardDeviation","sqrt","standardError","robustMeanAndStdev","y","stdev","averageDeviations","Array","abs","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","index","indexOf","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","g","kurtosis","s4","m4","v","c","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","result","standardize","standardDev","cumulativeSum","array","getZones","from","to","exclusions","filter","exclusion","JSON","parse","stringify","forEach","zones","currentFrom","push","filterX","points","options","currentZoneIndex","newX","newY","position","getData","spectrum","xFilter","yFactor","data","map","toString","Object","prototype","isAnyArray","object","call","endsWith","_typeof","obj","Symbol","iterator","constructor","sequentialFill","input","arguments","isArray","TypeError","_options","_options$from","_options$to","_options$size","size","step","Error","_i","normalize","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","zone","currentZone","invert","nextExclusion","zonesWithPoints","numberOfPoints","totalSize","reduce","previous","current","unitsPerPoint","currentTotal","round","integral","x0","x1","slope","intercept","equallySpacedSmooth","xLength","halfStep","output","initialOriginalStep","lastOriginalStep","previousX","MIN_VALUE","previousY","nextX","nextY","currentValue","sumAtMin","sumAtMax","j","getSlope","y0","y1","add","main","equallySpacedSlot","lastStep","start","MAX_VALUE","frontOutsideSpectra","backOutsideSpectra","currentPoints","equallySpaced","arrayXY","reverse","slice","variant","isNaN","xResult","yResult","zoneResult","processZone","sumValue","norm","_options$algorithm","algorithm","_options$sumValue","_options$maxValue","toLowerCase","absoluteSumValue","absoluteSum","currentMaxValue","factor","sumFactor","_i2","minValue","rescale","currentMin","currentMax","_options$min","autoMinMax","_options$max","getNormalized","filters","name","Stat","meanFct","std","stdFct","normed","process","kind","check","normalizeZones","extract","loop","findClosestIndex","target","low","high","middle","getFromToIndex","fromIndex","toIndex","integration","maxY","maxYPoint","minYPoint","nbPoints","optimize","totalPoints","ratio","Float64Array","appendFromTo","zoneNbPoints","minY","slot","currentX","first","growingX","minClosestYPoint","targetIndex","previousIndex","MIN_SAFE_INTEGER","currentIndex","maxClosestYPoint","getTargetIndex","realMinYPoint","alpha","log10","beta","gamma","p","realMaxYPoint","maximaY","maxima","startEqualIndex","minimaY","peakInfo","currentDiff","multiplier","newDiff","after","before","inflectionBefore","inflectionAfter","extrema","inflectionMiddle","width","toXYObject","XY","array1","array2","isConstant","constant","array3","boxPlot","info","Q1","Q2","Q3","q1max","q3min","middleOver","multiply","dotProduct","A","B","crossCorrelation","tau","lag","q","autoCorrelation","correlation","sumA","sumA2","sumB","sumB2","sumAB","divide","rotate","shift","subtract","X","updateRangesInfo","ranges","range","label","fromToIndex","normalized","maxPoint","minPoint","Spectrum","id","meta","normalization","normalizedBoundary","updateNormalizedBoundary","updateNormalization","updateMemory","minX","maxX","original","memory","total","removeOriginal","getXY","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","defaultOptions","keepRecordsRegExp","canonicDataLabels","dynamicTyping","xy","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","convert","jcamp","assign","wantXY","Date","now","ntuples","ldr","dataValue","ldrs","endLine","infos","logs","spectra","action","time","split","replace","dataLabel","substring","trim","canonicDataLabel","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","firstX","firstY","last","lastX","lastY","vardim","xFactor","units","xUnit","yUnit","datatable","deltaX","prepareSpectrum","match","fastParseXYData","parsePeakTable","parseXYA","title","dataType","twoD","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","isMSField","convertMSFieldToLabel","sampleDescription","value","keys","newNtuples","key","add2D","newData","complexChromatogram","simpleChromatogram","times","series","ms","dimension","existingGCMSFields","intensity","getMedian","convertTo3DZ","minZ","maxZ","ySize","xSize","xVector","noise","zData","contourLines","generateContourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","xN","dx","yN","dy","iter","contourLevels","lineZValue","level","contourLevel","side","exp","lines","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","isXYdata","currentData","currentY","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeSymbolRegExp","isXYAdata","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","JcampConverter","useWorker","postToWorker","stamps","worker","createWorker","Promise","resolve","stamp","random","postMessage","workerURL","URL","createObjectURL","Blob","type","Worker","revokeObjectURL","addEventListener","event","createTree","flatten","flat","stack","ntupleLevel","spaces","includes","line","labelLine","startsWith","join","children","finished","pop","entry","getJcampKind","datatype","IR_ABSORBANCE","IR_TRANSMITTANCE","importation","converter","transmittance","display","xLabel","xInverted","yLabel","parsed","uniqueX","counter","parseXY","text","xColumn","yColumn","keepInfo","maxNumberColumns","MAX_SAFE_INTEGER","minNumberColumns","fields","uniqueXFunction","parserOptions","matrix","fs","ids","headers","labels","header","parts","oneMeta","getNormalizationAnnotations","boundary","annotations","ignore","annotation","strokeWidth","fillColor","getBoxPlotData","nbRow","nbColumn","aColumn","column","row","getBoxPlotAnnotations","q13FillColor","q13FillOpacity","q2StrokeColor","q2StrokeWidth","minMaxFillColor","minMaxFillOpacity","q13","layer","properties","fillOpacity","strokeColor","addChartDataStyle","styles","unselected","lineColor","color","lineWidth","lineStyle","selected","getChart","chart","global","factory","module","this","limit","clip_rgb","rgb","_clipped","_unclipped","classToType","list","unpack","args","keyOrder","PI","utils","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","format","autodetect","last$1","clip_rgb$1","type$1","Color","len","me","sorted","chk","test","apply","_rgb","hex","Color_1","chroma","Function","bind","version","chroma_1","unpack$1","rgb2cmyk","ref","r","f","m","rgb2cmyk_1","unpack$2","cmyk2rgb","cmyk2rgb_1","unpack$3","type$2","cmyk","unpack$4","last$2","rnd","hsl2css","hsla","hsl2css_1","unpack$5","rgb2hsl","s","h","NaN","rgb2hsl_1","unpack$6","last$3","rgb2css","rgba","substr","rgb2css_1","unpack$7","round$1","hsl2rgb","t3","t2","t1","h_","hsl2rgb_1","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$2","css2rgb","css","named","e","rgb$1","i$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","type$3","rest","unpack$8","gl","unpack$9","rgb2hcg","delta","_g","rgb2hcg_1","unpack$a","hcg2rgb","assign$1","assign$2","assign$3","assign$4","assign$5","_c","t","hcg2rgb_1","unpack$b","type$4","hcg","unpack$c","last$4","round$3","rgb2hex","u","str","hxa","rgb2hex_1","RE_HEX","RE_HEXA","hex2rgb","parseInt","u$1","r$1","g$1","b$1","hex2rgb_1","type$5","unpack$d","acos","rgb2hsi","min_","rgb2hsi_1","unpack$e","limit$1","TWOPI$1","cos","hsi2rgb","hsi2rgb_1","unpack$f","type$6","hsi","unpack$g","type$7","unpack$h","min$1","max$1","rgb2hsl$1","max_","rgb2hsv","unpack$i","floor$1","hsv2rgb","hsv2rgb_1","unpack$j","type$8","hsv","labConstants","Kn","Xn","Yn","Zn","t0","unpack$k","rgb2lab","ref$1","rgb2xyz","rgb_xyz","xyz_lab","rgb2lab_1","unpack$l","pow$1","lab2rgb","b_","lab_xyz","xyz_rgb","lab2rgb_1","unpack$m","type$9","lab","unpack$n","sqrt$1","atan2","round$4","lab2lch","lab2lch_1","unpack$o","rgb2lch","rgb2lch_1","unpack$p","sin","cos$1","lch2lab","lch2lab_1","unpack$q","lch2rgb","L","lch2rgb_1","unpack$r","hcl2rgb","hcl","hcl2rgb_1","unpack$s","type$a","lch","w3cx11","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","w3cx11_1","type$b","unpack$t","rgb2num","rgb2num_1","type$c","num2rgb","num","num2rgb_1","type$d","unpack$u","type$e","round$5","temperature2rgb","kelvin","temp","temperature2rgb_1","unpack$v","round$6","rgb2temperature","minTemp","maxTemp","rgb2temperature_1","temperature","type$f","mutate","clipped","darken","amount","brighten","darker","brighter","get","mc","channel","src","type$g","pow$2","EPS","MAX_ITER","luminance","lum","cur_lum","max_iter","mid","interpolate","lm","rgb2luminance","luminance_x","interpolator","type$h","mix","col1","col2","premultiply","saturate","desaturate","type$i","set","charAt","out","xyz0","xyz1","sqrt$2","pow$3","lrgb","z1","x2","y2","z2","lab$1","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","dh","lch$1","num$1","c1","c2","hcg$1","hsi$1","hsv$1","clip_rgb$2","pow$4","sqrt$3","PI$1","cos$2","sin$1","atan2$1","average","colors","_average_lrgb","xyz","cnt","ci","xyz2","A$1","col","type$j","pow$5","scale","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","getClass","tMapLightness","tMapDomain","getColor","val","bypassMap","classes","d","analyze","limits","domain","tOut","tBreaks","every","_m","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","dm","dd","__range__","end","asc","cache","nodata","left","right","inclusive","ascending","bezier","I","lab0","lab1","lab2","lab3","I0","I1","bezier_1","blend","bottom","top","blend_f","c0","each","normal","darken$1","lighten","screen","overlay","burn","dodge","blend_1","type$k","clip_rgb$3","TWOPI$2","pow$6","sin$2","cos$3","cubehelix","rotations","lightness","dl","fract","amp","cos_a","sin_a","digits","floor$2","random_1","code","log$1","pow$7","floor$3","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","contrast","l1","l2","sqrt$4","atan2$2","abs$1","cos$4","PI$2","deltaE","C","a1","b1","L2","a2","b2","sl","sc","h1","c4","sh","delL","delC","delA","delB","dH2","v1","v2","v3","distance","sum_sq","valid","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","list$1","colorbrewer_1","chroma_js","getAutocorrelationChart","spectraProcessor","autocorrelation","getAutocorrelation","colorCallback","colorScale","getMeanData","colorSpectrum","getNormalizedData","currentIDs","getTrackAnnotation","showSpectrumID","toPrecision","getNormalizedChart","getScaledChart","scaled","getScaledData","checkRowIndex","outer","rows","checkColumnIndex","columns","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","checkRowIndices","checkColumnIndices","rowOut","some","columnOut","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","varianceByRow","cols","sum1","sum2","varianceByColumn","varianceAll","centerByRow","centerByColumn","centerAll","getScaleByRow","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","inspectMatrix","indent","indentData","inspectData","maxRows","maxColumns","maxNumSize","maxI","maxJ","formatNumber","numStr","String","padEnd","precise","exponential","toExponential","eIndex","installMathOperations","AbstractMatrix","Matrix","addS","addM","checkMatrix","newMatrix","sub","subS","subM","subtractS","subtractM","mulS","mulM","multiplyS","multiplyM","div","divS","divM","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acosh","asin","asinh","atan","atanh","cbrt","clz32","cosh","expm1","fround","log1p","log2","sign","sinh","tanh","trunc","arg0","powS","powM","from1DArray","newRows","newColumns","rowVector","columnVector","zeros","ones","fill","rand","randInt","isInteger","interval","eye","diag","matrix1","matrix2","isMatrix","klass","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","iMax","swapRows","tmp","reducedEchelonForm","maxRow","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","dot","mmul","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","console","warn","embed","mat","resultat","blockMult","halfRows","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","flipColumns","kroneckerProduct","transpose","sortRows","compareFunction","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","for","randomInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","getNormalizedText","rs","allKeysObject","metum","allKeys","xs","targetSpectrum","targetValue","maybeToPrecision","checkArraySize","BaseRegression","new","predict","_predict","train","toLaTeX","score","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","SimpleLinearRegression","coefficients","checkArrayLength","regress","computeX","precision","absIntercept","operator","load","json","slr","numerator","regression","targetID","relative","method","calculations","getSpectrum","getSpectra","rangeFct","rangesCopy","yNormalized","resultRanges","currentRange","parameters","calculation","formula","oneRanges","getMetadata","metadata","getCategoriesStats","propertyName","categories","classNumber","metadatum","getClasses","categoriesStats","SpectraProcessor","maxMemory","keepOriginal","boundaries","getNormalizedBoundary","setNormalization","getNormalization","getMinMaxX","addFromText","force","contains","parseText","addFromData","addFromJcamp","parseJcamp","getSpectrumIndex","memoryInfo","getMemoryInfo","removeOriginals","removeSpectrum","removeSpectraNotIn","fromNormalizedMatrix","parseMatrix"],"mappings":"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"}