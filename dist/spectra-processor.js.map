{"version":3,"file":"spectra-processor.js","sources":["../node_modules/is-any-array/src/index.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../node_modules/ml-spectra-processing/src/x/xMultiply.js","../node_modules/ml-spectra-processing/src/x/xBoxPlot.js","../node_modules/ml-spectra-processing/src/x/xCorrelation.js","../node_modules/ml-spectra-processing/src/x/xFindClosestIndex.js","../node_modules/ml-spectra-processing/src/x/xGetFromToIndex.js","../node_modules/d3-array/build/d3-array.js","../node_modules/ml-spectra-processing/src/x/xSubtract.js","../node_modules/ml-spectra-processing/node_modules/is-any-array/src/index.js","../node_modules/ml-spectra-processing/src/xy/xyCheck.js","../node_modules/ml-spectra-processing/src/xy/xyIntegration.js","../node_modules/ml-spectra-processing/src/xy/xyMaxYPoint.js","../node_modules/ml-spectra-processing/src/xy/xyMinYPoint.js","../node_modules/chroma-js/chroma.js","../node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/ml-array-xy-filter-x/src/index.js","../src/jsgraph/getAutocorrelationChart.js","../src/spectra/getBoxPlotData.js","../src/jsgraph/getBoxPlotAnnotations.js","../src/jsgraph/addChartDataStyle.js","../src/jsgraph/getChart.js","../src/jsgraph/getNormalizationAnnotations.js","../src/jsgraph/getNormalizedChart.js","../src/jsgraph/getScaledChart.js","../src/spectra/getNormalizedData.js","../src/jsgraph/getTrackAnnotation.js","../src/metadata/getCategoriesStats.js","../src/metadata/getClasses.js","../src/metadata/getMetadata.js","../node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/jcampconverter/src/2d/add2D.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-fft/src/fftlib.js","../node_modules/nmr-processing/src/constants/gyromagneticRatio.js","../node_modules/jcampconverter/src/postProcessingNMR.js","../node_modules/jcampconverter/src/profiling.js","../node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/jcampconverter/src/postProcessing.js","../node_modules/jcampconverter/src/prepareNtuplesDatatable.js","../node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/jcampconverter/src/convert.js","../src/Kinds.js","../src/parser/jcamp.js","../src/parser/matrix.js","../node_modules/ml-arrayxy-uniquex/src/index.js","../node_modules/xy-parser/src/index.js","../src/parser/text.js","../src/spectra/getAutocorrelation.js","../src/spectra/getMeanData.js","../src/spectra/getNormalizedText.js","../src/spectra/scaled/getFromToIndex.js","../src/spectra/scaled/max.js","../src/spectra/scaled/min.js","../node_modules/ml-regression-base/src/maybeToPrecision.js","../node_modules/ml-regression-base/src/checkArrayLength.js","../node_modules/ml-regression-base/src/index.js","../node_modules/ml-regression-simple-linear/src/index.js","../src/spectra/scaled/minMax.js","../src/spectra/scaled/range.js","../src/spectra/getScaledData.js","../node_modules/ml-stat/array.js","../src/spectrum/getData.js","../node_modules/ml-array-normed/node_modules/is-any-array/src/index.js","../node_modules/ml-array-sum/lib-es6/index.js","../node_modules/ml-array-normed/lib-es6/index.js","../node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/ml-zones/src/normalize.js","../node_modules/ml-zones/src/invert.js","../node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/ml-array-xy-equally-spaced/src/index.js","../src/spectrum/getNormalized.js","../src/spectrum/updateRangesInfo.js","../src/spectrum/Spectrum.js","../src/SpectraProcessor.js","../src/jsgraph/getFilterAnnotations.js"],"sourcesContent":["'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","/**\r\n\r\n/**\r\n * This function xMultiply the first array by the second array or a constant value to each element of the first array\r\n * @param {Array} array1 - the array that will be rotated\r\n * @param {Array|Number} array2\r\n * @return {Float64Array}\r\n */\r\nexport function xMultiply(array1, array2) {\r\n  let isConstant = false;\r\n  let constant;\r\n  if (Array.isArray(array2)) {\r\n    if (array1.length !== array2.length) {\r\n      throw new Error('sub: size of array1 and array2 must be identical');\r\n    }\r\n  } else {\r\n    isConstant = true;\r\n    constant = Number(array2);\r\n  }\r\n\r\n  let array3 = new Float64Array(array1.length);\r\n  if (isConstant) {\r\n    for (let i = 0; i < array1.length; i++) {\r\n      array3[i] = array1[i] * constant;\r\n    }\r\n  } else {\r\n    for (let i = 0; i < array1.length; i++) {\r\n      array3[i] = array1[i] * array2[i];\r\n    }\r\n  }\r\n\r\n  return array3;\r\n}\r\n","/**\r\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\r\n * @param {Array<Number>} array1 - the array that will be rotated\r\n * @return {object}\r\n */\r\nexport function xBoxPlot(array) {\r\n  array = array.slice(0).sort((a, b) => a - b);\r\n  if (array.length < 5) {\r\n    throw Error(\r\n      'xBoxPlot: can not calculate info if array contains less than 3 elements',\r\n    );\r\n  }\r\n  let info = {\r\n    Q1: 0.0,\r\n    Q2: 0.0,\r\n    Q3: 0.0,\r\n    min: array[0],\r\n    max: array[array.length - 1],\r\n  };\r\n  let q1max, q3min;\r\n  if (array.length % 2 === 1) {\r\n    // odd\r\n    let middle = (array.length - 1) / 2;\r\n    info.Q2 = array[middle];\r\n    q1max = middle - 1;\r\n    q3min = middle + 1;\r\n  } else {\r\n    // even\r\n    q3min = array.length / 2;\r\n    q1max = q3min - 1;\r\n    info.Q2 = (array[q1max] + array[q3min]) / 2;\r\n  }\r\n  if (q1max % 2 === 0) {\r\n    info.Q1 = array[q1max / 2];\r\n    info.Q3 = array[(array.length + q3min - 1) / 2];\r\n  } else {\r\n    info.Q1 = (array[(q1max + 1) / 2] + array[(q1max - 1) / 2]) / 2;\r\n    let middleOver = (array.length + q3min) / 2;\r\n    info.Q3 = (array[middleOver] + array[middleOver - 1]) / 2;\r\n  }\r\n  return info;\r\n}\r\n","/**\r\n\r\n/**\r\n * Calculates the correlation between 2 vectors\r\n * https://en.wikipedia.org/wiki/Correlation_and_dependence\r\n *\r\n * @param {Array<Number>} [A] - the array that will be rotated\r\n * @param {Array<Number>} [B]\r\n * @return {Array}\r\n */\r\nexport function xCorrelation(A, B) {\r\n  let n = A.length;\r\n  let sumA = 0;\r\n  let sumA2 = 0;\r\n  let sumB = 0;\r\n  let sumB2 = 0;\r\n  let sumAB = 0;\r\n  for (let i = 0; i < n; i++) {\r\n    let a = A[i];\r\n    let b = B[i];\r\n    sumA += a;\r\n    sumA2 += a ** 2;\r\n    sumB += b;\r\n    sumB2 += b ** 2;\r\n    sumAB += a * b;\r\n  }\r\n  return (\r\n    (n * sumAB - sumA * sumB) /\r\n    (Math.sqrt(n * sumA2 - sumA ** 2) * Math.sqrt(n * sumB2 - sumB ** 2))\r\n  );\r\n}\r\n","/**\r\n * Returns the closest index of a `target` in an ordered array\r\n * @param {array<Number>} array\r\n * @param {number} target\r\n */\r\n\r\nexport function xFindClosestIndex(array, target) {\r\n  let low = 0;\r\n  let high = array.length - 1;\r\n  let middle = 0;\r\n  while (high - low > 1) {\r\n    middle = low + ((high - low) >> 1);\r\n    if (array[middle] < target) {\r\n      low = middle;\r\n    } else if (array[middle] > target) {\r\n      high = middle;\r\n    } else {\r\n      return middle;\r\n    }\r\n  }\r\n\r\n  if (low < array.length - 1) {\r\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\r\n      return low;\r\n    } else {\r\n      return low + 1;\r\n    }\r\n  } else {\r\n    return low;\r\n  }\r\n}\r\n","import { xFindClosestIndex } from './xFindClosestIndex';\r\n\r\n/**\r\n * Returns an object with {fromIndex, toIndex} for a specific from / to\r\n * @param {array} x\r\n * @param {object} [options={}]\r\n * @param {number} [options.from] - First value for xyIntegration in the X scale\r\n * @param {number} [options.fromIndex=0] - First point for xyIntegration\r\n * @param {number} [options.to] - Last value for xyIntegration in the X scale\r\n * @param {number} [options.toIndex=x.length-1] - Last point for xyIntegration\r\n */\r\n\r\nexport function xGetFromToIndex(x, options = {}) {\r\n  let { fromIndex, toIndex, from, to } = options;\r\n\r\n  if (fromIndex === undefined) {\r\n    if (from !== undefined) {\r\n      fromIndex = xFindClosestIndex(x, from);\r\n    } else {\r\n      fromIndex = 0;\r\n    }\r\n  }\r\n  if (toIndex === undefined) {\r\n    if (to !== undefined) {\r\n      toIndex = xFindClosestIndex(x, to);\r\n    } else {\r\n      toIndex = x.length - 1;\r\n    }\r\n  }\r\n  if (fromIndex > toIndex) [fromIndex, toIndex] = [toIndex, fromIndex];\r\n  return { fromIndex, toIndex };\r\n}\r\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_array = {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number$1(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number$1(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      // Coerce values to numbers.\n      for (i = 0; i < n; ++i) {\n        values[i] = +value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = +xz[0],\n          x1 = +xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\n      // Coerce thresholds to numbers, ignoring any outside the domain.\n      var m = tz.length;\n      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      if (!arguments.length) return threshold;\n      threshold = typeof _ === \"function\" ? _\n          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n          : constant(+_);\n      return histogram;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number$1;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values.sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var version = \"0.7.1\";\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n}));","/**\r\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\r\n * @param {Array} array1 - the array that will be rotated\r\n * @param {Array|Number} array2\r\n * @return {Array}\r\n */\r\nexport function xSubtract(array1, array2) {\r\n  let isConstant = false;\r\n  let constant;\r\n  if (Array.isArray(array2)) {\r\n    if (array1.length !== array2.length) {\r\n      throw new Error('sub: size of array1 and array2 must be identical');\r\n    }\r\n  } else {\r\n    isConstant = true;\r\n    constant = Number(array2);\r\n  }\r\n\r\n  let array3 = new Array(array1.length);\r\n  if (isConstant) {\r\n    for (let i = 0; i < array1.length; i++) {\r\n      array3[i] = array1[i] - constant;\r\n    }\r\n  } else {\r\n    for (let i = 0; i < array1.length; i++) {\r\n      array3[i] = array1[i] - array2[i];\r\n    }\r\n  }\r\n\r\n  return array3;\r\n}\r\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isAnyArray from 'is-any-array';\r\n\r\n/**\r\n * Throw an error in no an object of x,y arrays\r\n * @param {DataXY} [data={}]\r\n */\r\nexport function xyCheck(data = {}) {\r\n  if (!isAnyArray(data.x) || !isAnyArray(data.y)) {\r\n    throw new Error('Points must be an object of x and y arrays');\r\n  }\r\n  if (data.x.length !== data.y.length) {\r\n    throw new Error('The x and y arrays mush have the same length');\r\n  }\r\n}\r\n","import { xGetFromToIndex } from '../x/xGetFromToIndex';\r\n\r\nimport { xyCheck } from './xyCheck';\r\n\r\n/**\r\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\r\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\r\n * @param {object} [options={}]\r\n * @param {number} [options.from] - First value for xyIntegration in the X scale\r\n * @param {number} [options.fromIndex=0] - First point for xyIntegration\r\n * @param {number} [options.to] - Last value for xyIntegration in the X scale\r\n * @param {number} [options.toIndex=x.length-1] - Last point for xyIntegration\r\n * @return {number} xyIntegration value on the specified range\r\n */\r\n\r\nexport function xyIntegration(data = {}, options = {}) {\r\n  xyCheck(data);\r\n  const { x, y } = data;\r\n  if (x.length < 2) return 0;\r\n  const { fromIndex, toIndex } = xGetFromToIndex(x, options);\r\n  let currentxyIntegration = 0;\r\n  for (let i = fromIndex; i < toIndex; i++) {\r\n    currentxyIntegration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\r\n  }\r\n\r\n  return currentxyIntegration;\r\n}\r\n","import { xGetFromToIndex } from '../x/xGetFromToIndex';\r\n\r\nimport { xyCheck } from './xyCheck';\r\n/**\r\n * Finds the max y value in a range and return a {x,y} point\r\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\r\n * @param {object} [options={}]\r\n * @param {number} [options.from] - First value for xyIntegration in the X scale\r\n * @param {number} [options.fromIndex=0] - First point for xyIntegration\r\n * @param {number} [options.to] - Last value for xyIntegration in the X scale\r\n * @param {number} [options.toIndex=x.length-1] - Last point for xyIntegration\r\n * @return {object}\r\n */\r\n\r\nexport function xyMaxYPoint(data = {}, options = {}) {\r\n  xyCheck(data);\r\n  const { x, y } = data;\r\n  if (x.length < 2) return 0;\r\n\r\n  const { fromIndex, toIndex } = xGetFromToIndex(x, options);\r\n\r\n  let current = { x: x[fromIndex], y: y[fromIndex], index: fromIndex };\r\n  for (let i = fromIndex; i <= toIndex; i++) {\r\n    if (y[i] > current.y) current = { x: x[i], y: y[i], index: i };\r\n  }\r\n\r\n  return current;\r\n}\r\n","import { xGetFromToIndex } from '../x/xGetFromToIndex';\r\n\r\nimport { xyCheck } from './xyCheck';\r\n/**\r\n * Finds the max y value in a range and return a {x,y} point\r\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\r\n * @param {object} [options={}]\r\n * @param {number} [options.from] - First value for xyIntegration in the X scale\r\n * @param {number} [options.fromIndex=0] - First point for xyIntegration\r\n * @param {number} [options.to] - Last value for xyIntegration in the X scale\r\n * @param {number} [options.toIndex=x.length-1] - Last point for xyIntegration\r\n * @return {object}\r\n */\r\n\r\nexport function xyMinYPoint(data = {}, options = {}) {\r\n  xyCheck(data);\r\n  const { x, y } = data;\r\n  if (x.length < 2) return 0;\r\n\r\n  const { fromIndex, toIndex } = xGetFromToIndex(x, options);\r\n\r\n  let current = { x: x[fromIndex], y: y[fromIndex], index: fromIndex };\r\n  for (let i = fromIndex; i <= toIndex; i++) {\r\n    if (y[i] < current.y) current = { x: x[i], y: y[i], index: i };\r\n  }\r\n\r\n  return current;\r\n}\r\n","/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.chroma = factory());\n}(this, (function () { 'use strict';\n\n    var limit = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var clip_rgb = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n        var name = list[i];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var unpack = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var last = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb,\n    \tlimit: limit,\n    \ttype: type,\n    \tunpack: unpack,\n    \tlast: last,\n    \tPI: PI,\n    \tTWOPI: PI*2,\n    \tPITHIRD: PI/3,\n    \tDEG2RAD: PI / 180,\n    \tRAD2DEG: 180 / PI\n    };\n\n    var input = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$1 = utils.last;\n    var clip_rgb$1 = utils.clip_rgb;\n    var type$1 = utils.type;\n\n\n    var Color = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$1(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$1(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!input.sorted) {\n                input.autodetect = input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (input.format[mode]) {\n            var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$1(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color.prototype.toString = function toString () {\n        if (type$1(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color;\n\n    var chroma = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma.Color, [ null ].concat( args) ));\n    };\n\n    chroma.Color = Color_1;\n    chroma.version = '2.1.0';\n\n    var chroma_1 = chroma;\n\n    var unpack$1 = utils.unpack;\n    var max = Math.max;\n\n    var rgb2cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$1(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max(r,max(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk;\n\n    var unpack$2 = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$2(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var unpack$3 = utils.unpack;\n    var type$2 = utils.type;\n\n\n\n    Color_1.prototype.cmyk = function() {\n        return rgb2cmyk_1(this._rgb);\n    };\n\n    chroma_1.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input.format.cmyk = cmyk2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'cmyk');\n            if (type$2(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$4 = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$4(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css;\n\n    var unpack$5 = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$5(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl;\n\n    var unpack$6 = utils.unpack;\n    var last$3 = utils.last;\n\n\n    var round = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$6(args, 'rgba');\n        var mode = last$3(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css_1(rgb2hsl_1(rgba), mode);\n        }\n        rgba[0] = round(rgba[0]);\n        rgba[1] = round(rgba[1]);\n        rgba[2] = round(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css;\n\n    var unpack$7 = utils.unpack;\n    var round$1 = Math.round;\n\n    var hsl2rgb = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$7(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$1(c[0]*255),round$1(c[1]*255),round$1(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$2 = Math.round;\n\n    var css2rgb = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input.format.named) {\n            try {\n                return input.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb_1(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb_1(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb;\n\n    var type$3 = utils.type;\n\n\n\n\n    Color_1.prototype.css = function(mode) {\n        return rgb2css_1(this._rgb, mode);\n    };\n\n    chroma_1.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['css']) ));\n    };\n\n    input.format.css = css2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    input.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$8(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma_1.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color_1.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$9 = utils.unpack;\n\n    var rgb2hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$9(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg;\n\n    var unpack$a = utils.unpack;\n    var floor = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$a(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$b = utils.unpack;\n    var type$4 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hcg = function() {\n        return rgb2hcg_1(this._rgb);\n    };\n\n    chroma_1.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input.format.hcg = hcg2rgb_1;\n\n    input.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$b(args, 'hcg');\n            if (type$4(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$c = utils.unpack;\n    var last$4 = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$c(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last$4(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb;\n\n    var type$5 = utils.type;\n\n\n\n\n    Color_1.prototype.hex = function(mode) {\n        return rgb2hex_1(this._rgb, mode);\n    };\n\n    chroma_1.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hex']) ));\n    };\n\n    input.format.hex = hex2rgb_1;\n    input.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$5(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$d = utils.unpack;\n    var TWOPI = utils.TWOPI;\n    var min = Math.min;\n    var sqrt = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI - h;\n            }\n            h /= TWOPI;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi;\n\n    var unpack$e = utils.unpack;\n    var limit$1 = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$e(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit$1(i*r*3);\n        g = limit$1(i*g*3);\n        b = limit$1(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$f = utils.unpack;\n    var type$6 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsi = function() {\n        return rgb2hsi_1(this._rgb);\n    };\n\n    chroma_1.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input.format.hsi = hsi2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'hsi');\n            if (type$6(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$g = utils.unpack;\n    var type$7 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsl = function() {\n        return rgb2hsl_1(this._rgb);\n    };\n\n    chroma_1.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input.format.hsl = hsl2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$g(args, 'hsl');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$h = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$h(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv = rgb2hsl$1;\n\n    var unpack$i = utils.unpack;\n    var floor$1 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$i(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$1(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$j = utils.unpack;\n    var type$8 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma_1.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input.format.hsv = hsv2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$j(args, 'hsv');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var unpack$k = utils.unpack;\n    var pow = Math.pow;\n\n    var rgb2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$k(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > labConstants.t3) { return pow(t, 1 / 3); }\n        return t / labConstants.t2 + labConstants.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab;\n\n    var unpack$l = utils.unpack;\n    var pow$1 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$l(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = labConstants.Yn * lab_xyz(y);\n        x = labConstants.Xn * lab_xyz(x);\n        z = labConstants.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$9 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lab = function() {\n        return rgb2lab_1(this._rgb);\n    };\n\n    chroma_1.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lab']) ));\n    };\n\n    input.format.lab = lab2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'lab');\n            if (type$9(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$n = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$1 = Math.sqrt;\n    var atan2 = Math.atan2;\n    var round$4 = Math.round;\n\n    var lab2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$n(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$1(a * a + b * b);\n        var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n        if (round$4(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch;\n\n    var unpack$o = utils.unpack;\n\n\n\n    var rgb2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab_1(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch_1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch;\n\n    var unpack$p = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin = Math.sin;\n    var cos$1 = Math.cos;\n\n    var lch2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$p(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$1(h) * c, sin(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab;\n\n    var unpack$q = utils.unpack;\n\n\n\n    var lch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$q(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab_1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb_1 (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb;\n\n    var unpack$r = utils.unpack;\n\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$r(args, 'hcl').reverse();\n        return lch2rgb_1.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$s = utils.unpack;\n    var type$a = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lch = function() { return rgb2lch_1(this._rgb); };\n    Color_1.prototype.hcl = function() { return rgb2lch_1(this._rgb).reverse(); };\n\n    chroma_1.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lch']) ));\n    };\n    chroma_1.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input.format.lch = lch2rgb_1;\n    input.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$s(args, m);\n            if (type$a(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11;\n\n    var type$b = utils.type;\n\n\n\n\n\n    Color_1.prototype.name = function() {\n        var hex = rgb2hex_1(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11_1[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11_1[name]) { return hex2rgb_1(w3cx11_1[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$t = utils.unpack;\n\n    var rgb2num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$t(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num;\n\n    var type$c = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var type$d = utils.type;\n\n\n\n    Color_1.prototype.num = function() {\n        return rgb2num_1(this._rgb);\n    };\n\n    chroma_1.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['num']) ));\n    };\n\n    input.format.num = num2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var unpack$u = utils.unpack;\n    var type$e = utils.type;\n    var round$5 = Math.round;\n\n    Color_1.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$5);\n    };\n\n    Color_1.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$5(v)) : v;\n        });\n    };\n\n    chroma_1.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$u(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$u(args, 'rgba');\n            if (type$e(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log = Math.log;\n\n    var temperature2rgb = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n\n    var unpack$v = utils.unpack;\n    var round$6 = Math.round;\n\n    var rgb2temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$v(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb_1(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round$6(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature;\n\n    Color_1.prototype.temp =\n    Color_1.prototype.kelvin =\n    Color_1.prototype.temperature = function() {\n        return rgb2temperature_1(this._rgb);\n    };\n\n    chroma_1.temp =\n    chroma_1.kelvin =\n    chroma_1.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['temp']) ));\n    };\n\n    input.format.temp =\n    input.format.kelvin =\n    input.format.temperature = temperature2rgb_1;\n\n    var type$f = utils.type;\n\n    Color_1.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$f(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    Color_1.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    Color_1.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= labConstants.Kn * amount;\n    \treturn new Color_1(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color_1.prototype.darker = Color_1.prototype.darken;\n    Color_1.prototype.brighter = Color_1.prototype.brighten;\n\n    Color_1.prototype.get = function(mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var type$g = utils.type;\n    var pow$2 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color_1.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$g(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color_1([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color_1([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color_1([0,0,0]), this) : test(this, new Color_1([255,255,255]))).rgb();\n            return new Color_1(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$2((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator = {};\n\n    var type$h = utils.type;\n\n\n    var mix = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$h(col1) !== 'object') { col1 = new Color_1(col1); }\n        if (type$h(col2) !== 'object') { col2 = new Color_1(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    Color_1.prototype.mix =\n    Color_1.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    Color_1.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color_1([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    Color_1.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += labConstants.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color_1(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var type$i = utils.type;\n\n    Color_1.prototype.set = function(mc, value, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) {\n                if (type$i(value) == 'string') {\n                    switch(value.charAt(0)) {\n                        case '+': src[i] += +value; break;\n                        case '-': src[i] += +value; break;\n                        case '*': src[i] *= +(value.substr(1)); break;\n                        case '/': src[i] /= +(value.substr(1)); break;\n                        default: src[i] = +value;\n                    }\n                } else if (type$i(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color_1(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var rgb$1 = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.rgb = rgb$1;\n\n    var sqrt$2 = Math.sqrt;\n    var pow$3 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color_1(\n            sqrt$2(pow$3(x1,2) * (1-f) + pow$3(x2,2) * f),\n            sqrt$2(pow$3(y1,2) * (1-f) + pow$3(y2,2) * f),\n            sqrt$2(pow$3(z1,2) * (1-f) + pow$3(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.lrgb = lrgb;\n\n    var lab$1 = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator.lab = lab$1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1-(hue0+360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1+360-hue0;\n            } else{\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1-lbv0);\n        return new Color_1([hue, sat, lbv], m);\n    };\n\n    var lch$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator.lch = lch$1;\n    interpolator.hcl = lch$1;\n\n    var num$1 = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color_1(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator.num = num$1;\n\n    var hcg$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator.hcg = hcg$1;\n\n    var hsi$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator.hsi = hsi$1;\n\n    var hsl$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator.hsl = hsl$1;\n\n    var hsv$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator.hsv = hsv$1;\n\n    var clip_rgb$2 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$3 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$1 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$1(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$1(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color_1(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$3(xyz[0]);\n        xyz[1] = sqrt$3(xyz[1]);\n        xyz[2] = sqrt$3(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color_1(clip_rgb$2(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n\n    var type$j = utils.type;\n\n    var pow$5 = Math.pow;\n\n    var scale = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma_1('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$j(colors) === 'string' && chroma_1.brewer &&\n                chroma_1.brewer[colors.toLowerCase()]) {\n                colors = chroma_1.brewer[colors.toLowerCase()];\n            }\n            if (type$j(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma_1(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$5(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$j(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma_1.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$j(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma_1(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$j(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma_1.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma_1.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors, _pos);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$j(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma_1[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma_1(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n\n\n\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 5) {\n            var I0 = bezier(colors.slice(0, 3));\n            var I1 = bezier(colors.slice(2, 5));\n            I = function(t) {\n                if (t < 0.5) {\n                    return I0(t*2);\n                } else {\n                    return I1((t-0.5)*2);\n                }\n            };\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n\n\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma_1(top).rgb();\n            var c1 = chroma_1(bottom).rgb();\n            return chroma_1.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken$1 = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken$1));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$k = utils.type;\n    var clip_rgb$3 = utils.clip_rgb;\n    var TWOPI$2 = utils.TWOPI;\n    var pow$6 = Math.pow;\n    var sin$2 = Math.sin;\n    var cos$3 = Math.cos;\n\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$k(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI$2 * (((start+120)/360) + (rotations * fract));\n            var l = pow$6(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$3(a);\n            var sin_a = sin$2(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma_1(clip_rgb$3([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$k(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$k(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma_1.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var digits = '0123456789abcdef';\n\n    var floor$2 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$2(random() * 16));\n        }\n        return new Color_1(code, 'hex');\n    };\n\n    var log$1 = Math.log;\n    var pow$7 = Math.pow;\n    var floor$3 = Math.floor;\n    var abs = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log$1(min);\n            var max_log = Math.LOG10E * log$1(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$7(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor$3(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var sqrt$4 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var abs$1 = Math.abs;\n    var cos$4 = Math.cos;\n    var PI$2 = Math.PI;\n\n    var deltaE = function(a, b, L, C) {\n        if ( L === void 0 ) L=1;\n        if ( C === void 0 ) C=1;\n\n        // Delta E (CMC)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var c1 = sqrt$4((a1 * a1) + (b1 * b1));\n        var c2 = sqrt$4((a2 * a2) + (b2 * b2));\n        var sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + (0.01765 * L1));\n        var sc = ((0.0638 * c1) / (1.0 + (0.0131 * c1))) + 0.638;\n        var h1 = c1 < 0.000001 ? 0.0 : (atan2$2(b1, a1) * 180.0) / PI$2;\n        while (h1 < 0) { h1 += 360; }\n        while (h1 >= 360) { h1 -= 360; }\n        var t = (h1 >= 164.0) && (h1 <= 345.0) ? (0.56 + abs$1(0.2 * cos$4((PI$2 * (h1 + 168.0)) / 180.0))) : (0.36 + abs$1(0.4 * cos$4((PI$2 * (h1 + 35.0)) / 180.0)));\n        var c4 = c1 * c1 * c1 * c1;\n        var f = sqrt$4(c4 / (c4 + 1900.0));\n        var sh = sc * (((f * t) + 1.0) - f);\n        var delL = L1 - L2;\n        var delC = c1 - c2;\n        var delA = a1 - a2;\n        var delB = b1 - b2;\n        var dH2 = ((delA * delA) + (delB * delB)) - (delC * delC);\n        var v1 = delL / (L * sl);\n        var v2 = delC / (C * sc);\n        var v3 = sh;\n        return sqrt$4((v1 * v1) + (v2 * v2) + (dH2 / (v3 * v3)));\n    };\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color_1, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n\n\n\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma_1.hsl(180,1,.9), chroma_1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff'], [0,.25,.75,1]).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n        var key = list$1[i$1];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma_1.average = average;\n    chroma_1.bezier = bezier_1;\n    chroma_1.blend = blend_1;\n    chroma_1.cubehelix = cubehelix;\n    chroma_1.mix = chroma_1.interpolate = mix;\n    chroma_1.random = random_1;\n    chroma_1.scale = scale;\n\n    // other utility methods\n    chroma_1.analyze = analyze_1.analyze;\n    chroma_1.contrast = contrast;\n    chroma_1.deltaE = deltaE;\n    chroma_1.distance = distance;\n    chroma_1.limits = analyze_1.limits;\n    chroma_1.valid = valid;\n\n    // scale\n    chroma_1.scales = scales;\n\n    // colors\n    chroma_1.colors = w3cx11_1;\n    chroma_1.brewer = colorbrewer_1;\n\n    var chroma_js = chroma_1;\n\n    return chroma_js;\n\n})));\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","import chroma from 'chroma-js';\nimport filterX from 'ml-array-xy-filter-x';\n\n/**\n * Retrieve a chart with autocorrelation color\n * @param {SpectraProcessor} [spectraProcessor]\n * @param {number} [index]\n * @param {object} [options={}]\n * @param {Array} [options.autocorrelation] precalculated autocorrelation {x,y}\n * @param {Array} [options.maxDataPoints=]\n * @param {array} [options.xFilter.from]\n * @param {array} [options.xFilter.to]\n * @param {array} [options.xFilter.exclusions=[]]\n */\nexport function getAutocorrelationChart(spectraProcessor, index, options = {}) {\n  const {\n    autocorrelation = spectraProcessor.getAutocorrelation(index),\n    xFilter,\n  } = options;\n\n  let max = autocorrelation.y.reduce(function (a, b) {\n    return isNaN(b) ? a : Math.max(a, b);\n  }, Number.MIN_VALUE);\n\n  let min = autocorrelation.y.reduce(function (a, b) {\n    return isNaN(b) ? a : Math.min(a, b);\n  }, Number.MAX_VALUE);\n\n  let colorCallback = chroma\n    .scale(['blue', 'cyan', 'yellow', 'red'])\n    .domain([min, max])\n    .mode('lch');\n\n  let colorScale = autocorrelation.y.map(\n    (y) => `rgb(${colorCallback(y).rgb().join()})`,\n  );\n\n  let mean = spectraProcessor.getMeanData();\n  if (xFilter) {\n    mean = filterX({ x: mean.x, y: mean.y }, xFilter);\n  }\n\n  let colorSpectrum = {\n    type: 'color',\n    x: mean.x,\n    y: mean.y,\n    color: colorScale,\n    styles: {\n      unselected: {\n        lineWidth: 1,\n        lineStyle: 1,\n      },\n      selected: {\n        lineWidth: 3,\n        lineStyle: 1,\n      },\n    },\n  };\n\n  return colorSpectrum;\n}\n","import { xBoxPlot } from 'ml-spectra-processing';\n\n/**\n * @private\n * @param {*} spectra\n */\n\nexport function getBoxPlotData(spectra) {\n  let matrix = [];\n  let x = spectra[0].normalized.x;\n  for (let spectrum of spectra) {\n    matrix.push(spectrum.normalized.y);\n  }\n\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let result;\n  let aColumn = new Float64Array(nbRow);\n  for (let column = 0; column < nbColumn; column++) {\n    for (let row = 0; row < nbRow; row++) {\n      aColumn[row] = matrix[row][column];\n    }\n    let info = xBoxPlot(aColumn);\n    if (!result) {\n      result = { x };\n      for (let key in info) {\n        result[key] = [];\n      }\n    }\n    for (let key in info) {\n      result[key].push(info[key]);\n    }\n  }\n  return result;\n}\n","import { getBoxPlotData } from '../spectra/getBoxPlotData';\n\nexport function getBoxPlotAnnotations(spectra, options = {}) {\n  const {\n    q13FillColor = '#000',\n    q13FillOpacity = 0.3,\n    q2StrokeColor = '#000',\n    q2StrokeWidth = 3,\n    minMaxFillColor = '#000',\n    minMaxFillOpacity = 0.15,\n  } = options;\n  let annotations = [];\n\n  let data = getBoxPlotData(spectra);\n  if (q13FillOpacity && q13FillColor) {\n    let q13 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q1[i],\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q3[i],\n      });\n    }\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: q13FillColor,\n        fillOpacity: q13FillOpacity,\n        strokeWidth: 0.0000001,\n        position: q13,\n      },\n    });\n  }\n\n  if (q2StrokeColor && q2StrokeWidth) {\n    let q2 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i],\n      });\n    }\n    // Temp code because polyline is not working\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i],\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        strokeWidth: q2StrokeWidth,\n        strokeColor: q2StrokeColor,\n        position: q2,\n      },\n    });\n  }\n\n  if (minMaxFillColor && minMaxFillOpacity) {\n    let minMax = [];\n    for (let i = 0; i < data.x.length; i++) {\n      minMax.push({\n        x: data.x[i],\n        y: data.min[i],\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      minMax.push({\n        x: data.x[i],\n        y: data.max[i],\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: minMaxFillColor,\n        fillOpacity: minMaxFillOpacity,\n        strokeWidth: 0.0000001,\n        strokeColor: '#FFF',\n        position: minMax,\n      },\n    });\n  }\n\n  return annotations;\n}\n","export function addChartDataStyle(data, spectrum) {\n  data.styles = {\n    unselected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 1,\n      lineStyle: 1,\n    },\n    selected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 3,\n      lineStyle: 1,\n    },\n  };\n  data.label = spectrum.meta.id || spectrum.id;\n}\n","import { addChartDataStyle } from './addChartDataStyle';\n/**\n * Retrieve a chart with selected original data\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by default all\n * @param {Array} [options.yFactor=1]\n */\nexport function getChart(spectra, options = {}) {\n  const { ids, yFactor, xFilter = {} } = options;\n  let chart = {\n    data: [],\n  };\n\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.getData({ yFactor, xFilter });\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n","export function getNormalizationAnnotations(filter = {}, boundary = {}) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: Number.MIN_SAFE_INTEGER, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: Number.MAX_SAFE_INTEGER, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n","import filterX from 'ml-array-xy-filter-x';\n\nimport { addChartDataStyle } from './addChartDataStyle';\n\n/**\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}]\n * @param {array} [options.ids]\n * @param {object} [options.xFilter={}]\n * @param {array} [options.xFilter.from]\n * @param {array} [options.xFilter.to]\n * @param {array} [options.xFilter.exclusions=[]]\n */\n\nexport function getNormalizedChart(spectra, options = {}) {\n  const { ids, xFilter } = options;\n  let chart = {\n    data: [],\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.normalized;\n      if (xFilter) {\n        data = filterX({ x: data.x, y: data.y }, xFilter);\n      }\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n","import { addChartDataStyle } from './addChartDataStyle';\n/**\n *\n * @param {SpectraProcessor} spectraProcessor\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {Array} [options.ranges] Array of object containing {from:'', to:'', label:''}\n * @param {Array} [options.calculations] Array of object containing {label:'', formula:''}\n * @param {boolean} [options.relative=false]\n */\nexport function getScaledChart(spectraProcessor, options = {}) {\n  let scaled = spectraProcessor.getScaledData(options);\n\n  let chart = {\n    data: [],\n  };\n  if (!scaled || !scaled.matrix) return chart;\n\n  for (let i = 0; i < scaled.matrix.length; i++) {\n    let data = {\n      x: scaled.x,\n      y: Array.from(scaled.matrix[i]), // need to ensure not a typed array\n    };\n    addChartDataStyle(data, { meta: scaled.meta[i], id: scaled.ids[i] });\n    chart.data.push(data);\n  }\n\n  return chart;\n}\n","/**\n * @private\n * @param {*} spectra\n * @param {object} options\n */\n\nexport function getNormalizedData(spectra, options = {}) {\n  const { ids } = options;\n\n  let matrix = [];\n  let meta = [];\n  let currentIDs = [];\n  let x = [];\n\n  if (Array.isArray(spectra) && spectra.length > 0) {\n    for (let spectrum of spectra) {\n      if (!ids || ids.includes(spectrum.id)) {\n        currentIDs.push(spectrum.id);\n        matrix.push(spectrum.normalized.y);\n        meta.push(spectrum.meta);\n      }\n    }\n    x = spectra[0].normalized.x;\n  }\n\n  return { ids: currentIDs, matrix, meta, x };\n}\n","import { getNormalizedData } from '../spectra/getNormalizedData';\n\nexport function getTrackAnnotation(spectra, index, options = {}) {\n  const { ids, showSpectrumID = true } = options;\n  let annotations = [];\n\n  let normalized = getNormalizedData(spectra, { ids });\n\n  if (normalized.ids.length === 0) return annotations;\n  let line = 0;\n\n  // header containing X coordinate\n  annotations.push({\n    type: 'line',\n    position: [\n      { x: `${70}px`, y: `${15 + 15 * line}px` },\n      { x: `${85}px`, y: `${15 + 15 * line}px` },\n    ],\n    strokeWidth: 0.0000001,\n    label: {\n      size: 16,\n      text: `x: ${normalized.x[index].toPrecision(6)}`,\n      position: { x: `${130}px`, y: `${20 + 15 * line}px` },\n    },\n  });\n  line++;\n\n  for (let i = 0; i < normalized.ids.length; i++) {\n    let id = normalized.ids[i];\n    let meta = normalized.meta[i];\n    let y = normalized.matrix[i][index];\n    annotations.push({\n      type: 'line',\n      position: [\n        { x: `${70}px`, y: `${15 + 15 * line}px` },\n        { x: `${85}px`, y: `${15 + 15 * line}px` },\n      ],\n      strokeColor: meta.color,\n      strokeWidth: 2,\n      label: {\n        text: `${y.toPrecision(4)}${showSpectrumID ? ` - ${id}` : ''}`,\n        position: { x: `${90}px`, y: `${20 + 15 * line}px` },\n      },\n    });\n    line++;\n  }\n\n  return annotations;\n}\n","/**\n * @private\n * @param {Array<object>} [metadata]\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {string} [options.propertyName=\"category\"]\n */\n\nexport function getCategoriesStats(metadata, options = {}) {\n  const { propertyName = 'category' } = options;\n  let categories = {};\n  let classNumber = 0;\n  for (let metadatum of metadata) {\n    let value = metadatum[propertyName];\n    if (!categories[value]) {\n      categories[value] = {\n        classNumber: classNumber++,\n        counter: 0,\n      };\n    }\n    categories[value].counter++;\n  }\n  return categories;\n}\n","import { getCategoriesStats } from './getCategoriesStats';\n\n/**\n * @private\n * @param {Array<object>} [metadata]\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {string} [options.propertyName=\"category\"]\n */\n\nexport function getClasses(metadata, options = {}) {\n  const { propertyName = 'category' } = options;\n  const categoriesStats = getCategoriesStats(metadata, options);\n  const result = new Array(metadata.length);\n  for (let i = 0; i < metadata.length; i++) {\n    result[i] = categoriesStats[metadata[i][propertyName]].classNumber;\n  }\n  return result;\n}\n","/**\n * @private\n * @param {*} spectra\n * @param {object} options\n */\n\nexport function getMetadata(spectra, options = {}) {\n  const { ids } = options;\n\n  let metadata = [];\n\n  if (Array.isArray(spectra) && spectra.length > 0) {\n    for (let spectrum of spectra) {\n      if (!ids || ids.includes(spectrum.id)) {\n        metadata.push(spectrum.meta);\n      }\n    }\n  }\n\n  return metadata;\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.x.push(currentX);\n                currentData.y.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","const removeCommentRegExp = /\\$\\$.*/;\nconst peakTableSplitRegExp = /[,\\t ]+/;\n\nexport default function parsePeakTable(spectrum, value, result) {\n  spectrum.isPeaktable = true;\n\n  if (!spectrum.variables || Object.keys(spectrum.variables) === 2) {\n    parseXY(spectrum, value, result);\n  } else {\n    parseXYZ(spectrum, value, result);\n  }\n\n  // we will add the data in the variables\n  if (spectrum.variables) {\n    for (let key in spectrum.variables) {\n      spectrum.variables[key].data = spectrum.data[key];\n    }\n  }\n}\n\nfunction parseXY(spectrum, value, result) {\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.x.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.y.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n\nfunction parseXYZ(spectrum, value, result) {\n  let currentData = {};\n  let variables = Object.keys(spectrum.variables);\n  let numberOfVariables = variables.length;\n  variables.forEach((variable) => (currentData[variable] = []));\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % numberOfVariables === 0) {\n      for (let j = 0; j < values.length; j++) {\n        // todo should try to find a xFactor (y, ...)\n        currentData[variables[j % numberOfVariables]].push(\n          parseFloat(values[j]),\n        );\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.x.push(parseFloat(values[0]));\n    currentData.y.push(parseFloat(values[1]));\n  }\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data.y[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.x.length;\n\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = spectra[i].data.y;\n    for (let j = 0; j < xSize; j++) {\n      let value = z[i][j];\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data.x[0];\n  const lastX = spectra[0].data.x[spectra[0].data.x.length - 1]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: getMedian(z[0].map(Math.abs)),\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\n/**\n *\n * @param {Array} input\n * @param {object} [options={}]\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n */\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\r\n  AbstractMatrix.prototype.add = function add(value) {\r\n    if (typeof value === 'number') return this.addS(value);\r\n    return this.addM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.addS = function addS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) + value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.addM = function addM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.add = function add(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.add(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.sub = function sub(value) {\r\n    if (typeof value === 'number') return this.subS(value);\r\n    return this.subM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.subS = function subS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) - value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.subM = function subM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sub = function sub(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sub(value);\r\n  };\r\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\r\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\r\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\r\n  AbstractMatrix.subtract = AbstractMatrix.sub;\r\n\r\n  AbstractMatrix.prototype.mul = function mul(value) {\r\n    if (typeof value === 'number') return this.mulS(value);\r\n    return this.mulM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.mulS = function mulS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) * value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.mul = function mul(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.mul(value);\r\n  };\r\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\r\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\r\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\r\n  AbstractMatrix.multiply = AbstractMatrix.mul;\r\n\r\n  AbstractMatrix.prototype.div = function div(value) {\r\n    if (typeof value === 'number') return this.divS(value);\r\n    return this.divM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.divS = function divS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) / value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.divM = function divM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.div = function div(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.div(value);\r\n  };\r\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\r\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\r\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\r\n  AbstractMatrix.divide = AbstractMatrix.div;\r\n\r\n  AbstractMatrix.prototype.mod = function mod(value) {\r\n    if (typeof value === 'number') return this.modS(value);\r\n    return this.modM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.modS = function modS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) % value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.modM = function modM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.mod = function mod(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.mod(value);\r\n  };\r\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\r\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\r\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\r\n  AbstractMatrix.modulus = AbstractMatrix.mod;\r\n\r\n  AbstractMatrix.prototype.and = function and(value) {\r\n    if (typeof value === 'number') return this.andS(value);\r\n    return this.andM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.andS = function andS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) & value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.andM = function andM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.and = function and(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.and(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.or = function or(value) {\r\n    if (typeof value === 'number') return this.orS(value);\r\n    return this.orM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.orS = function orS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) | value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.orM = function orM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.or = function or(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.or(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.xor = function xor(value) {\r\n    if (typeof value === 'number') return this.xorS(value);\r\n    return this.xorM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.xorS = function xorS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) ^ value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.xor = function xor(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.xor(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\r\n    if (typeof value === 'number') return this.leftShiftS(value);\r\n    return this.leftShiftM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) << value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.leftShift(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\r\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\r\n    return this.signPropagatingRightShiftM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) >> value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.signPropagatingRightShift(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\r\n    if (typeof value === 'number') return this.rightShiftS(value);\r\n    return this.rightShiftM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) >>> value);\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.rightShift(value);\r\n  };\r\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\r\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\r\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\r\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\r\n\r\n  AbstractMatrix.prototype.not = function not() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, ~(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.not = function not(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.not();\r\n  };\r\n\r\n  AbstractMatrix.prototype.abs = function abs() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.abs(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.abs = function abs(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.abs();\r\n  };\r\n\r\n  AbstractMatrix.prototype.acos = function acos() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.acos(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.acos = function acos(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.acos();\r\n  };\r\n\r\n  AbstractMatrix.prototype.acosh = function acosh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.acosh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.acosh = function acosh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.acosh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.asin = function asin() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.asin(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.asin = function asin(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.asin();\r\n  };\r\n\r\n  AbstractMatrix.prototype.asinh = function asinh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.asinh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.asinh = function asinh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.asinh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.atan = function atan() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.atan(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.atan = function atan(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.atan();\r\n  };\r\n\r\n  AbstractMatrix.prototype.atanh = function atanh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.atanh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.atanh = function atanh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.atanh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.cbrt = function cbrt() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.cbrt(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.cbrt = function cbrt(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.cbrt();\r\n  };\r\n\r\n  AbstractMatrix.prototype.ceil = function ceil() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.ceil(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.ceil = function ceil(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.ceil();\r\n  };\r\n\r\n  AbstractMatrix.prototype.clz32 = function clz32() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.clz32(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.clz32 = function clz32(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.clz32();\r\n  };\r\n\r\n  AbstractMatrix.prototype.cos = function cos() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.cos(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.cos = function cos(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.cos();\r\n  };\r\n\r\n  AbstractMatrix.prototype.cosh = function cosh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.cosh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.cosh = function cosh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.cosh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.exp = function exp() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.exp(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.exp = function exp(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.exp();\r\n  };\r\n\r\n  AbstractMatrix.prototype.expm1 = function expm1() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.expm1(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.expm1 = function expm1(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.expm1();\r\n  };\r\n\r\n  AbstractMatrix.prototype.floor = function floor() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.floor(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.floor = function floor(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.floor();\r\n  };\r\n\r\n  AbstractMatrix.prototype.fround = function fround() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.fround(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.fround = function fround(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.fround();\r\n  };\r\n\r\n  AbstractMatrix.prototype.log = function log() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.log(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.log = function log(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.log();\r\n  };\r\n\r\n  AbstractMatrix.prototype.log1p = function log1p() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.log1p(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.log1p = function log1p(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.log1p();\r\n  };\r\n\r\n  AbstractMatrix.prototype.log10 = function log10() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.log10(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.log10 = function log10(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.log10();\r\n  };\r\n\r\n  AbstractMatrix.prototype.log2 = function log2() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.log2(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.log2 = function log2(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.log2();\r\n  };\r\n\r\n  AbstractMatrix.prototype.round = function round() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.round(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.round = function round(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.round();\r\n  };\r\n\r\n  AbstractMatrix.prototype.sign = function sign() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.sign(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sign = function sign(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sign();\r\n  };\r\n\r\n  AbstractMatrix.prototype.sin = function sin() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.sin(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sin = function sin(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sin();\r\n  };\r\n\r\n  AbstractMatrix.prototype.sinh = function sinh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.sinh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sinh = function sinh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sinh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.sqrt = function sqrt() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.sqrt(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.sqrt = function sqrt(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.sqrt();\r\n  };\r\n\r\n  AbstractMatrix.prototype.tan = function tan() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.tan(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.tan = function tan(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.tan();\r\n  };\r\n\r\n  AbstractMatrix.prototype.tanh = function tanh() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.tanh(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.tanh = function tanh(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.tanh();\r\n  };\r\n\r\n  AbstractMatrix.prototype.trunc = function trunc() {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.trunc(this.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.trunc = function trunc(matrix) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.trunc();\r\n  };\r\n\r\n  AbstractMatrix.pow = function pow(matrix, arg0) {\r\n    const newMatrix = new Matrix(matrix);\r\n    return newMatrix.pow(arg0);\r\n  };\r\n\r\n  AbstractMatrix.prototype.pow = function pow(value) {\r\n    if (typeof value === 'number') return this.powS(value);\r\n    return this.powM(value);\r\n  };\r\n\r\n  AbstractMatrix.prototype.powS = function powS(value) {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.pow(this.get(i, j), value));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  AbstractMatrix.prototype.powM = function powM(matrix) {\r\n    matrix = Matrix.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n      this.columns !== matrix.columns) {\r\n      throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n}\r\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","/**\n * Fast Fourier Transform module\n * 1D-FFT/IFFT, 2D-FFT/IFFT (radix-2)\n */\nvar FFT = (function(){\n  var FFT;  \n  \n  if(typeof exports !== 'undefined') {\n    FFT = exports;   // for CommonJS\n  } else {\n    FFT = {};\n  }\n  \n  var version = {\n    release: '0.3.0',\n    date: '2013-03'\n  };\n  FFT.toString = function() {\n    return \"version \" + version.release + \", released \" + version.date;\n  };\n\n  // core operations\n  var _n = 0,          // order\n      _bitrev = null,  // bit reversal table\n      _cstb = null;    // sin/cos table\n\n  var core = {\n    init : function(n) {\n      if(n !== 0 && (n & (n - 1)) === 0) {\n        _n = n;\n        core._initArray();\n        core._makeBitReversalTable();\n        core._makeCosSinTable();\n      } else {\n        throw new Error(\"init: radix-2 required\");\n      }\n    },\n    // 1D-FFT\n    fft1d : function(re, im) {\n      core.fft(re, im, 1);\n    },\n    // 1D-IFFT\n    ifft1d : function(re, im) {\n      var n = 1/_n;\n      core.fft(re, im, -1);\n      for(var i=0; i<_n; i++) {\n        re[i] *= n;\n        im[i] *= n;\n      }\n    },\n     // 1D-IFFT\n    bt1d : function(re, im) {\n      core.fft(re, im, -1);\n    },\n    // 2D-FFT Not very useful if the number of rows have to be equal to cols\n    fft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.fft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.fft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // 2D-IFFT\n    ifft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.ifft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.ifft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // core operation of FFT\n    fft : function(re, im, inv) {\n      var d, h, ik, m, tmp, wr, wi, xr, xi,\n          n4 = _n >> 2;\n      // bit reversal\n      for(var l=0; l<_n; l++) {\n        m = _bitrev[l];\n        if(l < m) {\n          tmp = re[l];\n          re[l] = re[m];\n          re[m] = tmp;\n          tmp = im[l];\n          im[l] = im[m];\n          im[m] = tmp;\n        }\n      }\n      // butterfly operation\n      for(var k=1; k<_n; k<<=1) {\n        h = 0;\n        d = _n/(k << 1);\n        for(var j=0; j<k; j++) {\n          wr = _cstb[h + n4];\n          wi = inv*_cstb[h];\n          for(var i=j; i<_n; i+=(k<<1)) {\n            ik = i + k;\n            xr = wr*re[ik] + wi*im[ik];\n            xi = wr*im[ik] - wi*re[ik];\n            re[ik] = re[i] - xr;\n            re[i] += xr;\n            im[ik] = im[i] - xi;\n            im[i] += xi;\n          }\n          h += d;\n        }\n      }\n    },\n    // initialize the array (supports TypedArray)\n    _initArray : function() {\n      if(typeof Uint32Array !== 'undefined') {\n        _bitrev = new Uint32Array(_n);\n      } else {\n        _bitrev = [];\n      }\n      if(typeof Float64Array !== 'undefined') {\n        _cstb = new Float64Array(_n*1.25);\n      } else {\n        _cstb = [];\n      }\n    },\n    // zero padding\n    _paddingZero : function() {\n      // TODO\n    },\n    // makes bit reversal table\n    _makeBitReversalTable : function() {\n      var i = 0,\n          j = 0,\n          k = 0;\n      _bitrev[0] = 0;\n      while(++i < _n) {\n        k = _n >> 1;\n        while(k <= j) {\n          j -= k;\n          k >>= 1;\n        }\n        j += k;\n        _bitrev[i] = j;\n      }\n    },\n    // makes trigonometiric function table\n    _makeCosSinTable : function() {\n      var n2 = _n >> 1,\n          n4 = _n >> 2,\n          n8 = _n >> 3,\n          n2p4 = n2 + n4,\n          t = Math.sin(Math.PI/_n),\n          dc = 2*t*t,\n          ds = Math.sqrt(dc*(2 - dc)),\n          c = _cstb[n4] = 1,\n          s = _cstb[0] = 0;\n      t = 2*dc;\n      for(var i=1; i<n8; i++) {\n        c -= dc;\n        dc += t*c;\n        s += ds;\n        ds -= t*s;\n        _cstb[i] = s;\n        _cstb[n4 - i] = c;\n      }\n      if(n8 !== 0) {\n        _cstb[n8] = Math.sqrt(0.5);\n      }\n      for(var j=0; j<n4; j++) {\n        _cstb[n2 - j]  = _cstb[j];\n      }\n      for(var k=0; k<n2p4; k++) {\n        _cstb[k + n2] = -_cstb[k];\n      }\n    }\n  };\n  // aliases (public APIs)\n  var apis = ['init', 'fft1d', 'ifft1d', 'fft2d', 'ifft2d'];\n  for(var i=0; i<apis.length; i++) {\n    FFT[apis[i]] = core[apis[i]];\n  }\n  FFT.bt = core.bt1d;\n  FFT.fft = core.fft1d;\n  FFT.ifft = core.ifft1d;\n  \n  return FFT;\n}).call(this);\n","// sources:\n// https://en.wikipedia.org/wiki/Gyromagnetic_ratio\n\n// TODO: can we have a better source and more digits ? @jwist\n\nexport const gyromagneticRatio = {\n  '1H': 267.52218744e6,\n  '2H': 41.065e6,\n  '3H': 285.3508e6,\n  '3He': -203.789e6,\n  '7Li': 103.962e6,\n  '13C': 67.28284e6,\n  '14N': 19.331e6,\n  '15N': -27.116e6,\n  '17O': -36.264e6,\n  '19F': 251.662e6,\n  '23Na': 70.761e6,\n  '27Al': 69.763e6,\n  '29Si': -53.19e6,\n  '31P': 108.291e6,\n  '57Fe': 8.681e6,\n  '63Cu': 71.118e6,\n  '67Zn': 16.767e6,\n  '129Xe': -73.997e6,\n};\n","import { gyromagneticRatio } from 'nmr-processing';\n\nexport default function postProcessingNMR(entriesFlat) {\n  // specific NMR functions\n  let observeFrequency = 0;\n  let shiftOffsetVal = 0;\n\n  for (let entry of entriesFlat) {\n    for (let spectrum of entry.spectra) {\n      if (entry.ntuples && entry.ntuples.symbol) {\n        if (!observeFrequency && spectrum.observeFrequency) {\n          observeFrequency = spectrum.observeFrequency;\n        }\n        if (!shiftOffsetVal && spectrum.shiftOffsetVal) {\n          shiftOffsetVal = spectrum.shiftOffsetVal;\n        }\n      } else {\n        observeFrequency = spectrum.observeFrequency;\n        shiftOffsetVal = spectrum.shiftOffsetVal;\n      }\n\n      if (observeFrequency) {\n        if (spectrum.xUnits && spectrum.xUnits.toUpperCase().includes('HZ')) {\n          spectrum.xUnits = 'PPM';\n          spectrum.xFactor = spectrum.xFactor / observeFrequency;\n          spectrum.firstX = spectrum.firstX / observeFrequency;\n          spectrum.lastX = spectrum.lastX / observeFrequency;\n          spectrum.deltaX = spectrum.deltaX / observeFrequency;\n          for (let i = 0; i < spectrum.data.x.length; i++) {\n            spectrum.data.x[i] /= observeFrequency;\n          }\n        }\n      }\n      if (shiftOffsetVal) {\n        let shift = spectrum.firstX - shiftOffsetVal;\n        spectrum.firstX = spectrum.firstX - shift;\n        spectrum.lastX = spectrum.lastX - shift;\n        for (let i = 0; i < spectrum.data.x.length; i++) {\n          spectrum.data.x[i] -= shift;\n        }\n      }\n\n      if (\n        observeFrequency &&\n        entry.ntuples &&\n        entry.ntuples.symbol &&\n        entry.ntuples.nucleus\n      ) {\n        let unit = '';\n        let pageSymbolIndex = entry.ntuples.symbol.indexOf(spectrum.pageSymbol);\n        if (entry.ntuples.units && entry.ntuples.units[pageSymbolIndex]) {\n          unit = entry.ntuples.units[pageSymbolIndex];\n        }\n        if (unit !== 'PPM') {\n          if (pageSymbolIndex !== 0) {\n            throw Error('Not sure about this ntuples format');\n          }\n\n          let ratio0 = gyromagneticRatio[entry.ntuples.nucleus[0]];\n          let ratio1 = gyromagneticRatio[entry.ntuples.nucleus[1]];\n          if (!ratio0 || !ratio1) {\n            throw Error('Problem with determination of gyromagnetic ratio');\n          }\n          let ratio = (ratio0 / ratio1) * observeFrequency;\n          spectrum.pageValue /= ratio;\n        }\n      }\n    }\n  }\n}\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport postProcessingNMR from './postProcessingNMR';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  // converting Hz to ppm\n  postProcessingNMR(entriesFlat);\n\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n  }\n}\n","export default function prepareNtuplesDatatable(currentEntry, spectrum, kind) {\n  let xIndex = -1;\n  let yIndex = -1;\n  let firstVariable = '';\n  let secondVariable = '';\n  if (kind.indexOf('++') > 0) {\n    firstVariable = kind.replace(/.*\\(([a-zA-Z0-9]+)\\+\\+.*/, '$1');\n    secondVariable = kind.replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n  } else {\n    kind = kind.replace(/[^a-zA-Z]/g, '');\n    firstVariable = kind.charAt(0);\n    secondVariable = kind.charAt(1);\n    spectrum.variables = {};\n    for (let symbol of kind) {\n      let lowerCaseSymbol = symbol.toLowerCase();\n      let index = currentEntry.ntuples.symbol.indexOf(symbol);\n      if (index === -1) throw Error(`Symbol undefined: ${symbol}`);\n      spectrum.variables[lowerCaseSymbol] = {};\n      for (let key in currentEntry.ntuples) {\n        if (currentEntry.ntuples[key][index]) {\n          spectrum.variables[lowerCaseSymbol][key.replace(/^var/, '')] =\n            currentEntry.ntuples[key][index];\n        }\n      }\n    }\n  }\n  xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n  yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n\n  if (xIndex === -1) xIndex = 0;\n  if (yIndex === -1) yIndex = 0;\n\n  if (currentEntry.ntuples.first) {\n    if (currentEntry.ntuples.first.length > xIndex) {\n      spectrum.firstX = currentEntry.ntuples.first[xIndex];\n    }\n    if (currentEntry.ntuples.first.length > yIndex) {\n      spectrum.firstY = currentEntry.ntuples.first[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.last) {\n    if (currentEntry.ntuples.last.length > xIndex) {\n      spectrum.lastX = currentEntry.ntuples.last[xIndex];\n    }\n    if (currentEntry.ntuples.last.length > yIndex) {\n      spectrum.lastY = currentEntry.ntuples.last[yIndex];\n    }\n  }\n  if (\n    currentEntry.ntuples.vardim &&\n    currentEntry.ntuples.vardim.length > xIndex\n  ) {\n    spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n  }\n  if (currentEntry.ntuples.factor) {\n    if (currentEntry.ntuples.factor.length > xIndex) {\n      spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n    }\n    if (currentEntry.ntuples.factor.length > yIndex) {\n      spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.units) {\n    if (currentEntry.ntuples.units.length > xIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[xIndex]\n      ) {\n        spectrum.xUnits = `${currentEntry.ntuples.varname[xIndex]} [${currentEntry.ntuples.units[xIndex]}]`;\n      } else {\n        spectrum.xUnits = currentEntry.ntuples.units[xIndex];\n      }\n    }\n    if (currentEntry.ntuples.units.length > yIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[yIndex]\n      ) {\n        spectrum.yUnits = `${currentEntry.ntuples.varname[yIndex]} [${currentEntry.ntuples.units[yIndex]}]`;\n      } else {\n        spectrum.yUnits = currentEntry.ntuples.units[yIndex];\n      }\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n}\n","import { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareNtuplesDatatable from './prepareNtuplesDatatable';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparator = /[ \\t]*,[ \\t]*/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  canonicMetadataLabels: false,\n  dynamicTyping: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\n/**\n *\n * @param {text} jcamp\n * @param {object} [options]\n * @param {number} [options.keepRecordsRegExp=/^$/] By default we don't keep meta information\n * @param {number} [options.canonicDataLabels=true] Canonize the Labels (uppercase without symbol)\n * @param {number} [options.canonicMetadataLabels=false] Canonize the metadata Labels (uppercase without symbol)\n * @param {number} [options.dynamicTyping=false] Convert numbers to Number\n * @param {number} [options.withoutXY=false] Remove the XY data\n * @param {number} [options.chromatogram=false] Special post-processing for GC / HPLC / MS\n * @param {number} [options.keepSpectra=false] Force to keep the spectra in case of 2D\n * @param {number} [options.noContour=false] Don't calculate countour in case of 2D\n * @param {number} [options.nbContourLevels=7] Number of positive / negative contour levels to calculate\n * @param {number} [options.noiseMultiplier=5] Define for 2D the level as 5 times the median as default\n * @param {number} [options.profiling=false] Add profiling information\n */\n\nexport default function convert(jcamp, options = {}) {\n  options = Object.assign({}, defaultOptions, options);\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        prepareNtuplesDatatable(currentEntry, spectrum, infos[0]);\n\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          if (!spectrum.deltaX) {\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n        meta: {},\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnits = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnits = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.ntuples) {\n        currentEntry.ntuples.nucleus = dataValue.split(ntuplesSeparator);\n      }\n      if (currentEntry.twoD) {\n        currentEntry.yType = dataValue.split(ntuplesSeparator)[0];\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      currentEntry.meta &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let value = dataValue.trim();\n      let target, label;\n      if (dataLabel.startsWith('$')) {\n        label = options.canonicMetadataLabels\n          ? canonicDataLabel.substring(1)\n          : dataLabel.substring(1);\n        target = currentEntry.meta;\n      } else {\n        label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        target = currentEntry.info;\n      }\n\n      if (options.dynamicTyping) {\n        let parsedValue = Number.parseFloat(value);\n        if (!Number.isNaN(parsedValue)) value = parsedValue;\n      }\n      if (target[label]) {\n        if (!Array.isArray(target[label])) {\n          target[label] = [target[label]];\n        }\n        target[label].push(value);\n      } else {\n        target[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","export function getJcampKind(data) {\n  let dataType = data.dataType.toLowerCase();\n  let yUnits = data.spectra[0].yUnits.toLowerCase();\n\n  if (dataType.match(/infrared/)) {\n    if (yUnits.match(/absorbance/)) {\n      return IR_ABSORBANCE;\n    } else {\n      return IR_TRANSMITTANCE;\n    }\n  }\n  return undefined;\n}\n\nexport const IR_TRANSMITTANCE = {\n  normalization: {},\n  importation: {\n    converter: (transmittance) => -Math.log10(transmittance),\n  },\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance',\n  },\n};\n\nexport const IR_ABSORBANCE = {\n  normalization: {},\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance',\n  },\n};\n\nexport const nmr1H = {\n  display: {\n    xLabel: 'δ [ppm]',\n    xInverted: true,\n    yLabel: 'Intensity',\n  },\n};\n\nexport const nmr13C = {\n  display: {\n    xLabel: 'δ [ppm]',\n    xInverted: true,\n    yLabel: 'Intensity',\n  },\n};\n","import { convert } from 'jcampconverter';\n\nimport { getJcampKind } from '../Kinds';\n/**\n * Create a spectrum from a jcamp\n * @param {string} jcampText - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nexport default function jcamp(jcampText) {\n  const parsed = convert(jcampText, { xy: true, keepRecordsRegExp: /TITLE/ })\n    .flatten[0];\n  const kind = getJcampKind(parsed);\n  const data = parsed.spectra[0].data;\n  const meta = parsed.info;\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data, kind, meta };\n}\n","/**\n * Creates a g\n * @param {string} text - String containing the text data\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] Field separator\n * @return {object} - {matrix, data, x, ids}\n */\nexport default function matrix(text, options = {}) {\n  const lines = text.split(/[\\r\\n]+/).filter((value) => value);\n  const { fs = '\\t' } = options;\n  let currentMatrix = [];\n  let ids = [];\n  let meta = [];\n  let x = [];\n\n  let headers = lines[0].split(fs);\n  let labels = [];\n\n  for (let i = 0; i < headers.length; i++) {\n    let header = headers[i];\n    if (isNaN(header)) {\n      labels[i] = header;\n    } else {\n      x = headers.slice(i).map((value) => Number(value));\n      break;\n    }\n  }\n\n  for (let i = 1; i < lines.length; i++) {\n    let line = lines[i];\n    let parts = line.split('\\t');\n    ids.push(parts[0]);\n    let oneMeta = {};\n    meta.push(oneMeta);\n    for (let j = 1; j < parts.length; j++) {\n      if (j < labels.length) {\n        oneMeta[labels[j]] = parts[j];\n      } else {\n        currentMatrix.push(\n          parts.slice(labels.length).map((value) => Number(value)),\n        );\n        break;\n      }\n    }\n  }\n  return { x, meta, matrix: currentMatrix, ids };\n}\n","\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] : Object of points contains property x (an array) and y (an array)\n * @return points\n */\n\nexport default function uniqueX(points = {}) {\n  const { x, y } = points;\n  if (x.length < 2) return;\n  if (x.length !== y.length) {\n    throw new Error('The X and Y arrays mush have the same length');\n  }\n\n  let current = x[0];\n  let counter = 0;\n\n  for (let i = 1; i < x.length; i++) {\n    if (current !== x[i]) {\n      counter++;\n      current = x[i];\n      x[counter] = x[i];\n      if (i !== counter) {\n        y[counter] = 0;\n      }\n    }\n    if (i !== counter) {\n      y[counter] += y[i];\n    }\n  }\n\n  x.length = counter + 1;\n  y.length = counter + 1;\n}\n","import uniqueXFunction from 'ml-arrayxy-uniquex';\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options={}]\n * @param {boolean} [options.rescale = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.min(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {object{x:<Array<number>>,y:<Array<number>>}\n */\nexport function parseXY(text, options = {}) {\n  let {\n    rescale = false,\n    uniqueX = false,\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Number.MAX_SAFE_INTEGER,\n    minNumberColumns = 2,\n  } = options;\n\n  maxNumberColumns = Math.max(maxNumberColumns, xColumn + 1, yColumn + 1);\n  minNumberColumns = Math.max(xColumn + 1, yColumn + 1, minNumberColumns);\n\n  let lines = text.split(/[\\r\\n]+/);\n\n  let maxY = Number.MIN_VALUE;\n  let result = { x: [], y: [] };\n  let info = [];\n  for (let l = 0; l < lines.length; l++) {\n    let line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      let fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n        fields.length >= minNumberColumns &&\n        fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result.x.push(x);\n        result.y.push(y);\n      }\n    } else if (line) {\n      info.push({ position: result.x.length, value: line });\n    }\n  }\n\n  if (uniqueX) {\n    uniqueXFunction(result);\n  }\n\n  if (rescale) {\n    for (let i = 0; i < result.y.length; i++) {\n      result.y[i] /= maxY;\n    }\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result,\n  };\n}\n","import { parseXY } from 'xy-parser';\n\n/**\n * Create a spectrum from a text file\n * @param {string} value - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nexport default function text(value, options = {}) {\n  const { kind, parserOptions = {} } = options;\n\n  const data = parseXY(value, parserOptions);\n\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data };\n}\n","import { xCorrelation } from 'ml-spectra-processing';\n\n/**\n * @private\n */\n\nexport function getAutocorrelation(normalized, index) {\n  let matrix = normalized.matrix;\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let array1 = new Float64Array(nbRow);\n  let array2 = new Float64Array(nbRow);\n  let result = new Array(nbColumn);\n  for (let j = 0; j < nbRow; j++) {\n    array1[j] = matrix[j][index];\n  }\n  for (let i = 0; i < nbColumn; i++) {\n    for (let j = 0; j < nbRow; j++) {\n      array2[j] = matrix[j][i];\n    }\n    result[i] = xCorrelation(array1, array2);\n  }\n  return {\n    x: normalized.x,\n    y: result,\n  };\n}\n","import { Matrix } from 'ml-matrix';\n\n/**\n * @private\n */\n\nexport function getMeanData(normalized) {\n  let matrix = new Matrix(normalized.matrix);\n  return {\n    x: normalized.x,\n    y: matrix.mean('column'),\n  };\n}\n","import { getNormalizedData } from './getNormalizedData.js';\n\n/**\n * @private\n * @param {*} spectra\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] field separator\n * @param {string} [options.rs='\\n'] record (line) separator\n */\n\nexport function getNormalizedText(spectra, options = {}) {\n  let { fs = '\\t', rs = '\\n' } = options;\n  let { matrix, meta, ids, x } = getNormalizedData(spectra);\n  let allKeysObject = {};\n  for (let metum of meta) {\n    for (let key of Object.keys(metum)) {\n      let type = typeof metum[key];\n      if (type === 'number' || type === 'string' || type === 'boolean') {\n        allKeysObject[key] = true;\n      }\n    }\n  }\n  let allKeys = Object.keys(allKeysObject);\n\n  let lines = [];\n  let line = [];\n  line.push('id', ...allKeys, ...x);\n  lines.push(line.join(fs));\n\n  for (let i = 0; i < ids.length; i++) {\n    line = [];\n    line.push(ids[i]);\n    for (let key of allKeys) {\n      line.push(meta[i][key]);\n    }\n    line.push(...matrix[i]);\n    lines.push(line.join(fs));\n  }\n\n  return lines.join(rs);\n}\n","import { xFindClosestIndex } from 'ml-spectra-processing';\n\nexport function getFromToIndex(xs, range) {\n  let { from, to } = range;\n  if (from === undefined) {\n    from = xs[0];\n  }\n  if (to === undefined) {\n    to = xs[xs.length - 1];\n  }\n\n  return {\n    fromIndex: xFindClosestIndex(xs, from),\n    toIndex: xFindClosestIndex(xs, to),\n  };\n}\n","import { xyMaxYPoint, xMultiply } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function max(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = xyMaxYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => xyMaxYPoint(spectrum.normalized, fromToIndex).y,\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(xMultiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n","import { xyMinYPoint, xMultiply } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function min(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = xyMinYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => xyMinYPoint(spectrum.normalized, fromToIndex).y,\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(xMultiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","export default function checkArraySize(x, y) {\n  if (!Array.isArray(x) || !Array.isArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","export { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\n\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (Array.isArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n)\n    };\n  }\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\n\nexport default class SimpleLinearRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = [y.intercept, y.slope];\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'simpleLinearRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(x) {\n    return this.slope * x + this.intercept;\n  }\n\n  computeX(y) {\n    return (y - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    let result = 'f(x) = ';\n    if (this.slope !== 0) {\n      const xFactor = maybeToPrecision(this.slope, precision);\n      result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\n      if (this.intercept !== 0) {\n        const absIntercept = Math.abs(this.intercept);\n        const operator = absIntercept === this.intercept ? '+' : '-';\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'simpleLinearRegression') {\n      throw new TypeError('not a SLR model');\n    }\n    return new SimpleLinearRegression(true, json);\n  }\n}\n\nfunction regress(slr, x, y) {\n  const n = x.length;\n  let xSum = 0;\n  let ySum = 0;\n\n  let xSquared = 0;\n  let xY = 0;\n\n  for (let i = 0; i < n; i++) {\n    xSum += x[i];\n    ySum += y[i];\n    xSquared += x[i] * x[i];\n    xY += x[i] * y[i];\n  }\n\n  const numerator = n * xY - xSum * ySum;\n  slr.slope = numerator / (n * xSquared - xSum * xSum);\n  slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n  slr.coefficients = [slr.intercept, slr.slope];\n}\n","import SimpleLinearRegression from 'ml-regression-simple-linear';\nimport { xyMinYPoint, xyMaxYPoint } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function minMax(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = {\n    min: xyMinYPoint(targetSpectrum.normalized, fromToIndex).y,\n    max: xyMaxYPoint(targetSpectrum.normalized, fromToIndex).y,\n  };\n\n  let values = spectra.map((spectrum) => {\n    return {\n      min: xyMinYPoint(spectrum.normalized, fromToIndex).y,\n      max: xyMaxYPoint(spectrum.normalized, fromToIndex).y,\n    };\n  });\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    const regression = new SimpleLinearRegression(\n      [targetValue.min, targetValue.max],\n      [values[i].min, values[i].max],\n    );\n\n    let length = spectrum.normalized.y.length;\n    let scaled = new Array(length);\n    for (let j = 0; j < length; j++) {\n      scaled[j] = regression.computeX(spectrum.normalized.y[j]);\n    }\n    matrix.push(scaled);\n  }\n\n  return matrix;\n}\n","import { xyIntegration, xMultiply } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function range(spectra, targetSpectrum, currentrange = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, currentrange);\n\n  let targetValue = xyIntegration(targetSpectrum.normalized, fromToIndex);\n\n  let values = spectra.map((spectrum) =>\n    xyIntegration(spectrum.normalized, fromToIndex),\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(xMultiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n","import { xSubtract, xyMaxYPoint, xyIntegration } from 'ml-spectra-processing';\n\nimport { getNormalizedData } from './getNormalizedData';\nimport { getFromToIndex } from './scaled/getFromToIndex';\nimport { max } from './scaled/max';\nimport { min } from './scaled/min';\nimport { minMax } from './scaled/minMax';\nimport { range as rangeFct } from './scaled/range';\n/**\n * @private\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n * @param {Array} [options.ranges] Array of object containing {from:'', to:'', label:''}\n * @param {Array} [options.calculations] Array of object containing {label:'', formula:''}\n * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[], ranges:[object] }\n */\n\nexport function getScaledData(spectraProcessor, options = {}) {\n  if (!spectraProcessor.spectra || !spectraProcessor.spectra[0]) return {};\n  const {\n    range,\n    targetID,\n    relative,\n    method,\n    ids,\n    ranges,\n    calculations,\n  } = options;\n  let targetSpectrum =\n    spectraProcessor.getSpectrum(targetID) || spectraProcessor.spectra[0];\n  let spectra = spectraProcessor.getSpectra(ids);\n  let result;\n\n  if (method === '' || method === undefined) {\n    result = getNormalizedData(spectra);\n  } else {\n    let matrix;\n    switch (method.toLowerCase()) {\n      case 'min':\n        matrix = min(spectra, targetSpectrum, range);\n        break;\n      case 'max':\n        matrix = max(spectra, targetSpectrum, range);\n        break;\n      case 'minmax':\n        matrix = minMax(spectra, targetSpectrum, range);\n        break;\n      case 'range':\n        matrix = rangeFct(spectra, targetSpectrum, range);\n        break;\n      default:\n        throw new Error(`getScaledData: unknown method: ${method}`);\n    }\n    let meta = [];\n    let currentIDs = [];\n    for (let spectrum of spectra) {\n      currentIDs.push(spectrum.id);\n      meta.push(spectrum.meta);\n    }\n    let x = spectra[0].normalized.x;\n    result = { ids: currentIDs, matrix, meta, x };\n  }\n\n  if (relative) {\n    for (let i = 0; i < result.matrix.length; i++) {\n      result.matrix[i] = xSubtract(\n        result.matrix[i],\n        targetSpectrum.normalized.y,\n      );\n    }\n  }\n\n  if (ranges) {\n    result.ranges = [];\n    for (let i = 0; i < result.matrix.length; i++) {\n      let rangesCopy = JSON.parse(JSON.stringify(ranges));\n      let yNormalized = result.matrix[i];\n      let resultRanges = {};\n      result.ranges.push(resultRanges);\n      for (let currentRange of rangesCopy) {\n        if (currentRange.label) {\n          let fromToIndex = getFromToIndex(\n            targetSpectrum.normalized.x,\n            currentRange,\n          );\n          currentRange.integration = xyIntegration(\n            { x: result.x, y: yNormalized },\n            fromToIndex,\n          );\n          currentRange.maxPoint = xyMaxYPoint(\n            { x: result.x, y: yNormalized },\n            fromToIndex,\n          );\n          resultRanges[currentRange.label] = currentRange;\n        }\n      }\n    }\n  }\n\n  if (calculations && result.ranges) {\n    result.calculations = result.ranges.map(() => {\n      return {};\n    });\n    const parameters = Object.keys(result.ranges[0]);\n    for (let calculation of calculations) {\n      // eslint-disable-next-line no-new-func\n      const callback = new Function(\n        ...parameters,\n        `return ${calculation.formula}`,\n      );\n      for (let i = 0; i < result.ranges.length; i++) {\n        let oneRanges = result.ranges[i];\n        let values = parameters.map((key) => oneRanges[key].integration);\n        result.calculations[i][calculation.label] = callback(...values);\n      }\n    }\n  }\n\n  return result;\n}\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","import filterX from 'ml-array-xy-filter-x';\n\n/**\n *\n * @private\n * @param {Spectrum} spectrum\n * @param {object} [options.xFilter={}]\n * @param {array} [options.xFilter.from]\n * @param {array} [options.xFilter.to]\n * @param {array} [options.xFilter.exclusions=[]]\n * @param {array} [options.yFactor=1]\n */\n\nexport function getData(spectrum, options = {}) {\n  const { xFilter = {}, yFactor = 1 } = options;\n  let data = { x: spectrum.x, y: spectrum.y };\n\n  if (xFilter) {\n    data = filterX({ x: spectrum.x, y: spectrum.y }, xFilter);\n  }\n  if (yFactor && yFactor !== 1) {\n    data.y = data.y.map((y) => y * yFactor);\n  }\n  return data;\n}\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @param {number} [options.maxValue=1] new max value for algo max\n * @param {number} [options.sumValue=1] new max value for algo absolute and sum\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","import normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport Stat from 'ml-stat/array';\n\n/**\n *\n * @private\n * @param {*} spectrum\n * @param {*} options\n */\nexport function getNormalized(spectrum, options = {}) {\n  if (!Array.isArray(spectrum.x) || !Array.isArray(spectrum.y)) {\n    throw new Error(\n      'getNormalized: Can not get normalized data, missing original data.',\n    );\n  }\n\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints = 1024,\n    filters = [],\n    exclusions = [],\n  } = options;\n\n  let ys = spectrum.y.slice(0);\n\n  for (let filter of filters) {\n    switch (filter.name) {\n      case 'centerMean': {\n        let mean = Stat.mean(spectrum.y);\n        let meanFct = (y) => y - mean;\n        ys = ys.map(meanFct);\n        break;\n      }\n      case 'scaleSD': {\n        let std = Stat.standardDeviation(spectrum.y);\n        let stdFct = (y) => y / std;\n        ys = ys.map(stdFct);\n        break;\n      }\n      case 'normalize': {\n        ys = normed(ys);\n        break;\n      }\n      case 'rescale': {\n        ys = rescale(ys);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n  let result = equallySpaced(\n    { x: spectrum.x, y: ys },\n    { from, to, numberOfPoints, exclusions },\n  );\n  return result;\n}\n","import {\n  xyIntegration,\n  xyMaxYPoint,\n  xyMinYPoint,\n  xFindClosestIndex,\n} from 'ml-spectra-processing';\n\n/**\n * @private\n * @param {*} spectrum\n * @param {*} ranges\n */\nexport function updateRangesInfo(spectrum, ranges = []) {\n  spectrum.ranges = {};\n  for (let range of ranges) {\n    range = JSON.parse(JSON.stringify(range));\n    spectrum.ranges[range.label] = range;\n    let fromToIndex = {\n      fromIndex: xFindClosestIndex(spectrum.normalized.x, range.from),\n      toIndex: xFindClosestIndex(spectrum.normalized.x, range.to),\n    };\n    range.integration = xyIntegration(spectrum.normalized, fromToIndex);\n    range.maxPoint = xyMaxYPoint(spectrum.normalized, fromToIndex);\n    range.minPoint = xyMinYPoint(spectrum.normalized, fromToIndex);\n    range.x = spectrum.normalized.x.slice(\n      fromToIndex.fromIndex,\n      fromToIndex.toIndex + 1,\n    );\n    range.y = spectrum.normalized.y.slice(\n      fromToIndex.fromIndex,\n      fromToIndex.toIndex + 1,\n    );\n  }\n}\n","import { minMax } from 'ml-stat/array';\n\nimport { getData } from './getData';\nimport { getNormalized } from './getNormalized';\nimport { updateRangesInfo } from './updateRangesInfo';\n\n/**\n * Class allowing manipulate one IR spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.x=[]] - x values\n * @param {Array} [json.y=[]] - y values\n */\nexport class Spectrum {\n  /**\n   *\n   * @param {array} x\n   * @param {array} y\n   * @param {string} id\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.normalization]\n   * @param {object} [options.normalized]\n   */\n  constructor(x, y, id, options = {}) {\n    const { meta = {}, normalization = {}, normalized } = options;\n\n    if (x && x.length > 1 && x[0] > x[1]) {\n      this.x = x.reverse();\n      this.y = y.reverse();\n    } else {\n      this.x = x || [];\n      this.y = y || [];\n    }\n    this.id = id;\n    this.meta = meta;\n    this.normalizedBoundary = { x: { min: 0, max: 0 }, y: { min: 0, max: 0 } };\n    if (normalized) {\n      this.normalized = normalized;\n      this.updateNormalizedBoundary();\n    } else {\n      this.updateNormalization(normalization);\n    }\n\n    this.updateMemory();\n  }\n\n  get minX() {\n    return this.x[0];\n  }\n\n  get maxX() {\n    return this.x[this.x.length - 1];\n  }\n\n  updateMemory() {\n    let original = ((this.x && this.x.length) || 0) * 16;\n    let normalized = this.normalized.x.length * 16;\n    this.memory = { original, normalized, total: original + normalized };\n  }\n\n  removeOriginal() {\n    this.x = undefined;\n    this.y = undefined;\n    this.updateMemory();\n  }\n\n  getXY() {\n    if (!Array.isArray(this.x) || !Array.isArray(this.y)) {\n      throw new Error('Can not get normalized data');\n    }\n    return { x: this.x, y: this.y };\n  }\n}\n\nSpectrum.prototype.getData = function (options) {\n  return getData(this, options);\n};\n\nSpectrum.prototype.updateNormalization = function (normalization) {\n  this.normalized = getNormalized(this, normalization);\n  this.ranges = {};\n  this.updateMemory();\n  this.updateNormalizedBoundary();\n};\n\nSpectrum.prototype.updateRangesInfo = function (ranges) {\n  updateRangesInfo(this, ranges);\n};\n\nSpectrum.prototype.updateNormalizedBoundary = function () {\n  this.normalizedBoundary.x = {\n    min: this.normalized.x[0],\n    max: this.normalized.x[this.normalized.x.length - 1],\n  };\n  this.normalizedBoundary.y = minMax(this.normalized.y);\n};\n","import { xFindClosestIndex } from 'ml-spectra-processing';\n\nimport { getAutocorrelationChart } from './jsgraph/getAutocorrelationChart';\nimport { getBoxPlotAnnotations } from './jsgraph/getBoxPlotAnnotations';\nimport { getChart } from './jsgraph/getChart';\nimport { getNormalizationAnnotations } from './jsgraph/getNormalizationAnnotations';\nimport { getNormalizedChart } from './jsgraph/getNormalizedChart';\nimport { getScaledChart } from './jsgraph/getScaledChart';\nimport { getTrackAnnotation } from './jsgraph/getTrackAnnotation';\nimport { getCategoriesStats } from './metadata/getCategoriesStats';\nimport { getClasses } from './metadata/getClasses';\nimport { getMetadata } from './metadata/getMetadata';\nimport parseJcamp from './parser/jcamp';\nimport parseMatrix from './parser/matrix';\nimport parseText from './parser/text';\nimport { getAutocorrelation } from './spectra/getAutocorrelation';\nimport { getMeanData } from './spectra/getMeanData';\nimport { getNormalizedData } from './spectra/getNormalizedData';\nimport { getNormalizedText } from './spectra/getNormalizedText';\nimport { getScaledData } from './spectra/getScaledData';\nimport { Spectrum } from './spectrum/Spectrum';\n\nexport class SpectraProcessor {\n  /**\n   * Manager a large number of spectra with the possibility to normalize the data\n   * and skip the original data.\n   * @param {object} [options={}]\n   * @param {boolean} [options.maxMemory=64M]\n   * @param {object} [options.normalization={}] options to normalize the spectra before comparison\n   * @param {number} [options.normalization.from]\n   * @param {number} [options.normalization.to]\n   * @param {number} [options.normalization.numberOfPoints]\n   * @param {array<object>} [options.normalization.filters]\n   * @param {string} [options.normalization.filters.X.name]\n   * @param {object} [options.normalization.filters.X.options]\n   * @param {array<object>} [options.normalization.exclusions]\n   * @param {string} [options.normalization.exclusions.X.from]\n   * @param {object} [options.normalization.exclusions.X.to]\n   */\n  constructor(options = {}) {\n    this.normalization = options.normalization;\n    this.maxMemory = options.maxMemory || 64 * 1024 * 1024;\n    this.keepOriginal = true;\n    this.spectra = [];\n    this.boundaries = {\n      minX: Number.MAX_VALUE,\n      maxX: Number.MIN_VALUE,\n      minY: Number.MAX_VALUE,\n      maxY: Number.MIN_VALUE,\n    };\n  }\n\n  getNormalizationAnnotations() {\n    return getNormalizationAnnotations(\n      this.normalization,\n      this.getNormalizedBoundary(),\n    );\n  }\n\n  /**\n   * Recalculate the normalized data using the stored original data if available\n   * This will throw an error in the original data is not present\n   * @param {number} [normalization.from]\n   * @param {number} [normalization.to]\n   * @param {number} [normalization.numberOfPoints]\n   * @param {array<object>} [normalization.filters]\n   * @param {string} [normalization.filters.X.name]\n   * @param {object} [normalization.filters.X.options]\n   * @param {array<object>} [normalization.exclusions]\n   * @param {string} [normalization.exclusions.X.from]\n   * @param {object} [normalization.exclusions.X.to]\n   */\n  setNormalization(normalization = {}) {\n    if (JSON.stringify(this.normalization) === JSON.stringify(normalization)) {\n      return;\n    }\n    this.normalization = normalization;\n    for (let spectrum of this.spectra) {\n      spectrum.updateNormalization(this.normalization);\n    }\n  }\n\n  getNormalization() {\n    return this.normalization;\n  }\n\n  /**\n   * Returns an object {x:[], y:[]} containing the autocorrelation for the\n   * specified index\n   * @param {integer} [index|undefined] x index of the spectrum to autocorrelate\n   * @param {object} [options={}]\n   * @param {array} [options.ids=[]] list of ids, by default all spectra\n   * @param {array} [options.x] x value if index is undefined\n   */\n  getAutocorrelation(index, options = {}) {\n    const { x } = options;\n    const normalizedData = this.getNormalizedData(options);\n    if (index === undefined && x !== undefined) {\n      index = xFindClosestIndex(normalizedData.x, x);\n    }\n    return getAutocorrelation(normalizedData, index);\n  }\n\n  /**\n   * Returns a {x:[], y:[]} containg the average of specified spectra\n   * @param {object} [options={}]\n   * @param {array} [options.ids=[]] list of ids, by default all spectra\n   */\n  getMeanData(options) {\n    return getMeanData(this.getNormalizedData(options));\n  }\n\n  /**\n   * Returns an object contains 4 parameters with the normalized data\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   */\n  getNormalizedData(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedData(spectra);\n  }\n\n  /**\n   * Returns a tab separated value containing the normalized data\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   * @param {string} [options.fs='\\t'] field separator\n   * @param {string} [options.rs='\\n'] record (line) separator\n   * @returns {string}\n   */\n  getNormalizedText(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedText(spectra, options);\n  }\n\n  getMinMaxX() {\n    let min = Number.MAX_VALUE;\n    let max = Number.MIN_VALUE;\n    for (let spectrum of this.spectra) {\n      if (spectrum.minX < min) min = spectrum.minX;\n      if (spectrum.maxX > max) max = spectrum.maxX;\n    }\n    return { min, max };\n  }\n\n  /**\n\n   * Returns an object contains 4 parameters with the scaled data\n   * @param {object} [options={}] scale spectra based on various parameters\n   * @param {object} [options.range] from - to\n   * @param {Array} [options.ids] ids of selected spectra, by default all\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   */\n  getScaledData(options) {\n    return getScaledData(this, options);\n  }\n\n  /**\n   * Add from text\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.parserOptions={}] XY parser options\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {object} [options.kind]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromText(text, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = parseText(text, options);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  /**\n   * Add jcamp\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} jcamp\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromJcamp(jcamp, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = parseJcamp(jcamp);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  updateRangesInfo(options) {\n    for (let spectrum of this.spectra) {\n      spectrum.updateRangesInfo(options);\n    }\n  }\n\n  getMetadata() {\n    return getMetadata(this.spectra);\n  }\n\n  /**\n   *\n   * @param {object} [options={}]\n   * @param {string} [options.propertyName=\"category\"]\n   */\n  getClasses(options) {\n    return getClasses(this.getMetadata(), options);\n  }\n\n  /**\n   *\n   * @param {object} [options={}]\n   * @param {string} [options.propertyName=\"category\"]\n   */\n  getCategoriesStats(options) {\n    return getCategoriesStats(this.getMetadata(), options);\n  }\n\n  /**\n   * Add a spectrum based on the data\n   * @param {object} data {x, y}}\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.id]\n   * @param {object} [options.normalization={}]\n   * @param {object} [options.normalized]\n   * @return {Spectrum}\n   */\n\n  addFromData(data, options = {}) {\n    if (this.spectra.length === 0) this.keepOriginal = true;\n    const id = options.id || Math.random().toString(36).substring(2, 10);\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.spectra.length;\n    let spectrum = new Spectrum(data.x, data.y, id, {\n      meta: options.meta,\n      normalized: options.normalized,\n      normalization: this.normalization,\n    });\n    this.spectra[index] = spectrum;\n    if (!this.keepOriginal) {\n      spectrum.removeOriginal();\n    } else {\n      let memoryInfo = this.getMemoryInfo();\n      if (memoryInfo.total > this.maxMemory) {\n        this.keepOriginal = false;\n        this.removeOriginals();\n      }\n    }\n  }\n\n  removeOriginals() {\n    for (let spectrum of this.spectra) {\n      spectrum.removeOriginal();\n    }\n  }\n\n  /**\n   * Remove the spectrum from the SpectraProcessor for the specified id\n   * @param {string} id\n   */\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra.splice(index, 1);\n  }\n\n  /**\n   * Remove all the spectra not present in the list\n   * @param {Array} [ids] Array of ids of the spectra to keep\n   */\n  removeSpectraNotIn(ids) {\n    let currentIDs = this.spectra.map((spectrum) => spectrum.id);\n    for (let id of currentIDs) {\n      if (!ids.includes(id)) {\n        this.removeSpectrum(id);\n      }\n    }\n  }\n\n  /**\n   * Checks if the ID of a spectrum exists in the SpectraProcessor\n   * @param {string} id\n   */\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.spectra.length; i++) {\n      let spectrum = this.spectra[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns an array of spectrum from their ids\n   * @param {Array} ids\n   * @returns {Array<Spectrum}\n   */\n  getSpectra(ids) {\n    if (!ids || !Array.isArray(ids)) return this.spectra;\n    let spectra = [];\n    for (let id of ids) {\n      let index = this.getSpectrumIndex(id);\n      if (index !== undefined) {\n        spectra.push(this.spectra[index]);\n      }\n    }\n    return spectra;\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra[index];\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getChart(options) {\n    return getChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getAutocorrelationChart(index, options) {\n    return getAutocorrelationChart(this, index, options);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for the specified index\n   * @returns {object}\n   */\n  getTrackAnnotation(index, options) {\n    return getTrackAnnotation(this.spectra, index, options);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for box plot\n   * @returns {object}\n   */\n  getBoxPlotAnnotations(options) {\n    return getBoxPlotAnnotations(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @returns {object}\n   */\n  getNormalizedChart(options) {\n    return getNormalizedChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the scaled normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @param {object} [options.range] from - to\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object}\n   */\n  getScaledChart(options) {\n    return getScaledChart(this, options);\n  }\n\n  getMemoryInfo() {\n    let memoryInfo = { original: 0, normalized: 0, total: 0 };\n    this.spectra.forEach((spectrum) => {\n      let memory = spectrum.memory;\n      memoryInfo.original += memory.original;\n      memoryInfo.normalized += memory.normalized;\n      memoryInfo.total += memory.total;\n    });\n    memoryInfo.keepOriginal = this.keepOriginal;\n    memoryInfo.maxMemory = this.maxMemory;\n    return memoryInfo;\n  }\n\n  getNormalizedBoundary() {\n    let boundary = {\n      x: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n      y: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n    };\n    for (let spectrum of this.spectra) {\n      if (spectrum.normalizedBoundary.x.min < boundary.x.min) {\n        boundary.x.min = spectrum.normalizedBoundary.x.min;\n      }\n      if (spectrum.normalizedBoundary.x.max > boundary.x.max) {\n        boundary.x.max = spectrum.normalizedBoundary.x.max;\n      }\n      if (spectrum.normalizedBoundary.y.min < boundary.y.min) {\n        boundary.y.min = spectrum.normalizedBoundary.y.min;\n      }\n      if (spectrum.normalizedBoundary.y.max > boundary.y.max) {\n        boundary.y.max = spectrum.normalizedBoundary.y.max;\n      }\n    }\n    return boundary;\n  }\n\n  /**\n   * Create SpectraProcessor from normalized TSV\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.separator='\\t']\n   */\n  static fromNormalizedMatrix(text, options = {}) {\n    let parsed = parseMatrix(text, options);\n    if (!parsed) {\n      throw new Error('Can not parse TSV file');\n    }\n    let spectraProcessor = new SpectraProcessor();\n\n    spectraProcessor.setNormalization({\n      from: parsed.x[0],\n      to: parsed.x[parsed.x.length - 1],\n      numberOfPoints: parsed.x.length,\n    });\n    spectraProcessor.keepOriginal = false;\n\n    for (let i = 0; i < parsed.ids.length; i++) {\n      spectraProcessor.addFromData(\n        { x: [], y: [] },\n        {\n          normalized: {\n            x: parsed.x,\n            y: parsed.matrix[i],\n          },\n          id: parsed.ids[i],\n          meta: parsed.meta[i],\n        },\n      );\n    }\n\n    return spectraProcessor;\n  }\n}\n","export function getFilterAnnotations(filter = {}) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: '0px' },\n        { x: exclusion.to, y: '2000px' },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,128,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: Number.MIN_SAFE_INTEGER, y: '0px' },\n        { x: filter.from, y: '2000px' },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: '0px' },\n        { x: Number.MAX_SAFE_INTEGER, y: '2000px' },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","a","d","e","f","length","g","h","i","j","c","b","_ref","module","exports","window","median","input","isArray","TypeError","quickSelectMedian","slice","xMultiply","array1","array2","isConstant","constant","Array","Error","Number","array3","Float64Array","xBoxPlot","array","sort","info","Q1","Q2","Q3","min","max","q1max","q3min","middle","middleOver","xCorrelation","A","B","n","sumA","sumA2","sumB","sumB2","sumAB","Math","sqrt","xFindClosestIndex","target","low","high","abs","xGetFromToIndex","x","options","fromIndex","toIndex","from","to","undefined","global","factory","this","ascending","NaN","bisector","compare","ascendingComparator","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","descending","number$1","variance","m","s","isNaN","deviation","v","extent","identity","range","start","stop","step","arguments","ceil","e10","e5","e2","ticks","count","tickStep","floor","step0","step1","pow","log","LN10","error","sturges","values","LN2","number","histogram","value","domain","threshold","data","xz","x0","x1","tz","shift","pop","bins","bin","push","_","thresholds","map","quantile","p","freedmanDiaconis","scott","mean","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","t","random","sum","transpose","matrix","row","zip","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","xSubtract","xyCheck","y","xyIntegration","currentxyIntegration","xyMaxYPoint","current","index","xyMinYPoint","limit","clip_rgb","rgb","_clipped","_unclipped","classToType","list","name","toLowerCase","type","obj","unpack","args","keyOrder","split","filter","k","last","l","PI","utils","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","format","autodetect","last$1","clip_rgb$1","type$1","Color","len","me","constructor","mode","sorted","chk","test","apply","_rgb","hex","join","Color_1","chroma","Function","bind","concat","chroma_1","unpack$1","rgb2cmyk","ref","r","rgb2cmyk_1","unpack$2","cmyk2rgb","alpha","cmyk2rgb_1","unpack$3","type$2","cmyk","unpack$4","last$2","rnd","round","hsl2css","hsla","hsl2css_1","unpack$5","rgb2hsl","rgb2hsl_1","unpack$6","last$3","rgb2css","rgba","substr","rgb2css_1","unpack$7","round$1","hsl2rgb","assign","t3","t2","t1","h_","hsl2rgb_1","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$2","css2rgb","css","trim","named","match","rgb$1","i$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","type$3","rest","unpack$8","gl","unpack$9","rgb2hcg","delta","_g","rgb2hcg_1","unpack$a","hcg2rgb","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","hcg2rgb_1","unpack$b","type$4","hcg","unpack$c","last$4","round$3","rgb2hex","u","str","hxa","rgb2hex_1","RE_HEX","RE_HEXA","hex2rgb","parseInt","u$1","r$1","g$1","b$1","hex2rgb_1","type$5","indexOf","unpack$d","acos","rgb2hsi","min_","rgb2hsi_1","unpack$e","limit$1","TWOPI$1","cos","hsi2rgb","hsi2rgb_1","unpack$f","type$6","hsi","unpack$g","type$7","unpack$h","min$1","max$1","rgb2hsl$1","max_","rgb2hsv","unpack$i","floor$1","hsv2rgb","hsv2rgb_1","unpack$j","type$8","hsv","labConstants","Kn","Xn","Yn","Zn","t0","unpack$k","rgb2lab","ref$1","rgb2xyz","z","rgb_xyz","xyz_lab","rgb2lab_1","unpack$l","pow$1","lab2rgb","b_","lab_xyz","xyz_rgb","lab2rgb_1","unpack$m","type$9","lab","unpack$n","sqrt$1","atan2","round$4","lab2lch","lab2lch_1","unpack$o","rgb2lch","rgb2lch_1","unpack$p","sin","cos$1","lch2lab","lch2lab_1","unpack$q","lch2rgb","L","lch2rgb_1","unpack$r","hcl2rgb","hcl","reverse","hcl2rgb_1","unpack$s","type$a","lch","forEach","w3cx11","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","w3cx11_1","type$b","keys","unpack$t","rgb2num","rgb2num_1","type$c","num2rgb","num","num2rgb_1","type$d","unpack$u","type$e","round$5","temperature2rgb","kelvin","temp","temperature2rgb_1","unpack$v","round$6","rgb2temperature","minTemp","maxTemp","eps","rgb2temperature_1","temperature","type$f","mutate","clipped","darken","amount","brighten","darker","brighter","get","mc","channel","src","type$g","pow$2","EPS","MAX_ITER","luminance","lum","cur_lum","max_iter","interpolate","lm","rgb2luminance","luminance_x","interpolator","type$h","mix","col1","col2","premultiply","saturate","desaturate","type$i","set","charAt","out","xyz0","xyz1","sqrt$2","pow$3","lrgb","y1","z1","x2","y2","z2","lab$1","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","dh","lch$1","num$1","c1","c2","hcg$1","hsi$1","hsv$1","clip_rgb$2","pow$4","sqrt$3","PI$1","cos$2","sin$1","atan2$1","average","colors","weights","reduce","w","_average_lrgb","first","xyz","cnt","dx","dy","ci","xyz2","A$1","col","type$j","pow$5","scale","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","getClass","tMapLightness","tMapDomain","getColor","val","bypassMap","classes","analyze","limits","tOut","tBreaks","every","_m","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","result","dm","dd","__range__","samples","end","asc","cache","gamma","nodata","inclusive","bezier","I","lab0","lab1","lab2","lab3","I0","I1","bezier_1","blend","bottom","top","blend_f","c0","each","normal","multiply","darken$1","lighten","screen","overlay","burn","dodge","blend_1","type$k","clip_rgb$3","TWOPI$2","pow$6","sin$2","cos$3","cubehelix","rotations","lightness","dl","fract","amp","cos_a","sin_a","digits","floor$2","random_1","code","log$1","pow$7","floor$3","key","MAX_VALUE","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","contrast","l1","l2","sqrt$4","atan2$2","abs$1","cos$4","PI$2","deltaE","C","a1","b1","L2","a2","b2","sl","sc","h1","c4","sh","delL","delC","delA","delB","dH2","v1","v2","v3","distance","sum_sq","valid","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","list$1","colorbrewer_1","chroma_js","getZones","exclusions","exclusion","JSON","parse","stringify","zones","currentFrom","filterX","points","currentZoneIndex","newX","newY","position","getAutocorrelationChart","spectraProcessor","autocorrelation","getAutocorrelation","xFilter","MIN_VALUE","colorCallback","colorScale","getMeanData","colorSpectrum","color","styles","unselected","lineWidth","lineStyle","selected","getBoxPlotData","spectra","normalized","spectrum","nbRow","nbColumn","aColumn","column","getBoxPlotAnnotations","q13FillColor","q13FillOpacity","q2StrokeColor","q2StrokeWidth","minMaxFillColor","minMaxFillOpacity","annotations","q13","layer","properties","fillColor","fillOpacity","strokeWidth","q2","strokeColor","minMax","addChartDataStyle","lineColor","meta","label","id","getChart","ids","yFactor","chart","includes","getData","getNormalizationAnnotations","boundary","ignore","annotation","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","getNormalizedChart","getScaledChart","scaled","getScaledData","getNormalizedData","currentIDs","getTrackAnnotation","showSpectrumID","line","size","text","toPrecision","getCategoriesStats","metadata","propertyName","categories","classNumber","metadatum","counter","getClasses","categoriesStats","getMetadata","GC_MS_FIELDS","complexChromatogram","chromatogram","times","series","ms","dimension","existingGCMSFields","convertMSFieldToLabel","pageValue","parseFloat","isMSField","canonicDataLabel","replace","convertToFloatArray","stringArray","floatArray","fastParseXYData","deltaX","isXYdata","currentData","currentX","firstX","currentY","firstY","endLine","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeCommentRegExp","peakTableSplitRegExp","parsePeakTable","isPeaktable","variables","parseXY","parseXYZ","lines","xFactor","logs","numberOfVariables","variable","parseXYA","removeSymbolRegExp","isXYAdata","convertTo3DZ","minZ","maxZ","ySize","xSize","lastX","lastY","minX","maxX","minY","maxY","noise","getMedian","generateContourLines","zData","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","xN","y0","yN","iter","nbContourLevels","contourLevels","lineZValue","level","contourLevel","side","factor","noiseMultiplier","exp","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","add2D","noContour","contourLines","maxValue","minValue","rescale","output","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","indent","indentData","inspectMatrix","inspectMatrixWithOptions","maxRows","maxColumns","maxNumSize","inspectData","rows","columns","maxI","maxJ","formatNumber","numStr","String","padEnd","precise","exponential","toExponential","eIndex","installMathOperations","AbstractMatrix","Matrix","add","addS","addM","checkMatrix","newMatrix","sub","subS","subM","subtract","subtractS","subtractM","mul","mulS","mulM","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acosh","asin","asinh","atan","atanh","cbrt","clz32","cosh","expm1","fround","log1p","log10","log2","sign","sinh","tanh","trunc","arg0","powS","powM","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","checkRowIndices","checkColumnIndices","rowOut","some","columnOut","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","varianceByRow","unbiased","cols","sum1","sum2","varianceByColumn","varianceAll","centerByRow","centerByColumn","centerAll","getScaleByRow","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","from1DArray","newRows","newColumns","newData","rowVector","columnVector","zeros","ones","fill","rand","randInt","isInteger","interval","eye","diag","matrix1","matrix2","isMatrix","klass","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","iMax","swapRows","tmp","reducedEchelonForm","maxRow","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","norm","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","r1","r2","console","warn","embed","mat","resultat","blockMult","halfRows","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","flipColumns","kroneckerProduct","sortRows","compareFunction","compareNumbers","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","standardDeviation","center","Symbol","for","randomInt","diagonal","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","FFT","release","date","_n","_bitrev","_cstb","core","init","_initArray","_makeBitReversalTable","_makeCosSinTable","fft1d","re","im","fft","ifft1d","bt1d","fft2d","tre","tim","ifft2d","inv","ik","wr","wi","xr","n4","Uint32Array","_paddingZero","n2","n8","n2p4","dc","ds","apis","bt","ifft","gyromagneticRatio","postProcessingNMR","entriesFlat","observeFrequency","shiftOffsetVal","entry","ntuples","symbol","xUnits","toUpperCase","nucleus","unit","pageSymbolIndex","pageSymbol","units","ratio0","ratio1","ratio","profiling","action","time","Date","now","simpleChromatogram","intensity","postProcessing","newNtuples","twoD","wantXY","keepSpectra","prepareNtuplesDatatable","currentEntry","kind","xIndex","yIndex","firstVariable","secondVariable","lowerCaseSymbol","vardim","nbPoints","varname","yUnits","prepareSpectrum","ntuplesSeparator","Spectrum","defaultOptions","keepRecordsRegExp","canonicDataLabels","canonicMetadataLabels","dynamicTyping","withoutXY","convert","jcamp","entries","tmpResult","children","parentsStack","ldrs","ldr","dataLabel","substring","dataValue","infos","datatable","parentEntry","title","dataType","dataClass","xType","shiftOffsetNum","vartype","varform","yType","page","sampleDescription","startsWith","parsedValue","flatten","getJcampKind","IR_ABSORBANCE","IR_TRANSMITTANCE","normalization","importation","converter","transmittance","display","xLabel","xInverted","yLabel","jcampText","parsed","xy","fs","currentMatrix","headers","labels","header","parts","oneMeta","uniqueX","xColumn","yColumn","keepInfo","maxNumberColumns","minNumberColumns","fields","uniqueXFunction","parserOptions","getNormalizedText","rs","allKeysObject","metum","allKeys","getFromToIndex","xs","targetSpectrum","fromToIndex","targetValue","maybeToPrecision","checkArraySize","BaseRegression","new","predict","_predict","train","toLaTeX","score","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","SimpleLinearRegression","slope","intercept","coefficients","checkArrayLength","regress","computeX","precision","absIntercept","operator","load","json","slr","numerator","regression","currentrange","targetID","relative","method","ranges","calculations","getSpectrum","getSpectra","rangeFct","rangesCopy","yNormalized","resultRanges","currentRange","integration","maxPoint","parameters","calculation","formula","oneRanges","arithmeticMean","geometricMean","logMean","lnsum","grandMean","means","truncatedMean","percent","alreadySorted","harmonicMean","contraHarmonicMean","half","theMean","theVariance","standardError","robustMeanAndStdev","stdev","averageDeviations","quartiles","quart","q1","q3","pooledStandardDeviation","pooledVariance","vari","itemCount","itemArray","covariance","mean1","mean2","cov","skewness","s2","s3","dev","kurtosis","s4","entropy","weightedMean","weightedStandardDeviation","weightedVariance","inPlace","standardize","standardDev","sumValue","_options$algorithm","algorithm","_options$sumValue","_options$maxValue","absoluteSumValue","absoluteSum","currentMaxValue","_i","sumFactor","_i2","_typeof","iterator","sequentialFill","_options","_options$from","_options$to","_options$size","normalize","NEGATIVE_INFINITY","POSITIVE_INFINITY","zone","currentZone","invert","nextExclusion","zonesWithPoints","numberOfPoints","totalSize","previous","unitsPerPoint","currentTotal","integral","equallySpacedSmooth","xLength","halfStep","initialOriginalStep","lastOriginalStep","previousX","previousY","nextX","nextY","sumAtMin","sumAtMax","getSlope","main","equallySpacedSlot","lastStep","frontOutsideSpectra","backOutsideSpectra","currentPoints","equallySpaced","arrayXY","variant","xResult","yResult","zoneResult","processZone","getNormalized","filters","ys","Stat","meanFct","std","stdFct","normed","process","updateRangesInfo","minPoint","normalizedBoundary","updateNormalizedBoundary","updateNormalization","updateMemory","original","memory","total","removeOriginal","getXY","SpectraProcessor","maxMemory","keepOriginal","boundaries","getNormalizedBoundary","setNormalization","getNormalization","normalizedData","getMinMaxX","addFromText","force","contains","parseText","addFromData","addFromJcamp","parseJcamp","getSpectrumIndex","memoryInfo","getMemoryInfo","removeOriginals","removeSpectrum","removeSpectraNotIn","fromNormalizedMatrix","parseMatrix","getFilterAnnotations"],"mappings":"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"}