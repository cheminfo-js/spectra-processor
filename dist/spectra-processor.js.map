{
  "version": 3,
  "sources": [
    "webpack://SpectraProcessor/webpack/universalModuleDefinition",
    "webpack://SpectraProcessor/webpack/bootstrap",
    "webpack://SpectraProcessor/./lib/index.js",
    "webpack://SpectraProcessor//Users/lpatiny/.nvm/versions/node/v12.7.0/lib/node_modules/cheminfo-tools/node_modules/process/browser.js",
    "webpack://SpectraProcessor/./node_modules/is-any-array/src/index.js"
  ],
  "names": [
    "Object",
    "defineProperty",
    "exports",
    "value",
    "createCommonjsModule",
    "fn",
    "module",
    "array",
    "compareNumbers",
    "a",
    "b",
    "sum",
    "values",
    "i",
    "length",
    "max",
    "l",
    "min",
    "minMax",
    "arithmeticMean",
    "mean",
    "geometricMean",
    "mul",
    "Math",
    "pow",
    "logMean",
    "lnsum",
    "log",
    "grandMean",
    "means",
    "samples",
    "n",
    "truncatedMean",
    "percent",
    "alreadySorted",
    "undefined",
    "concat",
    "sort",
    "k",
    "floor",
    "harmonicMean",
    "RangeError",
    "contraHarmonicMean",
    "r1",
    "r2",
    "median",
    "half",
    "variance",
    "unbiased",
    "theMean",
    "theVariance",
    "x",
    "standardDeviation",
    "sqrt",
    "standardError",
    "robustMeanAndStdev",
    "y",
    "stdev",
    "averageDeviations",
    "Array",
    "abs",
    "quartiles",
    "quart",
    "q1",
    "ceil",
    "q2",
    "q3",
    "pooledStandardDeviation",
    "pooledVariance",
    "vari",
    "mode",
    "itemCount",
    "itemArray",
    "count",
    "index",
    "indexOf",
    "maxValue",
    "maxIndex",
    "covariance",
    "vector1",
    "vector2",
    "mean1",
    "mean2",
    "cov",
    "skewness",
    "s2",
    "s3",
    "dev",
    "m2",
    "m3",
    "g",
    "kurtosis",
    "s4",
    "m4",
    "v",
    "c",
    "entropy",
    "eps",
    "weightedMean",
    "weights",
    "weightedStandardDeviation",
    "weightedVariance",
    "z",
    "w",
    "center",
    "inPlace",
    "result",
    "standardize",
    "standardDev",
    "cumulativeSum",
    "array_1",
    "array_2",
    "array_3",
    "array_4",
    "array_5",
    "array_6",
    "array_7",
    "array_8",
    "array_9",
    "array_10",
    "array_11",
    "array_12",
    "array_13",
    "array_14",
    "array_15",
    "array_16",
    "array_17",
    "array_18",
    "array_19",
    "array_20",
    "array_21",
    "array_22",
    "array_23",
    "array_24",
    "array_25",
    "array_26",
    "array_27",
    "array_28",
    "array_29",
    "array_30",
    "array_31",
    "getZones",
    "from",
    "to",
    "exclusions",
    "filter",
    "exclusion",
    "JSON",
    "parse",
    "stringify",
    "forEach",
    "zones",
    "currentFrom",
    "push",
    "filterX",
    "points",
    "options",
    "currentZoneIndex",
    "newX",
    "newY",
    "position",
    "getData",
    "spectrum",
    "data",
    "toString",
    "prototype",
    "isAnyArray",
    "object",
    "call",
    "endsWith",
    "src",
    "_typeof",
    "obj",
    "Symbol",
    "iterator",
    "constructor",
    "sequentialFill",
    "input",
    "arguments",
    "TypeError",
    "_options",
    "_options$from",
    "_options$to",
    "_options$size",
    "size",
    "step",
    "Error",
    "isArray",
    "_i",
    "integral",
    "x0",
    "x1",
    "slope",
    "intercept",
    "equallySpacedSmooth",
    "numberOfPoints",
    "xLength",
    "halfStep",
    "output",
    "initialOriginalStep",
    "lastOriginalStep",
    "previousX",
    "Number",
    "MIN_VALUE",
    "previousY",
    "nextX",
    "nextY",
    "currentValue",
    "sumAtMin",
    "sumAtMax",
    "j",
    "getSlope",
    "y0",
    "y1",
    "main",
    "add",
    "equallySpacedSlot",
    "lastStep",
    "start",
    "MAX_VALUE",
    "frontOutsideSpectra",
    "backOutsideSpectra",
    "currentPoints",
    "getZones$1",
    "toRemove",
    "reduce",
    "previous",
    "total",
    "unitsPerPoint",
    "totalPoints",
    "currentNbPoints",
    "round",
    "equallySpaced",
    "arrayXY",
    "reverse",
    "slice",
    "variant",
    "isNaN",
    "xResult",
    "yResult",
    "zone",
    "zoneResult",
    "processZone",
    "sumValue",
    "norm",
    "_options$algorithm",
    "algorithm",
    "toLowerCase",
    "absoluteSumValue",
    "absoluteSum",
    "map",
    "element",
    "minValue",
    "rescale",
    "currentMin",
    "currentMax",
    "_options$min",
    "autoMinMax",
    "_options$max",
    "factor",
    "getNormalized",
    "filters",
    "name",
    "meanFct",
    "std",
    "stdFct",
    "process",
    "kind",
    "isAnyArray$1",
    "require",
    "check",
    "findClosestIndex",
    "target",
    "low",
    "high",
    "middle",
    "getFromToIndex",
    "fromIndex",
    "toIndex",
    "integration",
    "integral$1",
    "maxY",
    "maxYPoint",
    "current",
    "minYPoint",
    "nbPoints",
    "minY",
    "slot",
    "currentX",
    "first",
    "sortX",
    "minClosestYPoint",
    "targetIndex",
    "previousIndex",
    "MIN_SAFE_INTEGER",
    "currentIndex",
    "maxClosestYPoint",
    "getTargetIndex",
    "realMinYPoint",
    "alpha",
    "log10",
    "beta",
    "gamma",
    "p",
    "realMaxYPoint",
    "XY",
    "array1",
    "array2",
    "isConstant",
    "constant",
    "array3",
    "boxPlot",
    "info",
    "Q1",
    "Q2",
    "Q3",
    "q1max",
    "q3min",
    "middleOver",
    "divide",
    "multiply",
    "rotate",
    "shift",
    "subtract",
    "X",
    "updateRangesInfo",
    "ranges",
    "range",
    "label",
    "fromToIndex",
    "normalized",
    "maxPoint",
    "Spectrum",
    "id",
    "meta",
    "normalization",
    "normalizedBoundary",
    "updateNormalizedBoundary",
    "updateNormalization",
    "updateMemory",
    "minX",
    "maxX",
    "original",
    "memory",
    "removeOriginal",
    "getXY",
    "getConverter",
    "ntuplesSeparator",
    "GC_MS_FIELDS",
    "convertToFloatArray",
    "stringArray",
    "floatArray",
    "parseFloat",
    "defaultOptions",
    "keepRecordsRegExp",
    "xy",
    "withoutXY",
    "chromatogram",
    "keepSpectra",
    "noContour",
    "nbContourLevels",
    "noiseMultiplier",
    "profiling",
    "convert",
    "jcamp",
    "assign",
    "wantXY",
    "Date",
    "now",
    "ntuples",
    "ldr",
    "dataLabel",
    "dataValue",
    "ldrs",
    "endLine",
    "infos",
    "logs",
    "spectra",
    "action",
    "time",
    "split",
    "replace",
    "substring",
    "trim",
    "toUpperCase",
    "xIndex",
    "yIndex",
    "firstVariable",
    "secondVariable",
    "symbol",
    "firstX",
    "firstY",
    "last",
    "lastX",
    "lastY",
    "vardim",
    "xFactor",
    "yFactor",
    "units",
    "xUnit",
    "yUnit",
    "datatable",
    "deltaX",
    "prepareSpectrum",
    "match",
    "fastParseXYData",
    "parsePeakTable",
    "parseXYA",
    "title",
    "dataType",
    "twoD",
    "observeFrequency",
    "xType",
    "indirectFrequency",
    "shiftOffsetNum",
    "shiftOffsetVal",
    "varname",
    "vartype",
    "varform",
    "yType",
    "page",
    "pageValue",
    "pageSymbol",
    "pageSymbolIndex",
    "unit",
    "isMSField",
    "convertMSFieldToLabel",
    "sampleDescription",
    "keys",
    "newNtuples",
    "key",
    "add2D",
    "newData",
    "complexChromatogram",
    "simpleChromatogram",
    "times",
    "series",
    "ms",
    "dimension",
    "existingGCMSFields",
    "intensity",
    "getMedian",
    "convertTo3DZ",
    "minZ",
    "maxZ",
    "ySize",
    "xSize",
    "xVector",
    "noise",
    "zData",
    "contourLines",
    "generateContourLines",
    "povarHeight0",
    "povarHeight1",
    "povarHeight2",
    "povarHeight3",
    "isOver0",
    "isOver1",
    "isOver2",
    "isOver3",
    "nbSubSpectra",
    "nbPovars",
    "pAx",
    "pAy",
    "pBx",
    "pBy",
    "xN",
    "dx",
    "yN",
    "dy",
    "iter",
    "contourLevels",
    "lineZValue",
    "level",
    "contourLevel",
    "side",
    "exp",
    "lines",
    "zValue",
    "iSubSpectra",
    "subSpectra",
    "subSpectraAfter",
    "povar",
    "segments",
    "isXYdata",
    "currentData",
    "currentY",
    "ascii",
    "charCodeAt",
    "newLine",
    "isDifference",
    "isLastDifference",
    "lastDifference",
    "isDuplicate",
    "inComment",
    "lastValue",
    "isNegative",
    "inValue",
    "skipFirstValue",
    "decimalPosition",
    "duplicate",
    "ascii2",
    "removeSymbolRegExp",
    "isXYAdata",
    "removeCommentRegExp",
    "peakTableSplitRegExp",
    "isPeaktable",
    "JcampConverter",
    "useWorker",
    "postToWorker",
    "stamps",
    "worker",
    "createWorker",
    "Promise",
    "resolve",
    "stamp",
    "random",
    "postMessage",
    "workerURL",
    "URL",
    "createObjectURL",
    "Blob",
    "type",
    "Worker",
    "revokeObjectURL",
    "addEventListener",
    "event",
    "createTree",
    "flatten",
    "flat",
    "stack",
    "ntupleLevel",
    "spaces",
    "includes",
    "line",
    "labelLine",
    "startsWith",
    "join",
    "children",
    "finished",
    "pop",
    "entry",
    "src$1",
    "src_1",
    "getJcampKind",
    "datatype",
    "IR_ABSORBANCE",
    "IR_TRANSMITTANCE",
    "importation",
    "converter",
    "transmittance",
    "display",
    "xLabel",
    "xInverted",
    "yLabel",
    "parsed",
    "text",
    "fs",
    "matrix",
    "ids",
    "headers",
    "labels",
    "header",
    "parts",
    "oneMeta",
    "getNormalizationAnnotations",
    "boundary",
    "annotations",
    "ignore",
    "annotation",
    "strokeWidth",
    "fillColor",
    "getBoxPlotData",
    "nbRow",
    "nbColumn",
    "aColumn",
    "Float64Array",
    "column",
    "row",
    "getBoxPlotAnnotations",
    "q13FillColor",
    "q13FillOpacity",
    "q2StrokeColor",
    "q2StrokeWidth",
    "minMaxFillColor",
    "minMaxFillOpacity",
    "q13",
    "layer",
    "properties",
    "fillOpacity",
    "strokeColor",
    "addChartDataStyle",
    "styles",
    "unselected",
    "lineColor",
    "color",
    "lineWidth",
    "lineStyle",
    "selected",
    "getChart",
    "chart",
    "getNormalizedChart",
    "getScaledChart",
    "spectraProcessor",
    "scaled",
    "getScaledData",
    "getNormalizedData",
    "currentIDs",
    "getNormalizedText",
    "rs",
    "allKeysObject",
    "metum",
    "allKeys",
    "getFromToIndex$1",
    "xs",
    "min$1",
    "targetSpectrum",
    "targetValue",
    "max$1",
    "maybeToPrecision",
    "digits",
    "toPrecision",
    "checkArraySize",
    "BaseRegression",
    "new",
    "predict",
    "_predict",
    "train",
    "toLaTeX",
    "score",
    "y2",
    "xSum",
    "ySum",
    "chi2",
    "rmsd",
    "xSquared",
    "ySquared",
    "xY",
    "r",
    "SimpleLinearRegression",
    "coefficients",
    "regress",
    "toJSON",
    "computeX",
    "precision",
    "absIntercept",
    "operator",
    "load",
    "json",
    "slr",
    "numerator",
    "regression",
    "range$1",
    "targetID",
    "relative",
    "method",
    "getSpectrum",
    "getSpectra",
    "SpectraProcessor",
    "maxMemory",
    "keepOriginal",
    "boundaries",
    "getNormalizedBoundary",
    "setNormalization",
    "getNormalization",
    "getMinMaxX",
    "addFromJcamp",
    "jcamp$1",
    "force",
    "contains",
    "addFromData",
    "getSpectrumIndex",
    "memoryInfo",
    "getMemoryInfo",
    "removeOriginals",
    "removeSpectrum",
    "splice",
    "removeSpectraNotIn",
    "fromNormalizedText",
    "text$1",
    "cachedSetTimeout",
    "cachedClearTimeout",
    "defaultSetTimout",
    "defaultClearTimeout",
    "setTimeout",
    "e",
    "clearTimeout",
    "runTimeout",
    "fun",
    "runClearTimeout",
    "marker",
    "queue",
    "draining",
    "currentQueue",
    "queueIndex",
    "cleanUpNextTick",
    "drainQueue",
    "timeout",
    "len",
    "run",
    "nextTick",
    "args",
    "Item",
    "apply",
    "browser",
    "env",
    "argv",
    "version",
    "versions",
    "noop",
    "on",
    "addListener",
    "once",
    "off",
    "removeListener",
    "removeAllListeners",
    "emit",
    "prependListener",
    "prependOnceListener",
    "listeners",
    "binding",
    "cwd",
    "chdir",
    "dir",
    "umask"
  ],
  "mappings": "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",
  "file": "spectra-processor.js",
  "sourcesContent": [
    "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SpectraProcessor\"] = factory();\n\telse\n\t\troot[\"SpectraProcessor\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ",
    " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n",
    "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar array = createCommonjsModule(function (module, exports) {\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n});\nvar array_1 = array.sum;\nvar array_2 = array.max;\nvar array_3 = array.min;\nvar array_4 = array.minMax;\nvar array_5 = array.arithmeticMean;\nvar array_6 = array.mean;\nvar array_7 = array.geometricMean;\nvar array_8 = array.logMean;\nvar array_9 = array.grandMean;\nvar array_10 = array.truncatedMean;\nvar array_11 = array.harmonicMean;\nvar array_12 = array.contraHarmonicMean;\nvar array_13 = array.median;\nvar array_14 = array.variance;\nvar array_15 = array.standardDeviation;\nvar array_16 = array.standardError;\nvar array_17 = array.robustMeanAndStdev;\nvar array_18 = array.quartiles;\nvar array_19 = array.pooledStandardDeviation;\nvar array_20 = array.pooledVariance;\nvar array_21 = array.mode;\nvar array_22 = array.covariance;\nvar array_23 = array.skewness;\nvar array_24 = array.kurtosis;\nvar array_25 = array.entropy;\nvar array_26 = array.weightedMean;\nvar array_27 = array.weightedStandardDeviation;\nvar array_28 = array.weightedVariance;\nvar array_29 = array.center;\nvar array_30 = array.standardize;\nvar array_31 = array.cumulativeSum;\n\nfunction getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nfunction filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n\n/**\n *\n * @private\n * @param {Spectrum} spectrum\n * @param {object} [filter={}]\n * @param {array} [filter.from]\n * @param {array} [filter.to]\n * @param {array} [filter.exclusions=[]]\n */\n\nfunction getData(spectrum, filter = {}) {\n  let data = { x: spectrum.x, y: spectrum.y };\n\n  if (filter) {\n    data = filterX({ x: spectrum.x, y: spectrum.y }, filter);\n  }\n  return data;\n}\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nvar src = isAnyArray;\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !src(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\n/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nfunction integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nfunction equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n\n  var output = new Array(numberOfPoints);\n\n  var initialOriginalStep = x[1] - x[0];\n  var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  var min = from - halfStep;\n  var max = from + halfStep;\n\n  var previousX = Number.MIN_VALUE;\n  var previousY = 0;\n  var nextX = x[0] - initialOriginalStep;\n  var nextY = 0;\n\n  var currentValue = 0;\n  var slope = 0;\n  var intercept = 0;\n  var sumAtMin = 0;\n  var sumAtMax = 0;\n\n  var i = 0; // index of input\n  var j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      var add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nfunction equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n  var lastStep = x[x.length - 1] - x[x.length - 2];\n\n  var start = from - halfStep;\n  var output = new Array(numberOfPoints);\n\n  // Init main variables\n  var min = start;\n  var max = start + step;\n\n  var previousX = -Number.MAX_VALUE;\n  var previousY = 0;\n  var nextX = x[0];\n  var nextY = y[0];\n  var frontOutsideSpectra = 0;\n  var backOutsideSpectra = true;\n\n  var currentValue = 0;\n\n  // for slot algorithm\n  var currentPoints = 0;\n\n  var i = 1; // index of input\n  var j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n\nfunction getZones$1(from, to, numberOfPoints, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to, numberOfPoints }];\n  }\n\n  // need to deal with overlapping exclusions and out of bound exclusions\n\n  let toRemove = exclusions.reduce(\n    (previous, exclusion) => (previous += exclusion.to - exclusion.from),\n    0\n  );\n  let total = to - from;\n  let unitsPerPoint = (total - toRemove) / numberOfPoints;\n  let zones = [];\n  let currentFrom = from;\n  let totalPoints = 0;\n  for (let exclusion of exclusions) {\n    let currentNbPoints = Math.round(\n      (exclusion.from - currentFrom) / unitsPerPoint\n    );\n    totalPoints += currentNbPoints;\n    if (currentNbPoints > 0) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n        numberOfPoints: currentNbPoints\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (numberOfPoints - totalPoints > 0) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n      numberOfPoints: numberOfPoints - totalPoints\n    });\n  }\n\n  return zones;\n}\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nfunction equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = []\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  let zones = getZones$1(from, to, numberOfPoints, exclusions);\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant);\n    xResult.push(...zoneResult.x);\n    yResult.push(...zoneResult.y);\n  }\n\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  var output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints\n    }),\n    y: output\n  };\n}\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm;\n\n  if (!Array.isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input);\n        if (absoluteSumValue === 0) return input.slice(0);\n        return input.map(function (element) {\n          return element / absoluteSumValue;\n        });\n      }\n\n    case 'max':\n      {\n        var maxValue = max(input);\n        if (maxValue === 0) return input.slice(0);\n        return input.map(function (element) {\n          return element / maxValue;\n        });\n      }\n\n    case 'sum':\n      {\n        var sumValue = sum(input);\n        if (sumValue === 0) return input.slice(0);\n        return input.map(function (element) {\n          return element / sumValue;\n        });\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!src(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\n/**\n *\n * @private\n * @param {*} spectrum\n * @param {*} options\n */\nfunction getNormalized(spectrum, options = {}) {\n  if (!Array.isArray(spectrum.x) || !Array.isArray(spectrum.y)) {\n    throw new Error(\n      'getNormalized: Can not get normalized data, missing original data.'\n    );\n  }\n\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints = 1024,\n    filters = [],\n    exclusions = []\n  } = options;\n\n  let y = spectrum.y.slice(0);\n\n  for (let filter of filters) {\n    switch (filter.name) {\n      case 'centerMean': {\n        let mean = array.mean(spectrum.y);\n        let meanFct = (y) => y - mean;\n        y = y.map(meanFct);\n        break;\n      }\n      case 'scaleSD': {\n        let std = array.standardDeviation(spectrum.y);\n        let stdFct = (y) => y / std;\n        y = y.map(stdFct);\n        break;\n      }\n      case 'normalize': {\n        y = norm(y);\n        break;\n      }\n      case 'rescale': {\n        y = rescale(y);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n  let result = equallySpaced(\n    { x: spectrum.x, y },\n    { from, to, numberOfPoints, exclusions }\n  );\n  return result;\n}\n\nconst isAnyArray$1 = require('is-any-array');\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {object} [points={}]\n */\nfunction check(points = {}) {\n  if (!isAnyArray$1(points.x) || !isAnyArray$1(points.y)) {\n    throw new Error('Points must be an object of x and y arrays');\n  }\n  if (points.x.length !== points.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n\n/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array} array\n * @param {number} target\n */\n\nfunction findClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n\n/**\n * Returns an object with {fromIndex, toIndex} for a specific from / to\n * @param {array} x\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n */\n\nfunction getFromToIndex(x, options = {}) {\n  let { fromIndex, toIndex, from, to } = options;\n\n  if (fromIndex === undefined) {\n    if (from !== undefined) {\n      fromIndex = findClosestIndex(x, from);\n    } else {\n      fromIndex = 0;\n    }\n  }\n  if (toIndex === undefined) {\n    if (to !== undefined) {\n      toIndex = findClosestIndex(x, to);\n    } else {\n      toIndex = x.length - 1;\n    }\n  }\n  return { fromIndex, toIndex };\n}\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Integration value on the specified range\n */\n\nfunction integration(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n  let integration = 0;\n  for (let i = fromIndex; i < toIndex; i++) {\n    integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n  }\n\n  return integration;\n}\n\n/**\n * Generate a X / Y of the integral\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @param {boolean} [options.reverse=false] - Integrate from the larger value to the smallest value\n * @return {{x:[],y:[]}} An object with the integration function\n */\n\nfunction integral$1(points = {}, options = {}) {\n  const { reverse = false } = options;\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let integration = 0;\n  let integral;\n  if (reverse) {\n    integral = { x: [x[toIndex]], y: [0] };\n    for (let i = toIndex; i > fromIndex; i--) {\n      integration += ((x[i] - x[i - 1]) * (y[i - 1] + y[i])) / 2;\n      integral.x.push(x[i - 1]);\n      integral.y.push(integration);\n    }\n    integral.x.reverse();\n    integral.y.reverse();\n  } else {\n    integral = { x: [x[fromIndex]], y: [0] };\n    for (let i = fromIndex; i < toIndex; i++) {\n      integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n      integral.x.push(x[i + 1]);\n      integral.y.push(integration);\n    }\n  }\n\n  return integral;\n}\n\n/**\n * Finds the max value in a zone\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Max y on the specified range\n */\n\nfunction maxY(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let maxY = y[fromIndex];\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > maxY) maxY = y[i];\n  }\n\n  return maxY;\n}\n\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nfunction maxYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nfunction minYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] < current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n\n/**\n * Reduce the number of points while keeping the same noise. Practical to\n * display many spectra as SVG\n * @param {array} x\n * @param {array} y\n * @param {object} [options={}]\n * @param {number} [from=x[0]]\n * @param {number} [to=x[x.length-1]]\n * @param {number} [nbPoints=4001] Number of points\n */\n\nfunction reduce(x, y, options = {}) {\n  let { from = x[0], to = x[x.length - 1], nbPoints = 4000 } = options;\n\n  let fromIndex = findClosestIndex(x, from);\n  let toIndex = findClosestIndex(x, to);\n\n  if (fromIndex > 0 && x[fromIndex] > from) fromIndex--;\n  if (toIndex < x.length - 1 && x[toIndex] < to) toIndex++;\n\n  if (toIndex - fromIndex < nbPoints) {\n    return {\n      x: x.slice(fromIndex, toIndex + 1),\n      y: y.slice(fromIndex, toIndex + 1),\n    };\n  }\n\n  let newX = [x[fromIndex]];\n  let newY = [y[fromIndex]];\n  let minY = Number.MAX_VALUE;\n  let maxY = Number.MIN_VALUE;\n  if (nbPoints % 2 === 0) {\n    nbPoints = nbPoints / 2 + 1;\n  } else {\n    nbPoints = (nbPoints - 1) / 2 + 1;\n  }\n\n  let slot = (x[toIndex] - x[fromIndex]) / (nbPoints - 1);\n  let currentX = x[fromIndex] + slot;\n  let first = true;\n  for (let i = fromIndex + 1; i <= toIndex; i++) {\n    if (first) {\n      minY = y[i];\n      maxY = y[i];\n      first = false;\n    } else {\n      if (y[i] < minY) minY = y[i];\n      if (y[i] > maxY) maxY = y[i];\n    }\n\n    if (x[i] >= currentX || i === toIndex) {\n      newX.push(currentX - slot / 2);\n      newY.push(minY);\n      newX.push(currentX);\n      newY.push(maxY);\n      currentX += slot;\n      first = true;\n    }\n  }\n\n  // we will need to make some kind of min / max because there are too many points\n  // we will always keep the first point and the last point\n\n  return { x: newX, y: newY };\n}\n\n/**\n * Sort object of array, x has to be monotone.\n * @param {object} data Object of kind {x:[], re:[], im:[]}.\n * @return {SD}\n */\n\nfunction sortX(data) {\n  const { x, y } = data;\n\n  if (x.length !== y.length) {\n    throw TypeError('sortX: length of x and y must be identical');\n  }\n\n  if (x.length < 2 || x[0] < x[1]) return data;\n\n  return {\n    x: x.slice(0).reverse(),\n    y: y.slice(0).reverse(),\n  };\n}\n\n/**\n * Find the closest minimum going down hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nfunction minClosestYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let minY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] < minY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] < minY) {\n      currentIndex++;\n    }\n    minY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n\n/**\n * Find the closest maximum going up hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nfunction maxClosestYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let maxY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] > maxY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] > maxY) {\n      currentIndex++;\n    }\n    maxY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n\n/**\n *  Returns the targetIndex\n * @param {array} [x]\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @param {number}\n */\n\nfunction getTargetIndex(x, options = {}) {\n  let { target, targetIndex } = options;\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      return findClosestIndex(x, target);\n    } else {\n      return 0;\n    }\n  }\n  return targetIndex;\n}\n\nfunction realMinYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  const targetIndex = getTargetIndex(x, options);\n  // interpolation to a sin() function\n  if (\n    y[targetIndex - 1] < 0 &&\n    y[targetIndex + 1] < 0 &&\n    y[targetIndex] <= y[targetIndex - 1] &&\n    y[targetIndex] <= y[targetIndex + 1]\n  ) {\n    let alpha = 20 * Math.log10(-y[targetIndex - 1]);\n    let beta = 20 * Math.log10(-y[targetIndex]);\n    let gamma = 20 * Math.log10(-y[targetIndex + 1]);\n    let p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n    return {\n      x: x[targetIndex] + (x[targetIndex] - x[targetIndex - 1]) * p,\n      y: y[targetIndex] - 0.25 * (y[targetIndex - 1] - y[targetIndex + 1]) * p,\n      index: targetIndex,\n    };\n  } else {\n    return {\n      x: x[targetIndex],\n      y: y[targetIndex],\n      index: targetIndex,\n    };\n  }\n}\n\n/**\n * Find the closest minimum going down hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nfunction realMaxYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n  const targetIndex = getTargetIndex(x, options);\n  // interpolation to a sin() function\n  if (\n    y[targetIndex - 1] > 0 &&\n    y[targetIndex + 1] > 0 &&\n    y[targetIndex] >= y[targetIndex - 1] &&\n    y[targetIndex] >= y[targetIndex + 1]\n  ) {\n    let alpha = 20 * Math.log10(y[targetIndex - 1]);\n    let beta = 20 * Math.log10(y[targetIndex]);\n    let gamma = 20 * Math.log10(y[targetIndex + 1]);\n    let p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n    return {\n      x: x[targetIndex] + (x[targetIndex] - x[targetIndex - 1]) * p,\n      y: y[targetIndex] - 0.25 * (y[targetIndex - 1] - y[targetIndex + 1]) * p,\n      index: targetIndex,\n    };\n  } else {\n    return {\n      x: x[targetIndex],\n      y: y[targetIndex],\n      index: targetIndex,\n    };\n  }\n}\n\nconst XY = {\n  check,\n  integral: integral$1,\n  integration,\n  maxY,\n  maxYPoint,\n  minYPoint,\n  reduce,\n  sortX,\n  minClosestYPoint,\n  maxClosestYPoint,\n  realMaxYPoint,\n  realMinYPoint,\n};\n\n/**\n\n/**\n * This function add the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nfunction add(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n\n/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @return {object}\n */\nfunction boxPlot(array) {\n  array = array.slice(0).sort((a, b) => a - b);\n  if (array.length < 5) {\n    throw Error('boxPlot: can not calculate info if array contains less than 3 elements');\n  }\n  let info = { Q1: 0.0, Q2: 0.0, Q3: 0.0, min: array[0], max: array[array.length - 1] };\n  let q1max, q3min;\n  if (array.length % 2 === 1) { // odd\n    let middle = (array.length - 1) / 2;\n    info.Q2 = array[middle];\n    q1max = middle - 1;\n    q3min = middle + 1;\n  } else { // even\n    q3min = array.length / 2;\n    q1max = q3min - 1;\n    info.Q2 = (array[q1max] + array[q3min]) / 2;\n  }\n  if (q1max % 2 === 0) {\n    info.Q1 = array[q1max / 2];\n    info.Q3 = array[(array.length + q3min - 1) / 2];\n  } else {\n    info.Q1 = (array[(q1max + 1) / 2] + array[(q1max - 1) / 2]) / 2;\n    let middleOver = (array.length + q3min) / 2;\n    info.Q3 = (array[middleOver] + array[middleOver - 1]) / 2;\n  }\n  return info;\n}\n\n/**\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nfunction divide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n\n/**\n\n/**\n * This function multiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nfunction multiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n\n/**\n * This function performs a circular shift to a new array\n * Positive values of shifts will shift to the right and negative values will do to the left\n * @example rotate([1,2,3,4],1) -> [4,1,2,3]\n * @example rotate([1,2,3,4],-1) -> [2,3,4,1]\n * @param {Array} array - the array that will be rotated\n * @param {number} shift\n * @return {Array}\n */\nfunction rotate(array, shift) {\n  shift = shift % array.length;\n  if (shift < 0) shift += array.length;\n  return array.slice(array.length - shift).concat(array.slice(0, array.length - shift));\n}\n\n/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nfunction subtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) throw new Error('sub: size of array1 and array2 must be identical');\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n\nconst X = {\n  add,\n  boxPlot,\n  divide,\n  findClosestIndex,\n  getTargetIndex,\n  multiply,\n  rotate,\n  subtract,\n};\n\n/**\n *  @private\n * @param {*} spectrum\n * @param {*} ranges\n */\nfunction updateRangesInfo(spectrum, ranges = []) {\n  spectrum.ranges = {};\n  for (let range of ranges) {\n    range = JSON.parse(JSON.stringify(range));\n    spectrum.ranges[range.label] = range;\n    let fromToIndex = {\n      fromIndex: X.findClosestIndex(spectrum.normalized.x, range.from),\n      toIndex: X.findClosestIndex(spectrum.normalized.x, range.to)\n    };\n    range.integration = XY.integration(spectrum.normalized, fromToIndex);\n    range.maxPoint = XY.maxYPoint(spectrum.normalized, fromToIndex);\n  }\n}\n\n/**\n * Class allowing manipulate one IR spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.x=[]] - x values\n * @param {Array} [json.y=[]] - y values\n */\nclass Spectrum {\n  /**\n   *\n   * @param {array} x\n   * @param {array} y\n   * @param {string} id\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.normalization]\n   * @param {object} [options.normalized]\n   */\n  constructor(x, y, id, options = {}) {\n    const { meta = {}, normalization = {}, normalized } = options;\n\n    if (x && x.length > 1 && x[0] > x[1]) {\n      this.x = x.reverse();\n      this.y = y.reverse();\n    } else {\n      this.x = x || [];\n      this.y = y || [];\n    }\n    this.id = id;\n    this.meta = meta;\n    this.normalizedBoundary = { x: { min: 0, max: 0 }, y: { min: 0, max: 0 } };\n    if (normalized) {\n      this.normalized = normalized;\n      this.updateNormalizedBoundary();\n    } else {\n      this.updateNormalization(normalization);\n    }\n\n    this.updateMemory();\n  }\n\n  get minX() {\n    return this.x[0];\n  }\n\n  get maxX() {\n    return this.x[this.x.length - 1];\n  }\n\n  updateMemory() {\n    let original = ((this.x && this.x.length) || 0) * 16;\n    let normalized = this.normalized.x.length * 16;\n    this.memory = { original, normalized, total: original + normalized };\n  }\n\n  removeOriginal() {\n    this.x = undefined;\n    this.y = undefined;\n    this.updateMemory();\n  }\n\n  getXY() {\n    if (!Array.isArray(this.x) || !Array.isArray(this.y)) {\n      throw new Error('Can not get normalized data');\n    }\n    return { x: this.x, y: this.y };\n  }\n}\n\nSpectrum.prototype.getData = function(options) {\n  return getData(this, options);\n};\n\nSpectrum.prototype.updateNormalization = function(normalization) {\n  this.normalized = getNormalized(this, normalization);\n  this.ranges = {};\n  this.updateMemory();\n  this.updateNormalizedBoundary();\n};\n\nSpectrum.prototype.updateRangesInfo = function(ranges) {\n  updateRangesInfo(this, ranges);\n};\n\nSpectrum.prototype.updateNormalizedBoundary = function() {\n  this.normalizedBoundary.x = {\n    min: this.normalized.x[0],\n    max: this.normalized.x[this.normalized.x.length - 1]\n  };\n  this.normalizedBoundary.y = array_4(this.normalized.y);\n};\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    var floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    var wantXY = !options.withoutXY;\n\n    var start = Date.now();\n\n    var ntuples = {};\n    var ldr, dataLabel, dataValue, ldrs;\n    var position, endLine, infos;\n\n    var result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    var spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    var spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      dataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (dataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          var xIndex = -1;\n          var yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            var firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1'\n            );\n            var secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1'\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            dataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            dataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (dataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (dataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (dataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (dataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (dataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (dataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (dataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (dataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (dataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (dataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (dataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (dataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (dataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (dataLabel === '.OBSERVEFREQUENCY' || dataLabel === '$SFO1') {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (dataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$REFERENCEPOINT') ; else if (dataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (dataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        var pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        var unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (dataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(dataLabel)) {\n        spectrum[convertMSFieldToLabel(dataLabel)] = dataValue;\n      } else if (dataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (dataLabel.match(options.keepRecordsRegExp)) {\n        if (result.info[dataLabel]) {\n          if (!Array.isArray(result.info[dataLabel])) {\n            result.info[dataLabel] = [result.info[dataLabel]];\n          }\n          result.info[dataLabel].push(dataValue.trim());\n        } else {\n          result.info[dataLabel] = dataValue.trim();\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      var newNtuples = [];\n      var keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              var data = spectrum.data[j];\n              var newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2)\n              };\n              for (var k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(dataLabel) {\n    return GC_MS_FIELDS.indexOf(dataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    var spectra = result.spectra;\n    var length = spectra.length;\n    var chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length)\n        }\n      }\n    };\n\n    var existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      var label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length)\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      var spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]]\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    var data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice()\n        }\n      }\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      var shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    var l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    var minZ = spectra[0].data[0][0];\n    var maxZ = minZ;\n    var ySize = spectra.length;\n    var xSize = spectra[0].data[0].length / 2;\n    var z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      var xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        var value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs))\n    };\n  }\n\n  function add2D(result, options) {\n    var zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    var noise = zData.noise;\n    var z = zData.z;\n    var povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    var isOver0, isOver1, isOver2, isOver3;\n    var nbSubSpectra = z.length;\n    var nbPovars = z[0].length;\n    var pAx, pAy, pBx, pBy;\n\n    var x0 = zData.minX;\n    var xN = zData.maxX;\n    var dx = (xN - x0) / (nbPovars - 1);\n    var y0 = zData.minY;\n    var yN = zData.maxY;\n    var dy = (yN - y0) / (nbSubSpectra - 1);\n    var minZ = zData.minZ;\n    var maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    var iter = options.nbContourLevels * 2;\n    var contourLevels = new Array(iter);\n    var lineZValue;\n    for (var level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      var contourLevel = {};\n      contourLevels[level] = contourLevel;\n      var side = level % 2;\n      var factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      var lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        var subSpectra = z[iSubSpectra];\n        var subSpectraAfter = z[iSubSpectra + 1];\n        for (var povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    var yFactor = spectrum.yFactor;\n    var deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var currentX = spectrum.firstX;\n    var currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    var endLine = false;\n    var ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    var newLine = true;\n    var isDifference = false;\n    var isLastDifference = false;\n    var lastDifference = 0;\n    var isDuplicate = false;\n    var inComment = false;\n    var currentValue = 0; // can be a difference or a duplicate\n    var lastValue = 0; // must be the real last value\n    var isNegative = false;\n    var inValue = false;\n    var skipFirstValue = false;\n    var decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                var duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (var j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            var ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    var removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    var removeCommentRegExp = /\\$\\$.*/;\n    var peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nvar convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nvar stamps = {};\nvar worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function (resolve) {\n    var stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options\n      })\n    );\n  });\n}\n\nfunction createWorker() {\n  var workerURL = URL.createObjectURL(\n    new Blob(\n      [`var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`],\n      { type: 'application/javascript' }\n    )\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function (event) {\n    var data = JSON.parse(event.data);\n    var stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (var i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: []\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      var finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      var match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        var dataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (dataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nvar src$1 = {\n  convert: JcampConverter,\n  createTree: createTree\n};\nvar src_1 = src$1.convert;\n\nfunction getJcampKind(data) {\n  let datatype = data.spectra[0].dataType.toLowerCase();\n  let yUnit = data.spectra[0].yUnit.toLowerCase();\n\n  if (datatype.match(/infrared/)) {\n    if (yUnit.match(/absorbance/)) {\n      return IR_ABSORBANCE;\n    } else {\n      return IR_TRANSMITTANCE;\n    }\n  }\n  return undefined;\n}\n\nconst IR_TRANSMITTANCE = {\n  normalization: {},\n  importation: {\n    converter: (transmittance) => -Math.log10(transmittance)\n  },\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance'\n  }\n};\n\nconst IR_ABSORBANCE = {\n  normalization: {},\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance'\n  }\n};\n\n/**\n * Create a spectrum from a jcamp\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nfunction jcamp(jcamp) {\n  const parsed = src_1(jcamp, { xy: true, keepRecordsRegExp: /TITLE/ });\n  const kind = getJcampKind(parsed);\n  const data = parsed.spectra[0].data[0];\n  const meta = parsed.info;\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data, kind, meta };\n}\n\n/**\n * Creates a g\n * @param {string} text - String containing the JCAMP data\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] Field separator\n * @return {object} - {matrix, data, x, ids}\n */\nfunction text(text, options = {}) {\n  const lines = text.split(/[\\r\\n]+/).filter((value) => value);\n  const { fs = '\\t' } = options;\n  let matrix = [];\n  let ids = [];\n  let meta = [];\n  let x = [];\n\n  let headers = lines[0].split(fs);\n  let labels = [];\n\n  for (let i = 0; i < headers.length; i++) {\n    let header = headers[i];\n    if (isNaN(header)) {\n      labels[i] = header;\n    } else {\n      x = headers.slice(i).map((value) => Number(value));\n      break;\n    }\n  }\n\n  for (let i = 1; i < lines.length; i++) {\n    let line = lines[i];\n    let parts = line.split('\\t');\n    ids.push(parts[0]);\n    let oneMeta = {};\n    meta.push(oneMeta);\n    for (let j = 1; j < parts.length; j++) {\n      if (j < labels.length) {\n        oneMeta[labels[j]] = parts[j];\n      } else {\n        matrix.push(parts.slice(labels.length).map((value) => Number(value)));\n        break;\n      }\n    }\n  }\n  return { x, meta, matrix, ids };\n}\n\nfunction getNormalizationAnnotations(filter = {}, boundary) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    var annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max }\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: 0, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max }\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: 10000, y: boundary.y.max }\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)'\n    });\n  }\n  return annotations;\n}\n\n/**\n * @private\n * @param {*} spectra\n */\n\nfunction getBoxPlotData(spectra) {\n  let matrix = [];\n  let x = spectra[0].normalized.x;\n  for (let spectrum of spectra) {\n    matrix.push(spectrum.normalized.y);\n  }\n\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let result;\n  let aColumn = new Float64Array(nbRow);\n  for (let column = 0; column < nbColumn; column++) {\n    for (let row = 0; row < nbRow; row++) {\n      aColumn[row] = matrix[row][column];\n    }\n    let info = X.boxPlot(aColumn);\n    if (!result) {\n      result = { x };\n      for (let key in info) {\n        result[key] = [];\n      }\n    }\n    for (let key in info) {\n      result[key].push(info[key]);\n    }\n  }\n  return result;\n}\n\nfunction getBoxPlotAnnotations(spectra, options = {}) {\n  const {\n    q13FillColor = '#000',\n    q13FillOpacity = 0.3,\n    q2StrokeColor = '#000',\n    q2StrokeWidth = 3,\n    minMaxFillColor = '#000',\n    minMaxFillOpacity = 0.15\n  } = options;\n  let annotations = [];\n\n  let data = getBoxPlotData(spectra);\n  if (q13FillOpacity && q13FillColor) {\n    let q13 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q1[i]\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q3[i]\n      });\n    }\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: q13FillColor,\n        fillOpacity: q13FillOpacity,\n        strokeWidth: 0.0000001,\n        position: q13\n      }\n    });\n  }\n\n  if (q2StrokeColor && q2StrokeWidth) {\n    let q2 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i]\n      });\n    }\n    // Temp code because polyline is not working\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i]\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        strokeWidth: q2StrokeWidth,\n        strokeColor: q2StrokeColor,\n        position: q2\n      }\n    });\n  }\n\n  if (minMaxFillColor && minMaxFillOpacity) {\n    let minMax = [];\n    for (let i = 0; i < data.x.length; i++) {\n      minMax.push({\n        x: data.x[i],\n        y: data.min[i]\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      minMax.push({\n        x: data.x[i],\n        y: data.max[i]\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: minMaxFillColor,\n        fillOpacity: minMaxFillOpacity,\n        strokeWidth: 0.0000001,\n        strokeColor: '#FFF',\n        position: minMax\n      }\n    });\n  }\n\n  return annotations;\n}\n\nfunction addChartDataStyle(data, spectrum) {\n  data.styles = {\n    unselected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 1,\n      lineStyle: 1\n    },\n    selected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 3,\n      lineStyle: 1\n    }\n  };\n  data.label = spectrum.meta.id || spectrum.id;\n}\n\n/**\n * Retrieve a chart with selected original data\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by default all\n * @param {Array} [options.maxDataPoints=]\n */\nfunction getChart(spectra, options = {}) {\n  const { ids } = options;\n  let chart = {\n    data: []\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.getData();\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n\nfunction getNormalizedChart(spectra, options = {}) {\n  const { ids } = options;\n  let chart = {\n    data: []\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.normalized;\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n\n/**\n *\n * @param {SpectraProcessor} spectraProcessor\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n */\nfunction getScaledChart(spectraProcessor, options = {}) {\n  let scaled = spectraProcessor.getScaledData(options);\n\n  let chart = {\n    data: []\n  };\n\n  for (let i = 0; i < scaled.matrix.length; i++) {\n    let data = {\n      x: scaled.x,\n      y: scaled.matrix[i]\n    };\n    addChartDataStyle(data, { meta: scaled.meta[i], id: scaled.ids[i] });\n    chart.data.push(data);\n  }\n\n  return chart;\n}\n\n/**\n * @private\n * @param {*} spectra\n * @param {*} options\n */\n\nfunction getNormalizedData(spectra) {\n  if (!spectra || !spectra[0]) return {};\n  let matrix = [];\n  let meta = [];\n  let currentIDs = [];\n\n  for (let spectrum of spectra) {\n    currentIDs.push(spectrum.id);\n    matrix.push(spectrum.normalized.y);\n    meta.push(spectrum.meta);\n  }\n  let x = spectra[0].normalized.x;\n  return { ids: currentIDs, matrix, meta, x };\n}\n\n/**\n * @private\n * @param {*} spectra\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] field separator\n * @param {string} [options.rs='\\n'] record (line) separator\n */\n\nfunction getNormalizedText(spectra, options = {}) {\n  let { fs = '\\t', rs = '\\n' } = options;\n  let { matrix, meta, ids, x } = getNormalizedData(spectra);\n  let allKeysObject = {};\n  for (let metum of meta) {\n    for (let key of Object.keys(metum)) {\n      let type = typeof metum[key];\n      if (type === 'number' || type === 'string' || type === 'boolean') {\n        allKeysObject[key] = true;\n      }\n    }\n  }\n  let allKeys = Object.keys(allKeysObject);\n\n  let lines = [];\n  let line = [];\n  line.push('id', ...allKeys, ...x);\n  lines.push(line.join(fs));\n\n  for (let i = 0; i < ids.length; i++) {\n    line = [];\n    line.push(ids[i]);\n    for (let key of allKeys) {\n      line.push(meta[i][key]);\n    }\n    line.push(...matrix[i]);\n    lines.push(line.join(fs));\n  }\n\n  return lines.join(rs);\n}\n\nfunction getFromToIndex$1(xs, range) {\n  let { from, to } = range;\n  if (from === undefined) {\n    from = xs[0];\n  }\n  if (to === undefined) {\n    to = xs[xs.length - 1];\n  }\n\n  return {\n    fromIndex: X.findClosestIndex(xs, from),\n    toIndex: X.findClosestIndex(xs, to)\n  };\n}\n\nfunction min$1(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex$1(targetSpectrum.normalized.x, range);\n\n  let targetValue = XY.minYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => XY.minYPoint(spectrum.normalized, fromToIndex).y\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\nfunction max$1(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex$1(targetSpectrum.normalized.x, range);\n\n  let targetValue = XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => XY.maxYPoint(spectrum.normalized, fromToIndex).y\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\nfunction maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n\nfunction checkArraySize(x, y) {\n  if (!Array.isArray(x) || !Array.isArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n\nclass BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (Array.isArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n)\n    };\n  }\n}\n\nclass SimpleLinearRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = [y.intercept, y.slope];\n    } else {\n      checkArraySize(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'simpleLinearRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(x) {\n    return this.slope * x + this.intercept;\n  }\n\n  computeX(y) {\n    return (y - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    let result = 'f(x) = ';\n    if (this.slope !== 0) {\n      const xFactor = maybeToPrecision(this.slope, precision);\n      result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\n      if (this.intercept !== 0) {\n        const absIntercept = Math.abs(this.intercept);\n        const operator = absIntercept === this.intercept ? '+' : '-';\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'simpleLinearRegression') {\n      throw new TypeError('not a SLR model');\n    }\n    return new SimpleLinearRegression(true, json);\n  }\n}\n\nfunction regress(slr, x, y) {\n  const n = x.length;\n  let xSum = 0;\n  let ySum = 0;\n\n  let xSquared = 0;\n  let xY = 0;\n\n  for (let i = 0; i < n; i++) {\n    xSum += x[i];\n    ySum += y[i];\n    xSquared += x[i] * x[i];\n    xY += x[i] * y[i];\n  }\n\n  const numerator = n * xY - xSum * ySum;\n  slr.slope = numerator / (n * xSquared - xSum * xSum);\n  slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n  slr.coefficients = [slr.intercept, slr.slope];\n}\n\nfunction minMax(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex$1(targetSpectrum.normalized.x, range);\n\n  let targetValue = {\n    min: XY.minYPoint(targetSpectrum.normalized, fromToIndex).y,\n    max: XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y\n  };\n\n  let values = spectra.map((spectrum) => {\n    return {\n      min: XY.minYPoint(spectrum.normalized, fromToIndex).y,\n      max: XY.maxYPoint(spectrum.normalized, fromToIndex).y\n    };\n  });\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    const regression = new SimpleLinearRegression(\n      [targetValue.min, targetValue.max],\n      [values[i].min, values[i].max]\n    );\n\n    let length = spectrum.normalized.y.length;\n    let scaled = new Array(length);\n    for (let j = 0; j < length; j++) {\n      scaled[j] = regression.computeX(spectrum.normalized.y[j]);\n    }\n    matrix.push(scaled);\n  }\n\n  return matrix;\n}\n\nfunction range(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex$1(targetSpectrum.normalized.x, range);\n\n  let targetValue = XY.integration(targetSpectrum.normalized, fromToIndex);\n\n  let values = spectra.map((spectrum) =>\n    XY.integration(spectrum.normalized, fromToIndex)\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\n/**\n * @private\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n */\n\nfunction getScaledData(spectraProcessor, options = {}) {\n  if (!spectraProcessor.spectra || !spectraProcessor.spectra[0]) return {};\n  const { range: range$1, targetID, relative, method, ids } = options;\n\n  let targetSpectrum =\n    spectraProcessor.getSpectrum(targetID) || spectraProcessor.spectra[0];\n  let spectra = spectraProcessor.getSpectra(ids);\n\n  let result;\n  if (method === '' || method === undefined) {\n    result = getNormalizedData(spectra);\n  } else {\n    let matrix;\n    switch (method.toLowerCase()) {\n      case 'min':\n        matrix = min$1(spectra, targetSpectrum, range$1);\n        break;\n      case 'max':\n        matrix = max$1(spectra, targetSpectrum, range$1);\n        break;\n      case 'minmax':\n        matrix = minMax(spectra, targetSpectrum, range$1);\n        break;\n      case 'range':\n        matrix = range(spectra, targetSpectrum, range$1);\n        break;\n      default:\n        throw new Error(`getScaledData: unknown method: ${method}`);\n    }\n    let meta = [];\n    let currentIDs = [];\n    for (let spectrum of spectra) {\n      currentIDs.push(spectrum.id);\n      meta.push(spectrum.meta);\n    }\n    let x = spectra[0].normalized.x;\n    result = { ids: currentIDs, matrix, meta, x };\n  }\n\n  if (relative) {\n    for (let i = 0; i < result.matrix.length; i++) {\n      result.matrix[i] = X.subtract(\n        result.matrix[i],\n        targetSpectrum.normalized.y\n      );\n    }\n  }\n\n  return result;\n}\n\nclass SpectraProcessor {\n  /**\n   * Manager a large number of spectra with the possibility to normalize the data\n   * and skip the original data.\n   * @param {object} [options={}]\n   * @param {boolean} [options.maxMemory=64M]\n   * @param {object} [options.normalization={}] options to normalize the spectra before comparison\n   * @param {number} [options.normalization.from]\n   * @param {number} [options.normalization.to]\n   * @param {number} [options.normalization.numberOfPoints]\n   * @param {array<object>} [options.normalization.filters]\n   * @param {string} [options.normalization.filters.X.name]\n   * @param {object} [options.normalization.filters.X.options]\n   * @param {array<object>} [options.normalization.exclusions]\n   * @param {string} [options.normalization.exclusions.X.from]\n   * @param {object} [options.normalization.exclusions.X.to]\n   */\n  constructor(options = {}) {\n    this.normalization = options.normalization;\n    this.maxMemory = options.maxMemory || 64 * 1024 * 1024;\n    this.keepOriginal = true;\n    this.spectra = [];\n    this.boundaries = {\n      minX: Number.MAX_VALUE,\n      maxX: Number.MIN_VALUE,\n      minY: Number.MAX_VALUE,\n      maxY: Number.MIN_VALUE\n    };\n  }\n\n  getNormalizationAnnotations() {\n    return getNormalizationAnnotations(\n      this.normalization,\n      this.getNormalizedBoundary()\n    );\n  }\n\n  /**\n   * Recalculate the normalized data using the stored original data if available\n   * This will throw an error in the original data is not present\n   * @param {number} [normalization.from]\n   * @param {number} [normalization.to]\n   * @param {number} [normalization.numberOfPoints]\n   * @param {array<object>} [normalization.filters]\n   * @param {string} [normalization.filters.X.name]\n   * @param {object} [normalization.filters.X.options]\n   * @param {array<object>} [normalization.exclusions]\n   * @param {string} [normalization.exclusions.X.from]\n   * @param {object} [normalization.exclusions.X.to]\n   */\n  setNormalization(normalization = {}) {\n    if (JSON.stringify(this.normalization) === JSON.stringify(normalization)) {\n      return;\n    }\n    this.normalization = normalization;\n    for (let spectrum of this.spectra) {\n      spectrum.updateNormalization(this.normalization);\n    }\n  }\n\n  getNormalization() {\n    return this.normalization;\n  }\n\n  /**\n   * Returns an object contains 4 parameters with the normalized data\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   */\n  getNormalizedData(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedData(spectra);\n  }\n\n  /**\n   * Returns a tab separated value containing the normalized data\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   * @param {string} [options.fs='\\t'] field separator\n   * @param {string} [options.rs='\\n'] record (line) separator\n   * @returns {string}\n   */\n  getNormalizedText(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedText(spectra, options);\n  }\n\n  getMinMaxX() {\n    let min = Number.MAX_VALUE;\n    let max = Number.MIN_VALUE;\n    for (let spectrum of this.spectra) {\n      if (spectrum.minX < min) min = spectrum.minX;\n      if (spectrum.maxX > max) max = spectrum.maxX;\n    }\n    return { min, max };\n  }\n\n  /**\n\n   * Returns an object contains 4 parameters with the scaled data\n   * @param {object} [options={}] scale spectra based on various parameters\n   * @param {object} [options.range] from - to\n   * @param {Array} [options.ids] ids of selected spectra, by default all\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   */\n  getScaledData(options) {\n    return getScaledData(this, options);\n  }\n\n  /**\n   * Add jcamp\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} jcamp\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromJcamp(jcamp$1, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = jcamp(jcamp$1);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  updateRangesInfo(options) {\n    for (let spectrum of this.spectra) {\n      spectrum.updateRangesInfo(options);\n    }\n  }\n\n  /**\n   * Add a spectrum based on the data\n   * @param {object} data {x, y}}\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.id]\n   * @param {object} [options.normalization={}]\n   * @param {object} [options.normalized]\n   * @return {Spectrum}\n   */\n\n  addFromData(data, options = {}) {\n    if (this.spectra.length === 0) this.keepOriginal = true;\n    const id = options.id || Math.random(0).toString(36).substring;\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.spectra.length;\n    let spectrum = new Spectrum(data.x, data.y, id, {\n      meta: options.meta,\n      normalized: options.normalized,\n      normalization: this.normalization\n    });\n    this.spectra[index] = spectrum;\n    if (!this.keepOriginal) {\n      spectrum.removeOriginal();\n    } else {\n      let memoryInfo = this.getMemoryInfo();\n      if (memoryInfo.total > this.maxMemory) {\n        this.keepOriginal = false;\n        this.removeOriginals();\n      }\n    }\n  }\n\n  removeOriginals() {\n    for (let spectrum of this.spectra) {\n      spectrum.removeOriginal();\n    }\n  }\n\n  /**\n   * Remove the spectrum from the SpectraProcessor for the specified id\n   * @param {string} id\n   */\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra.splice(index, 1);\n  }\n\n  /**\n   * Remove all the spectra not present in the list\n   * @param {Array} [ids] Array of ids of the spectra to keep\n   */\n  removeSpectraNotIn(ids) {\n    let currentIDs = this.spectra.map(spectrum => spectrum.id);\n    for (let id of currentIDs) {\n      if (!ids.includes(id)) {\n        this.removeSpectrum(id);\n      }\n    }\n  }\n\n  /**\n   * Checks if the ID of a spectrum exists in the SpectraProcessor\n   * @param {string} id\n   */\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.spectra.length; i++) {\n      let spectrum = this.spectra[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns a spectrum from its ID\n   * @param {Array} ids\n   * @returns {Array<Spectrum}\n   */\n  getSpectra(ids) {\n    if (!ids || !Array.isArray(ids)) return this.spectra;\n    let spectra = [];\n    for (let id of ids) {\n      let index = this.getSpectrumIndex(id);\n      if (index !== undefined) {\n        spectra.push(this.spectra[index]);\n      }\n    }\n    return spectra;\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra[index];\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getChart() {\n    return getChart(this.spectra);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for box plot\n   * @returns {object}\n   */\n  getBoxPlotAnnotations(options) {\n    return getBoxPlotAnnotations(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @returns {object}\n   */\n  getNormalizedChart(options) {\n    return getNormalizedChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the scaled normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @param {object} [options.range] from - to\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object}\n   */\n  getScaledChart(options) {\n    return getScaledChart(this, options);\n  }\n\n  getMemoryInfo() {\n    let memoryInfo = { original: 0, normalized: 0, total: 0 };\n    this.spectra.forEach(spectrum => {\n      let memory = spectrum.memory;\n      memoryInfo.original += memory.original;\n      memoryInfo.normalized += memory.normalized;\n      memoryInfo.total += memory.total;\n    });\n    memoryInfo.keepOriginal = this.keepOriginal;\n    memoryInfo.maxMemory = this.maxMemory;\n    return memoryInfo;\n  }\n\n  getNormalizedBoundary() {\n    let boundary = {\n      x: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n      y: { min: Number.MAX_VALUE, max: Number.MIN_VALUE }\n    };\n    for (let spectrum of this.spectra) {\n      if (spectrum.normalizedBoundary.x.min < boundary.x.min) {\n        boundary.x.min = spectrum.normalizedBoundary.x.min;\n      }\n      if (spectrum.normalizedBoundary.x.max > boundary.x.max) {\n        boundary.x.max = spectrum.normalizedBoundary.x.max;\n      }\n      if (spectrum.normalizedBoundary.y.min < boundary.y.min) {\n        boundary.y.min = spectrum.normalizedBoundary.y.min;\n      }\n      if (spectrum.normalizedBoundary.y.max > boundary.y.max) {\n        boundary.y.max = spectrum.normalizedBoundary.y.max;\n      }\n    }\n    return boundary;\n  }\n\n  /**\n   * Create SpectraProcessor from normalized TSV\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.separator='\\t']\n   */\n  static fromNormalizedText(text$1, options = {}) {\n    let parsed = text(text$1, options);\n    if (!parsed) {\n      throw new Error('Can not parse TSV file');\n    }\n    let spectraProcessor = new SpectraProcessor();\n\n    spectraProcessor.setNormalization({\n      from: parsed.x[0],\n      to: parsed.x[parsed.x.length - 1],\n      numberOfPoints: parsed.x.length\n    });\n    spectraProcessor.keepOriginal = false;\n\n    for (let i = 0; i < parsed.ids.length; i++) {\n      spectraProcessor.addFromData(\n        { x: [], y: [] },\n        {\n          normalized: {\n            x: parsed.x,\n            y: parsed.matrix[i]\n          },\n          id: parsed.ids[i],\n          meta: parsed.meta[i]\n        }\n      );\n    }\n\n    return spectraProcessor;\n  }\n}\n\nexports.SpectraProcessor = SpectraProcessor;\n",
    "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",
    "'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n"
  ],
  "sourceRoot": ""
}
