{"version":3,"file":"spectra-processor.js","sources":["../node_modules/is-any-array/src/index.js","../lib/index.js"],"sourcesContent":["'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar array = createCommonjsModule(function (module, exports) {\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n});\nvar array_1 = array.sum;\nvar array_2 = array.max;\nvar array_3 = array.min;\nvar array_4 = array.minMax;\nvar array_5 = array.arithmeticMean;\nvar array_6 = array.mean;\nvar array_7 = array.geometricMean;\nvar array_8 = array.logMean;\nvar array_9 = array.grandMean;\nvar array_10 = array.truncatedMean;\nvar array_11 = array.harmonicMean;\nvar array_12 = array.contraHarmonicMean;\nvar array_13 = array.median;\nvar array_14 = array.variance;\nvar array_15 = array.standardDeviation;\nvar array_16 = array.standardError;\nvar array_17 = array.robustMeanAndStdev;\nvar array_18 = array.quartiles;\nvar array_19 = array.pooledStandardDeviation;\nvar array_20 = array.pooledVariance;\nvar array_21 = array.mode;\nvar array_22 = array.covariance;\nvar array_23 = array.skewness;\nvar array_24 = array.kurtosis;\nvar array_25 = array.entropy;\nvar array_26 = array.weightedMean;\nvar array_27 = array.weightedStandardDeviation;\nvar array_28 = array.weightedVariance;\nvar array_29 = array.center;\nvar array_30 = array.standardize;\nvar array_31 = array.cumulativeSum;\n\nfunction getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nfunction filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n\n/**\n *\n * @private\n * @param {Spectrum} spectrum\n * @param {object} [filter={}]\n * @param {array} [filter.from]\n * @param {array} [filter.to]\n * @param {array} [filter.exclusions=[]]\n */\n\nfunction getData(spectrum, filter = {}) {\n  let data = { x: spectrum.x, y: spectrum.y };\n\n  if (filter) {\n    data = filterX({ x: spectrum.x, y: spectrum.y }, filter);\n  }\n  return data;\n}\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nvar src = isAnyArray;\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !src(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\n/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nfunction integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nfunction equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n\n  var output = new Array(numberOfPoints);\n\n  var initialOriginalStep = x[1] - x[0];\n  var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  var min = from - halfStep;\n  var max = from + halfStep;\n\n  var previousX = Number.MIN_VALUE;\n  var previousY = 0;\n  var nextX = x[0] - initialOriginalStep;\n  var nextY = 0;\n\n  var currentValue = 0;\n  var slope = 0;\n  var intercept = 0;\n  var sumAtMin = 0;\n  var sumAtMax = 0;\n\n  var i = 0; // index of input\n  var j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      var add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nfunction equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n  var lastStep = x[x.length - 1] - x[x.length - 2];\n\n  var start = from - halfStep;\n  var output = new Array(numberOfPoints);\n\n  // Init main variables\n  var min = start;\n  var max = start + step;\n\n  var previousX = -Number.MAX_VALUE;\n  var previousY = 0;\n  var nextX = x[0];\n  var nextY = y[0];\n  var frontOutsideSpectra = 0;\n  var backOutsideSpectra = true;\n\n  var currentValue = 0;\n\n  // for slot algorithm\n  var currentPoints = 0;\n\n  var i = 1; // index of input\n  var j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n\nfunction getZones$1(from, to, numberOfPoints, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to, numberOfPoints }];\n  }\n\n  // need to deal with overlapping exclusions and out of bound exclusions\n\n  let toRemove = exclusions.reduce(\n    (previous, exclusion) => (previous += exclusion.to - exclusion.from),\n    0\n  );\n  let total = to - from;\n  let unitsPerPoint = (total - toRemove) / numberOfPoints;\n  let zones = [];\n  let currentFrom = from;\n  let totalPoints = 0;\n  for (let exclusion of exclusions) {\n    let currentNbPoints = Math.round(\n      (exclusion.from - currentFrom) / unitsPerPoint\n    );\n    totalPoints += currentNbPoints;\n    if (currentNbPoints > 0) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n        numberOfPoints: currentNbPoints\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (numberOfPoints - totalPoints > 0) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n      numberOfPoints: numberOfPoints - totalPoints\n    });\n  }\n\n  return zones;\n}\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nfunction equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = []\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  let zones = getZones$1(from, to, numberOfPoints, exclusions);\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant);\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  var output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints\n    }),\n    y: output\n  };\n}\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm;\n\n  if (!Array.isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input);\n        if (absoluteSumValue === 0) return input.slice(0);\n        return input.map(function (element) {\n          return element / absoluteSumValue;\n        });\n      }\n\n    case 'max':\n      {\n        var maxValue = max(input);\n        if (maxValue === 0) return input.slice(0);\n        return input.map(function (element) {\n          return element / maxValue;\n        });\n      }\n\n    case 'sum':\n      {\n        var sumValue = sum(input);\n        if (sumValue === 0) return input.slice(0);\n        return input.map(function (element) {\n          return element / sumValue;\n        });\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!src(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!src(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\n/**\n *\n * @private\n * @param {*} spectrum\n * @param {*} options\n */\nfunction getNormalized(spectrum, options = {}) {\n  if (!Array.isArray(spectrum.x) || !Array.isArray(spectrum.y)) {\n    throw new Error(\n      'getNormalized: Can not get normalized data, missing original data.',\n    );\n  }\n\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints = 1024,\n    filters = [],\n    exclusions = [],\n  } = options;\n\n  let y = spectrum.y.slice(0);\n\n  for (let filter of filters) {\n    switch (filter.name) {\n      case 'centerMean': {\n        let mean = array.mean(spectrum.y);\n        let meanFct = (y) => y - mean;\n        y = y.map(meanFct);\n        break;\n      }\n      case 'scaleSD': {\n        let std = array.standardDeviation(spectrum.y);\n        let stdFct = (y) => y / std;\n        y = y.map(stdFct);\n        break;\n      }\n      case 'normalize': {\n        y = norm(y);\n        break;\n      }\n      case 'rescale': {\n        y = rescale(y);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n  let result = equallySpaced(\n    { x: spectrum.x, y },\n    { from, to, numberOfPoints, exclusions },\n  );\n  return result;\n}\n\nconst isAnyArray$1 = require('is-any-array');\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {object} [points={}]\n */\nfunction check(points = {}) {\n  if (!isAnyArray$1(points.x) || !isAnyArray$1(points.y)) {\n    throw new Error('Points must be an object of x and y arrays');\n  }\n  if (points.x.length !== points.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n\n/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array} array\n * @param {number} target\n */\n\nfunction findClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n\n/**\n * Returns an object with {fromIndex, toIndex} for a specific from / to\n * @param {array} x\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n */\n\nfunction getFromToIndex(x, options = {}) {\n  let { fromIndex, toIndex, from, to } = options;\n\n  if (fromIndex === undefined) {\n    if (from !== undefined) {\n      fromIndex = findClosestIndex(x, from);\n    } else {\n      fromIndex = 0;\n    }\n  }\n  if (toIndex === undefined) {\n    if (to !== undefined) {\n      toIndex = findClosestIndex(x, to);\n    } else {\n      toIndex = x.length - 1;\n    }\n  }\n  return { fromIndex, toIndex };\n}\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Integration value on the specified range\n */\n\nfunction integration(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n  let integration = 0;\n  for (let i = fromIndex; i < toIndex; i++) {\n    integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n  }\n\n  return integration;\n}\n\n/**\n * Generate a X / Y of the integral\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @param {boolean} [options.reverse=false] - Integrate from the larger value to the smallest value\n * @return {{x:[],y:[]}} An object with the integration function\n */\n\nfunction integral$1(points = {}, options = {}) {\n  const { reverse = false } = options;\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let integration = 0;\n  let integral;\n  if (reverse) {\n    integral = { x: [x[toIndex]], y: [0] };\n    for (let i = toIndex; i > fromIndex; i--) {\n      integration += ((x[i] - x[i - 1]) * (y[i - 1] + y[i])) / 2;\n      integral.x.push(x[i - 1]);\n      integral.y.push(integration);\n    }\n    integral.x.reverse();\n    integral.y.reverse();\n  } else {\n    integral = { x: [x[fromIndex]], y: [0] };\n    for (let i = fromIndex; i < toIndex; i++) {\n      integration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n      integral.x.push(x[i + 1]);\n      integral.y.push(integration);\n    }\n  }\n\n  return integral;\n}\n\n/**\n * Finds the max value in a zone\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {number} Max y on the specified range\n */\n\nfunction maxY(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let maxY = y[fromIndex];\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > maxY) maxY = y[i];\n  }\n\n  return maxY;\n}\n\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nfunction maxYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n * @return {object}\n */\n\nfunction minYPoint(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = getFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex] };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] < current.y) current = { x: x[i], y: y[i] };\n  }\n\n  return current;\n}\n\n/**\n * Reduce the number of points while keeping the same noise. Practical to\n * display many spectra as SVG\n * @param {array} x\n * @param {array} y\n * @param {object} [options={}]\n * @param {number} [from=x[0]]\n * @param {number} [to=x[x.length-1]]\n * @param {number} [nbPoints=4001] Number of points\n */\n\nfunction reduce(x, y, options = {}) {\n  let { from = x[0], to = x[x.length - 1], nbPoints = 4000 } = options;\n\n  let fromIndex = findClosestIndex(x, from);\n  let toIndex = findClosestIndex(x, to);\n\n  if (fromIndex > 0 && x[fromIndex] > from) fromIndex--;\n  if (toIndex < x.length - 1 && x[toIndex] < to) toIndex++;\n\n  if (toIndex - fromIndex < nbPoints) {\n    return {\n      x: x.slice(fromIndex, toIndex + 1),\n      y: y.slice(fromIndex, toIndex + 1),\n    };\n  }\n\n  let newX = [x[fromIndex]];\n  let newY = [y[fromIndex]];\n  let minY = Number.MAX_VALUE;\n  let maxY = Number.MIN_VALUE;\n  if (nbPoints % 2 === 0) {\n    nbPoints = nbPoints / 2 + 1;\n  } else {\n    nbPoints = (nbPoints - 1) / 2 + 1;\n  }\n\n  let slot = (x[toIndex] - x[fromIndex]) / (nbPoints - 1);\n  let currentX = x[fromIndex] + slot;\n  let first = true;\n  for (let i = fromIndex + 1; i <= toIndex; i++) {\n    if (first) {\n      minY = y[i];\n      maxY = y[i];\n      first = false;\n    } else {\n      if (y[i] < minY) minY = y[i];\n      if (y[i] > maxY) maxY = y[i];\n    }\n\n    if (x[i] >= currentX || i === toIndex) {\n      newX.push(currentX - slot / 2);\n      newY.push(minY);\n      newX.push(currentX);\n      newY.push(maxY);\n      currentX += slot;\n      first = true;\n    }\n  }\n\n  // we will need to make some kind of min / max because there are too many points\n  // we will always keep the first point and the last point\n\n  return { x: newX, y: newY };\n}\n\n/**\n * Sort object of array, x has to be monotone.\n * @param {object} data Object of kind {x:[], re:[], im:[]}.\n * @return {SD}\n */\n\nfunction sortX(data) {\n  const { x, y } = data;\n\n  if (x.length !== y.length) {\n    throw TypeError('sortX: length of x and y must be identical');\n  }\n\n  if (x.length < 2 || x[0] < x[1]) return data;\n\n  return {\n    x: x.slice(0).reverse(),\n    y: y.slice(0).reverse(),\n  };\n}\n\n/**\n * Find the closest minimum going down hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nfunction minClosestYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let minY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] < minY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] < minY) {\n      currentIndex++;\n    }\n    minY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n\n/**\n * Find the closest maximum going up hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nfunction maxClosestYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let maxY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] > maxY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] > maxY) {\n      currentIndex++;\n    }\n    maxY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n\n/**\n *  Returns the targetIndex\n * @param {array} [x]\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @param {number}\n */\n\nfunction getTargetIndex(x, options = {}) {\n  let { target, targetIndex } = options;\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      return findClosestIndex(x, target);\n    } else {\n      return 0;\n    }\n  }\n  return targetIndex;\n}\n\nfunction realMinYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n\n  const targetIndex = getTargetIndex(x, options);\n  // interpolation to a sin() function\n  if (\n    y[targetIndex - 1] < 0 &&\n    y[targetIndex + 1] < 0 &&\n    y[targetIndex] <= y[targetIndex - 1] &&\n    y[targetIndex] <= y[targetIndex + 1]\n  ) {\n    let alpha = 20 * Math.log10(-y[targetIndex - 1]);\n    let beta = 20 * Math.log10(-y[targetIndex]);\n    let gamma = 20 * Math.log10(-y[targetIndex + 1]);\n    let p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n    return {\n      x: x[targetIndex] + (x[targetIndex] - x[targetIndex - 1]) * p,\n      y: y[targetIndex] - 0.25 * (y[targetIndex - 1] - y[targetIndex + 1]) * p,\n      index: targetIndex,\n    };\n  } else {\n    return {\n      x: x[targetIndex],\n      y: y[targetIndex],\n      index: targetIndex,\n    };\n  }\n}\n\n/**\n * Find the closest minimum going down hill\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nfunction realMaxYPoint(points, options = {}) {\n  check(points);\n  const { x, y } = points;\n  const targetIndex = getTargetIndex(x, options);\n  // interpolation to a sin() function\n  if (\n    y[targetIndex - 1] > 0 &&\n    y[targetIndex + 1] > 0 &&\n    y[targetIndex] >= y[targetIndex - 1] &&\n    y[targetIndex] >= y[targetIndex + 1]\n  ) {\n    let alpha = 20 * Math.log10(y[targetIndex - 1]);\n    let beta = 20 * Math.log10(y[targetIndex]);\n    let gamma = 20 * Math.log10(y[targetIndex + 1]);\n    let p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n    return {\n      x: x[targetIndex] + (x[targetIndex] - x[targetIndex - 1]) * p,\n      y: y[targetIndex] - 0.25 * (y[targetIndex - 1] - y[targetIndex + 1]) * p,\n      index: targetIndex,\n    };\n  } else {\n    return {\n      x: x[targetIndex],\n      y: y[targetIndex],\n      index: targetIndex,\n    };\n  }\n}\n\n/**\n * Finds all the max values\n * If the values are equal the middle\n * of the equal part will be the position of the signal!\n *\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @return {Array} Array of points\n */\n\nfunction maximaY(points = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 3) return [];\n  let maxima = [];\n  let startEqualIndex = -1;\n  for (let i = 1; i < x.length - 1; i++) {\n    if (y[i - 1] < y[i] && y[i + 1] < y[i]) {\n      maxima.push({ x: x[i], y: y[i], index: i });\n    } else if (y[i - 1] < y[i] && y[i + 1] === y[i]) {\n      startEqualIndex = i;\n    } else if (y[i - 1] === y[i] && y[i + 1] < y[i]) {\n      let index = ((i + startEqualIndex) / 2) >> 0;\n      maxima.push({ x: x[index], y: y[index], index });\n    }\n  }\n  return maxima;\n}\n\n/**\n * Finds all the min values\n * If the values are equal the middle\n * of the equal part will be the position of the signal!\n *\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @return {Array} Array of points\n */\n\nfunction minimaY(points = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 3) return [];\n  let maxima = [];\n  let startEqualIndex = -1;\n  for (let i = 1; i < x.length - 1; i++) {\n    if (y[i - 1] > y[i] && y[i + 1] > y[i]) {\n      maxima.push({ x: x[i], y: y[i], index: i });\n    } else if (y[i - 1] > y[i] && y[i + 1] === y[i]) {\n      startEqualIndex = i;\n    } else if (y[i - 1] === y[i] && y[i + 1] > y[i]) {\n      let index = ((i + startEqualIndex) / 2) >> 0;\n      maxima.push({ x: x[index], y: y[index], index });\n    }\n  }\n  return maxima;\n}\n\n/**\n * Returns an information about a signal\n *\n * We expect ordered data and equidistant X axis\n * You can use the method helper if required:\n * ML.ArrayXY.uniqueX\n * ML.ArrayXY.sortX\n * ML.ArrayXY.equallySpaced\n *\n * @param {object} [points={}] - Object of points contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex]\n * @return {object} Information about signal\n */\n\nfunction peakInfo(points = {}, options = {}) {\n  check(points);\n  const { x, y } = points;\n  if (x.length < 3) return undefined;\n  let { targetIndex, target } = options;\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = findClosestIndex(x, target);\n    }\n  }\n\n  if (targetIndex === undefined) {\n    throw new Error('peakInfo: need to specify target or targetIndex');\n  }\n\n  let i = targetIndex;\n  let currentDiff = y[i] - y[i + 1];\n\n  let multiplier = currentDiff < 0 ? -1 : 1;\n  currentDiff *= multiplier;\n  while (i < x.length - 1) {\n    i++;\n    let newDiff = (y[i] - y[i + 1]) * multiplier;\n    if (newDiff < currentDiff) break;\n    currentDiff = newDiff;\n  }\n  let after = { x: x[i], y: y[i] };\n\n  i = targetIndex;\n  currentDiff = (y[i] - y[i - 1]) * multiplier;\n  while (i > 1) {\n    i--;\n    let newDiff = (y[i] - y[i - 1]) * multiplier;\n    if (newDiff < currentDiff) break;\n    currentDiff = newDiff;\n  }\n  let before = { x: x[i], y: y[i] };\n\n  return {\n    inflectionBefore: before,\n    inflectionAfter: after,\n    extrema: { x: x[targetIndex], y: y[targetIndex] },\n    inflectionMiddle: {\n      x: (before.x + after.x) / 2,\n      y: (before.y + after.y) / 2,\n    },\n    width: Math.abs(before.x - after.x),\n  };\n}\n\nconst XY = {\n  check,\n  integral: integral$1,\n  integration,\n  maxY,\n  maximaY,\n  maxYPoint,\n  minimaY,\n  minYPoint,\n  reduce,\n  sortX,\n  minClosestYPoint,\n  maxClosestYPoint,\n  realMaxYPoint,\n  realMinYPoint,\n  peakInfo,\n};\n\n/**\n\n/**\n * This function add the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nfunction add(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n\n/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @return {object}\n */\nfunction boxPlot(array) {\n  array = array.slice(0).sort((a, b) => a - b);\n  if (array.length < 5) {\n    throw Error(\n      'boxPlot: can not calculate info if array contains less than 3 elements',\n    );\n  }\n  let info = {\n    Q1: 0.0,\n    Q2: 0.0,\n    Q3: 0.0,\n    min: array[0],\n    max: array[array.length - 1],\n  };\n  let q1max, q3min;\n  if (array.length % 2 === 1) {\n    // odd\n    let middle = (array.length - 1) / 2;\n    info.Q2 = array[middle];\n    q1max = middle - 1;\n    q3min = middle + 1;\n  } else {\n    // even\n    q3min = array.length / 2;\n    q1max = q3min - 1;\n    info.Q2 = (array[q1max] + array[q3min]) / 2;\n  }\n  if (q1max % 2 === 0) {\n    info.Q1 = array[q1max / 2];\n    info.Q3 = array[(array.length + q3min - 1) / 2];\n  } else {\n    info.Q1 = (array[(q1max + 1) / 2] + array[(q1max - 1) / 2]) / 2;\n    let middleOver = (array.length + q3min) / 2;\n    info.Q3 = (array[middleOver] + array[middleOver - 1]) / 2;\n  }\n  return info;\n}\n\n/**\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nfunction divide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n\n/**\n\n/**\n * This function multiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nfunction multiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n\n/**\n * This function performs a circular shift to a new array\n * Positive values of shifts will shift to the right and negative values will do to the left\n * @example rotate([1,2,3,4],1) -> [4,1,2,3]\n * @example rotate([1,2,3,4],-1) -> [2,3,4,1]\n * @param {Array} array - the array that will be rotated\n * @param {number} shift\n * @return {Array}\n */\nfunction rotate(array, shift) {\n  shift = shift % array.length;\n  if (shift < 0) shift += array.length;\n  return array\n    .slice(array.length - shift)\n    .concat(array.slice(0, array.length - shift));\n}\n\n/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nfunction subtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n\n/**\n\n/**\n * Calculates the correlation between 2 vectors\n * https://en.wikipedia.org/wiki/Correlation_and_dependence\n *\n * @param {Array} [A] - the array that will be rotated\n * @param {Array} [B]\n * @return {Array}\n */\nfunction correlation(A, B) {\n  let n = A.length;\n  let sumA = 0;\n  let sumA2 = 0;\n  let sumB = 0;\n  let sumB2 = 0;\n  let sumAB = 0;\n  for (let i = 0; i < n; i++) {\n    let a = A[i];\n    let b = B[i];\n    sumA += a;\n    sumA2 += a ** 2;\n    sumB += b;\n    sumB2 += b ** 2;\n    sumAB += a * b;\n  }\n  return (\n    (n * sumAB - sumA * sumB) /\n    (Math.sqrt(n * sumA2 - sumA ** 2) * Math.sqrt(n * sumB2 - sumB ** 2))\n  );\n}\n\nconst X = {\n  add,\n  boxPlot,\n  divide,\n  findClosestIndex,\n  getTargetIndex,\n  multiply,\n  rotate,\n  subtract,\n  correlation,\n};\n\n/**\n *  @private\n * @param {*} spectrum\n * @param {*} ranges\n */\nfunction updateRangesInfo(spectrum, ranges = []) {\n  spectrum.ranges = {};\n  for (let range of ranges) {\n    range = JSON.parse(JSON.stringify(range));\n    spectrum.ranges[range.label] = range;\n    let fromToIndex = {\n      fromIndex: X.findClosestIndex(spectrum.normalized.x, range.from),\n      toIndex: X.findClosestIndex(spectrum.normalized.x, range.to),\n    };\n    range.integration = XY.integration(spectrum.normalized, fromToIndex);\n    range.maxPoint = XY.maxYPoint(spectrum.normalized, fromToIndex);\n    range.x = spectrum.normalized.x.slice(\n      fromToIndex.fromIndex,\n      fromToIndex.toIndex + 1,\n    );\n    range.y = spectrum.normalized.y.slice(\n      fromToIndex.fromIndex,\n      fromToIndex.toIndex + 1,\n    );\n  }\n}\n\n/**\n * Class allowing manipulate one IR spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.x=[]] - x values\n * @param {Array} [json.y=[]] - y values\n */\nclass Spectrum {\n  /**\n   *\n   * @param {array} x\n   * @param {array} y\n   * @param {string} id\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.normalization]\n   * @param {object} [options.normalized]\n   */\n  constructor(x, y, id, options = {}) {\n    const { meta = {}, normalization = {}, normalized } = options;\n\n    if (x && x.length > 1 && x[0] > x[1]) {\n      this.x = x.reverse();\n      this.y = y.reverse();\n    } else {\n      this.x = x || [];\n      this.y = y || [];\n    }\n    this.id = id;\n    this.meta = meta;\n    this.normalizedBoundary = { x: { min: 0, max: 0 }, y: { min: 0, max: 0 } };\n    if (normalized) {\n      this.normalized = normalized;\n      this.updateNormalizedBoundary();\n    } else {\n      this.updateNormalization(normalization);\n    }\n\n    this.updateMemory();\n  }\n\n  get minX() {\n    return this.x[0];\n  }\n\n  get maxX() {\n    return this.x[this.x.length - 1];\n  }\n\n  updateMemory() {\n    let original = ((this.x && this.x.length) || 0) * 16;\n    let normalized = this.normalized.x.length * 16;\n    this.memory = { original, normalized, total: original + normalized };\n  }\n\n  removeOriginal() {\n    this.x = undefined;\n    this.y = undefined;\n    this.updateMemory();\n  }\n\n  getXY() {\n    if (!Array.isArray(this.x) || !Array.isArray(this.y)) {\n      throw new Error('Can not get normalized data');\n    }\n    return { x: this.x, y: this.y };\n  }\n}\n\nSpectrum.prototype.getData = function(options) {\n  return getData(this, options);\n};\n\nSpectrum.prototype.updateNormalization = function(normalization) {\n  this.normalized = getNormalized(this, normalization);\n  this.ranges = {};\n  this.updateMemory();\n  this.updateNormalizedBoundary();\n};\n\nSpectrum.prototype.updateRangesInfo = function(ranges) {\n  updateRangesInfo(this, ranges);\n};\n\nSpectrum.prototype.updateNormalizedBoundary = function() {\n  this.normalizedBoundary.x = {\n    min: this.normalized.x[0],\n    max: this.normalized.x[this.normalized.x.length - 1],\n  };\n  this.normalizedBoundary.y = array_4(this.normalized.y);\n};\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    var floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    var wantXY = !options.withoutXY;\n\n    var start = Date.now();\n\n    var ntuples = {};\n    var ldr, dataLabel, dataValue, ldrs;\n    var position, endLine, infos;\n\n    var result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    var spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    var spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      dataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (dataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          var xIndex = -1;\n          var yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            var firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1'\n            );\n            var secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1'\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            dataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            dataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (dataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (dataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (dataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (dataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (dataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (dataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (dataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (dataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (dataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (dataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (dataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (dataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (dataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (dataLabel === '.OBSERVEFREQUENCY' || dataLabel === '$SFO1') {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (dataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$REFERENCEPOINT') ; else if (dataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (dataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        var pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        var unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (dataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(dataLabel)) {\n        spectrum[convertMSFieldToLabel(dataLabel)] = dataValue;\n      } else if (dataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (dataLabel.match(options.keepRecordsRegExp)) {\n        if (result.info[dataLabel]) {\n          if (!Array.isArray(result.info[dataLabel])) {\n            result.info[dataLabel] = [result.info[dataLabel]];\n          }\n          result.info[dataLabel].push(dataValue.trim());\n        } else {\n          result.info[dataLabel] = dataValue.trim();\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      var newNtuples = [];\n      var keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              var data = spectrum.data[j];\n              var newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2)\n              };\n              for (var k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(dataLabel) {\n    return GC_MS_FIELDS.indexOf(dataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    var spectra = result.spectra;\n    var length = spectra.length;\n    var chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length)\n        }\n      }\n    };\n\n    var existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      var label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length)\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      var spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]]\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    var data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice()\n        }\n      }\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      var shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    var l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    var minZ = spectra[0].data[0][0];\n    var maxZ = minZ;\n    var ySize = spectra.length;\n    var xSize = spectra[0].data[0].length / 2;\n    var z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      var xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        var value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs))\n    };\n  }\n\n  function add2D(result, options) {\n    var zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    var noise = zData.noise;\n    var z = zData.z;\n    var povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    var isOver0, isOver1, isOver2, isOver3;\n    var nbSubSpectra = z.length;\n    var nbPovars = z[0].length;\n    var pAx, pAy, pBx, pBy;\n\n    var x0 = zData.minX;\n    var xN = zData.maxX;\n    var dx = (xN - x0) / (nbPovars - 1);\n    var y0 = zData.minY;\n    var yN = zData.maxY;\n    var dy = (yN - y0) / (nbSubSpectra - 1);\n    var minZ = zData.minZ;\n    var maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    var iter = options.nbContourLevels * 2;\n    var contourLevels = new Array(iter);\n    var lineZValue;\n    for (var level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      var contourLevel = {};\n      contourLevels[level] = contourLevel;\n      var side = level % 2;\n      var factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      var lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        var subSpectra = z[iSubSpectra];\n        var subSpectraAfter = z[iSubSpectra + 1];\n        for (var povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    var yFactor = spectrum.yFactor;\n    var deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var currentX = spectrum.firstX;\n    var currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    var endLine = false;\n    var ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    var newLine = true;\n    var isDifference = false;\n    var isLastDifference = false;\n    var lastDifference = 0;\n    var isDuplicate = false;\n    var inComment = false;\n    var currentValue = 0; // can be a difference or a duplicate\n    var lastValue = 0; // must be the real last value\n    var isNegative = false;\n    var inValue = false;\n    var skipFirstValue = false;\n    var decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                var duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (var j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            var ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    var removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    var removeCommentRegExp = /\\$\\$.*/;\n    var peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nvar convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nvar stamps = {};\nvar worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function (resolve) {\n    var stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options\n      })\n    );\n  });\n}\n\nfunction createWorker() {\n  var workerURL = URL.createObjectURL(\n    new Blob(\n      [`var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`],\n      { type: 'application/javascript' }\n    )\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function (event) {\n    var data = JSON.parse(event.data);\n    var stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (var i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: []\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      var finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      var match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        var dataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (dataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nvar src$1 = {\n  convert: JcampConverter,\n  createTree: createTree\n};\nvar src_1 = src$1.convert;\n\nfunction getJcampKind(data) {\n  let datatype = data.spectra[0].dataType.toLowerCase();\n  let yUnit = data.spectra[0].yUnit.toLowerCase();\n\n  if (datatype.match(/infrared/)) {\n    if (yUnit.match(/absorbance/)) {\n      return IR_ABSORBANCE;\n    } else {\n      return IR_TRANSMITTANCE;\n    }\n  }\n  return undefined;\n}\n\nconst IR_TRANSMITTANCE = {\n  normalization: {},\n  importation: {\n    converter: (transmittance) => -Math.log10(transmittance),\n  },\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance',\n  },\n};\n\nconst IR_ABSORBANCE = {\n  normalization: {},\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance',\n  },\n};\n\n/**\n * Create a spectrum from a jcamp\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nfunction jcamp(jcamp) {\n  const parsed = src_1(jcamp, { xy: true, keepRecordsRegExp: /TITLE/ });\n  const kind = getJcampKind(parsed);\n  const data = parsed.spectra[0].data[0];\n  const meta = parsed.info;\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data, kind, meta };\n}\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] : Object of points contains property x (an array) and y (an array)\n * @return points\n */\n\nfunction uniqueX(points = {}) {\n  const { x, y } = points;\n  if (x.length < 2) return;\n  if (x.length !== y.length) {\n    throw new Error('The X and Y arrays mush have the same length');\n  }\n\n  let current = x[0];\n  let counter = 0;\n\n  for (let i = 1; i < x.length; i++) {\n    if (current !== x[i]) {\n      counter++;\n      current = x[i];\n      x[counter] = x[i];\n      if (i !== counter) {\n        y[counter] = 0;\n      }\n    }\n    if (i !== counter) {\n      y[counter] += y[i];\n    }\n  }\n\n  x.length = counter + 1;\n  y.length = counter + 1;\n}\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options={}]\n * @param {boolean} [options.rescale = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.min(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {object{x:<Array<number>>,y:<Array<number>>}\n */\nfunction parseXY(text, options = {}) {\n  let {\n    rescale = false,\n    uniqueX: uniqueX$1 = false,\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Number.MAX_SAFE_INTEGER,\n    minNumberColumns = 2,\n  } = options;\n\n  maxNumberColumns = Math.max(maxNumberColumns, xColumn + 1, yColumn + 1);\n  minNumberColumns = Math.max(xColumn + 1, yColumn + 1, minNumberColumns);\n\n  let lines = text.split(/[\\r\\n]+/);\n\n  let maxY = Number.MIN_VALUE;\n  let result = { x: [], y: [] };\n  let info = [];\n  for (let l = 0; l < lines.length; l++) {\n    let line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      let fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n        fields.length >= minNumberColumns &&\n        fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result.x.push(x);\n        result.y.push(y);\n      }\n    } else if (line) {\n      info.push({ position: result.x.length, value: line });\n    }\n  }\n\n  if (uniqueX$1) {\n    uniqueX(result);\n  }\n\n  if (rescale) {\n    for (let i = 0; i < result.y.length; i++) {\n      result.y[i] /= maxY;\n    }\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result,\n  };\n}\n\n/**\n * Create a spectrum from a text file\n * @param {string} text - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nfunction text(text, options = {}) {\n  const { kind, parserOptions = {} } = options;\n\n  const data = parseXY(text, parserOptions);\n\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data };\n}\n\n/**\n * Creates a g\n * @param {string} text - String containing the text data\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] Field separator\n * @return {object} - {matrix, data, x, ids}\n */\nfunction matrix(text, options = {}) {\n  const lines = text.split(/[\\r\\n]+/).filter((value) => value);\n  const { fs = '\\t' } = options;\n  let matrix = [];\n  let ids = [];\n  let meta = [];\n  let x = [];\n\n  let headers = lines[0].split(fs);\n  let labels = [];\n\n  for (let i = 0; i < headers.length; i++) {\n    let header = headers[i];\n    if (isNaN(header)) {\n      labels[i] = header;\n    } else {\n      x = headers.slice(i).map((value) => Number(value));\n      break;\n    }\n  }\n\n  for (let i = 1; i < lines.length; i++) {\n    let line = lines[i];\n    let parts = line.split('\\t');\n    ids.push(parts[0]);\n    let oneMeta = {};\n    meta.push(oneMeta);\n    for (let j = 1; j < parts.length; j++) {\n      if (j < labels.length) {\n        oneMeta[labels[j]] = parts[j];\n      } else {\n        matrix.push(parts.slice(labels.length).map((value) => Number(value)));\n        break;\n      }\n    }\n  }\n  return { x, meta, matrix, ids };\n}\n\nfunction getNormalizationAnnotations(filter = {}, boundary) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: 0, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: 10000, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n\n/**\n * @private\n * @param {*} spectra\n */\n\nfunction getBoxPlotData(spectra) {\n  let matrix = [];\n  let x = spectra[0].normalized.x;\n  for (let spectrum of spectra) {\n    matrix.push(spectrum.normalized.y);\n  }\n\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let result;\n  let aColumn = new Float64Array(nbRow);\n  for (let column = 0; column < nbColumn; column++) {\n    for (let row = 0; row < nbRow; row++) {\n      aColumn[row] = matrix[row][column];\n    }\n    let info = X.boxPlot(aColumn);\n    if (!result) {\n      result = { x };\n      for (let key in info) {\n        result[key] = [];\n      }\n    }\n    for (let key in info) {\n      result[key].push(info[key]);\n    }\n  }\n  return result;\n}\n\nfunction getBoxPlotAnnotations(spectra, options = {}) {\n  const {\n    q13FillColor = '#000',\n    q13FillOpacity = 0.3,\n    q2StrokeColor = '#000',\n    q2StrokeWidth = 3,\n    minMaxFillColor = '#000',\n    minMaxFillOpacity = 0.15,\n  } = options;\n  let annotations = [];\n\n  let data = getBoxPlotData(spectra);\n  if (q13FillOpacity && q13FillColor) {\n    let q13 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q1[i],\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q3[i],\n      });\n    }\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: q13FillColor,\n        fillOpacity: q13FillOpacity,\n        strokeWidth: 0.0000001,\n        position: q13,\n      },\n    });\n  }\n\n  if (q2StrokeColor && q2StrokeWidth) {\n    let q2 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i],\n      });\n    }\n    // Temp code because polyline is not working\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i],\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        strokeWidth: q2StrokeWidth,\n        strokeColor: q2StrokeColor,\n        position: q2,\n      },\n    });\n  }\n\n  if (minMaxFillColor && minMaxFillOpacity) {\n    let minMax = [];\n    for (let i = 0; i < data.x.length; i++) {\n      minMax.push({\n        x: data.x[i],\n        y: data.min[i],\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      minMax.push({\n        x: data.x[i],\n        y: data.max[i],\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: minMaxFillColor,\n        fillOpacity: minMaxFillOpacity,\n        strokeWidth: 0.0000001,\n        strokeColor: '#FFF',\n        position: minMax,\n      },\n    });\n  }\n\n  return annotations;\n}\n\nfunction addChartDataStyle(data, spectrum) {\n  data.styles = {\n    unselected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 1,\n      lineStyle: 1,\n    },\n    selected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 3,\n      lineStyle: 1,\n    },\n  };\n  data.label = spectrum.meta.id || spectrum.id;\n}\n\n/**\n * Retrieve a chart with selected original data\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by default all\n * @param {Array} [options.maxDataPoints=]\n */\nfunction getChart(spectra, options = {}) {\n  const { ids } = options;\n  let chart = {\n    data: [],\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.getData();\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n\n/**\n * @private\n * @param {*} spectra\n * @param {*} options\n */\n\nfunction getNormalizedData(spectra, options = {}) {\n  const { ids } = options;\n  if (!spectra || !spectra[0]) return {};\n  let matrix = [];\n  let meta = [];\n  let currentIDs = [];\n\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      currentIDs.push(spectrum.id);\n      matrix.push(spectrum.normalized.y);\n      meta.push(spectrum.meta);\n    }\n  }\n  let x = spectra[0].normalized.x;\n  return { ids: currentIDs, matrix, meta, x };\n}\n\nfunction getTrackAnnotation(spectra, index, options = {}) {\n  const { ids } = options;\n  let annotations = [];\n\n  let normalized = getNormalizedData(spectra, { ids });\n\n  if (normalized.ids.length === 0) return annotations;\n  let line = 0;\n\n  // header containing X coordinate\n  annotations.push({\n    type: 'line',\n    position: [\n      { x: `${70}px`, y: `${15 + 15 * line}px` },\n      { x: `${85}px`, y: `${15 + 15 * line}px` },\n    ],\n    strokeWidth: 0.0000001,\n    label: {\n      size: 16,\n      text: `x: ${normalized.x[index].toPrecision(6)}`,\n      position: { x: `${130}px`, y: `${20 + 15 * line}px` },\n    },\n  });\n  line++;\n\n  for (let i = 0; i < normalized.ids.length; i++) {\n    let id = normalized.ids[i];\n    let meta = normalized.meta[i];\n    let y = normalized.matrix[i][index];\n    annotations.push({\n      type: 'line',\n      position: [\n        { x: `${70}px`, y: `${15 + 15 * line}px` },\n        { x: `${85}px`, y: `${15 + 15 * line}px` },\n      ],\n      strokeColor: meta.color,\n      strokeWidth: 2,\n      label: {\n        text: `${y.toPrecision(4)} - ${id}`,\n        position: { x: `${90}px`, y: `${20 + 15 * line}px` },\n      },\n    });\n    line++;\n  }\n\n  return annotations;\n}\n\nfunction getNormalizedChart(spectra, options = {}) {\n  const { ids } = options;\n  let chart = {\n    data: [],\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.normalized;\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n\n/**\n *\n * @param {SpectraProcessor} spectraProcessor\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n */\nfunction getScaledChart(spectraProcessor, options = {}) {\n  let scaled = spectraProcessor.getScaledData(options);\n\n  let chart = {\n    data: [],\n  };\n\n  for (let i = 0; i < scaled.matrix.length; i++) {\n    let data = {\n      x: scaled.x,\n      y: scaled.matrix[i],\n    };\n    addChartDataStyle(data, { meta: scaled.meta[i], id: scaled.ids[i] });\n    chart.data.push(data);\n  }\n\n  return chart;\n}\n\n/**\n * @private\n */\n\nfunction getAutocorrelation(normalized, index) {\n  let matrix = normalized.matrix;\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let array1 = new Float64Array(nbRow);\n  let array2 = new Float64Array(nbRow);\n  let result = new Array(nbColumn);\n  for (let j = 0; j < nbRow; j++) {\n    array1[j] = matrix[j][index];\n  }\n  for (let i = 0; i < nbColumn; i++) {\n    for (let j = 0; j < nbRow; j++) {\n      array2[j] = matrix[j][i];\n    }\n    result[i] = X.correlation(array1, array2);\n  }\n  return {\n    x: normalized.x,\n    y: result,\n  };\n}\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nfunction checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nfunction checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nfunction checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nfunction checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nfunction checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nfunction checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nfunction checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nfunction checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nfunction newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nfunction sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nfunction sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nfunction sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nfunction productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nfunction productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nfunction varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nfunction varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nfunction centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nfunction centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nfunction centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nfunction getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nfunction scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nfunction getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nfunction scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nfunction getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nfunction scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n\nfunction inspectMatrix() {\n  const indent = ' '.repeat(2);\n  const indentData = ' '.repeat(4);\n  return `${this.constructor.name} {\n${indent}[\n${indentData}${inspectData(this, indentData)}\n${indent}]\n${indent}rows: ${this.rows}\n${indent}columns: ${this.columns}\n}`;\n}\n\nconst maxRows = 15;\nconst maxColumns = 10;\nconst maxNumSize = 8;\n\nfunction inspectData(matrix, indent) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j)));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indent}`);\n}\n\nfunction formatNumber(num) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.substring(eIndex);\n  return exponential.substring(0, maxNumSize - e.length) + e;\n}\n\nfunction installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n\nclass AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nclass Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n\n/**\n * @private\n */\n\nfunction getMeanData(normalized) {\n  let matrix = new Matrix(normalized.matrix);\n  return {\n    x: normalized.x,\n    y: matrix.mean('column'),\n  };\n}\n\n/**\n * @private\n * @param {*} spectra\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] field separator\n * @param {string} [options.rs='\\n'] record (line) separator\n */\n\nfunction getNormalizedText(spectra, options = {}) {\n  let { fs = '\\t', rs = '\\n' } = options;\n  let { matrix, meta, ids, x } = getNormalizedData(spectra);\n  let allKeysObject = {};\n  for (let metum of meta) {\n    for (let key of Object.keys(metum)) {\n      let type = typeof metum[key];\n      if (type === 'number' || type === 'string' || type === 'boolean') {\n        allKeysObject[key] = true;\n      }\n    }\n  }\n  let allKeys = Object.keys(allKeysObject);\n\n  let lines = [];\n  let line = [];\n  line.push('id', ...allKeys, ...x);\n  lines.push(line.join(fs));\n\n  for (let i = 0; i < ids.length; i++) {\n    line = [];\n    line.push(ids[i]);\n    for (let key of allKeys) {\n      line.push(meta[i][key]);\n    }\n    line.push(...matrix[i]);\n    lines.push(line.join(fs));\n  }\n\n  return lines.join(rs);\n}\n\nfunction getFromToIndex$1(xs, range) {\n  let { from, to } = range;\n  if (from === undefined) {\n    from = xs[0];\n  }\n  if (to === undefined) {\n    to = xs[xs.length - 1];\n  }\n\n  return {\n    fromIndex: X.findClosestIndex(xs, from),\n    toIndex: X.findClosestIndex(xs, to),\n  };\n}\n\nfunction min$1(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex$1(targetSpectrum.normalized.x, range);\n\n  let targetValue = XY.minYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => XY.minYPoint(spectrum.normalized, fromToIndex).y,\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\nfunction max$1(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex$1(targetSpectrum.normalized.x, range);\n\n  let targetValue = XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => XY.maxYPoint(spectrum.normalized, fromToIndex).y,\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\nfunction maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n\nfunction checkArraySize(x, y) {\n  if (!Array.isArray(x) || !Array.isArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n\nclass BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (Array.isArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n)\n    };\n  }\n}\n\nclass SimpleLinearRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = [y.intercept, y.slope];\n    } else {\n      checkArraySize(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'simpleLinearRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(x) {\n    return this.slope * x + this.intercept;\n  }\n\n  computeX(y) {\n    return (y - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    let result = 'f(x) = ';\n    if (this.slope !== 0) {\n      const xFactor = maybeToPrecision(this.slope, precision);\n      result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\n      if (this.intercept !== 0) {\n        const absIntercept = Math.abs(this.intercept);\n        const operator = absIntercept === this.intercept ? '+' : '-';\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'simpleLinearRegression') {\n      throw new TypeError('not a SLR model');\n    }\n    return new SimpleLinearRegression(true, json);\n  }\n}\n\nfunction regress(slr, x, y) {\n  const n = x.length;\n  let xSum = 0;\n  let ySum = 0;\n\n  let xSquared = 0;\n  let xY = 0;\n\n  for (let i = 0; i < n; i++) {\n    xSum += x[i];\n    ySum += y[i];\n    xSquared += x[i] * x[i];\n    xY += x[i] * y[i];\n  }\n\n  const numerator = n * xY - xSum * ySum;\n  slr.slope = numerator / (n * xSquared - xSum * xSum);\n  slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n  slr.coefficients = [slr.intercept, slr.slope];\n}\n\nfunction minMax(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex$1(targetSpectrum.normalized.x, range);\n\n  let targetValue = {\n    min: XY.minYPoint(targetSpectrum.normalized, fromToIndex).y,\n    max: XY.maxYPoint(targetSpectrum.normalized, fromToIndex).y,\n  };\n\n  let values = spectra.map((spectrum) => {\n    return {\n      min: XY.minYPoint(spectrum.normalized, fromToIndex).y,\n      max: XY.maxYPoint(spectrum.normalized, fromToIndex).y,\n    };\n  });\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    const regression = new SimpleLinearRegression(\n      [targetValue.min, targetValue.max],\n      [values[i].min, values[i].max],\n    );\n\n    let length = spectrum.normalized.y.length;\n    let scaled = new Array(length);\n    for (let j = 0; j < length; j++) {\n      scaled[j] = regression.computeX(spectrum.normalized.y[j]);\n    }\n    matrix.push(scaled);\n  }\n\n  return matrix;\n}\n\nfunction range(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex$1(targetSpectrum.normalized.x, range);\n\n  let targetValue = XY.integration(targetSpectrum.normalized, fromToIndex);\n\n  let values = spectra.map((spectrum) =>\n    XY.integration(spectrum.normalized, fromToIndex),\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(X.multiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n\n/**\n * @private\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n */\n\nfunction getScaledData(spectraProcessor, options = {}) {\n  if (!spectraProcessor.spectra || !spectraProcessor.spectra[0]) return {};\n  const { range: range$1, targetID, relative, method, ids } = options;\n\n  let targetSpectrum =\n    spectraProcessor.getSpectrum(targetID) || spectraProcessor.spectra[0];\n  let spectra = spectraProcessor.getSpectra(ids);\n\n  let result;\n  if (method === '' || method === undefined) {\n    result = getNormalizedData(spectra);\n  } else {\n    let matrix;\n    switch (method.toLowerCase()) {\n      case 'min':\n        matrix = min$1(spectra, targetSpectrum, range$1);\n        break;\n      case 'max':\n        matrix = max$1(spectra, targetSpectrum, range$1);\n        break;\n      case 'minmax':\n        matrix = minMax(spectra, targetSpectrum, range$1);\n        break;\n      case 'range':\n        matrix = range(spectra, targetSpectrum, range$1);\n        break;\n      default:\n        throw new Error(`getScaledData: unknown method: ${method}`);\n    }\n    let meta = [];\n    let currentIDs = [];\n    for (let spectrum of spectra) {\n      currentIDs.push(spectrum.id);\n      meta.push(spectrum.meta);\n    }\n    let x = spectra[0].normalized.x;\n    result = { ids: currentIDs, matrix, meta, x };\n  }\n\n  if (relative) {\n    for (let i = 0; i < result.matrix.length; i++) {\n      result.matrix[i] = X.subtract(\n        result.matrix[i],\n        targetSpectrum.normalized.y,\n      );\n    }\n  }\n\n  return result;\n}\n\nclass SpectraProcessor {\n  /**\n   * Manager a large number of spectra with the possibility to normalize the data\n   * and skip the original data.\n   * @param {object} [options={}]\n   * @param {boolean} [options.maxMemory=64M]\n   * @param {object} [options.normalization={}] options to normalize the spectra before comparison\n   * @param {number} [options.normalization.from]\n   * @param {number} [options.normalization.to]\n   * @param {number} [options.normalization.numberOfPoints]\n   * @param {array<object>} [options.normalization.filters]\n   * @param {string} [options.normalization.filters.X.name]\n   * @param {object} [options.normalization.filters.X.options]\n   * @param {array<object>} [options.normalization.exclusions]\n   * @param {string} [options.normalization.exclusions.X.from]\n   * @param {object} [options.normalization.exclusions.X.to]\n   */\n  constructor(options = {}) {\n    this.normalization = options.normalization;\n    this.maxMemory = options.maxMemory || 64 * 1024 * 1024;\n    this.keepOriginal = true;\n    this.spectra = [];\n    this.boundaries = {\n      minX: Number.MAX_VALUE,\n      maxX: Number.MIN_VALUE,\n      minY: Number.MAX_VALUE,\n      maxY: Number.MIN_VALUE,\n    };\n  }\n\n  getNormalizationAnnotations() {\n    return getNormalizationAnnotations(\n      this.normalization,\n      this.getNormalizedBoundary(),\n    );\n  }\n\n  /**\n   * Recalculate the normalized data using the stored original data if available\n   * This will throw an error in the original data is not present\n   * @param {number} [normalization.from]\n   * @param {number} [normalization.to]\n   * @param {number} [normalization.numberOfPoints]\n   * @param {array<object>} [normalization.filters]\n   * @param {string} [normalization.filters.X.name]\n   * @param {object} [normalization.filters.X.options]\n   * @param {array<object>} [normalization.exclusions]\n   * @param {string} [normalization.exclusions.X.from]\n   * @param {object} [normalization.exclusions.X.to]\n   */\n  setNormalization(normalization = {}) {\n    if (JSON.stringify(this.normalization) === JSON.stringify(normalization)) {\n      return;\n    }\n    this.normalization = normalization;\n    for (let spectrum of this.spectra) {\n      spectrum.updateNormalization(this.normalization);\n    }\n  }\n\n  getNormalization() {\n    return this.normalization;\n  }\n\n  /**\n   * Returns an object {x:[], y:[]} containing the autocorrelation for the\n   * specified index\n   * @param {integer} [index] point of the spectrum to autocorrelate\n   * @param {object} [options={}]\n   * @param {array} [options.ids=[]] list of ids, by default all spectra\n   */\n  getAutocorrelation(index, options) {\n    return getAutocorrelation(this.getNormalizedData(options), index);\n  }\n\n  /**\n   * Returns a {x:[], y:[]} containg the average of specified spectra\n   * @param {object} [options={}]\n   * @param {array} [options.ids=[]] list of ids, by default all spectra\n   */\n  getMeanData(options) {\n    return getMeanData(this.getNormalizedData(options));\n  }\n\n  /**\n   * Returns an object contains 4 parameters with the normalized data\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   */\n  getNormalizedData(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedData(spectra);\n  }\n\n  /**\n   * Returns a tab separated value containing the normalized data\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   * @param {string} [options.fs='\\t'] field separator\n   * @param {string} [options.rs='\\n'] record (line) separator\n   * @returns {string}\n   */\n  getNormalizedText(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedText(spectra, options);\n  }\n\n  getMinMaxX() {\n    let min = Number.MAX_VALUE;\n    let max = Number.MIN_VALUE;\n    for (let spectrum of this.spectra) {\n      if (spectrum.minX < min) min = spectrum.minX;\n      if (spectrum.maxX > max) max = spectrum.maxX;\n    }\n    return { min, max };\n  }\n\n  /**\n\n   * Returns an object contains 4 parameters with the scaled data\n   * @param {object} [options={}] scale spectra based on various parameters\n   * @param {object} [options.range] from - to\n   * @param {Array} [options.ids] ids of selected spectra, by default all\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   */\n  getScaledData(options) {\n    return getScaledData(this, options);\n  }\n\n  /**\n   * Add jcamp\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.parserOptions={}] XY parser options\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {object} [options.kind]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromText(text$1, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = text(text$1, options);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  /**\n   * Add jcamp\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} jcamp\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromJcamp(jcamp$1, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = jcamp(jcamp$1);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  updateRangesInfo(options) {\n    for (let spectrum of this.spectra) {\n      spectrum.updateRangesInfo(options);\n    }\n  }\n\n  /**\n   * Add a spectrum based on the data\n   * @param {object} data {x, y}}\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.id]\n   * @param {object} [options.normalization={}]\n   * @param {object} [options.normalized]\n   * @return {Spectrum}\n   */\n\n  addFromData(data, options = {}) {\n    if (this.spectra.length === 0) this.keepOriginal = true;\n    const id =\n      options.id ||\n      Math.random()\n        .toString(36)\n        .substring(2, 10);\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.spectra.length;\n    let spectrum = new Spectrum(data.x, data.y, id, {\n      meta: options.meta,\n      normalized: options.normalized,\n      normalization: this.normalization,\n    });\n    this.spectra[index] = spectrum;\n    if (!this.keepOriginal) {\n      spectrum.removeOriginal();\n    } else {\n      let memoryInfo = this.getMemoryInfo();\n      if (memoryInfo.total > this.maxMemory) {\n        this.keepOriginal = false;\n        this.removeOriginals();\n      }\n    }\n  }\n\n  removeOriginals() {\n    for (let spectrum of this.spectra) {\n      spectrum.removeOriginal();\n    }\n  }\n\n  /**\n   * Remove the spectrum from the SpectraProcessor for the specified id\n   * @param {string} id\n   */\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra.splice(index, 1);\n  }\n\n  /**\n   * Remove all the spectra not present in the list\n   * @param {Array} [ids] Array of ids of the spectra to keep\n   */\n  removeSpectraNotIn(ids) {\n    let currentIDs = this.spectra.map((spectrum) => spectrum.id);\n    for (let id of currentIDs) {\n      if (!ids.includes(id)) {\n        this.removeSpectrum(id);\n      }\n    }\n  }\n\n  /**\n   * Checks if the ID of a spectrum exists in the SpectraProcessor\n   * @param {string} id\n   */\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.spectra.length; i++) {\n      let spectrum = this.spectra[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns a spectrum from its ID\n   * @param {Array} ids\n   * @returns {Array<Spectrum}\n   */\n  getSpectra(ids) {\n    if (!ids || !Array.isArray(ids)) return this.spectra;\n    let spectra = [];\n    for (let id of ids) {\n      let index = this.getSpectrumIndex(id);\n      if (index !== undefined) {\n        spectra.push(this.spectra[index]);\n      }\n    }\n    return spectra;\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra[index];\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getChart() {\n    return getChart(this.spectra);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for the specified index\n   * @returns {object}\n   */\n  getTrackAnnotation(index, options) {\n    return getTrackAnnotation(this.spectra, index, options);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for box plot\n   * @returns {object}\n   */\n  getBoxPlotAnnotations(options) {\n    return getBoxPlotAnnotations(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @returns {object}\n   */\n  getNormalizedChart(options) {\n    return getNormalizedChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the scaled normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @param {object} [options.range] from - to\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object}\n   */\n  getScaledChart(options) {\n    return getScaledChart(this, options);\n  }\n\n  getMemoryInfo() {\n    let memoryInfo = { original: 0, normalized: 0, total: 0 };\n    this.spectra.forEach((spectrum) => {\n      let memory = spectrum.memory;\n      memoryInfo.original += memory.original;\n      memoryInfo.normalized += memory.normalized;\n      memoryInfo.total += memory.total;\n    });\n    memoryInfo.keepOriginal = this.keepOriginal;\n    memoryInfo.maxMemory = this.maxMemory;\n    return memoryInfo;\n  }\n\n  getNormalizedBoundary() {\n    let boundary = {\n      x: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n      y: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n    };\n    for (let spectrum of this.spectra) {\n      if (spectrum.normalizedBoundary.x.min < boundary.x.min) {\n        boundary.x.min = spectrum.normalizedBoundary.x.min;\n      }\n      if (spectrum.normalizedBoundary.x.max > boundary.x.max) {\n        boundary.x.max = spectrum.normalizedBoundary.x.max;\n      }\n      if (spectrum.normalizedBoundary.y.min < boundary.y.min) {\n        boundary.y.min = spectrum.normalizedBoundary.y.min;\n      }\n      if (spectrum.normalizedBoundary.y.max > boundary.y.max) {\n        boundary.y.max = spectrum.normalizedBoundary.y.max;\n      }\n    }\n    return boundary;\n  }\n\n  /**\n   * Create SpectraProcessor from normalized TSV\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.separator='\\t']\n   */\n  static fromNormalizedMatrix(text, options = {}) {\n    let parsed = matrix(text, options);\n    if (!parsed) {\n      throw new Error('Can not parse TSV file');\n    }\n    let spectraProcessor = new SpectraProcessor();\n\n    spectraProcessor.setNormalization({\n      from: parsed.x[0],\n      to: parsed.x[parsed.x.length - 1],\n      numberOfPoints: parsed.x.length,\n    });\n    spectraProcessor.keepOriginal = false;\n\n    for (let i = 0; i < parsed.ids.length; i++) {\n      spectraProcessor.addFromData(\n        { x: [], y: [] },\n        {\n          normalized: {\n            x: parsed.x,\n            y: parsed.matrix[i],\n          },\n          id: parsed.ids[i],\n          meta: parsed.meta[i],\n        },\n      );\n    }\n\n    return spectraProcessor;\n  }\n}\n\nexports.SpectraProcessor = SpectraProcessor;\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","defineProperty","exports","value","createCommonjsModule","fn","module","array","compareNumbers","a","b","sum","values","i","length","max","l","min","minMax","arithmeticMean","mean","geometricMean","mul","Math","pow","logMean","lnsum","log","grandMean","means","samples","n","truncatedMean","percent","alreadySorted","undefined","concat","sort","k","floor","harmonicMean","RangeError","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","theVariance","x","standardDeviation","sqrt","standardError","robustMeanAndStdev","y","stdev","averageDeviations","Array","abs","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","index","indexOf","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","g","kurtosis","s4","m4","v","c","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","result","standardize","standardDev","cumulativeSum","array_1","array_2","array_3","array_4","array_5","array_6","array_7","array_8","array_9","array_10","array_11","array_12","array_13","array_14","array_15","array_16","array_17","array_18","array_19","array_20","array_21","array_22","array_23","array_24","array_25","array_26","array_27","array_28","array_29","array_30","array_31","getZones","from","to","exclusions","filter","exclusion","JSON","parse","stringify","forEach","zones","currentFrom","push","filterX","points","options","currentZoneIndex","newX","newY","position","getData","spectrum","data","src","_typeof","obj","Symbol","iterator","constructor","sequentialFill","input","arguments","TypeError","_options","_options$from","_options$to","_options$size","size","step","Error","isArray","_i","integral","x0","x1","slope","intercept","equallySpacedSmooth","numberOfPoints","xLength","halfStep","output","initialOriginalStep","lastOriginalStep","previousX","Number","MIN_VALUE","previousY","nextX","nextY","currentValue","sumAtMin","sumAtMax","j","getSlope","y0","y1","main","add","equallySpacedSlot","lastStep","start","MAX_VALUE","frontOutsideSpectra","backOutsideSpectra","currentPoints","getZones$1","toRemove","reduce","previous","total","unitsPerPoint","totalPoints","currentNbPoints","round","equallySpaced","arrayXY","reverse","slice","variant","isNaN","xResult","yResult","zone","zoneResult","processZone","sumValue","norm","_options$algorithm","algorithm","toLowerCase","absoluteSumValue","absoluteSum","map","element","minValue","rescale","currentMin","currentMax","_options$min","autoMinMax","_options$max","factor","getNormalized","filters","name","meanFct","std","stdFct","process","kind","check","isAnyArray$1","findClosestIndex","target","low","high","middle","getFromToIndex","fromIndex","toIndex","integration","integral$1","maxY","maxYPoint","current","minYPoint","nbPoints","minY","slot","currentX","first","sortX","minClosestYPoint","targetIndex","previousIndex","MIN_SAFE_INTEGER","currentIndex","maxClosestYPoint","getTargetIndex","realMinYPoint","alpha","log10","beta","gamma","p","realMaxYPoint","maximaY","maxima","startEqualIndex","minimaY","peakInfo","currentDiff","multiplier","newDiff","after","before","inflectionBefore","inflectionAfter","extrema","inflectionMiddle","width","XY","array1","array2","isConstant","constant","array3","boxPlot","info","Q1","Q2","Q3","q1max","q3min","middleOver","divide","multiply","rotate","shift","subtract","correlation","A","B","sumA","sumA2","sumB","sumB2","sumAB","X","updateRangesInfo","ranges","range","label","fromToIndex","normalized","maxPoint","Spectrum","id","meta","normalization","normalizedBoundary","updateNormalizedBoundary","updateNormalization","updateMemory","minX","maxX","original","memory","removeOriginal","getXY","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","defaultOptions","keepRecordsRegExp","xy","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","convert","jcamp","assign","wantXY","Date","now","ntuples","ldr","dataLabel","dataValue","ldrs","endLine","infos","logs","spectra","action","time","split","replace","substring","trim","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","firstX","firstY","last","lastX","lastY","vardim","xFactor","yFactor","units","xUnit","yUnit","datatable","deltaX","prepareSpectrum","match","fastParseXYData","parsePeakTable","parseXYA","title","dataType","twoD","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","isMSField","convertMSFieldToLabel","sampleDescription","keys","newNtuples","key","add2D","newData","complexChromatogram","simpleChromatogram","times","series","ms","dimension","existingGCMSFields","intensity","getMedian","convertTo3DZ","minZ","maxZ","ySize","xSize","xVector","noise","zData","contourLines","generateContourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","xN","dx","yN","dy","iter","contourLevels","lineZValue","level","contourLevel","side","exp","lines","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","isXYdata","currentData","currentY","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeSymbolRegExp","isXYAdata","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","JcampConverter","useWorker","postToWorker","stamps","worker","createWorker","Promise","resolve","stamp","random","postMessage","workerURL","URL","createObjectURL","Blob","type","Worker","revokeObjectURL","addEventListener","event","createTree","flatten","flat","stack","ntupleLevel","spaces","includes","line","labelLine","startsWith","join","children","finished","pop","entry","src$1","src_1","getJcampKind","datatype","IR_ABSORBANCE","IR_TRANSMITTANCE","importation","converter","transmittance","display","xLabel","xInverted","yLabel","parsed","uniqueX","counter","parseXY","text","uniqueX$1","xColumn","yColumn","keepInfo","maxNumberColumns","MAX_SAFE_INTEGER","minNumberColumns","fields","parserOptions","matrix","fs","ids","headers","labels","header","parts","oneMeta","getNormalizationAnnotations","boundary","annotations","ignore","annotation","strokeWidth","fillColor","getBoxPlotData","nbRow","nbColumn","aColumn","Float64Array","column","row","getBoxPlotAnnotations","q13FillColor","q13FillOpacity","q2StrokeColor","q2StrokeWidth","minMaxFillColor","minMaxFillOpacity","q13","layer","properties","fillOpacity","strokeColor","addChartDataStyle","styles","unselected","lineColor","color","lineWidth","lineStyle","selected","getChart","chart","getNormalizedData","currentIDs","getTrackAnnotation","toPrecision","getNormalizedChart","getScaledChart","spectraProcessor","scaled","getScaledData","getAutocorrelation","checkRowIndex","outer","rows","checkColumnIndex","columns","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","checkRowIndices","checkColumnIndices","rowOut","some","r","columnOut","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","sumByRow","get","sumByColumn","sumAll","productByRow","productByColumn","productAll","varianceByRow","cols","sum1","sum2","varianceByColumn","varianceAll","centerByRow","set","centerByColumn","centerAll","getScaleByRow","scale","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","inspectMatrix","indent","repeat","indentData","inspectData","maxRows","maxColumns","maxNumSize","maxI","maxJ","formatNumber","num","numStr","String","padEnd","precise","exponential","toExponential","eIndex","e","installMathOperations","AbstractMatrix","Matrix","addS","addM","checkMatrix","newMatrix","sub","subS","subM","subtractS","subtractM","mulS","mulM","multiplyS","multiplyM","div","divS","divM","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","expm1","fround","log1p","log2","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","from1DArray","newRows","newColumns","rowVector","columnVector","zeros","ones","fill","rand","randInt","isInteger","interval","eye","diag","matrix1","matrix2","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","h","iMax","swapRows","tmp","reducedEchelonForm","m","maxRow","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","temp","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","dot","mmul","other","Bcolj","s","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","c1","c2","console","warn","embed","mat","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","flipColumns","kroneckerProduct","q","transpose","sortRows","compareFunction","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","for","randomInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","getMeanData","getNormalizedText","rs","allKeysObject","metum","allKeys","getFromToIndex$1","xs","min$1","targetSpectrum","targetValue","max$1","maybeToPrecision","digits","checkArraySize","BaseRegression","new","predict","_predict","train","toLaTeX","score","y2","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","SimpleLinearRegression","coefficients","regress","computeX","precision","absIntercept","operator","load","json","slr","numerator","regression","range$1","targetID","relative","method","getSpectrum","getSpectra","SpectraProcessor","maxMemory","keepOriginal","boundaries","getNormalizedBoundary","setNormalization","getNormalization","getMinMaxX","addFromText","text$1","force","contains","addFromData","addFromJcamp","jcamp$1","getSpectrumIndex","memoryInfo","getMemoryInfo","removeOriginals","removeSpectrum","removeSpectraNotIn","fromNormalizedMatrix"],"mappings":"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"}