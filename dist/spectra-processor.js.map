{"version":3,"file":"spectra-processor.js","sources":["../node_modules/chroma-js/chroma.js","../src/jsgraph/getAutocorrelationChart.js","../node_modules/is-any-array/src/index.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../node_modules/ml-spectra-processing/src/x/xMultiply.js","../node_modules/ml-spectra-processing/src/x/xBoxPlot.js","../node_modules/ml-spectra-processing/src/x/xCorrelation.js","../node_modules/ml-spectra-processing/src/x/xFindClosestIndex.js","../node_modules/ml-spectra-processing/src/x/xGetFromToIndex.js","../node_modules/object-keys/isArguments.js","../node_modules/object-keys/implementation.js","../node_modules/object-keys/index.js","../node_modules/utils-copy-error/lib/copy.js","../node_modules/utils-copy/lib/typedarrays.js","../node_modules/d3-array/build/d3-array.js","../node_modules/ml-spectra-processing/src/x/xSubtract.js","../node_modules/ml-spectra-processing/node_modules/is-any-array/src/index.js","../node_modules/ml-spectra-processing/src/xy/xyCheck.js","../node_modules/ml-spectra-processing/src/xy/xyIntegration.js","../node_modules/ml-spectra-processing/src/xy/xyMaxYPoint.js","../node_modules/ml-spectra-processing/src/xy/xyMinYPoint.js","../src/spectra/getBoxPlotData.js","../src/jsgraph/getBoxPlotAnnotations.js","../src/jsgraph/addChartDataStyle.js","../src/jsgraph/getChart.js","../src/jsgraph/getNormalizationAnnotations.js","../node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/ml-array-xy-filter-x/src/index.js","../src/jsgraph/getNormalizedChart.js","../src/jsgraph/getScaledChart.js","../src/spectra/getNormalizedData.js","../src/jsgraph/getTrackAnnotation.js","../src/metadata/getCategoriesStats.js","../src/metadata/getClasses.js","../src/metadata/getMetadata.js","../node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/jcampconverter/src/2d/add2D.js","../node_modules/jcampconverter/src/profiling.js","../node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/jcampconverter/src/postProcessing.js","../node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/jcampconverter/src/convert.js","../src/Kinds.js","../src/parser/jcamp.js","../src/parser/matrix.js","../node_modules/ml-arrayxy-uniquex/src/index.js","../node_modules/xy-parser/src/index.js","../src/parser/text.js","../src/spectra/getAutocorrelation.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/matrix.js","../src/spectra/getMeanData.js","../src/spectra/getNormalizedText.js","../src/spectra/scaled/getFromToIndex.js","../src/spectra/scaled/max.js","../src/spectra/scaled/min.js","../node_modules/ml-regression-base/src/maybeToPrecision.js","../node_modules/ml-regression-base/src/checkArrayLength.js","../node_modules/ml-regression-base/src/index.js","../node_modules/ml-regression-simple-linear/src/index.js","../src/spectra/scaled/minMax.js","../src/spectra/scaled/range.js","../src/spectra/getScaledData.js","../node_modules/ml-stat/array.js","../src/spectrum/getData.js","../node_modules/ml-array-normed/node_modules/is-any-array/src/index.js","../node_modules/ml-array-sum/lib-es6/index.js","../node_modules/ml-array-normed/lib-es6/index.js","../node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/ml-zones/src/normalize.js","../node_modules/ml-zones/src/invert.js","../node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/ml-array-xy-equally-spaced/src/index.js","../src/spectrum/getNormalized.js","../src/spectrum/updateRangesInfo.js","../src/spectrum/Spectrum.js","../src/SpectraProcessor.js","../src/jsgraph/getFilterAnnotations.js"],"sourcesContent":["/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.chroma = factory());\n}(this, (function () { 'use strict';\n\n    var limit = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var clip_rgb = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n        var name = list[i];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var unpack = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var last = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb,\n    \tlimit: limit,\n    \ttype: type,\n    \tunpack: unpack,\n    \tlast: last,\n    \tPI: PI,\n    \tTWOPI: PI*2,\n    \tPITHIRD: PI/3,\n    \tDEG2RAD: PI / 180,\n    \tRAD2DEG: 180 / PI\n    };\n\n    var input = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$1 = utils.last;\n    var clip_rgb$1 = utils.clip_rgb;\n    var type$1 = utils.type;\n\n\n    var Color = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$1(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$1(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!input.sorted) {\n                input.autodetect = input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (input.format[mode]) {\n            var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$1(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color.prototype.toString = function toString () {\n        if (type$1(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color;\n\n    var chroma = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma.Color, [ null ].concat( args) ));\n    };\n\n    chroma.Color = Color_1;\n    chroma.version = '2.1.0';\n\n    var chroma_1 = chroma;\n\n    var unpack$1 = utils.unpack;\n    var max = Math.max;\n\n    var rgb2cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$1(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max(r,max(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk;\n\n    var unpack$2 = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$2(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var unpack$3 = utils.unpack;\n    var type$2 = utils.type;\n\n\n\n    Color_1.prototype.cmyk = function() {\n        return rgb2cmyk_1(this._rgb);\n    };\n\n    chroma_1.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input.format.cmyk = cmyk2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'cmyk');\n            if (type$2(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$4 = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$4(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css;\n\n    var unpack$5 = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$5(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl;\n\n    var unpack$6 = utils.unpack;\n    var last$3 = utils.last;\n\n\n    var round = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$6(args, 'rgba');\n        var mode = last$3(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css_1(rgb2hsl_1(rgba), mode);\n        }\n        rgba[0] = round(rgba[0]);\n        rgba[1] = round(rgba[1]);\n        rgba[2] = round(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css;\n\n    var unpack$7 = utils.unpack;\n    var round$1 = Math.round;\n\n    var hsl2rgb = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$7(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$1(c[0]*255),round$1(c[1]*255),round$1(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$2 = Math.round;\n\n    var css2rgb = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input.format.named) {\n            try {\n                return input.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb_1(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb_1(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb;\n\n    var type$3 = utils.type;\n\n\n\n\n    Color_1.prototype.css = function(mode) {\n        return rgb2css_1(this._rgb, mode);\n    };\n\n    chroma_1.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['css']) ));\n    };\n\n    input.format.css = css2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    input.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$8(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma_1.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color_1.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$9 = utils.unpack;\n\n    var rgb2hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$9(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg;\n\n    var unpack$a = utils.unpack;\n    var floor = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$a(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$b = utils.unpack;\n    var type$4 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hcg = function() {\n        return rgb2hcg_1(this._rgb);\n    };\n\n    chroma_1.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input.format.hcg = hcg2rgb_1;\n\n    input.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$b(args, 'hcg');\n            if (type$4(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$c = utils.unpack;\n    var last$4 = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$c(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last$4(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb;\n\n    var type$5 = utils.type;\n\n\n\n\n    Color_1.prototype.hex = function(mode) {\n        return rgb2hex_1(this._rgb, mode);\n    };\n\n    chroma_1.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hex']) ));\n    };\n\n    input.format.hex = hex2rgb_1;\n    input.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$5(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$d = utils.unpack;\n    var TWOPI = utils.TWOPI;\n    var min = Math.min;\n    var sqrt = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI - h;\n            }\n            h /= TWOPI;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi;\n\n    var unpack$e = utils.unpack;\n    var limit$1 = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$e(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit$1(i*r*3);\n        g = limit$1(i*g*3);\n        b = limit$1(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$f = utils.unpack;\n    var type$6 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsi = function() {\n        return rgb2hsi_1(this._rgb);\n    };\n\n    chroma_1.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input.format.hsi = hsi2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'hsi');\n            if (type$6(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$g = utils.unpack;\n    var type$7 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsl = function() {\n        return rgb2hsl_1(this._rgb);\n    };\n\n    chroma_1.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input.format.hsl = hsl2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$g(args, 'hsl');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$h = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$h(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv = rgb2hsl$1;\n\n    var unpack$i = utils.unpack;\n    var floor$1 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$i(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$1(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$j = utils.unpack;\n    var type$8 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma_1.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input.format.hsv = hsv2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$j(args, 'hsv');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var unpack$k = utils.unpack;\n    var pow = Math.pow;\n\n    var rgb2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$k(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > labConstants.t3) { return pow(t, 1 / 3); }\n        return t / labConstants.t2 + labConstants.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab;\n\n    var unpack$l = utils.unpack;\n    var pow$1 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$l(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = labConstants.Yn * lab_xyz(y);\n        x = labConstants.Xn * lab_xyz(x);\n        z = labConstants.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$9 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lab = function() {\n        return rgb2lab_1(this._rgb);\n    };\n\n    chroma_1.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lab']) ));\n    };\n\n    input.format.lab = lab2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'lab');\n            if (type$9(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$n = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$1 = Math.sqrt;\n    var atan2 = Math.atan2;\n    var round$4 = Math.round;\n\n    var lab2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$n(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$1(a * a + b * b);\n        var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n        if (round$4(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch;\n\n    var unpack$o = utils.unpack;\n\n\n\n    var rgb2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab_1(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch_1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch;\n\n    var unpack$p = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin = Math.sin;\n    var cos$1 = Math.cos;\n\n    var lch2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$p(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$1(h) * c, sin(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab;\n\n    var unpack$q = utils.unpack;\n\n\n\n    var lch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$q(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab_1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb_1 (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb;\n\n    var unpack$r = utils.unpack;\n\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$r(args, 'hcl').reverse();\n        return lch2rgb_1.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$s = utils.unpack;\n    var type$a = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lch = function() { return rgb2lch_1(this._rgb); };\n    Color_1.prototype.hcl = function() { return rgb2lch_1(this._rgb).reverse(); };\n\n    chroma_1.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lch']) ));\n    };\n    chroma_1.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input.format.lch = lch2rgb_1;\n    input.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$s(args, m);\n            if (type$a(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11;\n\n    var type$b = utils.type;\n\n\n\n\n\n    Color_1.prototype.name = function() {\n        var hex = rgb2hex_1(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11_1[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11_1[name]) { return hex2rgb_1(w3cx11_1[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$t = utils.unpack;\n\n    var rgb2num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$t(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num;\n\n    var type$c = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var type$d = utils.type;\n\n\n\n    Color_1.prototype.num = function() {\n        return rgb2num_1(this._rgb);\n    };\n\n    chroma_1.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['num']) ));\n    };\n\n    input.format.num = num2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var unpack$u = utils.unpack;\n    var type$e = utils.type;\n    var round$5 = Math.round;\n\n    Color_1.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$5);\n    };\n\n    Color_1.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$5(v)) : v;\n        });\n    };\n\n    chroma_1.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$u(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$u(args, 'rgba');\n            if (type$e(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log = Math.log;\n\n    var temperature2rgb = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n\n    var unpack$v = utils.unpack;\n    var round$6 = Math.round;\n\n    var rgb2temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$v(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb_1(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round$6(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature;\n\n    Color_1.prototype.temp =\n    Color_1.prototype.kelvin =\n    Color_1.prototype.temperature = function() {\n        return rgb2temperature_1(this._rgb);\n    };\n\n    chroma_1.temp =\n    chroma_1.kelvin =\n    chroma_1.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['temp']) ));\n    };\n\n    input.format.temp =\n    input.format.kelvin =\n    input.format.temperature = temperature2rgb_1;\n\n    var type$f = utils.type;\n\n    Color_1.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$f(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    Color_1.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    Color_1.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= labConstants.Kn * amount;\n    \treturn new Color_1(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color_1.prototype.darker = Color_1.prototype.darken;\n    Color_1.prototype.brighter = Color_1.prototype.brighten;\n\n    Color_1.prototype.get = function(mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var type$g = utils.type;\n    var pow$2 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color_1.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$g(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color_1([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color_1([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color_1([0,0,0]), this) : test(this, new Color_1([255,255,255]))).rgb();\n            return new Color_1(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$2((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator = {};\n\n    var type$h = utils.type;\n\n\n    var mix = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$h(col1) !== 'object') { col1 = new Color_1(col1); }\n        if (type$h(col2) !== 'object') { col2 = new Color_1(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    Color_1.prototype.mix =\n    Color_1.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    Color_1.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color_1([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    Color_1.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += labConstants.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color_1(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var type$i = utils.type;\n\n    Color_1.prototype.set = function(mc, value, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) {\n                if (type$i(value) == 'string') {\n                    switch(value.charAt(0)) {\n                        case '+': src[i] += +value; break;\n                        case '-': src[i] += +value; break;\n                        case '*': src[i] *= +(value.substr(1)); break;\n                        case '/': src[i] /= +(value.substr(1)); break;\n                        default: src[i] = +value;\n                    }\n                } else if (type$i(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color_1(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var rgb$1 = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.rgb = rgb$1;\n\n    var sqrt$2 = Math.sqrt;\n    var pow$3 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color_1(\n            sqrt$2(pow$3(x1,2) * (1-f) + pow$3(x2,2) * f),\n            sqrt$2(pow$3(y1,2) * (1-f) + pow$3(y2,2) * f),\n            sqrt$2(pow$3(z1,2) * (1-f) + pow$3(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.lrgb = lrgb;\n\n    var lab$1 = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator.lab = lab$1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1-(hue0+360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1+360-hue0;\n            } else{\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1-lbv0);\n        return new Color_1([hue, sat, lbv], m);\n    };\n\n    var lch$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator.lch = lch$1;\n    interpolator.hcl = lch$1;\n\n    var num$1 = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color_1(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator.num = num$1;\n\n    var hcg$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator.hcg = hcg$1;\n\n    var hsi$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator.hsi = hsi$1;\n\n    var hsl$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator.hsl = hsl$1;\n\n    var hsv$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator.hsv = hsv$1;\n\n    var clip_rgb$2 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$3 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$1 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$1(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$1(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color_1(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$3(xyz[0]);\n        xyz[1] = sqrt$3(xyz[1]);\n        xyz[2] = sqrt$3(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color_1(clip_rgb$2(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n\n    var type$j = utils.type;\n\n    var pow$5 = Math.pow;\n\n    var scale = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma_1('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$j(colors) === 'string' && chroma_1.brewer &&\n                chroma_1.brewer[colors.toLowerCase()]) {\n                colors = chroma_1.brewer[colors.toLowerCase()];\n            }\n            if (type$j(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma_1(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$5(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$j(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma_1.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$j(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma_1(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$j(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma_1.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma_1.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors, _pos);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$j(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma_1[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma_1(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n\n\n\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 5) {\n            var I0 = bezier(colors.slice(0, 3));\n            var I1 = bezier(colors.slice(2, 5));\n            I = function(t) {\n                if (t < 0.5) {\n                    return I0(t*2);\n                } else {\n                    return I1((t-0.5)*2);\n                }\n            };\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n\n\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma_1(top).rgb();\n            var c1 = chroma_1(bottom).rgb();\n            return chroma_1.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken$1 = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken$1));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$k = utils.type;\n    var clip_rgb$3 = utils.clip_rgb;\n    var TWOPI$2 = utils.TWOPI;\n    var pow$6 = Math.pow;\n    var sin$2 = Math.sin;\n    var cos$3 = Math.cos;\n\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$k(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI$2 * (((start+120)/360) + (rotations * fract));\n            var l = pow$6(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$3(a);\n            var sin_a = sin$2(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma_1(clip_rgb$3([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$k(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$k(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma_1.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var digits = '0123456789abcdef';\n\n    var floor$2 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$2(random() * 16));\n        }\n        return new Color_1(code, 'hex');\n    };\n\n    var log$1 = Math.log;\n    var pow$7 = Math.pow;\n    var floor$3 = Math.floor;\n    var abs = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log$1(min);\n            var max_log = Math.LOG10E * log$1(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$7(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor$3(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var sqrt$4 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var abs$1 = Math.abs;\n    var cos$4 = Math.cos;\n    var PI$2 = Math.PI;\n\n    var deltaE = function(a, b, L, C) {\n        if ( L === void 0 ) L=1;\n        if ( C === void 0 ) C=1;\n\n        // Delta E (CMC)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var c1 = sqrt$4((a1 * a1) + (b1 * b1));\n        var c2 = sqrt$4((a2 * a2) + (b2 * b2));\n        var sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + (0.01765 * L1));\n        var sc = ((0.0638 * c1) / (1.0 + (0.0131 * c1))) + 0.638;\n        var h1 = c1 < 0.000001 ? 0.0 : (atan2$2(b1, a1) * 180.0) / PI$2;\n        while (h1 < 0) { h1 += 360; }\n        while (h1 >= 360) { h1 -= 360; }\n        var t = (h1 >= 164.0) && (h1 <= 345.0) ? (0.56 + abs$1(0.2 * cos$4((PI$2 * (h1 + 168.0)) / 180.0))) : (0.36 + abs$1(0.4 * cos$4((PI$2 * (h1 + 35.0)) / 180.0)));\n        var c4 = c1 * c1 * c1 * c1;\n        var f = sqrt$4(c4 / (c4 + 1900.0));\n        var sh = sc * (((f * t) + 1.0) - f);\n        var delL = L1 - L2;\n        var delC = c1 - c2;\n        var delA = a1 - a2;\n        var delB = b1 - b2;\n        var dH2 = ((delA * delA) + (delB * delB)) - (delC * delC);\n        var v1 = delL / (L * sl);\n        var v2 = delC / (C * sc);\n        var v3 = sh;\n        return sqrt$4((v1 * v1) + (v2 * v2) + (dH2 / (v3 * v3)));\n    };\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color_1, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n\n\n\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma_1.hsl(180,1,.9), chroma_1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff'], [0,.25,.75,1]).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n        var key = list$1[i$1];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma_1.average = average;\n    chroma_1.bezier = bezier_1;\n    chroma_1.blend = blend_1;\n    chroma_1.cubehelix = cubehelix;\n    chroma_1.mix = chroma_1.interpolate = mix;\n    chroma_1.random = random_1;\n    chroma_1.scale = scale;\n\n    // other utility methods\n    chroma_1.analyze = analyze_1.analyze;\n    chroma_1.contrast = contrast;\n    chroma_1.deltaE = deltaE;\n    chroma_1.distance = distance;\n    chroma_1.limits = analyze_1.limits;\n    chroma_1.valid = valid;\n\n    // scale\n    chroma_1.scales = scales;\n\n    // colors\n    chroma_1.colors = w3cx11_1;\n    chroma_1.brewer = colorbrewer_1;\n\n    var chroma_js = chroma_1;\n\n    return chroma_js;\n\n})));\n","import chroma from 'chroma-js';\n\n/**\n * Retrieve a chart with autocorrelation color\n * @param {SpectraProcessor} [spectraProcessor]\n * @param {number} [index]\n * @param {object} [options={}]\n * @param {Array} [options.autocorrelation] precalculated autocorrelation {x,y}\n * @param {Array} [options.maxDataPoints=]\n * @param {array} [options.xFilter.from]\n * @param {array} [options.xFilter.to]\n * @param {array} [options.xFilter.exclusions=[]]\n */\nexport function getAutocorrelationChart(spectraProcessor, index, options = {}) {\n  const {\n    autocorrelation = spectraProcessor.getAutocorrelation(index),\n    xFilter,\n  } = options;\n\n  let max = autocorrelation.y.reduce(function (a, b) {\n    return isNaN(b) ? a : Math.max(a, b);\n  }, Number.MIN_VALUE);\n\n  let min = autocorrelation.y.reduce(function (a, b) {\n    return isNaN(b) ? a : Math.min(a, b);\n  }, Number.MAX_VALUE);\n\n  let colorCallback = chroma\n    .scale(['blue', 'cyan', 'yellow', 'red'])\n    .domain([min, max])\n    .mode('lch');\n\n  let colorScale = autocorrelation.y.map(\n    (y) => `rgb(${colorCallback(y).rgb().join()})`,\n  );\n\n  let mean = spectraProcessor.getMeanData();\n  if (xFilter) {\n    mean = filterX({ x: mean.x, y: mean.y }, xFilter);\n  }\n\n  let colorSpectrum = {\n    type: 'color',\n    x: mean.x,\n    y: mean.y,\n    color: colorScale,\n    styles: {\n      unselected: {\n        lineWidth: 1,\n        lineStyle: 1,\n      },\n      selected: {\n        lineWidth: 3,\n        lineStyle: 1,\n      },\n    },\n  };\n\n  return colorSpectrum;\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","/**\n\n/**\n * This function xMultiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Float64Array}\n */\nexport function xMultiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Float64Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @return {object}\n */\nexport function xBoxPlot(array) {\n  array = array.slice(0).sort((a, b) => a - b);\n  if (array.length < 5) {\n    throw Error(\n      'xBoxPlot: can not calculate info if array contains less than 3 elements',\n    );\n  }\n  let info = {\n    Q1: 0.0,\n    Q2: 0.0,\n    Q3: 0.0,\n    min: array[0],\n    max: array[array.length - 1],\n  };\n  let q1max, q3min;\n  if (array.length % 2 === 1) {\n    // odd\n    let middle = (array.length - 1) / 2;\n    info.Q2 = array[middle];\n    q1max = middle - 1;\n    q3min = middle + 1;\n  } else {\n    // even\n    q3min = array.length / 2;\n    q1max = q3min - 1;\n    info.Q2 = (array[q1max] + array[q3min]) / 2;\n  }\n  if (q1max % 2 === 0) {\n    info.Q1 = array[q1max / 2];\n    info.Q3 = array[(array.length + q3min - 1) / 2];\n  } else {\n    info.Q1 = (array[(q1max + 1) / 2] + array[(q1max - 1) / 2]) / 2;\n    let middleOver = (array.length + q3min) / 2;\n    info.Q3 = (array[middleOver] + array[middleOver - 1]) / 2;\n  }\n  return info;\n}\n","/**\n\n/**\n * Calculates the correlation between 2 vectors\n * https://en.wikipedia.org/wiki/Correlation_and_dependence\n *\n * @param {Array<Number>} [A] - the array that will be rotated\n * @param {Array<Number>} [B]\n * @return {Array}\n */\nexport function xCorrelation(A, B) {\n  let n = A.length;\n  let sumA = 0;\n  let sumA2 = 0;\n  let sumB = 0;\n  let sumB2 = 0;\n  let sumAB = 0;\n  for (let i = 0; i < n; i++) {\n    let a = A[i];\n    let b = B[i];\n    sumA += a;\n    sumA2 += a ** 2;\n    sumB += b;\n    sumB2 += b ** 2;\n    sumAB += a * b;\n  }\n  return (\n    (n * sumAB - sumA * sumB) /\n    (Math.sqrt(n * sumA2 - sumA ** 2) * Math.sqrt(n * sumB2 - sumB ** 2))\n  );\n}\n","/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array<Number>} array\n * @param {number} target\n */\n\nexport function xFindClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n","import { xFindClosestIndex } from './xFindClosestIndex';\n\n/**\n * Returns an object with {fromIndex, toIndex} for a specific from / to\n * @param {array} x\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for xyIntegration in the X scale\n * @param {number} [options.fromIndex=0] - First point for xyIntegration\n * @param {number} [options.to] - Last value for xyIntegration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for xyIntegration\n */\n\nexport function xGetFromToIndex(x, options = {}) {\n  let { fromIndex, toIndex, from, to } = options;\n\n  if (fromIndex === undefined) {\n    if (from !== undefined) {\n      fromIndex = xFindClosestIndex(x, from);\n    } else {\n      fromIndex = 0;\n    }\n  }\n  if (toIndex === undefined) {\n    if (to !== undefined) {\n      toIndex = xFindClosestIndex(x, to);\n    } else {\n      toIndex = x.length - 1;\n    }\n  }\n  if (fromIndex > toIndex) [fromIndex, toIndex] = [toIndex, fromIndex];\n  return { fromIndex, toIndex };\n}\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\n// MODULES //\n\nvar deepCopy = require( 'utils-copy' );\nvar getKeys = require( 'object-keys' ).shim();\n\n\n// COPY ERROR //\n\n/**\n* FUNCTION: copy( error )\n*\tCopies an error.\n*\n* @param {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error - error to copy\n* @returns {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error copy\n*/\nfunction copy( error ) {\n\t/* jshint newcap:false */\n\tvar keys;\n\tvar desc;\n\tvar key;\n\tvar err;\n\tvar i;\n\tif ( !( error instanceof Error ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide an error object. Value: `' + error + '`.' );\n\t}\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = getKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = Object.getOwnPropertyDescriptor( error, key );\n\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\tdesc.value = deepCopy( error[ key ] );\n\t\t}\n\t\tObject.defineProperty( err, key, desc );\n\t}\n\treturn err;\n} // end FUNCTION copy()\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","'use strict';\n\n// MODULES //\n\nvar objectKeys = require( 'object-keys' );\n\n\n// TYPED ARRAY FUNCTIONS //\n\n/**\n* Create functions for copying typed arrays.\n*/\nvar typedArrays = {\n\t'Int8Array': null,\n\t'Uint8Array': null,\n\t'Uint8ClampedArray': null,\n\t'Int16Array': null,\n\t'Uint16Array': null,\n\t'Int32Array': null,\n\t'Uint32Array': null,\n\t'Float32Array': null,\n\t'Float64Array': null\n};\n\n(function createTypedArrayFcns() {\n\t/* jshint evil:true */\n\tvar keys = objectKeys( typedArrays );\n\tvar len = keys.length;\n\tvar key;\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tkey = keys[ i ];\n\t\ttypedArrays[ key ] = new Function( 'arr', 'return new '+key+'( arr );' );\n\t}\n})();\n\n\n// EXPORTS //\n\nmodule.exports = typedArrays;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_array = {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number$1(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number$1(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      // Coerce values to numbers.\n      for (i = 0; i < n; ++i) {\n        values[i] = +value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = +xz[0],\n          x1 = +xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\n      // Coerce thresholds to numbers, ignoring any outside the domain.\n      var m = tz.length;\n      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      if (!arguments.length) return threshold;\n      threshold = typeof _ === \"function\" ? _\n          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n          : constant(+_);\n      return histogram;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number$1;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values.sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var version = \"0.7.1\";\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n}));","/**\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xSubtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isAnyArray from 'is-any-array';\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {DataXY} [data={}]\n */\nexport function xyCheck(data = {}) {\n  if (!isAnyArray(data.x) || !isAnyArray(data.y)) {\n    throw new Error('Points must be an object of x and y arrays');\n  }\n  if (data.x.length !== data.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n","import { xGetFromToIndex } from '../x/xGetFromToIndex';\n\nimport { xyCheck } from './xyCheck';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for xyIntegration in the X scale\n * @param {number} [options.fromIndex=0] - First point for xyIntegration\n * @param {number} [options.to] - Last value for xyIntegration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for xyIntegration\n * @return {number} xyIntegration value on the specified range\n */\n\nexport function xyIntegration(data = {}, options = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n  if (x.length < 2) return 0;\n  const { fromIndex, toIndex } = xGetFromToIndex(x, options);\n  let currentxyIntegration = 0;\n  for (let i = fromIndex; i < toIndex; i++) {\n    currentxyIntegration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n  }\n\n  return currentxyIntegration;\n}\n","import { xGetFromToIndex } from '../x/xGetFromToIndex';\n\nimport { xyCheck } from './xyCheck';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for xyIntegration in the X scale\n * @param {number} [options.fromIndex=0] - First point for xyIntegration\n * @param {number} [options.to] - Last value for xyIntegration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for xyIntegration\n * @return {object}\n */\n\nexport function xyMaxYPoint(data = {}, options = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = xGetFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex], index: fromIndex };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > current.y) current = { x: x[i], y: y[i], index: i };\n  }\n\n  return current;\n}\n","import { xGetFromToIndex } from '../x/xGetFromToIndex';\n\nimport { xyCheck } from './xyCheck';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for xyIntegration in the X scale\n * @param {number} [options.fromIndex=0] - First point for xyIntegration\n * @param {number} [options.to] - Last value for xyIntegration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for xyIntegration\n * @return {object}\n */\n\nexport function xyMinYPoint(data = {}, options = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = xGetFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex], index: fromIndex };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] < current.y) current = { x: x[i], y: y[i], index: i };\n  }\n\n  return current;\n}\n","import { xBoxPlot } from 'ml-spectra-processing';\n\n/**\n * @private\n * @param {*} spectra\n */\n\nexport function getBoxPlotData(spectra) {\n  let matrix = [];\n  let x = spectra[0].normalized.x;\n  for (let spectrum of spectra) {\n    matrix.push(spectrum.normalized.y);\n  }\n\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let result;\n  let aColumn = new Float64Array(nbRow);\n  for (let column = 0; column < nbColumn; column++) {\n    for (let row = 0; row < nbRow; row++) {\n      aColumn[row] = matrix[row][column];\n    }\n    let info = xBoxPlot(aColumn);\n    if (!result) {\n      result = { x };\n      for (let key in info) {\n        result[key] = [];\n      }\n    }\n    for (let key in info) {\n      result[key].push(info[key]);\n    }\n  }\n  return result;\n}\n","import { getBoxPlotData } from '../spectra/getBoxPlotData';\n\nexport function getBoxPlotAnnotations(spectra, options = {}) {\n  const {\n    q13FillColor = '#000',\n    q13FillOpacity = 0.3,\n    q2StrokeColor = '#000',\n    q2StrokeWidth = 3,\n    minMaxFillColor = '#000',\n    minMaxFillOpacity = 0.15,\n  } = options;\n  let annotations = [];\n\n  let data = getBoxPlotData(spectra);\n  if (q13FillOpacity && q13FillColor) {\n    let q13 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q1[i],\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q3[i],\n      });\n    }\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: q13FillColor,\n        fillOpacity: q13FillOpacity,\n        strokeWidth: 0.0000001,\n        position: q13,\n      },\n    });\n  }\n\n  if (q2StrokeColor && q2StrokeWidth) {\n    let q2 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i],\n      });\n    }\n    // Temp code because polyline is not working\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i],\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        strokeWidth: q2StrokeWidth,\n        strokeColor: q2StrokeColor,\n        position: q2,\n      },\n    });\n  }\n\n  if (minMaxFillColor && minMaxFillOpacity) {\n    let minMax = [];\n    for (let i = 0; i < data.x.length; i++) {\n      minMax.push({\n        x: data.x[i],\n        y: data.min[i],\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      minMax.push({\n        x: data.x[i],\n        y: data.max[i],\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: minMaxFillColor,\n        fillOpacity: minMaxFillOpacity,\n        strokeWidth: 0.0000001,\n        strokeColor: '#FFF',\n        position: minMax,\n      },\n    });\n  }\n\n  return annotations;\n}\n","export function addChartDataStyle(data, spectrum) {\n  data.styles = {\n    unselected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 1,\n      lineStyle: 1,\n    },\n    selected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 3,\n      lineStyle: 1,\n    },\n  };\n  data.label = spectrum.meta.id || spectrum.id;\n}\n","import { addChartDataStyle } from './addChartDataStyle';\n/**\n * Retrieve a chart with selected original data\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by default all\n * @param {Array} [options.yFactor=1]\n */\nexport function getChart(spectra, options = {}) {\n  const { ids, yFactor, xFilter = {} } = options;\n  let chart = {\n    data: [],\n  };\n\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.getData({ yFactor, xFilter });\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n","export function getNormalizationAnnotations(filter = {}, boundary) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: Number.MIN_SAFE_INTEGER, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: Number.MAX_SAFE_INTEGER, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","import { addChartDataStyle } from './addChartDataStyle';\nimport filterX from 'ml-array-xy-filter-x';\n\n/**\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}]\n * @param {array} [options.ids]\n * @param {object} [options.xFilter={}]\n * @param {array} [options.xFilter.from]\n * @param {array} [options.xFilter.to]\n * @param {array} [options.xFilter.exclusions=[]]\n */\n\nexport function getNormalizedChart(spectra, options = {}) {\n  const { ids, xFilter } = options;\n  let chart = {\n    data: [],\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.normalized;\n      if (xFilter) {\n        data = filterX({ x: data.x, y: data.y }, xFilter);\n      }\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n","import { addChartDataStyle } from './addChartDataStyle';\n/**\n *\n * @param {SpectraProcessor} spectraProcessor\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {Array} [options.ranges] Array of object containing {from:'', to:'', label:''}\n * @param {Array} [options.calculations] Array of object containing {label:'', formula:''}\n * @param {boolean} [options.relative=false]\n */\nexport function getScaledChart(spectraProcessor, options = {}) {\n  let scaled = spectraProcessor.getScaledData(options);\n\n  let chart = {\n    data: [],\n  };\n  if (!scaled || !scaled.matrix) return chart;\n\n  for (let i = 0; i < scaled.matrix.length; i++) {\n    let data = {\n      x: scaled.x,\n      y: Array.from(scaled.matrix[i]), // need to ensure not a typed array\n    };\n    addChartDataStyle(data, { meta: scaled.meta[i], id: scaled.ids[i] });\n    chart.data.push(data);\n  }\n\n  return chart;\n}\n","/**\n * @private\n * @param {*} spectra\n * @param {object} options\n */\n\nexport function getNormalizedData(spectra, options = {}) {\n  const { ids } = options;\n\n  let matrix = [];\n  let meta = [];\n  let currentIDs = [];\n  let x = [];\n\n  if (Array.isArray(spectra) && spectra.length > 0) {\n    for (let spectrum of spectra) {\n      if (!ids || ids.includes(spectrum.id)) {\n        currentIDs.push(spectrum.id);\n        matrix.push(spectrum.normalized.y);\n        meta.push(spectrum.meta);\n      }\n    }\n    x = spectra[0].normalized.x;\n  }\n\n  return { ids: currentIDs, matrix, meta, x };\n}\n","import { getNormalizedData } from '../spectra/getNormalizedData';\n\nexport function getTrackAnnotation(spectra, index, options = {}) {\n  const { ids, showSpectrumID = true } = options;\n  let annotations = [];\n\n  let normalized = getNormalizedData(spectra, { ids });\n\n  if (normalized.ids.length === 0) return annotations;\n  let line = 0;\n\n  // header containing X coordinate\n  annotations.push({\n    type: 'line',\n    position: [\n      { x: `${70}px`, y: `${15 + 15 * line}px` },\n      { x: `${85}px`, y: `${15 + 15 * line}px` },\n    ],\n    strokeWidth: 0.0000001,\n    label: {\n      size: 16,\n      text: `x: ${normalized.x[index].toPrecision(6)}`,\n      position: { x: `${130}px`, y: `${20 + 15 * line}px` },\n    },\n  });\n  line++;\n\n  for (let i = 0; i < normalized.ids.length; i++) {\n    let id = normalized.ids[i];\n    let meta = normalized.meta[i];\n    let y = normalized.matrix[i][index];\n    annotations.push({\n      type: 'line',\n      position: [\n        { x: `${70}px`, y: `${15 + 15 * line}px` },\n        { x: `${85}px`, y: `${15 + 15 * line}px` },\n      ],\n      strokeColor: meta.color,\n      strokeWidth: 2,\n      label: {\n        text: `${y.toPrecision(4)}${showSpectrumID ? ` - ${id}` : ''}`,\n        position: { x: `${90}px`, y: `${20 + 15 * line}px` },\n      },\n    });\n    line++;\n  }\n\n  return annotations;\n}\n","/**\n * @private\n * @param {Array<object>} [metadata]\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {string} [options.propertyName=\"category\"]\n */\n\nexport function getCategoriesStats(metadata, options = {}) {\n  const { propertyName = 'category' } = options;\n  let categories = {};\n  let classNumber = 0;\n  for (let metadatum of metadata) {\n    let value = metadatum[propertyName];\n    if (!categories[value]) {\n      categories[value] = {\n        classNumber: classNumber++,\n        counter: 0,\n      };\n    }\n    categories[value].counter++;\n  }\n  return categories;\n}\n","import { getCategoriesStats } from './getCategoriesStats';\n\n/**\n * @private\n * @param {Array<object>} [metadata]\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {string} [options.propertyName=\"category\"]\n */\n\nexport function getClasses(metadata, options = {}) {\n  const { propertyName = 'category' } = options;\n  const categoriesStats = getCategoriesStats(metadata, options);\n  const result = new Array(metadata.length);\n  for (let i = 0; i < metadata.length; i++) {\n    result[i] = categoriesStats[metadata[i][propertyName]].classNumber;\n  }\n  return result;\n}\n","/**\n * @private\n * @param {*} spectra\n * @param {object} options\n */\n\nexport function getMetadata(spectra, options = {}) {\n  const { ids } = options;\n\n  let metadata = [];\n\n  if (Array.isArray(spectra) && spectra.length > 0) {\n    for (let spectrum of spectra) {\n      if (!ids || ids.includes(spectrum.id)) {\n        metadata.push(spectrum.meta);\n      }\n    }\n  }\n\n  return metadata;\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  // TODO to be improved using 2 array {x:[], y:[]}\n  let currentData = [];\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.push(currentX);\n                currentData.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","export default function parsePeakTable(spectrum, value, result) {\n  let removeCommentRegExp = /\\$\\$.*/;\n  let peakTableSplitRegExp = /[,\\t ]+/;\n\n  spectrum.isPeaktable = true;\n  let values;\n  let currentData = [];\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = [];\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.push(parseFloat(values[0]));\n    currentData.push(parseFloat(values[1]));\n  }\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.length / 2;\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = new Array(xSize);\n    let xVector = spectra[i].data;\n    for (let j = 0; j < xSize; j++) {\n      let value = xVector[j * 2 + 1];\n      z[i][j] = value;\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data[0];\n  const lastX = spectra[0].data[spectra[0].data.length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: getMedian(z[0].map(Math.abs)),\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && options.wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (entry.spectra && entry.spectra.length > 0) {\n        for (let spectrum of entry.spectra) {\n          if (spectrum.data) {\n            let data = spectrum.data;\n            let newData = {\n              x: new Array(data.length / 2),\n              y: new Array(data.length / 2),\n            };\n            for (let k = 0; k < data.length; k = k + 2) {\n              newData.x[k / 2] = data[k];\n              newData.y[k / 2] = data[k + 1];\n            }\n            spectrum.data = newData;\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n  if (spectrum.observeFrequency) {\n    if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n      spectrum.xUnit = 'PPM';\n      spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n      spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n      spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n      spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n    }\n  }\n  if (spectrum.shiftOffsetVal) {\n    let shift = spectrum.firstX - spectrum.shiftOffsetVal;\n    spectrum.firstX = spectrum.firstX - shift;\n    spectrum.lastX = spectrum.lastX - shift;\n  }\n}\n","import { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparator = /[, \\t]+/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  dynamicTyping: false,\n  xy: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\nexport default function convert(jcamp, options) {\n  options = Object.assign({}, defaultOptions, options);\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        let xIndex = -1;\n        let yIndex = -1;\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        if (infos[0].indexOf('++') > 0) {\n          let firstVariable = infos[0].replace(\n            /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n            '$1',\n          );\n          let secondVariable = infos[0].replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n          xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n          yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n        }\n\n        if (xIndex === -1) xIndex = 0;\n        if (yIndex === -1) yIndex = 0;\n\n        if (currentEntry.ntuples.first) {\n          if (currentEntry.ntuples.first.length > xIndex) {\n            spectrum.firstX = currentEntry.ntuples.first[xIndex];\n          }\n          if (currentEntry.ntuples.first.length > yIndex) {\n            spectrum.firstY = currentEntry.ntuples.first[yIndex];\n          }\n        }\n        if (currentEntry.ntuples.last) {\n          if (currentEntry.ntuples.last.length > xIndex) {\n            spectrum.lastX = currentEntry.ntuples.last[xIndex];\n          }\n          if (currentEntry.ntuples.last.length > yIndex) {\n            spectrum.lastY = currentEntry.ntuples.last[yIndex];\n          }\n        }\n        if (\n          currentEntry.ntuples.vardim &&\n          currentEntry.ntuples.vardim.length > xIndex\n        ) {\n          spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n        }\n        if (currentEntry.ntuples.factor) {\n          if (currentEntry.ntuples.factor.length > xIndex) {\n            spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n          }\n          if (currentEntry.ntuples.factor.length > yIndex) {\n            spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n          }\n        }\n        if (currentEntry.ntuples.units) {\n          if (currentEntry.ntuples.units.length > xIndex) {\n            spectrum.xUnit = currentEntry.ntuples.units[xIndex];\n          }\n          if (currentEntry.ntuples.units.length > yIndex) {\n            spectrum.yUnit = currentEntry.ntuples.units[yIndex];\n          }\n        }\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          if (!spectrum.deltaX) {\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.indexOf('nD') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.indexOf('nD') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnit = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnit = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$SFO2') {\n      if (!currentEntry.indirectFrequency) {\n        currentEntry.indirectFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.twoD) {\n        currentEntry.yType = dataValue.split(ntuplesSeparator)[0];\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n      let pageSymbolIndex = currentEntry.ntuples.symbol.indexOf(\n        spectrum.pageSymbol,\n      );\n      let unit = '';\n      if (\n        currentEntry.ntuples.units &&\n        currentEntry.ntuples.units[pageSymbolIndex]\n      ) {\n        unit = currentEntry.ntuples.units[pageSymbolIndex];\n      }\n      if (currentEntry.indirectFrequency && unit !== 'PPM') {\n        spectrum.pageValue /= currentEntry.indirectFrequency;\n      }\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n      let value = dataValue.trim();\n      if (options.dynamicTyping && !isNaN(value)) {\n        value = Number(value);\n      }\n      if (currentEntry.info[label]) {\n        if (!Array.isArray(currentEntry.info[label])) {\n          currentEntry.info[label] = [currentEntry.info[label]];\n        }\n        currentEntry.info[label].push(value);\n      } else {\n        currentEntry.info[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","export function getJcampKind(data) {\n  let datatype = data.dataType.toLowerCase();\n  let yUnit = data.spectra[0].yUnit.toLowerCase();\n\n  if (datatype.match(/infrared/)) {\n    if (yUnit.match(/absorbance/)) {\n      return IR_ABSORBANCE;\n    } else {\n      return IR_TRANSMITTANCE;\n    }\n  }\n  return undefined;\n}\n\nexport const IR_TRANSMITTANCE = {\n  normalization: {},\n  importation: {\n    converter: (transmittance) => -Math.log10(transmittance),\n  },\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance',\n  },\n};\n\nexport const IR_ABSORBANCE = {\n  normalization: {},\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance',\n  },\n};\n\nexport const nmr1H = {\n  display: {\n    xLabel: 'δ [ppm]',\n    xInverted: true,\n    yLabel: 'Intensity',\n  },\n};\n\nexport const nmr13C = {\n  display: {\n    xLabel: 'δ [ppm]',\n    xInverted: true,\n    yLabel: 'Intensity',\n  },\n};\n","import { convert } from 'jcampconverter';\n\nimport { getJcampKind } from '../Kinds';\n/**\n * Create a spectrum from a jcamp\n * @param {string} jcampText - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nexport default function jcamp(jcampText) {\n  const parsed = convert(jcampText, { xy: true, keepRecordsRegExp: /TITLE/ })\n    .flatten[0];\n  const kind = getJcampKind(parsed);\n  const data = parsed.spectra[0].data;\n  const meta = parsed.info;\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data, kind, meta };\n}\n","/**\n * Creates a g\n * @param {string} text - String containing the text data\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] Field separator\n * @return {object} - {matrix, data, x, ids}\n */\nexport default function matrix(text, options = {}) {\n  const lines = text.split(/[\\r\\n]+/).filter((value) => value);\n  const { fs = '\\t' } = options;\n  let currentMatrix = [];\n  let ids = [];\n  let meta = [];\n  let x = [];\n\n  let headers = lines[0].split(fs);\n  let labels = [];\n\n  for (let i = 0; i < headers.length; i++) {\n    let header = headers[i];\n    if (isNaN(header)) {\n      labels[i] = header;\n    } else {\n      x = headers.slice(i).map((value) => Number(value));\n      break;\n    }\n  }\n\n  for (let i = 1; i < lines.length; i++) {\n    let line = lines[i];\n    let parts = line.split('\\t');\n    ids.push(parts[0]);\n    let oneMeta = {};\n    meta.push(oneMeta);\n    for (let j = 1; j < parts.length; j++) {\n      if (j < labels.length) {\n        oneMeta[labels[j]] = parts[j];\n      } else {\n        currentMatrix.push(\n          parts.slice(labels.length).map((value) => Number(value)),\n        );\n        break;\n      }\n    }\n  }\n  return { x, meta, matrix: currentMatrix, ids };\n}\n","\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] : Object of points contains property x (an array) and y (an array)\n * @return points\n */\n\nexport default function uniqueX(points = {}) {\n  const { x, y } = points;\n  if (x.length < 2) return;\n  if (x.length !== y.length) {\n    throw new Error('The X and Y arrays mush have the same length');\n  }\n\n  let current = x[0];\n  let counter = 0;\n\n  for (let i = 1; i < x.length; i++) {\n    if (current !== x[i]) {\n      counter++;\n      current = x[i];\n      x[counter] = x[i];\n      if (i !== counter) {\n        y[counter] = 0;\n      }\n    }\n    if (i !== counter) {\n      y[counter] += y[i];\n    }\n  }\n\n  x.length = counter + 1;\n  y.length = counter + 1;\n}\n","import uniqueXFunction from 'ml-arrayxy-uniquex';\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options={}]\n * @param {boolean} [options.rescale = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.min(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {object{x:<Array<number>>,y:<Array<number>>}\n */\nexport function parseXY(text, options = {}) {\n  let {\n    rescale = false,\n    uniqueX = false,\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Number.MAX_SAFE_INTEGER,\n    minNumberColumns = 2,\n  } = options;\n\n  maxNumberColumns = Math.max(maxNumberColumns, xColumn + 1, yColumn + 1);\n  minNumberColumns = Math.max(xColumn + 1, yColumn + 1, minNumberColumns);\n\n  let lines = text.split(/[\\r\\n]+/);\n\n  let maxY = Number.MIN_VALUE;\n  let result = { x: [], y: [] };\n  let info = [];\n  for (let l = 0; l < lines.length; l++) {\n    let line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      let fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n        fields.length >= minNumberColumns &&\n        fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result.x.push(x);\n        result.y.push(y);\n      }\n    } else if (line) {\n      info.push({ position: result.x.length, value: line });\n    }\n  }\n\n  if (uniqueX) {\n    uniqueXFunction(result);\n  }\n\n  if (rescale) {\n    for (let i = 0; i < result.y.length; i++) {\n      result.y[i] /= maxY;\n    }\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result,\n  };\n}\n","import { parseXY } from 'xy-parser';\n\n/**\n * Create a spectrum from a text file\n * @param {string} value - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nexport default function text(value, options = {}) {\n  const { kind, parserOptions = {} } = options;\n\n  const data = parseXY(value, parserOptions);\n\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data };\n}\n","import { xCorrelation } from 'ml-spectra-processing';\n\n/**\n * @private\n */\n\nexport function getAutocorrelation(normalized, index) {\n  let matrix = normalized.matrix;\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let array1 = new Float64Array(nbRow);\n  let array2 = new Float64Array(nbRow);\n  let result = new Array(nbColumn);\n  for (let j = 0; j < nbRow; j++) {\n    array1[j] = matrix[j][index];\n  }\n  for (let i = 0; i < nbColumn; i++) {\n    for (let j = 0; j < nbRow; j++) {\n      array2[j] = matrix[j][i];\n    }\n    result[i] = xCorrelation(array1, array2);\n  }\n  return {\n    x: normalized.x,\n    y: result,\n  };\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\n/**\n *\n * @param {Array} input\n * @param {object} [options={}]\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n */\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { Matrix } from 'ml-matrix';\n\n/**\n * @private\n */\n\nexport function getMeanData(normalized) {\n  let matrix = new Matrix(normalized.matrix);\n  return {\n    x: normalized.x,\n    y: matrix.mean('column'),\n  };\n}\n","import { getNormalizedData } from './getNormalizedData.js';\n\n/**\n * @private\n * @param {*} spectra\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] field separator\n * @param {string} [options.rs='\\n'] record (line) separator\n */\n\nexport function getNormalizedText(spectra, options = {}) {\n  let { fs = '\\t', rs = '\\n' } = options;\n  let { matrix, meta, ids, x } = getNormalizedData(spectra);\n  let allKeysObject = {};\n  for (let metum of meta) {\n    for (let key of Object.keys(metum)) {\n      let type = typeof metum[key];\n      if (type === 'number' || type === 'string' || type === 'boolean') {\n        allKeysObject[key] = true;\n      }\n    }\n  }\n  let allKeys = Object.keys(allKeysObject);\n\n  let lines = [];\n  let line = [];\n  line.push('id', ...allKeys, ...x);\n  lines.push(line.join(fs));\n\n  for (let i = 0; i < ids.length; i++) {\n    line = [];\n    line.push(ids[i]);\n    for (let key of allKeys) {\n      line.push(meta[i][key]);\n    }\n    line.push(...matrix[i]);\n    lines.push(line.join(fs));\n  }\n\n  return lines.join(rs);\n}\n","import { xFindClosestIndex } from 'ml-spectra-processing';\n\nexport function getFromToIndex(xs, range) {\n  let { from, to } = range;\n  if (from === undefined) {\n    from = xs[0];\n  }\n  if (to === undefined) {\n    to = xs[xs.length - 1];\n  }\n\n  return {\n    fromIndex: xFindClosestIndex(xs, from),\n    toIndex: xFindClosestIndex(xs, to),\n  };\n}\n","import { xyMaxYPoint, xMultiply } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function max(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = xyMaxYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => xyMaxYPoint(spectrum.normalized, fromToIndex).y,\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(xMultiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n","import { xyMinYPoint, xMultiply } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function min(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = xyMinYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => xyMinYPoint(spectrum.normalized, fromToIndex).y,\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(xMultiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","export default function checkArraySize(x, y) {\n  if (!Array.isArray(x) || !Array.isArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","export { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\n\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (Array.isArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n)\n    };\n  }\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\n\nexport default class SimpleLinearRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = [y.intercept, y.slope];\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'simpleLinearRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(x) {\n    return this.slope * x + this.intercept;\n  }\n\n  computeX(y) {\n    return (y - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    let result = 'f(x) = ';\n    if (this.slope !== 0) {\n      const xFactor = maybeToPrecision(this.slope, precision);\n      result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\n      if (this.intercept !== 0) {\n        const absIntercept = Math.abs(this.intercept);\n        const operator = absIntercept === this.intercept ? '+' : '-';\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'simpleLinearRegression') {\n      throw new TypeError('not a SLR model');\n    }\n    return new SimpleLinearRegression(true, json);\n  }\n}\n\nfunction regress(slr, x, y) {\n  const n = x.length;\n  let xSum = 0;\n  let ySum = 0;\n\n  let xSquared = 0;\n  let xY = 0;\n\n  for (let i = 0; i < n; i++) {\n    xSum += x[i];\n    ySum += y[i];\n    xSquared += x[i] * x[i];\n    xY += x[i] * y[i];\n  }\n\n  const numerator = n * xY - xSum * ySum;\n  slr.slope = numerator / (n * xSquared - xSum * xSum);\n  slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n  slr.coefficients = [slr.intercept, slr.slope];\n}\n","import SimpleLinearRegression from 'ml-regression-simple-linear';\nimport { xyMinYPoint, xyMaxYPoint } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function minMax(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = {\n    min: xyMinYPoint(targetSpectrum.normalized, fromToIndex).y,\n    max: xyMaxYPoint(targetSpectrum.normalized, fromToIndex).y,\n  };\n\n  let values = spectra.map((spectrum) => {\n    return {\n      min: xyMinYPoint(spectrum.normalized, fromToIndex).y,\n      max: xyMaxYPoint(spectrum.normalized, fromToIndex).y,\n    };\n  });\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    const regression = new SimpleLinearRegression(\n      [targetValue.min, targetValue.max],\n      [values[i].min, values[i].max],\n    );\n\n    let length = spectrum.normalized.y.length;\n    let scaled = new Array(length);\n    for (let j = 0; j < length; j++) {\n      scaled[j] = regression.computeX(spectrum.normalized.y[j]);\n    }\n    matrix.push(scaled);\n  }\n\n  return matrix;\n}\n","import { xyIntegration, xMultiply } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function range(spectra, targetSpectrum, currentrange = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, currentrange);\n\n  let targetValue = xyIntegration(targetSpectrum.normalized, fromToIndex);\n\n  let values = spectra.map((spectrum) =>\n    xyIntegration(spectrum.normalized, fromToIndex),\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(xMultiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n","import { xSubtract, xyMaxYPoint, xyIntegration } from 'ml-spectra-processing';\n\nimport { getNormalizedData } from './getNormalizedData';\nimport { getFromToIndex } from './scaled/getFromToIndex';\nimport { max } from './scaled/max';\nimport { min } from './scaled/min';\nimport { minMax } from './scaled/minMax';\nimport { range as rangeFct } from './scaled/range';\n/**\n * @private\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n * @param {Array} [options.ranges] Array of object containing {from:'', to:'', label:''}\n * @param {Array} [options.calculations] Array of object containing {label:'', formula:''}\n * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[], ranges:[object] }\n */\n\nexport function getScaledData(spectraProcessor, options = {}) {\n  if (!spectraProcessor.spectra || !spectraProcessor.spectra[0]) return {};\n  const {\n    range,\n    targetID,\n    relative,\n    method,\n    ids,\n    ranges,\n    calculations,\n  } = options;\n  let targetSpectrum =\n    spectraProcessor.getSpectrum(targetID) || spectraProcessor.spectra[0];\n  let spectra = spectraProcessor.getSpectra(ids);\n  let result;\n\n  if (method === '' || method === undefined) {\n    result = getNormalizedData(spectra);\n  } else {\n    let matrix;\n    switch (method.toLowerCase()) {\n      case 'min':\n        matrix = min(spectra, targetSpectrum, range);\n        break;\n      case 'max':\n        matrix = max(spectra, targetSpectrum, range);\n        break;\n      case 'minmax':\n        matrix = minMax(spectra, targetSpectrum, range);\n        break;\n      case 'range':\n        matrix = rangeFct(spectra, targetSpectrum, range);\n        break;\n      default:\n        throw new Error(`getScaledData: unknown method: ${method}`);\n    }\n    let meta = [];\n    let currentIDs = [];\n    for (let spectrum of spectra) {\n      currentIDs.push(spectrum.id);\n      meta.push(spectrum.meta);\n    }\n    let x = spectra[0].normalized.x;\n    result = { ids: currentIDs, matrix, meta, x };\n  }\n\n  if (relative) {\n    for (let i = 0; i < result.matrix.length; i++) {\n      result.matrix[i] = xSubtract(\n        result.matrix[i],\n        targetSpectrum.normalized.y,\n      );\n    }\n  }\n\n  if (ranges) {\n    result.ranges = [];\n    for (let i = 0; i < result.matrix.length; i++) {\n      let rangesCopy = JSON.parse(JSON.stringify(ranges));\n      let yNormalized = result.matrix[i];\n      let resultRanges = {};\n      result.ranges.push(resultRanges);\n      for (let currentRange of rangesCopy) {\n        if (currentRange.label) {\n          let fromToIndex = getFromToIndex(\n            targetSpectrum.normalized.x,\n            currentRange,\n          );\n          currentRange.integration = xyIntegration(\n            { x: result.x, y: yNormalized },\n            fromToIndex,\n          );\n          currentRange.maxPoint = xyMaxYPoint(\n            { x: result.x, y: yNormalized },\n            fromToIndex,\n          );\n          resultRanges[currentRange.label] = currentRange;\n        }\n      }\n    }\n  }\n\n  if (calculations && result.ranges) {\n    result.calculations = result.ranges.map(() => {\n      return {};\n    });\n    const parameters = Object.keys(result.ranges[0]);\n    for (let calculation of calculations) {\n      // eslint-disable-next-line no-new-func\n      const callback = new Function(\n        ...parameters,\n        `return ${calculation.formula}`,\n      );\n      for (let i = 0; i < result.ranges.length; i++) {\n        let oneRanges = result.ranges[i];\n        let values = parameters.map((key) => oneRanges[key].integration);\n        result.calculations[i][calculation.label] = callback(...values);\n      }\n    }\n  }\n\n  return result;\n}\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","import filterX from 'ml-array-xy-filter-x';\n\n/**\n *\n * @private\n * @param {Spectrum} spectrum\n * @param {object} [options.xFilter={}]\n * @param {array} [options.xFilter.from]\n * @param {array} [options.xFilter.to]\n * @param {array} [options.xFilter.exclusions=[]]\n * @param {array} [options.yFactor=1]\n */\n\nexport function getData(spectrum, options = {}) {\n  const { xFilter = {}, yFactor = 1 } = options;\n  let data = { x: spectrum.x, y: spectrum.y };\n\n  if (xFilter) {\n    data = filterX({ x: spectrum.x, y: spectrum.y }, xFilter);\n  }\n  if (yFactor && yFactor !== 1) {\n    data.y = data.y.map((y) => y * yFactor);\n  }\n  return data;\n}\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @param {number} [options.maxValue=1] new max value for algo max\n * @param {number} [options.sumValue=1] new max value for algo absolute and sum\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","import normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport Stat from 'ml-stat/array';\n\n/**\n *\n * @private\n * @param {*} spectrum\n * @param {*} options\n */\nexport function getNormalized(spectrum, options = {}) {\n  if (!Array.isArray(spectrum.x) || !Array.isArray(spectrum.y)) {\n    throw new Error(\n      'getNormalized: Can not get normalized data, missing original data.',\n    );\n  }\n\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints = 1024,\n    filters = [],\n    exclusions = [],\n  } = options;\n\n  let ys = spectrum.y.slice(0);\n\n  for (let filter of filters) {\n    switch (filter.name) {\n      case 'centerMean': {\n        let mean = Stat.mean(spectrum.y);\n        let meanFct = (y) => y - mean;\n        ys = ys.map(meanFct);\n        break;\n      }\n      case 'scaleSD': {\n        let std = Stat.standardDeviation(spectrum.y);\n        let stdFct = (y) => y / std;\n        ys = ys.map(stdFct);\n        break;\n      }\n      case 'normalize': {\n        ys = normed(ys);\n        break;\n      }\n      case 'rescale': {\n        ys = rescale(ys);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n  let result = equallySpaced(\n    { x: spectrum.x, y: ys },\n    { from, to, numberOfPoints, exclusions },\n  );\n  return result;\n}\n","import {\n  xyIntegration,\n  xyMaxYPoint,\n  xyMinYPoint,\n  xFindClosestIndex,\n} from 'ml-spectra-processing';\n\n/**\n * @private\n * @param {*} spectrum\n * @param {*} ranges\n */\nexport function updateRangesInfo(spectrum, ranges = []) {\n  spectrum.ranges = {};\n  for (let range of ranges) {\n    range = JSON.parse(JSON.stringify(range));\n    spectrum.ranges[range.label] = range;\n    let fromToIndex = {\n      fromIndex: xFindClosestIndex(spectrum.normalized.x, range.from),\n      toIndex: xFindClosestIndex(spectrum.normalized.x, range.to),\n    };\n    range.integration = xyIntegration(spectrum.normalized, fromToIndex);\n    range.maxPoint = xyMaxYPoint(spectrum.normalized, fromToIndex);\n    range.minPoint = xyMinYPoint(spectrum.normalized, fromToIndex);\n    range.x = spectrum.normalized.x.slice(\n      fromToIndex.fromIndex,\n      fromToIndex.toIndex + 1,\n    );\n    range.y = spectrum.normalized.y.slice(\n      fromToIndex.fromIndex,\n      fromToIndex.toIndex + 1,\n    );\n  }\n}\n","import { minMax } from 'ml-stat/array';\n\nimport { getData } from './getData';\nimport { getNormalized } from './getNormalized';\nimport { updateRangesInfo } from './updateRangesInfo';\n\n/**\n * Class allowing manipulate one IR spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.x=[]] - x values\n * @param {Array} [json.y=[]] - y values\n */\nexport class Spectrum {\n  /**\n   *\n   * @param {array} x\n   * @param {array} y\n   * @param {string} id\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.normalization]\n   * @param {object} [options.normalized]\n   */\n  constructor(x, y, id, options = {}) {\n    const { meta = {}, normalization = {}, normalized } = options;\n\n    if (x && x.length > 1 && x[0] > x[1]) {\n      this.x = x.reverse();\n      this.y = y.reverse();\n    } else {\n      this.x = x || [];\n      this.y = y || [];\n    }\n    this.id = id;\n    this.meta = meta;\n    this.normalizedBoundary = { x: { min: 0, max: 0 }, y: { min: 0, max: 0 } };\n    if (normalized) {\n      this.normalized = normalized;\n      this.updateNormalizedBoundary();\n    } else {\n      this.updateNormalization(normalization);\n    }\n\n    this.updateMemory();\n  }\n\n  get minX() {\n    return this.x[0];\n  }\n\n  get maxX() {\n    return this.x[this.x.length - 1];\n  }\n\n  updateMemory() {\n    let original = ((this.x && this.x.length) || 0) * 16;\n    let normalized = this.normalized.x.length * 16;\n    this.memory = { original, normalized, total: original + normalized };\n  }\n\n  removeOriginal() {\n    this.x = undefined;\n    this.y = undefined;\n    this.updateMemory();\n  }\n\n  getXY() {\n    if (!Array.isArray(this.x) || !Array.isArray(this.y)) {\n      throw new Error('Can not get normalized data');\n    }\n    return { x: this.x, y: this.y };\n  }\n}\n\nSpectrum.prototype.getData = function (options) {\n  return getData(this, options);\n};\n\nSpectrum.prototype.updateNormalization = function (normalization) {\n  this.normalized = getNormalized(this, normalization);\n  this.ranges = {};\n  this.updateMemory();\n  this.updateNormalizedBoundary();\n};\n\nSpectrum.prototype.updateRangesInfo = function (ranges) {\n  updateRangesInfo(this, ranges);\n};\n\nSpectrum.prototype.updateNormalizedBoundary = function () {\n  this.normalizedBoundary.x = {\n    min: this.normalized.x[0],\n    max: this.normalized.x[this.normalized.x.length - 1],\n  };\n  this.normalizedBoundary.y = minMax(this.normalized.y);\n};\n","import { getAutocorrelationChart } from './jsgraph/getAutocorrelationChart';\nimport { getBoxPlotAnnotations } from './jsgraph/getBoxPlotAnnotations';\nimport { getChart } from './jsgraph/getChart';\nimport { getNormalizationAnnotations } from './jsgraph/getNormalizationAnnotations';\nimport { getNormalizedChart } from './jsgraph/getNormalizedChart';\nimport { getScaledChart } from './jsgraph/getScaledChart';\nimport { getTrackAnnotation } from './jsgraph/getTrackAnnotation';\nimport { getCategoriesStats } from './metadata/getCategoriesStats';\nimport { getClasses } from './metadata/getClasses';\nimport { getMetadata } from './metadata/getMetadata';\nimport parseJcamp from './parser/jcamp';\nimport parseMatrix from './parser/matrix';\nimport parseText from './parser/text';\nimport { getAutocorrelation } from './spectra/getAutocorrelation';\nimport { getMeanData } from './spectra/getMeanData';\nimport { getNormalizedData } from './spectra/getNormalizedData';\nimport { getNormalizedText } from './spectra/getNormalizedText';\nimport { getScaledData } from './spectra/getScaledData';\nimport { Spectrum } from './spectrum/Spectrum';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\n\nexport class SpectraProcessor {\n  /**\n   * Manager a large number of spectra with the possibility to normalize the data\n   * and skip the original data.\n   * @param {object} [options={}]\n   * @param {boolean} [options.maxMemory=64M]\n   * @param {object} [options.normalization={}] options to normalize the spectra before comparison\n   * @param {number} [options.normalization.from]\n   * @param {number} [options.normalization.to]\n   * @param {number} [options.normalization.numberOfPoints]\n   * @param {array<object>} [options.normalization.filters]\n   * @param {string} [options.normalization.filters.X.name]\n   * @param {object} [options.normalization.filters.X.options]\n   * @param {array<object>} [options.normalization.exclusions]\n   * @param {string} [options.normalization.exclusions.X.from]\n   * @param {object} [options.normalization.exclusions.X.to]\n   */\n  constructor(options = {}) {\n    this.normalization = options.normalization;\n    this.maxMemory = options.maxMemory || 64 * 1024 * 1024;\n    this.keepOriginal = true;\n    this.spectra = [];\n    this.boundaries = {\n      minX: Number.MAX_VALUE,\n      maxX: Number.MIN_VALUE,\n      minY: Number.MAX_VALUE,\n      maxY: Number.MIN_VALUE,\n    };\n  }\n\n  getNormalizationAnnotations() {\n    return getNormalizationAnnotations(\n      this.normalization,\n      this.getNormalizedBoundary(),\n    );\n  }\n\n  /**\n   * Recalculate the normalized data using the stored original data if available\n   * This will throw an error in the original data is not present\n   * @param {number} [normalization.from]\n   * @param {number} [normalization.to]\n   * @param {number} [normalization.numberOfPoints]\n   * @param {array<object>} [normalization.filters]\n   * @param {string} [normalization.filters.X.name]\n   * @param {object} [normalization.filters.X.options]\n   * @param {array<object>} [normalization.exclusions]\n   * @param {string} [normalization.exclusions.X.from]\n   * @param {object} [normalization.exclusions.X.to]\n   */\n  setNormalization(normalization = {}) {\n    if (JSON.stringify(this.normalization) === JSON.stringify(normalization)) {\n      return;\n    }\n    this.normalization = normalization;\n    for (let spectrum of this.spectra) {\n      spectrum.updateNormalization(this.normalization);\n    }\n  }\n\n  getNormalization() {\n    return this.normalization;\n  }\n\n  /**\n   * Returns an object {x:[], y:[]} containing the autocorrelation for the\n   * specified index\n   * @param {integer} [index|undefined] x index of the spectrum to autocorrelate\n   * @param {object} [options={}]\n   * @param {array} [options.ids=[]] list of ids, by default all spectra\n   * @param {array} [options.x] x value if index is undefined\n   */\n  getAutocorrelation(index, options = {}) {\n    const { x } = options;\n    const normalizedData = this.getNormalizedData(options);\n    if (index === undefined && x !== undefined) {\n      index = xFindClosestIndex(normalizedData.x, x);\n    }\n    return getAutocorrelation(normalizedData, index);\n  }\n\n  /**\n   * Returns a {x:[], y:[]} containg the average of specified spectra\n   * @param {object} [options={}]\n   * @param {array} [options.ids=[]] list of ids, by default all spectra\n   */\n  getMeanData(options) {\n    return getMeanData(this.getNormalizedData(options));\n  }\n\n  /**\n   * Returns an object contains 4 parameters with the normalized data\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   */\n  getNormalizedData(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedData(spectra);\n  }\n\n  /**\n   * Returns a tab separated value containing the normalized data\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   * @param {string} [options.fs='\\t'] field separator\n   * @param {string} [options.rs='\\n'] record (line) separator\n   * @returns {string}\n   */\n  getNormalizedText(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedText(spectra, options);\n  }\n\n  getMinMaxX() {\n    let min = Number.MAX_VALUE;\n    let max = Number.MIN_VALUE;\n    for (let spectrum of this.spectra) {\n      if (spectrum.minX < min) min = spectrum.minX;\n      if (spectrum.maxX > max) max = spectrum.maxX;\n    }\n    return { min, max };\n  }\n\n  /**\n\n   * Returns an object contains 4 parameters with the scaled data\n   * @param {object} [options={}] scale spectra based on various parameters\n   * @param {object} [options.range] from - to\n   * @param {Array} [options.ids] ids of selected spectra, by default all\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   */\n  getScaledData(options) {\n    return getScaledData(this, options);\n  }\n\n  /**\n   * Add from text\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.parserOptions={}] XY parser options\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {object} [options.kind]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromText(text, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = parseText(text, options);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  /**\n   * Add jcamp\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} jcamp\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromJcamp(jcamp, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = parseJcamp(jcamp);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  updateRangesInfo(options) {\n    for (let spectrum of this.spectra) {\n      spectrum.updateRangesInfo(options);\n    }\n  }\n\n  getMetadata() {\n    return getMetadata(this.spectra);\n  }\n\n  /**\n   *\n   * @param {object} [options={}]\n   * @param {string} [options.propertyName=\"category\"]\n   */\n  getClasses(options) {\n    return getClasses(this.getMetadata(), options);\n  }\n\n  /**\n   *\n   * @param {object} [options={}]\n   * @param {string} [options.propertyName=\"category\"]\n   */\n  getCategoriesStats(options) {\n    return getCategoriesStats(this.getMetadata(), options);\n  }\n\n  /**\n   * Add a spectrum based on the data\n   * @param {object} data {x, y}}\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.id]\n   * @param {object} [options.normalization={}]\n   * @param {object} [options.normalized]\n   * @return {Spectrum}\n   */\n\n  addFromData(data, options = {}) {\n    if (this.spectra.length === 0) this.keepOriginal = true;\n    const id = options.id || Math.random().toString(36).substring(2, 10);\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.spectra.length;\n    let spectrum = new Spectrum(data.x, data.y, id, {\n      meta: options.meta,\n      normalized: options.normalized,\n      normalization: this.normalization,\n    });\n    this.spectra[index] = spectrum;\n    if (!this.keepOriginal) {\n      spectrum.removeOriginal();\n    } else {\n      let memoryInfo = this.getMemoryInfo();\n      if (memoryInfo.total > this.maxMemory) {\n        this.keepOriginal = false;\n        this.removeOriginals();\n      }\n    }\n  }\n\n  removeOriginals() {\n    for (let spectrum of this.spectra) {\n      spectrum.removeOriginal();\n    }\n  }\n\n  /**\n   * Remove the spectrum from the SpectraProcessor for the specified id\n   * @param {string} id\n   */\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra.splice(index, 1);\n  }\n\n  /**\n   * Remove all the spectra not present in the list\n   * @param {Array} [ids] Array of ids of the spectra to keep\n   */\n  removeSpectraNotIn(ids) {\n    let currentIDs = this.spectra.map((spectrum) => spectrum.id);\n    for (let id of currentIDs) {\n      if (!ids.includes(id)) {\n        this.removeSpectrum(id);\n      }\n    }\n  }\n\n  /**\n   * Checks if the ID of a spectrum exists in the SpectraProcessor\n   * @param {string} id\n   */\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.spectra.length; i++) {\n      let spectrum = this.spectra[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns an array of spectrum from their ids\n   * @param {Array} ids\n   * @returns {Array<Spectrum}\n   */\n  getSpectra(ids) {\n    if (!ids || !Array.isArray(ids)) return this.spectra;\n    let spectra = [];\n    for (let id of ids) {\n      let index = this.getSpectrumIndex(id);\n      if (index !== undefined) {\n        spectra.push(this.spectra[index]);\n      }\n    }\n    return spectra;\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra[index];\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getChart(options) {\n    return getChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getAutocorrelationChart(index, options) {\n    return getAutocorrelationChart(this, index, options);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for the specified index\n   * @returns {object}\n   */\n  getTrackAnnotation(index, options) {\n    return getTrackAnnotation(this.spectra, index, options);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for box plot\n   * @returns {object}\n   */\n  getBoxPlotAnnotations(options) {\n    return getBoxPlotAnnotations(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @returns {object}\n   */\n  getNormalizedChart(options) {\n    return getNormalizedChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the scaled normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @param {object} [options.range] from - to\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object}\n   */\n  getScaledChart(options) {\n    return getScaledChart(this, options);\n  }\n\n  getMemoryInfo() {\n    let memoryInfo = { original: 0, normalized: 0, total: 0 };\n    this.spectra.forEach((spectrum) => {\n      let memory = spectrum.memory;\n      memoryInfo.original += memory.original;\n      memoryInfo.normalized += memory.normalized;\n      memoryInfo.total += memory.total;\n    });\n    memoryInfo.keepOriginal = this.keepOriginal;\n    memoryInfo.maxMemory = this.maxMemory;\n    return memoryInfo;\n  }\n\n  getNormalizedBoundary() {\n    let boundary = {\n      x: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n      y: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n    };\n    for (let spectrum of this.spectra) {\n      if (spectrum.normalizedBoundary.x.min < boundary.x.min) {\n        boundary.x.min = spectrum.normalizedBoundary.x.min;\n      }\n      if (spectrum.normalizedBoundary.x.max > boundary.x.max) {\n        boundary.x.max = spectrum.normalizedBoundary.x.max;\n      }\n      if (spectrum.normalizedBoundary.y.min < boundary.y.min) {\n        boundary.y.min = spectrum.normalizedBoundary.y.min;\n      }\n      if (spectrum.normalizedBoundary.y.max > boundary.y.max) {\n        boundary.y.max = spectrum.normalizedBoundary.y.max;\n      }\n    }\n    return boundary;\n  }\n\n  /**\n   * Create SpectraProcessor from normalized TSV\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.separator='\\t']\n   */\n  static fromNormalizedMatrix(text, options = {}) {\n    let parsed = parseMatrix(text, options);\n    if (!parsed) {\n      throw new Error('Can not parse TSV file');\n    }\n    let spectraProcessor = new SpectraProcessor();\n\n    spectraProcessor.setNormalization({\n      from: parsed.x[0],\n      to: parsed.x[parsed.x.length - 1],\n      numberOfPoints: parsed.x.length,\n    });\n    spectraProcessor.keepOriginal = false;\n\n    for (let i = 0; i < parsed.ids.length; i++) {\n      spectraProcessor.addFromData(\n        { x: [], y: [] },\n        {\n          normalized: {\n            x: parsed.x,\n            y: parsed.matrix[i],\n          },\n          id: parsed.ids[i],\n          meta: parsed.meta[i],\n        },\n      );\n    }\n\n    return spectraProcessor;\n  }\n}\n","export function getFilterAnnotations(filter = {}) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: '0px' },\n        { x: exclusion.to, y: '2000px' },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,128,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: Number.MIN_SAFE_INTEGER, y: '0px' },\n        { x: filter.from, y: '2000px' },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: '0px' },\n        { x: Number.MAX_SAFE_INTEGER, y: '2000px' },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n"],"names":["global","factory","module","this","limit","x","min","max","clip_rgb","rgb","_clipped","_unclipped","slice","i","classToType","list","length","name","toLowerCase","type","obj","Object","prototype","toString","call","unpack","args","keyOrder","Array","split","filter","k","undefined","map","last","l","PI","Math","utils","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input","format","autodetect","last$1","clip_rgb$1","type$1","Color","len","arguments","me","constructor","mode","sorted","sort","a","b","p","chk","test","apply","_rgb","Error","push","hex","join","Color_1","chroma","Function","bind","concat","version","chroma_1","unpack$1","rgb2cmyk","ref","r","g","f","c","m","y","rgb2cmyk_1","unpack$2","cmyk2rgb","alpha","cmyk2rgb_1","unpack$3","type$2","cmyk","unpack$4","last$2","rnd","round","hsl2css","hsla","hsl2css_1","unpack$5","rgb2hsl","s","h","Number","NaN","rgb2hsl_1","unpack$6","last$3","rgb2css","rgba","substr","rgb2css_1","unpack$7","round$1","hsl2rgb","assign","t3","t2","t1","h_","hsl2rgb_1","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$2","css2rgb","css","trim","named","e","match","rgb$1","i$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","type$3","rest","unpack$8","gl","unpack$9","rgb2hcg","delta","_g","rgb2hcg_1","unpack$a","floor","hcg2rgb","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","v","hcg2rgb_1","unpack$b","type$4","hcg","unpack$c","last$4","round$3","rgb2hex","u","str","hxa","rgb2hex_1","RE_HEX","RE_HEXA","hex2rgb","parseInt","u$1","r$1","g$1","b$1","hex2rgb_1","type$5","indexOf","unpack$d","sqrt","acos","rgb2hsi","min_","rgb2hsi_1","unpack$e","limit$1","TWOPI$1","cos","hsi2rgb","isNaN","hsi2rgb_1","unpack$f","type$6","hsi","unpack$g","type$7","unpack$h","min$1","max$1","rgb2hsl$1","max_","rgb2hsv","unpack$i","floor$1","hsv2rgb","hsv2rgb_1","unpack$j","type$8","hsv","labConstants","Kn","Xn","Yn","Zn","t0","unpack$k","pow","rgb2lab","ref$1","rgb2xyz","z","rgb_xyz","xyz_lab","rgb2lab_1","unpack$l","pow$1","lab2rgb","b_","lab_xyz","xyz_rgb","lab2rgb_1","unpack$m","type$9","lab","unpack$n","sqrt$1","atan2","round$4","lab2lch","lab2lch_1","unpack$o","rgb2lch","rgb2lch_1","unpack$p","sin","cos$1","lch2lab","lch2lab_1","unpack$q","lch2rgb","L","lch2rgb_1","unpack$r","hcl2rgb","hcl","reverse","hcl2rgb_1","unpack$s","type$a","lch","forEach","w3cx11","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","w3cx11_1","type$b","keys","n","unpack$t","rgb2num","rgb2num_1","type$c","num2rgb","num","num2rgb_1","type$d","unpack$u","type$e","round$5","log","temperature2rgb","kelvin","temp","temperature2rgb_1","unpack$v","round$6","rgb2temperature","minTemp","maxTemp","eps","rgb2temperature_1","temperature","type$f","mutate","clipped","darken","amount","brighten","darker","brighter","get","mc","channel","src","type$g","pow$2","EPS","MAX_ITER","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","abs","rgb2luminance","luminance_x","interpolator","type$h","mix","col1","col2","premultiply","saturate","desaturate","type$i","set","value","charAt","out","xyz0","xyz1","sqrt$2","pow$3","lrgb","x1","y1","z1","x2","y2","z2","lab$1","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","dh","lch$1","num$1","c1","c2","hcg$1","hsi$1","hsv$1","clip_rgb$2","pow$4","sqrt$3","PI$1","cos$2","sin$1","atan2$1","average","colors","weights","from","reduce","w","_average_lrgb","first","shift","xyz","cnt","dx","dy","A","ci","xyz2","A$1","col","type$j","pow$5","scale","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","getClass","tMapLightness","tMapDomain","getColor","val","bypassMap","classes","d","analyze","limits","domain","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","result","dm","dd","__range__","samples","end","asc","cache","gamma","nodata","left","right","inclusive","ascending","bezier","I","lab0","lab1","lab2","lab3","I0","I1","bezier_1","blend","bottom","top","blend_f","c0","each","normal","multiply","darken$1","lighten","screen","overlay","burn","dodge","blend_1","type$k","clip_rgb$3","TWOPI$2","pow$6","sin$2","cos$3","cubehelix","start","rotations","lightness","dl","fract","amp","cos_a","sin_a","digits","floor$2","random","random_1","code","log$1","pow$7","floor$3","data","key","MAX_VALUE","sum","values","count","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","j","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","contrast","l1","l2","sqrt$4","atan2$2","abs$1","cos$4","PI$2","deltaE","C","a1","b1","L2","a2","b2","sl","sc","h1","c4","sh","delL","delC","delA","delB","dH2","v1","v2","v3","distance","sum_sq","valid","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","list$1","colorbrewer_1","chroma_js","getAutocorrelationChart","spectraProcessor","index","options","autocorrelation","getAutocorrelation","xFilter","MIN_VALUE","colorCallback","colorScale","mean","getMeanData","filterX","colorSpectrum","color","styles","unselected","lineWidth","lineStyle","selected","isAnyArray","object","endsWith","_ref","exports","window","median","isArray","TypeError","quickSelectMedian","xMultiply","array1","array2","isConstant","constant","array3","Float64Array","xBoxPlot","array","info","Q1","Q2","Q3","q1max","q3min","middle","middleOver","xCorrelation","B","sumA","sumA2","sumB","sumB2","sumAB","xFindClosestIndex","target","xGetFromToIndex","fromIndex","toIndex","to","toStr","isArguments","isArgs","callee","keysShim","has","hasOwnProperty","require$$0","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","o","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","equalsConstructorPrototypeIfNotBuggy","isObject","isFunction","isString","theKeys","skipProto","String","skipConstructor","origKeys","originalKeys","shim","shimObjectKeys","keysWorksWithArguments","getKeys","typedArrays","createTypedArrayFcns","objectKeys","bisector","compare","ascendingComparator","lo","hi","ascendingBisect","bisectRight","bisectLeft","descending","number$1","variance","deviation","extent","identity","stop","step","ceil","e10","e5","e2","ticks","tickStep","step0","step1","LN10","error","sturges","LN2","number","histogram","threshold","xz","x0","tz","pop","bins","bin","_","thresholds","quantile","freedmanDiaconis","scott","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","transpose","matrix","row","zip","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","xSubtract","xyCheck","xyIntegration","currentxyIntegration","xyMaxYPoint","current","xyMinYPoint","getBoxPlotData","spectra","normalized","spectrum","nbRow","nbColumn","aColumn","column","getBoxPlotAnnotations","q13FillColor","q13FillOpacity","q2StrokeColor","q2StrokeWidth","minMaxFillColor","minMaxFillOpacity","annotations","q13","layer","properties","fillColor","fillOpacity","strokeWidth","position","q2","strokeColor","minMax","addChartDataStyle","lineColor","meta","label","id","getChart","ids","yFactor","chart","includes","getData","getNormalizationAnnotations","boundary","exclusions","exclusion","ignore","annotation","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","getZones","JSON","parse","stringify","zones","currentFrom","points","currentZoneIndex","newX","newY","getNormalizedChart","getScaledChart","scaled","getScaledData","getNormalizedData","currentIDs","getTrackAnnotation","showSpectrumID","line","size","text","toPrecision","getCategoriesStats","metadata","propertyName","categories","classNumber","metadatum","counter","getClasses","categoriesStats","getMetadata","GC_MS_FIELDS","complexChromatogram","chromatogram","times","series","ms","dimension","existingGCMSFields","convertMSFieldToLabel","pageValue","parseFloat","isMSField","canonicDataLabel","replace","convertToFloatArray","stringArray","floatArray","fastParseXYData","deltaX","isXYdata","currentData","currentX","firstX","currentY","firstY","endLine","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","parsePeakTable","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","lines","xFactor","logs","parseXYA","removeSymbolRegExp","isXYAdata","convertTo3DZ","minZ","maxZ","ySize","xSize","xVector","lastX","lastY","minX","maxX","minY","maxY","noise","getMedian","generateContourLines","zData","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","xN","y0","yN","iter","nbContourLevels","contourLevels","lineZValue","level","contourLevel","side","factor","noiseMultiplier","exp","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","add2D","noContour","contourLines","profiling","action","time","Date","now","simpleChromatogram","intensity","postProcessing","entriesFlat","entry","ntuples","newNtuples","twoD","wantXY","keepSpectra","xy","newData","prepareSpectrum","observeFrequency","xUnit","toUpperCase","shiftOffsetVal","ntuplesSeparator","Spectrum","defaultOptions","keepRecordsRegExp","canonicDataLabels","dynamicTyping","withoutXY","convert","jcamp","entries","tmpResult","children","currentEntry","parentsStack","ldrs","ldr","dataLabel","substring","dataValue","xIndex","yIndex","infos","firstVariable","secondVariable","symbol","vardim","nbPoints","units","yUnit","datatable","parentEntry","title","dataType","dataClass","xType","indirectFrequency","shiftOffsetNum","varname","vartype","varform","yType","page","pageSymbol","pageSymbolIndex","unit","sampleDescription","flatten","getJcampKind","datatype","IR_ABSORBANCE","IR_TRANSMITTANCE","normalization","importation","converter","transmittance","log10","kind","display","xLabel","xInverted","yLabel","jcampText","parsed","fs","currentMatrix","headers","labels","header","parts","oneMeta","uniqueX","parseXY","rescale","xColumn","yColumn","keepInfo","maxNumberColumns","minNumberColumns","fields","uniqueXFunction","parserOptions","maxValue","minValue","output","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","indent","indentData","inspectMatrix","inspectMatrixWithOptions","maxRows","maxColumns","maxNumSize","inspectData","rows","columns","maxI","maxJ","formatNumber","numStr","padEnd","precise","exponential","toExponential","eIndex","installMathOperations","AbstractMatrix","Matrix","add","addS","addM","checkMatrix","newMatrix","sub","subS","subM","subtract","subtractS","subtractM","mul","mulS","mulM","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acosh","asin","asinh","atan","atanh","cbrt","clz32","cosh","expm1","fround","log1p","log2","sign","sinh","tanh","trunc","arg0","powS","powM","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","checkRowIndices","checkColumnIndices","rowOut","some","columnOut","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","varianceByRow","unbiased","cols","sum1","sum2","varianceByColumn","varianceAll","centerByRow","centerByColumn","centerAll","getScaleByRow","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","from1DArray","newRows","newColumns","rowVector","columnVector","zeros","ones","fill","rand","randInt","isInteger","interval","eye","diag","matrix1","matrix2","isMatrix","klass","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","iMax","swapRows","tmp","reducedEchelonForm","maxRow","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","norm","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","r1","r2","console","warn","embed","mat","resultat","blockMult","halfRows","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","flipColumns","kroneckerProduct","sortRows","compareFunction","compareNumbers","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","standardDeviation","center","Symbol","for","randomInt","diagonal","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","getNormalizedText","rs","allKeysObject","metum","allKeys","getFromToIndex","xs","targetSpectrum","fromToIndex","targetValue","maybeToPrecision","checkArraySize","BaseRegression","new","predict","_predict","train","toLaTeX","score","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","SimpleLinearRegression","slope","intercept","coefficients","checkArrayLength","regress","computeX","precision","absIntercept","operator","load","json","slr","numerator","regression","currentrange","targetID","relative","method","ranges","calculations","getSpectrum","getSpectra","rangeFct","rangesCopy","yNormalized","resultRanges","currentRange","integration","maxPoint","parameters","calculation","formula","oneRanges","arithmeticMean","geometricMean","logMean","lnsum","grandMean","means","truncatedMean","percent","alreadySorted","harmonicMean","contraHarmonicMean","half","theMean","theVariance","standardError","robustMeanAndStdev","stdev","averageDeviations","quartiles","quart","q1","q3","pooledStandardDeviation","pooledVariance","vari","itemCount","itemArray","covariance","mean1","mean2","cov","skewness","s2","s3","dev","kurtosis","s4","entropy","weightedMean","weightedStandardDeviation","weightedVariance","inPlace","standardize","standardDev","sumValue","_options$algorithm","algorithm","_options$sumValue","_options$maxValue","absoluteSumValue","absoluteSum","currentMaxValue","_i","sumFactor","_i2","_typeof","iterator","sequentialFill","_options","_options$from","_options$to","_options$size","normalize","NEGATIVE_INFINITY","POSITIVE_INFINITY","zone","currentZone","invert","nextExclusion","zonesWithPoints","numberOfPoints","totalSize","previous","unitsPerPoint","currentTotal","integral","equallySpacedSmooth","xLength","halfStep","initialOriginalStep","lastOriginalStep","previousX","previousY","nextX","nextY","sumAtMin","sumAtMax","getSlope","main","equallySpacedSlot","lastStep","frontOutsideSpectra","backOutsideSpectra","currentPoints","equallySpaced","arrayXY","variant","xResult","yResult","zoneResult","processZone","getNormalized","filters","ys","Stat","meanFct","std","stdFct","normed","process","updateRangesInfo","minPoint","normalizedBoundary","updateNormalizedBoundary","updateNormalization","updateMemory","original","memory","total","removeOriginal","getXY","SpectraProcessor","maxMemory","keepOriginal","boundaries","getNormalizedBoundary","setNormalization","getNormalization","normalizedData","getMinMaxX","addFromText","force","contains","parseText","addFromData","addFromJcamp","parseJcamp","getSpectrumIndex","memoryInfo","getMemoryInfo","removeOriginals","removeSpectrum","removeSpectraNotIn","fromNormalizedMatrix","parseMatrix","getFilterAnnotations"],"mappings":"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"}