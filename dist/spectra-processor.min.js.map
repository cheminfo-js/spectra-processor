{"version":3,"file":"spectra-processor.min.js","sources":["../node_modules/chroma-js/chroma.js","../node_modules/is-any-array/src/index.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../node_modules/ml-spectra-processing/src/x/xMultiply.js","../node_modules/ml-spectra-processing/src/x/xBoxPlot.js","../node_modules/ml-spectra-processing/src/x/xCorrelation.js","../node_modules/ml-spectra-processing/src/x/xFindClosestIndex.js","../node_modules/ml-spectra-processing/src/x/xGetFromToIndex.js","../node_modules/object-keys/isArguments.js","../node_modules/object-keys/implementation.js","../node_modules/object-keys/index.js","../node_modules/utils-copy/lib/typedarrays.js","../node_modules/utils-copy-error/lib/copy.js","../node_modules/d3-array/build/d3-array.js","../node_modules/ml-spectra-processing/src/x/xSubtract.js","../node_modules/ml-spectra-processing/node_modules/is-any-array/src/index.js","../node_modules/ml-spectra-processing/src/xy/xyCheck.js","../node_modules/ml-spectra-processing/src/xy/xyIntegration.js","../node_modules/ml-spectra-processing/src/xy/xyMaxYPoint.js","../node_modules/ml-spectra-processing/src/xy/xyMinYPoint.js","../src/jsgraph/getBoxPlotAnnotations.js","../src/spectra/getBoxPlotData.js","../src/jsgraph/addChartDataStyle.js","../node_modules/ml-array-xy-filter-x/src/index.js","../node_modules/ml-array-xy-filter-x/src/getZones.js","../src/spectra/getNormalizedData.js","../src/metadata/getCategoriesStats.js","../node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/jcampconverter/src/2d/add2D.js","../node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/jcampconverter/src/profiling.js","../node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/jcampconverter/src/convert.js","../node_modules/jcampconverter/src/postProcessing.js","../src/Kinds.js","../src/parser/jcamp.js","../node_modules/xy-parser/src/index.js","../node_modules/ml-arrayxy-uniquex/src/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/stat.js","../src/spectra/scaled/getFromToIndex.js","../node_modules/ml-regression-base/src/maybeToPrecision.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-regression-base/src/index.js","../node_modules/ml-regression-simple-linear/src/index.js","../node_modules/ml-regression-base/src/checkArrayLength.js","../src/spectra/getScaledData.js","../src/spectra/scaled/min.js","../src/spectra/scaled/max.js","../src/spectra/scaled/minMax.js","../src/spectra/scaled/range.js","../node_modules/ml-stat/array.js","../node_modules/ml-array-normed/node_modules/is-any-array/src/index.js","../node_modules/ml-array-sum/lib-es6/index.js","../node_modules/ml-array-normed/lib-es6/index.js","../node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/ml-zones/src/normalize.js","../node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/ml-zones/src/invert.js","../node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../src/spectrum/Spectrum.js","../src/spectrum/getData.js","../src/spectrum/getNormalized.js","../src/spectrum/updateRangesInfo.js","../src/SpectraProcessor.js","../src/jsgraph/getNormalizationAnnotations.js","../src/spectra/getAutocorrelation.js","../src/spectra/getMeanData.js","../src/spectra/getNormalizedText.js","../src/parser/text.js","../src/metadata/getMetadata.js","../src/metadata/getClasses.js","../src/jsgraph/getChart.js","../src/jsgraph/getAutocorrelationChart.js","../src/jsgraph/getTrackAnnotation.js","../src/jsgraph/getNormalizedChart.js","../src/jsgraph/getScaledChart.js","../src/parser/matrix.js","../src/jsgraph/getFilterAnnotations.js"],"sourcesContent":["/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.chroma = factory());\n}(this, (function () { 'use strict';\n\n    var limit = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var clip_rgb = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i = 0, list = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i < list.length; i += 1) {\n        var name = list[i];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var unpack = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var last = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb,\n    \tlimit: limit,\n    \ttype: type,\n    \tunpack: unpack,\n    \tlast: last,\n    \tPI: PI,\n    \tTWOPI: PI*2,\n    \tPITHIRD: PI/3,\n    \tDEG2RAD: PI / 180,\n    \tRAD2DEG: 180 / PI\n    };\n\n    var input = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$1 = utils.last;\n    var clip_rgb$1 = utils.clip_rgb;\n    var type$1 = utils.type;\n\n\n    var Color = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$1(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$1(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!input.sorted) {\n                input.autodetect = input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (input.format[mode]) {\n            var rgb = input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$1(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color.prototype.toString = function toString () {\n        if (type$1(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color;\n\n    var chroma = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma.Color, [ null ].concat( args) ));\n    };\n\n    chroma.Color = Color_1;\n    chroma.version = '2.1.0';\n\n    var chroma_1 = chroma;\n\n    var unpack$1 = utils.unpack;\n    var max = Math.max;\n\n    var rgb2cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$1(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max(r,max(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk;\n\n    var unpack$2 = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$2(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var unpack$3 = utils.unpack;\n    var type$2 = utils.type;\n\n\n\n    Color_1.prototype.cmyk = function() {\n        return rgb2cmyk_1(this._rgb);\n    };\n\n    chroma_1.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input.format.cmyk = cmyk2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'cmyk');\n            if (type$2(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$4 = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$4(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css;\n\n    var unpack$5 = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$5(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl;\n\n    var unpack$6 = utils.unpack;\n    var last$3 = utils.last;\n\n\n    var round = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$6(args, 'rgba');\n        var mode = last$3(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css_1(rgb2hsl_1(rgba), mode);\n        }\n        rgba[0] = round(rgba[0]);\n        rgba[1] = round(rgba[1]);\n        rgba[2] = round(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css;\n\n    var unpack$7 = utils.unpack;\n    var round$1 = Math.round;\n\n    var hsl2rgb = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$7(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$1(c[0]*255),round$1(c[1]*255),round$1(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$2 = Math.round;\n\n    var css2rgb = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input.format.named) {\n            try {\n                return input.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb_1(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb_1(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb;\n\n    var type$3 = utils.type;\n\n\n\n\n    Color_1.prototype.css = function(mode) {\n        return rgb2css_1(this._rgb, mode);\n    };\n\n    chroma_1.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['css']) ));\n    };\n\n    input.format.css = css2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$3(h) === 'string' && css2rgb_1.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    input.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$8(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma_1.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color_1.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$9 = utils.unpack;\n\n    var rgb2hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$9(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg;\n\n    var unpack$a = utils.unpack;\n    var floor = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$a(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$b = utils.unpack;\n    var type$4 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hcg = function() {\n        return rgb2hcg_1(this._rgb);\n    };\n\n    chroma_1.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input.format.hcg = hcg2rgb_1;\n\n    input.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$b(args, 'hcg');\n            if (type$4(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$c = utils.unpack;\n    var last$4 = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$c(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last$4(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb;\n\n    var type$5 = utils.type;\n\n\n\n\n    Color_1.prototype.hex = function(mode) {\n        return rgb2hex_1(this._rgb, mode);\n    };\n\n    chroma_1.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hex']) ));\n    };\n\n    input.format.hex = hex2rgb_1;\n    input.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$5(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$d = utils.unpack;\n    var TWOPI = utils.TWOPI;\n    var min = Math.min;\n    var sqrt = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI - h;\n            }\n            h /= TWOPI;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi;\n\n    var unpack$e = utils.unpack;\n    var limit$1 = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$e(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos(TWOPI$1*h)/cos(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit$1(i*r*3);\n        g = limit$1(i*g*3);\n        b = limit$1(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$f = utils.unpack;\n    var type$6 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsi = function() {\n        return rgb2hsi_1(this._rgb);\n    };\n\n    chroma_1.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input.format.hsi = hsi2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'hsi');\n            if (type$6(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$g = utils.unpack;\n    var type$7 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsl = function() {\n        return rgb2hsl_1(this._rgb);\n    };\n\n    chroma_1.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input.format.hsl = hsl2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$g(args, 'hsl');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$h = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$h(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv = rgb2hsl$1;\n\n    var unpack$i = utils.unpack;\n    var floor$1 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$i(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$1(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$j = utils.unpack;\n    var type$8 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma_1.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input.format.hsv = hsv2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$j(args, 'hsv');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var unpack$k = utils.unpack;\n    var pow = Math.pow;\n\n    var rgb2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$k(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > labConstants.t3) { return pow(t, 1 / 3); }\n        return t / labConstants.t2 + labConstants.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / labConstants.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / labConstants.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab;\n\n    var unpack$l = utils.unpack;\n    var pow$1 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$l(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = labConstants.Yn * lab_xyz(y);\n        x = labConstants.Xn * lab_xyz(x);\n        z = labConstants.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > labConstants.t1 ? t * t * t : labConstants.t2 * (t - labConstants.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$9 = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lab = function() {\n        return rgb2lab_1(this._rgb);\n    };\n\n    chroma_1.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lab']) ));\n    };\n\n    input.format.lab = lab2rgb_1;\n\n    input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'lab');\n            if (type$9(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$n = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$1 = Math.sqrt;\n    var atan2 = Math.atan2;\n    var round$4 = Math.round;\n\n    var lab2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$n(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$1(a * a + b * b);\n        var h = (atan2(b, a) * RAD2DEG + 360) % 360;\n        if (round$4(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch;\n\n    var unpack$o = utils.unpack;\n\n\n\n    var rgb2lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab_1(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch_1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch;\n\n    var unpack$p = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin = Math.sin;\n    var cos$1 = Math.cos;\n\n    var lch2lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$p(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$1(h) * c, sin(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab;\n\n    var unpack$q = utils.unpack;\n\n\n\n    var lch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$q(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab_1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb_1 (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb;\n\n    var unpack$r = utils.unpack;\n\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$r(args, 'hcl').reverse();\n        return lch2rgb_1.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$s = utils.unpack;\n    var type$a = utils.type;\n\n\n\n\n\n\n    Color_1.prototype.lch = function() { return rgb2lch_1(this._rgb); };\n    Color_1.prototype.hcl = function() { return rgb2lch_1(this._rgb).reverse(); };\n\n    chroma_1.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['lch']) ));\n    };\n    chroma_1.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input.format.lch = lch2rgb_1;\n    input.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$s(args, m);\n            if (type$a(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11;\n\n    var type$b = utils.type;\n\n\n\n\n\n    Color_1.prototype.name = function() {\n        var hex = rgb2hex_1(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11_1); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11_1[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11_1[name]) { return hex2rgb_1(w3cx11_1[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$b(h) === 'string' && w3cx11_1[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$t = utils.unpack;\n\n    var rgb2num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$t(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num;\n\n    var type$c = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$c(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var type$d = utils.type;\n\n\n\n    Color_1.prototype.num = function() {\n        return rgb2num_1(this._rgb);\n    };\n\n    chroma_1.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['num']) ));\n    };\n\n    input.format.num = num2rgb_1;\n\n    input.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$d(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var unpack$u = utils.unpack;\n    var type$e = utils.type;\n    var round$5 = Math.round;\n\n    Color_1.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$5);\n    };\n\n    Color_1.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$5(v)) : v;\n        });\n    };\n\n    chroma_1.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$u(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$u(args, 'rgba');\n            if (type$e(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$e(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log = Math.log;\n\n    var temperature2rgb = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n\n    var unpack$v = utils.unpack;\n    var round$6 = Math.round;\n\n    var rgb2temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$v(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb_1(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round$6(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature;\n\n    Color_1.prototype.temp =\n    Color_1.prototype.kelvin =\n    Color_1.prototype.temperature = function() {\n        return rgb2temperature_1(this._rgb);\n    };\n\n    chroma_1.temp =\n    chroma_1.kelvin =\n    chroma_1.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color_1, [ null ].concat( args, ['temp']) ));\n    };\n\n    input.format.temp =\n    input.format.kelvin =\n    input.format.temperature = temperature2rgb_1;\n\n    var type$f = utils.type;\n\n    Color_1.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$f(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color_1([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    Color_1.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    Color_1.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= labConstants.Kn * amount;\n    \treturn new Color_1(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color_1.prototype.darker = Color_1.prototype.darken;\n    Color_1.prototype.brighter = Color_1.prototype.brighten;\n\n    Color_1.prototype.get = function(mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var type$g = utils.type;\n    var pow$2 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color_1.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$g(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color_1([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color_1([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color_1([0,0,0]), this) : test(this, new Color_1([255,255,255]))).rgb();\n            return new Color_1(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$2((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator = {};\n\n    var type$h = utils.type;\n\n\n    var mix = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$h(col1) !== 'object') { col1 = new Color_1(col1); }\n        if (type$h(col2) !== 'object') { col2 = new Color_1(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    Color_1.prototype.mix =\n    Color_1.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    Color_1.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color_1([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    Color_1.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += labConstants.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color_1(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color_1.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var type$i = utils.type;\n\n    Color_1.prototype.set = function(mc, value, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) {\n                if (type$i(value) == 'string') {\n                    switch(value.charAt(0)) {\n                        case '+': src[i] += +value; break;\n                        case '-': src[i] += +value; break;\n                        case '*': src[i] *= +(value.substr(1)); break;\n                        case '/': src[i] /= +(value.substr(1)); break;\n                        default: src[i] = +value;\n                    }\n                } else if (type$i(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color_1(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var rgb$1 = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.rgb = rgb$1;\n\n    var sqrt$2 = Math.sqrt;\n    var pow$3 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color_1(\n            sqrt$2(pow$3(x1,2) * (1-f) + pow$3(x2,2) * f),\n            sqrt$2(pow$3(y1,2) * (1-f) + pow$3(y2,2) * f),\n            sqrt$2(pow$3(z1,2) * (1-f) + pow$3(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator.lrgb = lrgb;\n\n    var lab$1 = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color_1(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator.lab = lab$1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1-(hue0+360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1+360-hue0;\n            } else{\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1-lbv0);\n        return new Color_1([hue, sat, lbv], m);\n    };\n\n    var lch$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator.lch = lch$1;\n    interpolator.hcl = lch$1;\n\n    var num$1 = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color_1(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator.num = num$1;\n\n    var hcg$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator.hcg = hcg$1;\n\n    var hsi$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator.hsi = hsi$1;\n\n    var hsl$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator.hsl = hsl$1;\n\n    var hsv$1 = function (col1, col2, f) {\n    \treturn _hsx(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator.hsv = hsv$1;\n\n    var clip_rgb$2 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$3 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$1 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$1(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$1(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color_1(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$3(xyz[0]);\n        xyz[1] = sqrt$3(xyz[1]);\n        xyz[2] = sqrt$3(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color_1(clip_rgb$2(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n\n    var type$j = utils.type;\n\n    var pow$5 = Math.pow;\n\n    var scale = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma_1('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$j(colors) === 'string' && chroma_1.brewer &&\n                chroma_1.brewer[colors.toLowerCase()]) {\n                colors = chroma_1.brewer[colors.toLowerCase()];\n            }\n            if (type$j(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma_1(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$5(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$j(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma_1.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$j(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma_1(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$j(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma_1.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma_1.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors, _pos);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$j(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma_1[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma_1(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n\n\n\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color_1(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color_1(lab, 'lab');\n            };\n        } else if (colors.length === 5) {\n            var I0 = bezier(colors.slice(0, 3));\n            var I1 = bezier(colors.slice(2, 5));\n            I = function(t) {\n                if (t < 0.5) {\n                    return I0(t*2);\n                } else {\n                    return I1((t-0.5)*2);\n                }\n            };\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n\n\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma_1(top).rgb();\n            var c1 = chroma_1(bottom).rgb();\n            return chroma_1.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken$1 = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken$1));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$k = utils.type;\n    var clip_rgb$3 = utils.clip_rgb;\n    var TWOPI$2 = utils.TWOPI;\n    var pow$6 = Math.pow;\n    var sin$2 = Math.sin;\n    var cos$3 = Math.cos;\n\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$k(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI$2 * (((start+120)/360) + (rotations * fract));\n            var l = pow$6(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$3(a);\n            var sin_a = sin$2(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma_1(clip_rgb$3([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$k(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$k(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma_1.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var digits = '0123456789abcdef';\n\n    var floor$2 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$2(random() * 16));\n        }\n        return new Color_1(code, 'hex');\n    };\n\n    var log$1 = Math.log;\n    var pow$7 = Math.pow;\n    var floor$3 = Math.floor;\n    var abs = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log$1(min);\n            var max_log = Math.LOG10E * log$1(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$7(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor$3(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var sqrt$4 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var abs$1 = Math.abs;\n    var cos$4 = Math.cos;\n    var PI$2 = Math.PI;\n\n    var deltaE = function(a, b, L, C) {\n        if ( L === void 0 ) L=1;\n        if ( C === void 0 ) C=1;\n\n        // Delta E (CMC)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var c1 = sqrt$4((a1 * a1) + (b1 * b1));\n        var c2 = sqrt$4((a2 * a2) + (b2 * b2));\n        var sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + (0.01765 * L1));\n        var sc = ((0.0638 * c1) / (1.0 + (0.0131 * c1))) + 0.638;\n        var h1 = c1 < 0.000001 ? 0.0 : (atan2$2(b1, a1) * 180.0) / PI$2;\n        while (h1 < 0) { h1 += 360; }\n        while (h1 >= 360) { h1 -= 360; }\n        var t = (h1 >= 164.0) && (h1 <= 345.0) ? (0.56 + abs$1(0.2 * cos$4((PI$2 * (h1 + 168.0)) / 180.0))) : (0.36 + abs$1(0.4 * cos$4((PI$2 * (h1 + 35.0)) / 180.0)));\n        var c4 = c1 * c1 * c1 * c1;\n        var f = sqrt$4(c4 / (c4 + 1900.0));\n        var sh = sc * (((f * t) + 1.0) - f);\n        var delL = L1 - L2;\n        var delC = c1 - c2;\n        var delA = a1 - a2;\n        var delB = b1 - b2;\n        var dH2 = ((delA * delA) + (delB * delB)) - (delC * delC);\n        var v1 = delL / (L * sl);\n        var v2 = delC / (C * sc);\n        var v3 = sh;\n        return sqrt$4((v1 * v1) + (v2 * v2) + (dH2 / (v3 * v3)));\n    };\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color_1(a);\n        b = new Color_1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color_1, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n\n\n\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma_1.hsl(180,1,.9), chroma_1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff'], [0,.25,.75,1]).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i$1 = 0, list$1 = Object.keys(colorbrewer); i$1 < list$1.length; i$1 += 1) {\n        var key = list$1[i$1];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma_1.average = average;\n    chroma_1.bezier = bezier_1;\n    chroma_1.blend = blend_1;\n    chroma_1.cubehelix = cubehelix;\n    chroma_1.mix = chroma_1.interpolate = mix;\n    chroma_1.random = random_1;\n    chroma_1.scale = scale;\n\n    // other utility methods\n    chroma_1.analyze = analyze_1.analyze;\n    chroma_1.contrast = contrast;\n    chroma_1.deltaE = deltaE;\n    chroma_1.distance = distance;\n    chroma_1.limits = analyze_1.limits;\n    chroma_1.valid = valid;\n\n    // scale\n    chroma_1.scales = scales;\n\n    // colors\n    chroma_1.colors = w3cx11_1;\n    chroma_1.brewer = colorbrewer_1;\n\n    var chroma_js = chroma_1;\n\n    return chroma_js;\n\n})));\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","/**\n\n/**\n * This function xMultiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Float64Array}\n */\nexport function xMultiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Float64Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @return {object}\n */\nexport function xBoxPlot(array) {\n  array = array.slice(0).sort((a, b) => a - b);\n  if (array.length < 5) {\n    throw Error(\n      'xBoxPlot: can not calculate info if array contains less than 3 elements',\n    );\n  }\n  let info = {\n    Q1: 0.0,\n    Q2: 0.0,\n    Q3: 0.0,\n    min: array[0],\n    max: array[array.length - 1],\n  };\n  let q1max, q3min;\n  if (array.length % 2 === 1) {\n    // odd\n    let middle = (array.length - 1) / 2;\n    info.Q2 = array[middle];\n    q1max = middle - 1;\n    q3min = middle + 1;\n  } else {\n    // even\n    q3min = array.length / 2;\n    q1max = q3min - 1;\n    info.Q2 = (array[q1max] + array[q3min]) / 2;\n  }\n  if (q1max % 2 === 0) {\n    info.Q1 = array[q1max / 2];\n    info.Q3 = array[(array.length + q3min - 1) / 2];\n  } else {\n    info.Q1 = (array[(q1max + 1) / 2] + array[(q1max - 1) / 2]) / 2;\n    let middleOver = (array.length + q3min) / 2;\n    info.Q3 = (array[middleOver] + array[middleOver - 1]) / 2;\n  }\n  return info;\n}\n","/**\n\n/**\n * Calculates the correlation between 2 vectors\n * https://en.wikipedia.org/wiki/Correlation_and_dependence\n *\n * @param {Array<Number>} [A] - the array that will be rotated\n * @param {Array<Number>} [B]\n * @return {Array}\n */\nexport function xCorrelation(A, B) {\n  let n = A.length;\n  let sumA = 0;\n  let sumA2 = 0;\n  let sumB = 0;\n  let sumB2 = 0;\n  let sumAB = 0;\n  for (let i = 0; i < n; i++) {\n    let a = A[i];\n    let b = B[i];\n    sumA += a;\n    sumA2 += a ** 2;\n    sumB += b;\n    sumB2 += b ** 2;\n    sumAB += a * b;\n  }\n  return (\n    (n * sumAB - sumA * sumB) /\n    (Math.sqrt(n * sumA2 - sumA ** 2) * Math.sqrt(n * sumB2 - sumB ** 2))\n  );\n}\n","/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array<Number>} array\n * @param {number} target\n */\n\nexport function xFindClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n","import { xFindClosestIndex } from './xFindClosestIndex';\n\n/**\n * Returns an object with {fromIndex, toIndex} for a specific from / to\n * @param {array} x\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for xyIntegration in the X scale\n * @param {number} [options.fromIndex=0] - First point for xyIntegration\n * @param {number} [options.to] - Last value for xyIntegration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for xyIntegration\n */\n\nexport function xGetFromToIndex(x, options = {}) {\n  let { fromIndex, toIndex, from, to } = options;\n\n  if (fromIndex === undefined) {\n    if (from !== undefined) {\n      fromIndex = xFindClosestIndex(x, from);\n    } else {\n      fromIndex = 0;\n    }\n  }\n  if (toIndex === undefined) {\n    if (to !== undefined) {\n      toIndex = xFindClosestIndex(x, to);\n    } else {\n      toIndex = x.length - 1;\n    }\n  }\n  if (fromIndex > toIndex) [fromIndex, toIndex] = [toIndex, fromIndex];\n  return { fromIndex, toIndex };\n}\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\n// MODULES //\n\nvar objectKeys = require( 'object-keys' );\n\n\n// TYPED ARRAY FUNCTIONS //\n\n/**\n* Create functions for copying typed arrays.\n*/\nvar typedArrays = {\n\t'Int8Array': null,\n\t'Uint8Array': null,\n\t'Uint8ClampedArray': null,\n\t'Int16Array': null,\n\t'Uint16Array': null,\n\t'Int32Array': null,\n\t'Uint32Array': null,\n\t'Float32Array': null,\n\t'Float64Array': null\n};\n\n(function createTypedArrayFcns() {\n\t/* jshint evil:true */\n\tvar keys = objectKeys( typedArrays );\n\tvar len = keys.length;\n\tvar key;\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tkey = keys[ i ];\n\t\ttypedArrays[ key ] = new Function( 'arr', 'return new '+key+'( arr );' );\n\t}\n})();\n\n\n// EXPORTS //\n\nmodule.exports = typedArrays;\n","'use strict';\n\n// MODULES //\n\nvar deepCopy = require( 'utils-copy' );\nvar getKeys = require( 'object-keys' ).shim();\n\n\n// COPY ERROR //\n\n/**\n* FUNCTION: copy( error )\n*\tCopies an error.\n*\n* @param {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error - error to copy\n* @returns {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error copy\n*/\nfunction copy( error ) {\n\t/* jshint newcap:false */\n\tvar keys;\n\tvar desc;\n\tvar key;\n\tvar err;\n\tvar i;\n\tif ( !( error instanceof Error ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide an error object. Value: `' + error + '`.' );\n\t}\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = getKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = Object.getOwnPropertyDescriptor( error, key );\n\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\tdesc.value = deepCopy( error[ key ] );\n\t\t}\n\t\tObject.defineProperty( err, key, desc );\n\t}\n\treturn err;\n} // end FUNCTION copy()\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_array = {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number$1(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number$1(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      // Coerce values to numbers.\n      for (i = 0; i < n; ++i) {\n        values[i] = +value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = +xz[0],\n          x1 = +xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\n      // Coerce thresholds to numbers, ignoring any outside the domain.\n      var m = tz.length;\n      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      if (!arguments.length) return threshold;\n      threshold = typeof _ === \"function\" ? _\n          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n          : constant(+_);\n      return histogram;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number$1;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values.sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var version = \"0.7.1\";\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n}));","/**\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xSubtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isAnyArray from 'is-any-array';\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {DataXY} [data={}]\n */\nexport function xyCheck(data = {}) {\n  if (!isAnyArray(data.x) || !isAnyArray(data.y)) {\n    throw new Error('Points must be an object of x and y arrays');\n  }\n  if (data.x.length !== data.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n","import { xGetFromToIndex } from '../x/xGetFromToIndex';\n\nimport { xyCheck } from './xyCheck';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for xyIntegration in the X scale\n * @param {number} [options.fromIndex=0] - First point for xyIntegration\n * @param {number} [options.to] - Last value for xyIntegration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for xyIntegration\n * @return {number} xyIntegration value on the specified range\n */\n\nexport function xyIntegration(data = {}, options = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n  if (x.length < 2) return 0;\n  const { fromIndex, toIndex } = xGetFromToIndex(x, options);\n  let currentxyIntegration = 0;\n  for (let i = fromIndex; i < toIndex; i++) {\n    currentxyIntegration += ((x[i + 1] - x[i]) * (y[i + 1] + y[i])) / 2;\n  }\n\n  return currentxyIntegration;\n}\n","import { xGetFromToIndex } from '../x/xGetFromToIndex';\n\nimport { xyCheck } from './xyCheck';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for xyIntegration in the X scale\n * @param {number} [options.fromIndex=0] - First point for xyIntegration\n * @param {number} [options.to] - Last value for xyIntegration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for xyIntegration\n * @return {object}\n */\n\nexport function xyMaxYPoint(data = {}, options = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = xGetFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex], index: fromIndex };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] > current.y) current = { x: x[i], y: y[i], index: i };\n  }\n\n  return current;\n}\n","import { xGetFromToIndex } from '../x/xGetFromToIndex';\n\nimport { xyCheck } from './xyCheck';\n/**\n * Finds the max y value in a range and return a {x,y} point\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for xyIntegration in the X scale\n * @param {number} [options.fromIndex=0] - First point for xyIntegration\n * @param {number} [options.to] - Last value for xyIntegration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for xyIntegration\n * @return {object}\n */\n\nexport function xyMinYPoint(data = {}, options = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n  if (x.length < 2) return 0;\n\n  const { fromIndex, toIndex } = xGetFromToIndex(x, options);\n\n  let current = { x: x[fromIndex], y: y[fromIndex], index: fromIndex };\n  for (let i = fromIndex; i <= toIndex; i++) {\n    if (y[i] < current.y) current = { x: x[i], y: y[i], index: i };\n  }\n\n  return current;\n}\n","import { getBoxPlotData } from '../spectra/getBoxPlotData';\n\nexport function getBoxPlotAnnotations(spectra, options = {}) {\n  const {\n    q13FillColor = '#000',\n    q13FillOpacity = 0.3,\n    q2StrokeColor = '#000',\n    q2StrokeWidth = 3,\n    minMaxFillColor = '#000',\n    minMaxFillOpacity = 0.15,\n  } = options;\n  let annotations = [];\n\n  let data = getBoxPlotData(spectra);\n  if (q13FillOpacity && q13FillColor) {\n    let q13 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q1[i],\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q13.push({\n        x: data.x[i],\n        y: data.Q3[i],\n      });\n    }\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: q13FillColor,\n        fillOpacity: q13FillOpacity,\n        strokeWidth: 0.0000001,\n        position: q13,\n      },\n    });\n  }\n\n  if (q2StrokeColor && q2StrokeWidth) {\n    let q2 = [];\n    for (let i = 0; i < data.x.length; i++) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i],\n      });\n    }\n    // Temp code because polyline is not working\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      q2.push({\n        x: data.x[i],\n        y: data.Q2[i],\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        strokeWidth: q2StrokeWidth,\n        strokeColor: q2StrokeColor,\n        position: q2,\n      },\n    });\n  }\n\n  if (minMaxFillColor && minMaxFillOpacity) {\n    let minMax = [];\n    for (let i = 0; i < data.x.length; i++) {\n      minMax.push({\n        x: data.x[i],\n        y: data.min[i],\n      });\n    }\n    for (let i = data.x.length - 1; i >= 0; i--) {\n      minMax.push({\n        x: data.x[i],\n        y: data.max[i],\n      });\n    }\n\n    annotations.push({\n      type: 'polygon',\n      layer: 0,\n      properties: {\n        fillColor: minMaxFillColor,\n        fillOpacity: minMaxFillOpacity,\n        strokeWidth: 0.0000001,\n        strokeColor: '#FFF',\n        position: minMax,\n      },\n    });\n  }\n\n  return annotations;\n}\n","import { xBoxPlot } from 'ml-spectra-processing';\n\n/**\n * @private\n * @param {*} spectra\n */\n\nexport function getBoxPlotData(spectra) {\n  let matrix = [];\n  let x = spectra[0].normalized.x;\n  for (let spectrum of spectra) {\n    matrix.push(spectrum.normalized.y);\n  }\n\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let result;\n  let aColumn = new Float64Array(nbRow);\n  for (let column = 0; column < nbColumn; column++) {\n    for (let row = 0; row < nbRow; row++) {\n      aColumn[row] = matrix[row][column];\n    }\n    let info = xBoxPlot(aColumn);\n    if (!result) {\n      result = { x };\n      for (let key in info) {\n        result[key] = [];\n      }\n    }\n    for (let key in info) {\n      result[key].push(info[key]);\n    }\n  }\n  return result;\n}\n","export function addChartDataStyle(data, spectrum) {\n  data.styles = {\n    unselected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 1,\n      lineStyle: 1,\n    },\n    selected: {\n      lineColor: spectrum.meta.color || 'darkgrey',\n      lineWidth: 3,\n      lineStyle: 1,\n    },\n  };\n  data.label = spectrum.meta.id || spectrum.id;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","/**\n * @private\n * @param {*} spectra\n * @param {object} options\n */\n\nexport function getNormalizedData(spectra, options = {}) {\n  const { ids } = options;\n\n  let matrix = [];\n  let meta = [];\n  let currentIDs = [];\n  let x = [];\n\n  if (Array.isArray(spectra) && spectra.length > 0) {\n    for (let spectrum of spectra) {\n      if (!ids || ids.includes(spectrum.id)) {\n        currentIDs.push(spectrum.id);\n        matrix.push(spectrum.normalized.y);\n        meta.push(spectrum.meta);\n      }\n    }\n    x = spectra[0].normalized.x;\n  }\n\n  return { ids: currentIDs, matrix, meta, x };\n}\n","/**\n * @private\n * @param {Array<object>} [metadata]\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {string} [options.propertyName=\"category\"]\n */\n\nexport function getCategoriesStats(metadata, options = {}) {\n  const { propertyName = 'category' } = options;\n  let categories = {};\n  let classNumber = 0;\n  for (let metadatum of metadata) {\n    let value = metadatum[propertyName];\n    if (!categories[value]) {\n      categories[value] = {\n        classNumber: classNumber++,\n        counter: 0,\n      };\n    }\n    categories[value].counter++;\n  }\n  return categories;\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  // TODO to be improved using 2 array {x:[], y:[]}\n  let currentData = [];\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.push(currentX);\n                currentData.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","export default function parsePeakTable(spectrum, value, result) {\n  let removeCommentRegExp = /\\$\\$.*/;\n  let peakTableSplitRegExp = /[,\\t ]+/;\n\n  spectrum.isPeaktable = true;\n  let values;\n  let currentData = [];\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = [];\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.push(parseFloat(values[0]));\n    currentData.push(parseFloat(values[1]));\n  }\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.length / 2;\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = new Array(xSize);\n    let xVector = spectra[i].data;\n    for (let j = 0; j < xSize; j++) {\n      let value = xVector[j * 2 + 1];\n      z[i][j] = value;\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data[0];\n  const lastX = spectra[0].data[spectra[0].data.length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: getMedian(z[0].map(Math.abs)),\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n  if (spectrum.observeFrequency) {\n    if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n      spectrum.xUnit = 'PPM';\n      spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n      spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n      spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n      spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n    }\n  }\n  if (spectrum.shiftOffsetVal) {\n    let shift = spectrum.firstX - spectrum.shiftOffsetVal;\n    spectrum.firstX = spectrum.firstX - shift;\n    spectrum.lastX = spectrum.lastX - shift;\n  }\n}\n","import { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparator = /[, \\t]+/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  dynamicTyping: false,\n  xy: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\nexport default function convert(jcamp, options) {\n  options = Object.assign({}, defaultOptions, options);\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        let xIndex = -1;\n        let yIndex = -1;\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        if (infos[0].indexOf('++') > 0) {\n          let firstVariable = infos[0].replace(\n            /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n            '$1',\n          );\n          let secondVariable = infos[0].replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n          xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n          yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n        }\n\n        if (xIndex === -1) xIndex = 0;\n        if (yIndex === -1) yIndex = 0;\n\n        if (currentEntry.ntuples.first) {\n          if (currentEntry.ntuples.first.length > xIndex) {\n            spectrum.firstX = currentEntry.ntuples.first[xIndex];\n          }\n          if (currentEntry.ntuples.first.length > yIndex) {\n            spectrum.firstY = currentEntry.ntuples.first[yIndex];\n          }\n        }\n        if (currentEntry.ntuples.last) {\n          if (currentEntry.ntuples.last.length > xIndex) {\n            spectrum.lastX = currentEntry.ntuples.last[xIndex];\n          }\n          if (currentEntry.ntuples.last.length > yIndex) {\n            spectrum.lastY = currentEntry.ntuples.last[yIndex];\n          }\n        }\n        if (\n          currentEntry.ntuples.vardim &&\n          currentEntry.ntuples.vardim.length > xIndex\n        ) {\n          spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n        }\n        if (currentEntry.ntuples.factor) {\n          if (currentEntry.ntuples.factor.length > xIndex) {\n            spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n          }\n          if (currentEntry.ntuples.factor.length > yIndex) {\n            spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n          }\n        }\n        if (currentEntry.ntuples.units) {\n          if (currentEntry.ntuples.units.length > xIndex) {\n            spectrum.xUnit = currentEntry.ntuples.units[xIndex];\n          }\n          if (currentEntry.ntuples.units.length > yIndex) {\n            spectrum.yUnit = currentEntry.ntuples.units[yIndex];\n          }\n        }\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          if (!spectrum.deltaX) {\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.indexOf('nD') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.indexOf('nD') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnit = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnit = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$SFO2') {\n      if (!currentEntry.indirectFrequency) {\n        currentEntry.indirectFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.twoD) {\n        currentEntry.yType = dataValue.split(ntuplesSeparator)[0];\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n      let pageSymbolIndex = currentEntry.ntuples.symbol.indexOf(\n        spectrum.pageSymbol,\n      );\n      let unit = '';\n      if (\n        currentEntry.ntuples.units &&\n        currentEntry.ntuples.units[pageSymbolIndex]\n      ) {\n        unit = currentEntry.ntuples.units[pageSymbolIndex];\n      }\n      if (currentEntry.indirectFrequency && unit !== 'PPM') {\n        spectrum.pageValue /= currentEntry.indirectFrequency;\n      }\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n      let value = dataValue.trim();\n      if (options.dynamicTyping && !isNaN(value)) {\n        value = Number(value);\n      }\n      if (currentEntry.info[label]) {\n        if (!Array.isArray(currentEntry.info[label])) {\n          currentEntry.info[label] = [currentEntry.info[label]];\n        }\n        currentEntry.info[label].push(value);\n      } else {\n        currentEntry.info[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && options.wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (entry.spectra && entry.spectra.length > 0) {\n        for (let spectrum of entry.spectra) {\n          if (spectrum.data) {\n            let data = spectrum.data;\n            let newData = {\n              x: new Array(data.length / 2),\n              y: new Array(data.length / 2),\n            };\n            for (let k = 0; k < data.length; k = k + 2) {\n              newData.x[k / 2] = data[k];\n              newData.y[k / 2] = data[k + 1];\n            }\n            spectrum.data = newData;\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n  }\n}\n","export function getJcampKind(data) {\n  let datatype = data.dataType.toLowerCase();\n  let yUnit = data.spectra[0].yUnit.toLowerCase();\n\n  if (datatype.match(/infrared/)) {\n    if (yUnit.match(/absorbance/)) {\n      return IR_ABSORBANCE;\n    } else {\n      return IR_TRANSMITTANCE;\n    }\n  }\n  return undefined;\n}\n\nexport const IR_TRANSMITTANCE = {\n  normalization: {},\n  importation: {\n    converter: (transmittance) => -Math.log10(transmittance),\n  },\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance',\n  },\n};\n\nexport const IR_ABSORBANCE = {\n  normalization: {},\n  kind: 'Infrared',\n  display: {\n    xLabel: 'wavelength [cm-1]',\n    xInverted: true,\n    yLabel: 'Absorbance',\n  },\n};\n\nexport const nmr1H = {\n  display: {\n    xLabel: 'δ [ppm]',\n    xInverted: true,\n    yLabel: 'Intensity',\n  },\n};\n\nexport const nmr13C = {\n  display: {\n    xLabel: 'δ [ppm]',\n    xInverted: true,\n    yLabel: 'Intensity',\n  },\n};\n","import { convert } from 'jcampconverter';\n\nimport { getJcampKind } from '../Kinds';\n/**\n * Create a spectrum from a jcamp\n * @param {string} jcampText - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nexport default function jcamp(jcampText) {\n  const parsed = convert(jcampText, { xy: true, keepRecordsRegExp: /TITLE/ })\n    .flatten[0];\n  const kind = getJcampKind(parsed);\n  const data = parsed.spectra[0].data;\n  const meta = parsed.info;\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data, kind, meta };\n}\n","import uniqueXFunction from 'ml-arrayxy-uniquex';\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options={}]\n * @param {boolean} [options.rescale = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.min(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {object{x:<Array<number>>,y:<Array<number>>}\n */\nexport function parseXY(text, options = {}) {\n  let {\n    rescale = false,\n    uniqueX = false,\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Number.MAX_SAFE_INTEGER,\n    minNumberColumns = 2,\n  } = options;\n\n  maxNumberColumns = Math.max(maxNumberColumns, xColumn + 1, yColumn + 1);\n  minNumberColumns = Math.max(xColumn + 1, yColumn + 1, minNumberColumns);\n\n  let lines = text.split(/[\\r\\n]+/);\n\n  let maxY = Number.MIN_VALUE;\n  let result = { x: [], y: [] };\n  let info = [];\n  for (let l = 0; l < lines.length; l++) {\n    let line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      let fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n        fields.length >= minNumberColumns &&\n        fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result.x.push(x);\n        result.y.push(y);\n      }\n    } else if (line) {\n      info.push({ position: result.x.length, value: line });\n    }\n  }\n\n  if (uniqueX) {\n    uniqueXFunction(result);\n  }\n\n  if (rescale) {\n    for (let i = 0; i < result.y.length; i++) {\n      result.y[i] /= maxY;\n    }\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result,\n  };\n}\n","\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] : Object of points contains property x (an array) and y (an array)\n * @return points\n */\n\nexport default function uniqueX(points = {}) {\n  const { x, y } = points;\n  if (x.length < 2) return;\n  if (x.length !== y.length) {\n    throw new Error('The X and Y arrays mush have the same length');\n  }\n\n  let current = x[0];\n  let counter = 0;\n\n  for (let i = 1; i < x.length; i++) {\n    if (current !== x[i]) {\n      counter++;\n      current = x[i];\n      x[counter] = x[i];\n      if (i !== counter) {\n        y[counter] = 0;\n      }\n    }\n    if (i !== counter) {\n      y[counter] += y[i];\n    }\n  }\n\n  x.length = counter + 1;\n  y.length = counter + 1;\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\n/**\n *\n * @param {Array} input\n * @param {object} [options={}]\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n */\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import { xFindClosestIndex } from 'ml-spectra-processing';\n\nexport function getFromToIndex(xs, range) {\n  let { from, to } = range;\n  if (from === undefined) {\n    from = xs[0];\n  }\n  if (to === undefined) {\n    to = xs[xs.length - 1];\n  }\n\n  return {\n    fromIndex: xFindClosestIndex(xs, from),\n    toIndex: xFindClosestIndex(xs, to),\n  };\n}\n","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","export { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\n\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (Array.isArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n)\n    };\n  }\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\n\nexport default class SimpleLinearRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = [y.intercept, y.slope];\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'simpleLinearRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(x) {\n    return this.slope * x + this.intercept;\n  }\n\n  computeX(y) {\n    return (y - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    let result = 'f(x) = ';\n    if (this.slope !== 0) {\n      const xFactor = maybeToPrecision(this.slope, precision);\n      result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\n      if (this.intercept !== 0) {\n        const absIntercept = Math.abs(this.intercept);\n        const operator = absIntercept === this.intercept ? '+' : '-';\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'simpleLinearRegression') {\n      throw new TypeError('not a SLR model');\n    }\n    return new SimpleLinearRegression(true, json);\n  }\n}\n\nfunction regress(slr, x, y) {\n  const n = x.length;\n  let xSum = 0;\n  let ySum = 0;\n\n  let xSquared = 0;\n  let xY = 0;\n\n  for (let i = 0; i < n; i++) {\n    xSum += x[i];\n    ySum += y[i];\n    xSquared += x[i] * x[i];\n    xY += x[i] * y[i];\n  }\n\n  const numerator = n * xY - xSum * ySum;\n  slr.slope = numerator / (n * xSquared - xSum * xSum);\n  slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\n  slr.coefficients = [slr.intercept, slr.slope];\n}\n","export default function checkArraySize(x, y) {\n  if (!Array.isArray(x) || !Array.isArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","import { xSubtract, xyMaxYPoint, xyIntegration } from 'ml-spectra-processing';\n\nimport { getNormalizedData } from './getNormalizedData';\nimport { getFromToIndex } from './scaled/getFromToIndex';\nimport { max } from './scaled/max';\nimport { min } from './scaled/min';\nimport { minMax } from './scaled/minMax';\nimport { range as rangeFct } from './scaled/range';\n/**\n * @private\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {boolean} [options.relative=false]\n * @param {Array} [options.ranges] Array of object containing {from:'', to:'', label:''}\n * @param {Array} [options.calculations] Array of object containing {label:'', formula:''}\n * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[], ranges:[object] }\n */\n\nexport function getScaledData(spectraProcessor, options = {}) {\n  if (!spectraProcessor.spectra || !spectraProcessor.spectra[0]) return {};\n  const {\n    range,\n    targetID,\n    relative,\n    method,\n    ids,\n    ranges,\n    calculations,\n  } = options;\n  let targetSpectrum =\n    spectraProcessor.getSpectrum(targetID) || spectraProcessor.spectra[0];\n  let spectra = spectraProcessor.getSpectra(ids);\n  let result;\n\n  if (method === '' || method === undefined) {\n    result = getNormalizedData(spectra);\n  } else {\n    let matrix;\n    switch (method.toLowerCase()) {\n      case 'min':\n        matrix = min(spectra, targetSpectrum, range);\n        break;\n      case 'max':\n        matrix = max(spectra, targetSpectrum, range);\n        break;\n      case 'minmax':\n        matrix = minMax(spectra, targetSpectrum, range);\n        break;\n      case 'range':\n        matrix = rangeFct(spectra, targetSpectrum, range);\n        break;\n      default:\n        throw new Error(`getScaledData: unknown method: ${method}`);\n    }\n    let meta = [];\n    let currentIDs = [];\n    for (let spectrum of spectra) {\n      currentIDs.push(spectrum.id);\n      meta.push(spectrum.meta);\n    }\n    let x = spectra[0].normalized.x;\n    result = { ids: currentIDs, matrix, meta, x };\n  }\n\n  if (relative) {\n    for (let i = 0; i < result.matrix.length; i++) {\n      result.matrix[i] = xSubtract(\n        result.matrix[i],\n        targetSpectrum.normalized.y,\n      );\n    }\n  }\n\n  if (ranges) {\n    result.ranges = [];\n    for (let i = 0; i < result.matrix.length; i++) {\n      let rangesCopy = JSON.parse(JSON.stringify(ranges));\n      let yNormalized = result.matrix[i];\n      let resultRanges = {};\n      result.ranges.push(resultRanges);\n      for (let currentRange of rangesCopy) {\n        if (currentRange.label) {\n          let fromToIndex = getFromToIndex(\n            targetSpectrum.normalized.x,\n            currentRange,\n          );\n          currentRange.integration = xyIntegration(\n            { x: result.x, y: yNormalized },\n            fromToIndex,\n          );\n          currentRange.maxPoint = xyMaxYPoint(\n            { x: result.x, y: yNormalized },\n            fromToIndex,\n          );\n          resultRanges[currentRange.label] = currentRange;\n        }\n      }\n    }\n  }\n\n  if (calculations && result.ranges) {\n    result.calculations = result.ranges.map(() => {\n      return {};\n    });\n    const parameters = Object.keys(result.ranges[0]);\n    for (let calculation of calculations) {\n      // eslint-disable-next-line no-new-func\n      const callback = new Function(\n        ...parameters,\n        `return ${calculation.formula}`,\n      );\n      for (let i = 0; i < result.ranges.length; i++) {\n        let oneRanges = result.ranges[i];\n        let values = parameters.map((key) => oneRanges[key].integration);\n        result.calculations[i][calculation.label] = callback(...values);\n      }\n    }\n  }\n\n  return result;\n}\n","import { xyMinYPoint, xMultiply } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function min(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = xyMinYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => xyMinYPoint(spectrum.normalized, fromToIndex).y,\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(xMultiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n","import { xyMaxYPoint, xMultiply } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function max(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = xyMaxYPoint(targetSpectrum.normalized, fromToIndex).y;\n\n  let values = spectra.map(\n    (spectrum) => xyMaxYPoint(spectrum.normalized, fromToIndex).y,\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(xMultiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n","import SimpleLinearRegression from 'ml-regression-simple-linear';\nimport { xyMinYPoint, xyMaxYPoint } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function minMax(spectra, targetSpectrum, range = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, range);\n\n  let targetValue = {\n    min: xyMinYPoint(targetSpectrum.normalized, fromToIndex).y,\n    max: xyMaxYPoint(targetSpectrum.normalized, fromToIndex).y,\n  };\n\n  let values = spectra.map((spectrum) => {\n    return {\n      min: xyMinYPoint(spectrum.normalized, fromToIndex).y,\n      max: xyMaxYPoint(spectrum.normalized, fromToIndex).y,\n    };\n  });\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    const regression = new SimpleLinearRegression(\n      [targetValue.min, targetValue.max],\n      [values[i].min, values[i].max],\n    );\n\n    let length = spectrum.normalized.y.length;\n    let scaled = new Array(length);\n    for (let j = 0; j < length; j++) {\n      scaled[j] = regression.computeX(spectrum.normalized.y[j]);\n    }\n    matrix.push(scaled);\n  }\n\n  return matrix;\n}\n","import { xyIntegration, xMultiply } from 'ml-spectra-processing';\n\nimport { getFromToIndex } from './getFromToIndex';\n\nexport function range(spectra, targetSpectrum, currentrange = {}) {\n  let fromToIndex = getFromToIndex(targetSpectrum.normalized.x, currentrange);\n\n  let targetValue = xyIntegration(targetSpectrum.normalized, fromToIndex);\n\n  let values = spectra.map((spectrum) =>\n    xyIntegration(spectrum.normalized, fromToIndex),\n  );\n\n  let matrix = [];\n  for (let i = 0; i < spectra.length; i++) {\n    let spectrum = spectra[i];\n    let factor = targetValue / values[i];\n    matrix.push(xMultiply(spectrum.normalized.y, factor));\n  }\n\n  return matrix;\n}\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @param {number} [options.maxValue=1] new max value for algo max\n * @param {number} [options.sumValue=1] new max value for algo absolute and sum\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","import { minMax } from 'ml-stat/array';\n\nimport { getData } from './getData';\nimport { getNormalized } from './getNormalized';\nimport { updateRangesInfo } from './updateRangesInfo';\n\n/**\n * Class allowing manipulate one IR spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.x=[]] - x values\n * @param {Array} [json.y=[]] - y values\n */\nexport class Spectrum {\n  /**\n   *\n   * @param {array} x\n   * @param {array} y\n   * @param {string} id\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.normalization]\n   * @param {object} [options.normalized]\n   */\n  constructor(x, y, id, options = {}) {\n    const { meta = {}, normalization = {}, normalized } = options;\n\n    if (x && x.length > 1 && x[0] > x[1]) {\n      this.x = x.reverse();\n      this.y = y.reverse();\n    } else {\n      this.x = x || [];\n      this.y = y || [];\n    }\n    this.id = id;\n    this.meta = meta;\n    this.normalizedBoundary = { x: { min: 0, max: 0 }, y: { min: 0, max: 0 } };\n    if (normalized) {\n      this.normalized = normalized;\n      this.updateNormalizedBoundary();\n    } else {\n      this.updateNormalization(normalization);\n    }\n\n    this.updateMemory();\n  }\n\n  get minX() {\n    return this.x[0];\n  }\n\n  get maxX() {\n    return this.x[this.x.length - 1];\n  }\n\n  updateMemory() {\n    let original = ((this.x && this.x.length) || 0) * 16;\n    let normalized = this.normalized.x.length * 16;\n    this.memory = { original, normalized, total: original + normalized };\n  }\n\n  removeOriginal() {\n    this.x = undefined;\n    this.y = undefined;\n    this.updateMemory();\n  }\n\n  getXY() {\n    if (!Array.isArray(this.x) || !Array.isArray(this.y)) {\n      throw new Error('Can not get normalized data');\n    }\n    return { x: this.x, y: this.y };\n  }\n}\n\nSpectrum.prototype.getData = function (options) {\n  return getData(this, options);\n};\n\nSpectrum.prototype.updateNormalization = function (normalization) {\n  this.normalized = getNormalized(this, normalization);\n  this.ranges = {};\n  this.updateMemory();\n  this.updateNormalizedBoundary();\n};\n\nSpectrum.prototype.updateRangesInfo = function (ranges) {\n  updateRangesInfo(this, ranges);\n};\n\nSpectrum.prototype.updateNormalizedBoundary = function () {\n  this.normalizedBoundary.x = {\n    min: this.normalized.x[0],\n    max: this.normalized.x[this.normalized.x.length - 1],\n  };\n  this.normalizedBoundary.y = minMax(this.normalized.y);\n};\n","import filterX from 'ml-array-xy-filter-x';\n\n/**\n *\n * @private\n * @param {Spectrum} spectrum\n * @param {object} [options.xFilter={}]\n * @param {array} [options.xFilter.from]\n * @param {array} [options.xFilter.to]\n * @param {array} [options.xFilter.exclusions=[]]\n * @param {array} [options.yFactor=1]\n */\n\nexport function getData(spectrum, options = {}) {\n  const { xFilter = {}, yFactor = 1 } = options;\n  let data = { x: spectrum.x, y: spectrum.y };\n\n  if (xFilter) {\n    data = filterX({ x: spectrum.x, y: spectrum.y }, xFilter);\n  }\n  if (yFactor && yFactor !== 1) {\n    data.y = data.y.map((y) => y * yFactor);\n  }\n  return data;\n}\n","import normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport Stat from 'ml-stat/array';\n\n/**\n *\n * @private\n * @param {*} spectrum\n * @param {*} options\n */\nexport function getNormalized(spectrum, options = {}) {\n  if (!Array.isArray(spectrum.x) || !Array.isArray(spectrum.y)) {\n    throw new Error(\n      'getNormalized: Can not get normalized data, missing original data.',\n    );\n  }\n\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints = 1024,\n    filters = [],\n    exclusions = [],\n  } = options;\n\n  let ys = spectrum.y.slice(0);\n\n  for (let filter of filters) {\n    switch (filter.name) {\n      case 'centerMean': {\n        let mean = Stat.mean(spectrum.y);\n        let meanFct = (y) => y - mean;\n        ys = ys.map(meanFct);\n        break;\n      }\n      case 'scaleSD': {\n        let std = Stat.standardDeviation(spectrum.y);\n        let stdFct = (y) => y / std;\n        ys = ys.map(stdFct);\n        break;\n      }\n      case 'normalize': {\n        ys = normed(ys);\n        break;\n      }\n      case 'rescale': {\n        ys = rescale(ys);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n  let result = equallySpaced(\n    { x: spectrum.x, y: ys },\n    { from, to, numberOfPoints, exclusions },\n  );\n  return result;\n}\n","import {\n  xyIntegration,\n  xyMaxYPoint,\n  xyMinYPoint,\n  xFindClosestIndex,\n} from 'ml-spectra-processing';\n\n/**\n * @private\n * @param {*} spectrum\n * @param {*} ranges\n */\nexport function updateRangesInfo(spectrum, ranges = []) {\n  spectrum.ranges = {};\n  for (let range of ranges) {\n    range = JSON.parse(JSON.stringify(range));\n    spectrum.ranges[range.label] = range;\n    let fromToIndex = {\n      fromIndex: xFindClosestIndex(spectrum.normalized.x, range.from),\n      toIndex: xFindClosestIndex(spectrum.normalized.x, range.to),\n    };\n    range.integration = xyIntegration(spectrum.normalized, fromToIndex);\n    range.maxPoint = xyMaxYPoint(spectrum.normalized, fromToIndex);\n    range.minPoint = xyMinYPoint(spectrum.normalized, fromToIndex);\n    range.x = spectrum.normalized.x.slice(\n      fromToIndex.fromIndex,\n      fromToIndex.toIndex + 1,\n    );\n    range.y = spectrum.normalized.y.slice(\n      fromToIndex.fromIndex,\n      fromToIndex.toIndex + 1,\n    );\n  }\n}\n","import { getAutocorrelationChart } from './jsgraph/getAutocorrelationChart';\nimport { getBoxPlotAnnotations } from './jsgraph/getBoxPlotAnnotations';\nimport { getChart } from './jsgraph/getChart';\nimport { getNormalizationAnnotations } from './jsgraph/getNormalizationAnnotations';\nimport { getNormalizedChart } from './jsgraph/getNormalizedChart';\nimport { getScaledChart } from './jsgraph/getScaledChart';\nimport { getTrackAnnotation } from './jsgraph/getTrackAnnotation';\nimport { getCategoriesStats } from './metadata/getCategoriesStats';\nimport { getClasses } from './metadata/getClasses';\nimport { getMetadata } from './metadata/getMetadata';\nimport parseJcamp from './parser/jcamp';\nimport parseMatrix from './parser/matrix';\nimport parseText from './parser/text';\nimport { getAutocorrelation } from './spectra/getAutocorrelation';\nimport { getMeanData } from './spectra/getMeanData';\nimport { getNormalizedData } from './spectra/getNormalizedData';\nimport { getNormalizedText } from './spectra/getNormalizedText';\nimport { getScaledData } from './spectra/getScaledData';\nimport { Spectrum } from './spectrum/Spectrum';\nimport { xFindClosestIndex } from 'ml-spectra-processing';\n\nexport class SpectraProcessor {\n  /**\n   * Manager a large number of spectra with the possibility to normalize the data\n   * and skip the original data.\n   * @param {object} [options={}]\n   * @param {boolean} [options.maxMemory=64M]\n   * @param {object} [options.normalization={}] options to normalize the spectra before comparison\n   * @param {number} [options.normalization.from]\n   * @param {number} [options.normalization.to]\n   * @param {number} [options.normalization.numberOfPoints]\n   * @param {array<object>} [options.normalization.filters]\n   * @param {string} [options.normalization.filters.X.name]\n   * @param {object} [options.normalization.filters.X.options]\n   * @param {array<object>} [options.normalization.exclusions]\n   * @param {string} [options.normalization.exclusions.X.from]\n   * @param {object} [options.normalization.exclusions.X.to]\n   */\n  constructor(options = {}) {\n    this.normalization = options.normalization;\n    this.maxMemory = options.maxMemory || 64 * 1024 * 1024;\n    this.keepOriginal = true;\n    this.spectra = [];\n    this.boundaries = {\n      minX: Number.MAX_VALUE,\n      maxX: Number.MIN_VALUE,\n      minY: Number.MAX_VALUE,\n      maxY: Number.MIN_VALUE,\n    };\n  }\n\n  getNormalizationAnnotations() {\n    return getNormalizationAnnotations(\n      this.normalization,\n      this.getNormalizedBoundary(),\n    );\n  }\n\n  /**\n   * Recalculate the normalized data using the stored original data if available\n   * This will throw an error in the original data is not present\n   * @param {number} [normalization.from]\n   * @param {number} [normalization.to]\n   * @param {number} [normalization.numberOfPoints]\n   * @param {array<object>} [normalization.filters]\n   * @param {string} [normalization.filters.X.name]\n   * @param {object} [normalization.filters.X.options]\n   * @param {array<object>} [normalization.exclusions]\n   * @param {string} [normalization.exclusions.X.from]\n   * @param {object} [normalization.exclusions.X.to]\n   */\n  setNormalization(normalization = {}) {\n    if (JSON.stringify(this.normalization) === JSON.stringify(normalization)) {\n      return;\n    }\n    this.normalization = normalization;\n    for (let spectrum of this.spectra) {\n      spectrum.updateNormalization(this.normalization);\n    }\n  }\n\n  getNormalization() {\n    return this.normalization;\n  }\n\n  /**\n   * Returns an object {x:[], y:[]} containing the autocorrelation for the\n   * specified index\n   * @param {integer} [index|undefined] x index of the spectrum to autocorrelate\n   * @param {object} [options={}]\n   * @param {array} [options.ids=[]] list of ids, by default all spectra\n   * @param {array} [options.x] x value if index is undefined\n   */\n  getAutocorrelation(index, options = {}) {\n    const { x } = options;\n    const normalizedData = this.getNormalizedData(options);\n    if (index === undefined && x !== undefined) {\n      index = xFindClosestIndex(normalizedData.x, x);\n    }\n    return getAutocorrelation(normalizedData, index);\n  }\n\n  /**\n   * Returns a {x:[], y:[]} containg the average of specified spectra\n   * @param {object} [options={}]\n   * @param {array} [options.ids=[]] list of ids, by default all spectra\n   */\n  getMeanData(options) {\n    return getMeanData(this.getNormalizedData(options));\n  }\n\n  /**\n   * Returns an object contains 4 parameters with the normalized data\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   */\n  getNormalizedData(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedData(spectra);\n  }\n\n  /**\n   * Returns a tab separated value containing the normalized data\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] List of spectra ids to export, by default all\n   * @param {string} [options.fs='\\t'] field separator\n   * @param {string} [options.rs='\\n'] record (line) separator\n   * @returns {string}\n   */\n  getNormalizedText(options = {}) {\n    const { ids } = options;\n    let spectra = this.getSpectra(ids);\n    return getNormalizedText(spectra, options);\n  }\n\n  getMinMaxX() {\n    let min = Number.MAX_VALUE;\n    let max = Number.MIN_VALUE;\n    for (let spectrum of this.spectra) {\n      if (spectrum.minX < min) min = spectrum.minX;\n      if (spectrum.maxX > max) max = spectrum.maxX;\n    }\n    return { min, max };\n  }\n\n  /**\n\n   * Returns an object contains 4 parameters with the scaled data\n   * @param {object} [options={}] scale spectra based on various parameters\n   * @param {object} [options.range] from - to\n   * @param {Array} [options.ids] ids of selected spectra, by default all\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object} { ids:[], matrix:[Array], meta:[object], x:[] }\n   */\n  getScaledData(options) {\n    return getScaledData(this, options);\n  }\n\n  /**\n   * Add from text\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.parserOptions={}] XY parser options\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {object} [options.kind]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromText(text, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = parseText(text, options);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  /**\n   * Add jcamp\n   * By default TITLE from the jcamp will be in the meta information\n   * @param {string} jcamp\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {string} [options.meta.color]\n   * @param {object} [options.id={}]\n   * @param {boolean} [options.force=false] replace existing spectrum (same ID)\n   */\n\n  addFromJcamp(jcamp, options = {}) {\n    if (options.force !== true && options.id && this.contains(options.id)) {\n      return;\n    }\n    let parsed = parseJcamp(jcamp);\n    let meta = { ...parsed.meta, ...(options.meta || {}) };\n    this.addFromData(parsed.data, { meta, id: options.id });\n  }\n\n  updateRangesInfo(options) {\n    for (let spectrum of this.spectra) {\n      spectrum.updateRangesInfo(options);\n    }\n  }\n\n  getMetadata() {\n    return getMetadata(this.spectra);\n  }\n\n  /**\n   *\n   * @param {object} [options={}]\n   * @param {string} [options.propertyName=\"category\"]\n   */\n  getClasses(options) {\n    return getClasses(this.getMetadata(), options);\n  }\n\n  /**\n   *\n   * @param {object} [options={}]\n   * @param {string} [options.propertyName=\"category\"]\n   */\n  getCategoriesStats(options) {\n    return getCategoriesStats(this.getMetadata(), options);\n  }\n\n  /**\n   * Add a spectrum based on the data\n   * @param {object} data {x, y}}\n   * @param {object} [options={}]\n   * @param {object} [options.meta={}]\n   * @param {object} [options.id]\n   * @param {object} [options.normalization={}]\n   * @param {object} [options.normalized]\n   * @return {Spectrum}\n   */\n\n  addFromData(data, options = {}) {\n    if (this.spectra.length === 0) this.keepOriginal = true;\n    const id = options.id || Math.random().toString(36).substring(2, 10);\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.spectra.length;\n    let spectrum = new Spectrum(data.x, data.y, id, {\n      meta: options.meta,\n      normalized: options.normalized,\n      normalization: this.normalization,\n    });\n    this.spectra[index] = spectrum;\n    if (!this.keepOriginal) {\n      spectrum.removeOriginal();\n    } else {\n      let memoryInfo = this.getMemoryInfo();\n      if (memoryInfo.total > this.maxMemory) {\n        this.keepOriginal = false;\n        this.removeOriginals();\n      }\n    }\n  }\n\n  removeOriginals() {\n    for (let spectrum of this.spectra) {\n      spectrum.removeOriginal();\n    }\n  }\n\n  /**\n   * Remove the spectrum from the SpectraProcessor for the specified id\n   * @param {string} id\n   */\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra.splice(index, 1);\n  }\n\n  /**\n   * Remove all the spectra not present in the list\n   * @param {Array} [ids] Array of ids of the spectra to keep\n   */\n  removeSpectraNotIn(ids) {\n    let currentIDs = this.spectra.map((spectrum) => spectrum.id);\n    for (let id of currentIDs) {\n      if (!ids.includes(id)) {\n        this.removeSpectrum(id);\n      }\n    }\n  }\n\n  /**\n   * Checks if the ID of a spectrum exists in the SpectraProcessor\n   * @param {string} id\n   */\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.spectra.length; i++) {\n      let spectrum = this.spectra[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns an array of spectrum from their ids\n   * @param {Array} ids\n   * @returns {Array<Spectrum}\n   */\n  getSpectra(ids) {\n    if (!ids || !Array.isArray(ids)) return this.spectra;\n    let spectra = [];\n    for (let id of ids) {\n      let index = this.getSpectrumIndex(id);\n      if (index !== undefined) {\n        spectra.push(this.spectra[index]);\n      }\n    }\n    return spectra;\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra[index];\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getChart(options) {\n    return getChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the spectra\n   * @returns {object}\n   */\n  getAutocorrelationChart(index, options) {\n    return getAutocorrelationChart(this, index, options);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for the specified index\n   * @returns {object}\n   */\n  getTrackAnnotation(index, options) {\n    return getTrackAnnotation(this.spectra, index, options);\n  }\n\n  /**\n   * Returns a JSGraph annotation object for box plot\n   * @returns {object}\n   */\n  getBoxPlotAnnotations(options) {\n    return getBoxPlotAnnotations(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @returns {object}\n   */\n  getNormalizedChart(options) {\n    return getNormalizedChart(this.spectra, options);\n  }\n\n  /**\n   * Returns a JSGraph chart object for all the scaled normalized spectra\n   * @param {object} [options={}]\n   * @param {Array} [options.ids] ids of the spectra to select, by default all\n   * @param {object} [options.range] from - to\n   * @param {string} [options.targetID=spectra[0].id]\n   * @param {string} [options.method='max'] min, max, range, minMax\n   * @param {boolean} [options.relative=false]\n   * @returns {object}\n   */\n  getScaledChart(options) {\n    return getScaledChart(this, options);\n  }\n\n  getMemoryInfo() {\n    let memoryInfo = { original: 0, normalized: 0, total: 0 };\n    this.spectra.forEach((spectrum) => {\n      let memory = spectrum.memory;\n      memoryInfo.original += memory.original;\n      memoryInfo.normalized += memory.normalized;\n      memoryInfo.total += memory.total;\n    });\n    memoryInfo.keepOriginal = this.keepOriginal;\n    memoryInfo.maxMemory = this.maxMemory;\n    return memoryInfo;\n  }\n\n  getNormalizedBoundary() {\n    let boundary = {\n      x: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n      y: { min: Number.MAX_VALUE, max: Number.MIN_VALUE },\n    };\n    for (let spectrum of this.spectra) {\n      if (spectrum.normalizedBoundary.x.min < boundary.x.min) {\n        boundary.x.min = spectrum.normalizedBoundary.x.min;\n      }\n      if (spectrum.normalizedBoundary.x.max > boundary.x.max) {\n        boundary.x.max = spectrum.normalizedBoundary.x.max;\n      }\n      if (spectrum.normalizedBoundary.y.min < boundary.y.min) {\n        boundary.y.min = spectrum.normalizedBoundary.y.min;\n      }\n      if (spectrum.normalizedBoundary.y.max > boundary.y.max) {\n        boundary.y.max = spectrum.normalizedBoundary.y.max;\n      }\n    }\n    return boundary;\n  }\n\n  /**\n   * Create SpectraProcessor from normalized TSV\n   * @param {string} text\n   * @param {object} [options={}]\n   * @param {object} [options.separator='\\t']\n   */\n  static fromNormalizedMatrix(text, options = {}) {\n    let parsed = parseMatrix(text, options);\n    if (!parsed) {\n      throw new Error('Can not parse TSV file');\n    }\n    let spectraProcessor = new SpectraProcessor();\n\n    spectraProcessor.setNormalization({\n      from: parsed.x[0],\n      to: parsed.x[parsed.x.length - 1],\n      numberOfPoints: parsed.x.length,\n    });\n    spectraProcessor.keepOriginal = false;\n\n    for (let i = 0; i < parsed.ids.length; i++) {\n      spectraProcessor.addFromData(\n        { x: [], y: [] },\n        {\n          normalized: {\n            x: parsed.x,\n            y: parsed.matrix[i],\n          },\n          id: parsed.ids[i],\n          meta: parsed.meta[i],\n        },\n      );\n    }\n\n    return spectraProcessor;\n  }\n}\n","export function getNormalizationAnnotations(filter = {}, boundary) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: Number.MIN_SAFE_INTEGER, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: Number.MAX_SAFE_INTEGER, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n","import { xCorrelation } from 'ml-spectra-processing';\n\n/**\n * @private\n */\n\nexport function getAutocorrelation(normalized, index) {\n  let matrix = normalized.matrix;\n  let nbRow = matrix.length;\n  let nbColumn = matrix[0].length;\n  let array1 = new Float64Array(nbRow);\n  let array2 = new Float64Array(nbRow);\n  let result = new Array(nbColumn);\n  for (let j = 0; j < nbRow; j++) {\n    array1[j] = matrix[j][index];\n  }\n  for (let i = 0; i < nbColumn; i++) {\n    for (let j = 0; j < nbRow; j++) {\n      array2[j] = matrix[j][i];\n    }\n    result[i] = xCorrelation(array1, array2);\n  }\n  return {\n    x: normalized.x,\n    y: result,\n  };\n}\n","import { Matrix } from 'ml-matrix';\n\n/**\n * @private\n */\n\nexport function getMeanData(normalized) {\n  let matrix = new Matrix(normalized.matrix);\n  return {\n    x: normalized.x,\n    y: matrix.mean('column'),\n  };\n}\n","import { getNormalizedData } from './getNormalizedData.js';\n\n/**\n * @private\n * @param {*} spectra\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] field separator\n * @param {string} [options.rs='\\n'] record (line) separator\n */\n\nexport function getNormalizedText(spectra, options = {}) {\n  let { fs = '\\t', rs = '\\n' } = options;\n  let { matrix, meta, ids, x } = getNormalizedData(spectra);\n  let allKeysObject = {};\n  for (let metum of meta) {\n    for (let key of Object.keys(metum)) {\n      let type = typeof metum[key];\n      if (type === 'number' || type === 'string' || type === 'boolean') {\n        allKeysObject[key] = true;\n      }\n    }\n  }\n  let allKeys = Object.keys(allKeysObject);\n\n  let lines = [];\n  let line = [];\n  line.push('id', ...allKeys, ...x);\n  lines.push(line.join(fs));\n\n  for (let i = 0; i < ids.length; i++) {\n    line = [];\n    line.push(ids[i]);\n    for (let key of allKeys) {\n      line.push(meta[i][key]);\n    }\n    line.push(...matrix[i]);\n    lines.push(line.join(fs));\n  }\n\n  return lines.join(rs);\n}\n","import { parseXY } from 'xy-parser';\n\n/**\n * Create a spectrum from a text file\n * @param {string} value - String containing the JCAMP data\n * @return {Spectrum} - new instance of Spectrum with the provided data\n */\nexport default function text(value, options = {}) {\n  const { kind, parserOptions = {} } = options;\n\n  const data = parseXY(value, parserOptions);\n\n  // we convert the data\n  if (kind && kind.importation && kind.importation.converter) {\n    data.y = data.y.map(kind.importation.converter);\n  }\n\n  return { data };\n}\n","/**\n * @private\n * @param {*} spectra\n * @param {object} options\n */\n\nexport function getMetadata(spectra, options = {}) {\n  const { ids } = options;\n\n  let metadata = [];\n\n  if (Array.isArray(spectra) && spectra.length > 0) {\n    for (let spectrum of spectra) {\n      if (!ids || ids.includes(spectrum.id)) {\n        metadata.push(spectrum.meta);\n      }\n    }\n  }\n\n  return metadata;\n}\n","import { getCategoriesStats } from './getCategoriesStats';\n\n/**\n * @private\n * @param {Array<object>} [metadata]\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {string} [options.propertyName=\"category\"]\n */\n\nexport function getClasses(metadata, options = {}) {\n  const { propertyName = 'category' } = options;\n  const categoriesStats = getCategoriesStats(metadata, options);\n  const result = new Array(metadata.length);\n  for (let i = 0; i < metadata.length; i++) {\n    result[i] = categoriesStats[metadata[i][propertyName]].classNumber;\n  }\n  return result;\n}\n","import { addChartDataStyle } from './addChartDataStyle';\n/**\n * Retrieve a chart with selected original data\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by default all\n * @param {Array} [options.yFactor=1]\n */\nexport function getChart(spectra, options = {}) {\n  const { ids, yFactor, xFilter = {} } = options;\n  let chart = {\n    data: [],\n  };\n\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.getData({ yFactor, xFilter });\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n","import chroma from 'chroma-js';\n\n/**\n * Retrieve a chart with autocorrelation color\n * @param {SpectraProcessor} [spectraProcessor]\n * @param {number} [index]\n * @param {object} [options={}]\n * @param {Array} [options.autocorrelation] precalculated autocorrelation {x,y}\n * @param {Array} [options.maxDataPoints=]\n * @param {array} [options.xFilter.from]\n * @param {array} [options.xFilter.to]\n * @param {array} [options.xFilter.exclusions=[]]\n */\nexport function getAutocorrelationChart(spectraProcessor, index, options = {}) {\n  const {\n    autocorrelation = spectraProcessor.getAutocorrelation(index),\n    xFilter,\n  } = options;\n\n  let max = autocorrelation.y.reduce(function (a, b) {\n    return isNaN(b) ? a : Math.max(a, b);\n  }, Number.MIN_VALUE);\n\n  let min = autocorrelation.y.reduce(function (a, b) {\n    return isNaN(b) ? a : Math.min(a, b);\n  }, Number.MAX_VALUE);\n\n  let colorCallback = chroma\n    .scale(['blue', 'cyan', 'yellow', 'red'])\n    .domain([min, max])\n    .mode('lch');\n\n  let colorScale = autocorrelation.y.map(\n    (y) => `rgb(${colorCallback(y).rgb().join()})`,\n  );\n\n  let mean = spectraProcessor.getMeanData();\n  if (xFilter) {\n    mean = filterX({ x: mean.x, y: mean.y }, xFilter);\n  }\n\n  let colorSpectrum = {\n    type: 'color',\n    x: mean.x,\n    y: mean.y,\n    color: colorScale,\n    styles: {\n      unselected: {\n        lineWidth: 1,\n        lineStyle: 1,\n      },\n      selected: {\n        lineWidth: 3,\n        lineStyle: 1,\n      },\n    },\n  };\n\n  return colorSpectrum;\n}\n","import { getNormalizedData } from '../spectra/getNormalizedData';\n\nexport function getTrackAnnotation(spectra, index, options = {}) {\n  const { ids, showSpectrumID = true } = options;\n  let annotations = [];\n\n  let normalized = getNormalizedData(spectra, { ids });\n\n  if (normalized.ids.length === 0) return annotations;\n  let line = 0;\n\n  // header containing X coordinate\n  annotations.push({\n    type: 'line',\n    position: [\n      { x: `${70}px`, y: `${15 + 15 * line}px` },\n      { x: `${85}px`, y: `${15 + 15 * line}px` },\n    ],\n    strokeWidth: 0.0000001,\n    label: {\n      size: 16,\n      text: `x: ${normalized.x[index].toPrecision(6)}`,\n      position: { x: `${130}px`, y: `${20 + 15 * line}px` },\n    },\n  });\n  line++;\n\n  for (let i = 0; i < normalized.ids.length; i++) {\n    let id = normalized.ids[i];\n    let meta = normalized.meta[i];\n    let y = normalized.matrix[i][index];\n    annotations.push({\n      type: 'line',\n      position: [\n        { x: `${70}px`, y: `${15 + 15 * line}px` },\n        { x: `${85}px`, y: `${15 + 15 * line}px` },\n      ],\n      strokeColor: meta.color,\n      strokeWidth: 2,\n      label: {\n        text: `${y.toPrecision(4)}${showSpectrumID ? ` - ${id}` : ''}`,\n        position: { x: `${90}px`, y: `${20 + 15 * line}px` },\n      },\n    });\n    line++;\n  }\n\n  return annotations;\n}\n","import { addChartDataStyle } from './addChartDataStyle';\nimport filterX from 'ml-array-xy-filter-x';\n\n/**\n * @param {Array<Spectrum>} spectra\n * @param {object} [options={}]\n * @param {array} [options.ids]\n * @param {object} [options.xFilter={}]\n * @param {array} [options.xFilter.from]\n * @param {array} [options.xFilter.to]\n * @param {array} [options.xFilter.exclusions=[]]\n */\n\nexport function getNormalizedChart(spectra, options = {}) {\n  const { ids, xFilter } = options;\n  let chart = {\n    data: [],\n  };\n  for (let spectrum of spectra) {\n    if (!ids || ids.includes(spectrum.id)) {\n      let data = spectrum.normalized;\n      if (xFilter) {\n        data = filterX({ x: data.x, y: data.y }, xFilter);\n      }\n      addChartDataStyle(data, spectrum);\n      chart.data.push(data);\n    }\n  }\n  return chart;\n}\n","import { addChartDataStyle } from './addChartDataStyle';\n/**\n *\n * @param {SpectraProcessor} spectraProcessor\n * @param {object} [options={}] scale spectra based on various parameters\n * @param {object} [options.range] from - to\n * @param {Array} [options.ids] ids of selected spectra\n * @param {string} [options.targetID=spectra[0].id]\n * @param {string} [options.method='max'] min, max, range, minMax\n * @param {Array} [options.ranges] Array of object containing {from:'', to:'', label:''}\n * @param {Array} [options.calculations] Array of object containing {label:'', formula:''}\n * @param {boolean} [options.relative=false]\n */\nexport function getScaledChart(spectraProcessor, options = {}) {\n  let scaled = spectraProcessor.getScaledData(options);\n\n  let chart = {\n    data: [],\n  };\n  if (!scaled || !scaled.matrix) return chart;\n\n  for (let i = 0; i < scaled.matrix.length; i++) {\n    let data = {\n      x: scaled.x,\n      y: Array.from(scaled.matrix[i]), // need to ensure not a typed array\n    };\n    addChartDataStyle(data, { meta: scaled.meta[i], id: scaled.ids[i] });\n    chart.data.push(data);\n  }\n\n  return chart;\n}\n","/**\n * Creates a g\n * @param {string} text - String containing the text data\n * @param {object} [options={}]\n * @param {string} [options.fs='\\t'] Field separator\n * @return {object} - {matrix, data, x, ids}\n */\nexport default function matrix(text, options = {}) {\n  const lines = text.split(/[\\r\\n]+/).filter((value) => value);\n  const { fs = '\\t' } = options;\n  let currentMatrix = [];\n  let ids = [];\n  let meta = [];\n  let x = [];\n\n  let headers = lines[0].split(fs);\n  let labels = [];\n\n  for (let i = 0; i < headers.length; i++) {\n    let header = headers[i];\n    if (isNaN(header)) {\n      labels[i] = header;\n    } else {\n      x = headers.slice(i).map((value) => Number(value));\n      break;\n    }\n  }\n\n  for (let i = 1; i < lines.length; i++) {\n    let line = lines[i];\n    let parts = line.split('\\t');\n    ids.push(parts[0]);\n    let oneMeta = {};\n    meta.push(oneMeta);\n    for (let j = 1; j < parts.length; j++) {\n      if (j < labels.length) {\n        oneMeta[labels[j]] = parts[j];\n      } else {\n        currentMatrix.push(\n          parts.slice(labels.length).map((value) => Number(value)),\n        );\n        break;\n      }\n    }\n  }\n  return { x, meta, matrix: currentMatrix, ids };\n}\n","export function getFilterAnnotations(filter = {}) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: '0px' },\n        { x: exclusion.to, y: '2000px' },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,128,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: Number.MIN_SAFE_INTEGER, y: '0px' },\n        { x: filter.from, y: '2000px' },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: '0px' },\n        { x: Number.MAX_SAFE_INTEGER, y: '2000px' },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n"],"names":["module","limit","x","min","max","classToType","i","list","length","name","toLowerCase","type","obj","Object","prototype","toString","call","PI","Math","utils","clip_rgb","rgb","_clipped","_unclipped","slice","unpack","args","keyOrder","Array","split","filter","k","undefined","map","last","l","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input","format","autodetect","last$1","clip_rgb$1","type$1","Color","len","arguments","me","this","constructor","mode","sorted","sort","a","b","p","chk","test","apply","Error","_rgb","push","hex","join","Color_1","chroma","Function","bind","concat","version","chroma_1","unpack$1","rgb2cmyk_1","ref","r","g","f","c","m","y","unpack$2","cmyk2rgb_1","alpha","unpack$3","type$2","cmyk","unpack$4","last$2","rnd","round","hsl2css_1","hsla","unpack$5","rgb2hsl_1","s","h","Number","NaN","unpack$6","last$3","rgb2css_1","rgba","substr","unpack$7","round$1","hsl2rgb_1","assign","t3","t2","t1","h_","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$2","css2rgb","css","trim","named","e","match","rgb$1","i$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","type$3","rest","unpack$8","gl","unpack$9","rgb2hcg_1","delta","_g","unpack$a","floor","hcg2rgb_1","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","v","unpack$b","type$4","hcg","unpack$c","last$4","round$3","rgb2hex_1","u","str","hxa","RE_HEX","RE_HEXA","hex2rgb_1","parseInt","u$1","type$5","indexOf","unpack$d","sqrt","acos","rgb2hsi_1","min_","unpack$e","limit$1","TWOPI$1","cos","hsi2rgb_1","isNaN","unpack$f","type$6","hsi","unpack$g","type$7","unpack$h","min$1","max$1","rgb2hsv","max_","unpack$i","floor$1","hsv2rgb_1","unpack$j","type$8","hsv","labConstants","unpack$k","pow","rgb_xyz","xyz_lab","rgb2xyz","rgb2lab_1","ref$1","z","unpack$l","pow$1","xyz_rgb","lab_xyz","lab2rgb_1","unpack$m","type$9","lab","unpack$n","sqrt$1","atan2","round$4","lab2lch_1","unpack$o","rgb2lch_1","b_","unpack$p","sin","cos$1","lch2lab_1","unpack$q","lch2rgb_1","L","unpack$r","hcl2rgb_1","hcl","reverse","unpack$s","type$a","lch","forEach","w3cx11_1","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","type$b","keys","n","unpack$t","rgb2num_1","type$c","num2rgb_1","num","type$d","unpack$u","type$e","round$5","log","temperature2rgb_1","kelvin","temp","unpack$v","round$6","rgb2temperature_1","minTemp","maxTemp","eps","temperature","type$f","mutate","clipped","darken","amount","brighten","darker","brighter","get","mc","channel","src","type$g","pow$2","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","abs","rgb2luminance","luminance_x","interpolator","type$h","mix","col1","col2","premultiply","saturate","desaturate","type$i","set","value","charAt","out","xyz0","xyz1","sqrt$2","pow$3","lrgb","x1","y1","z1","x2","y2","z2","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lch$1","c1","c2","clip_rgb$2","pow$4","sqrt$3","PI$1","cos$2","sin$1","atan2$1","_average_lrgb","colors","weights","xyz","col","type$j","pow$5","scale","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","tMapLightness","tMapDomain","getColor","val","bypassMap","getClass","classes","d","analyze","limits","domain","from","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","t0","padding","numColors","result","dm","dd","__range__","samples","end","asc","cache","gamma","nodata","left","right","inclusive","ascending","bezier","I","lab0","lab1","lab2","lab3","I0","I1","blend","bottom","top","blend_f","c0","each","normal","multiply","screen","overlay","lighten","dodge","burn","blend_1","type$k","clip_rgb$3","TWOPI$2","pow$6","sin$2","cos$3","floor$2","random","log$1","pow$7","floor$3","data","key","MAX_VALUE","sum","values","count","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","j","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","sqrt$4","atan2$2","abs$1","cos$4","PI$2","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","list$1","colorbrewer_1","average","reduce","w","first","shift","cnt","dx","dy","A","ci","xyz2","A$1","cubehelix","start","rotations","lightness","dl","dh","fract","amp","cos_a","sin_a","code","contrast","l1","l2","deltaE","C","a1","b1","L2","a2","b2","sl","sc","h1","c4","sh","delC","delA","delB","v1","v2","distance","sum_sq","valid","factory","object","endsWith","_ref","exports","window","median","isArray","TypeError","quickSelectMedian","xMultiply","array1","array2","constant","isConstant","array3","Float64Array","xBoxPlot","array","q1max","q3min","info","Q1","Q2","Q3","middle","middleOver","xCorrelation","B","sumA","sumA2","sumB","sumB2","sumAB","xFindClosestIndex","target","xGetFromToIndex","options","fromIndex","toIndex","to","keysShim","toStr","isArgs","callee","has","hasOwnProperty","require$$0","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","o","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isObject","isFunction","isArguments","isString","theKeys","skipProto","String","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","shim","typedArrays","objectKeys","bisector","compare","lo","hi","ascendingBisect","bisectRight","bisectLeft","number$1","variance","deviation","extent","identity","stop","step","ceil","e10","e5","e2","ticks","tickStep","step0","step1","LN10","error","sturges","LN2","number","quantile","transpose","matrix","row","bisect","descending","histogram","threshold","xz","x0","tz","pop","bin","bins","_","thresholds","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","mean","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","zip","xSubtract","isAnyArray","xyCheck","xyIntegration","currentxyIntegration","xyMaxYPoint","current","index","xyMinYPoint","getBoxPlotAnnotations","spectra","q13FillColor","q13FillOpacity","q2StrokeColor","q2StrokeWidth","minMaxFillColor","minMaxFillOpacity","annotations","normalized","spectrum","nbRow","nbColumn","aColumn","column","getBoxPlotData","q13","layer","properties","fillColor","fillOpacity","strokeWidth","position","q2","strokeColor","minMax","addChartDataStyle","styles","unselected","lineColor","meta","color","lineWidth","lineStyle","selected","label","id","filterX","points","exclusions","zones","exclusion","JSON","parse","stringify","currentFrom","getZones","currentZoneIndex","newX","newY","getNormalizedData","ids","currentIDs","includes","getCategoriesStats","metadata","propertyName","categories","classNumber","metadatum","counter","GC_MS_FIELDS","complexChromatogram","chromatogram","times","series","ms","dimension","existingGCMSFields","convertMSFieldToLabel","pageValue","parseFloat","isMSField","canonicDataLabel","replace","convertToFloatArray","stringArray","floatArray","fastParseXYData","yFactor","deltaX","isXYdata","currentData","ascii","currentX","firstX","currentY","firstY","endLine","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","parsePeakTable","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","lines","xFactor","logs","parseXYA","removeSymbolRegExp","isXYAdata","add2D","zData","minZ","maxZ","ySize","xSize","xVector","lastX","lastY","minX","maxX","minY","maxY","noise","getMedian","convertTo3DZ","noContour","contourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","pAx","pAy","pBx","pBy","lineZValue","nbSubSpectra","nbPovars","y0","iter","nbContourLevels","contourLevels","level","contourLevel","side","factor","noiseMultiplier","exp","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","generateContourLines","profiling","action","time","Date","now","simpleChromatogram","intensity","prepareSpectrum","observeFrequency","xUnit","toUpperCase","shiftOffsetVal","ntuplesSeparator","Spectrum","defaultOptions","keepRecordsRegExp","canonicDataLabels","dynamicTyping","xy","withoutXY","keepSpectra","convert","jcamp","wantXY","entriesFlat","entries","tmpResult","children","currentEntry","parentsStack","ldrs","ldr","dataLabel","substring","dataValue","xIndex","yIndex","infos","firstVariable","secondVariable","ntuples","symbol","vardim","nbPoints","units","yUnit","datatable","parentEntry","title","dataType","twoD","dataClass","xType","indirectFrequency","shiftOffsetNum","varname","vartype","varform","yType","page","pageSymbol","pageSymbolIndex","unit","sampleDescription","entry","newNtuples","newData","postProcessing","flatten","IR_TRANSMITTANCE","normalization","importation","converter","transmittance","log10","kind","display","xLabel","xInverted","yLabel","IR_ABSORBANCE","jcampText","parsed","datatype","getJcampKind","parseXY","text","rescale","uniqueX","xColumn","yColumn","keepInfo","maxNumberColumns","MAX_SAFE_INTEGER","minNumberColumns","MIN_VALUE","line","fields","uniqueXFunction","maxValue","minValue","output","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","indent","indentData","inspectMatrixWithOptions","maxRows","maxColumns","maxNumSize","rows","columns","maxI","maxJ","formatNumber","inspectData","numStr","padEnd","precise","toPrecision","exponential","toExponential","eIndex","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkRowIndices","rowIndices","some","checkColumnIndices","columnIndices","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","AbstractMatrix","newRows","newColumns","newMatrix","Matrix","fill","isInteger","interval","zeros","matrix1","matrix2","checkMatrix","isMatrix","klass","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","iMax","swapRows","tmp","reducedEchelonForm","maxRow","pivot","setSubMatrix","neg","mulS","getRow","getRowVector","rowVector","setRow","row1","row2","getColumn","getColumnVector","columnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","diag","norm","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","mmulStrassen","r1","r2","embed","mat","cols","resultat","console","warn","blockMult","halfRows","halfCols","subMatrix","add","sub","scaleRows","isFinite","scaleColumns","flipRows","flipColumns","kroneckerProduct","sortRows","compareFunction","compareNumbers","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","checkIndices","rowIndex","columnIndex","trace","by","sumByRow","sumByColumn","sumAll","product","productByRow","productByColumn","productAll","size","unbiased","sum1","sum2","varianceByRow","varianceByColumn","varianceAll","standardDeviation","center","centerByRow","centerByColumn","centerAll","getScaleByRow","scaleByRow","getScaleByColumn","scaleByColumn","divider","getScaleAll","scaleAll","Symbol","for","rand","randomInt","randInt","diagonal","eye","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","getFromToIndex","xs","maybeToPrecision","digits","addS","addM","subS","subM","subtract","subtractS","subtractM","mul","mulM","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acosh","asin","asinh","atan","atanh","cbrt","clz32","cosh","expm1","fround","log1p","log2","sign","sinh","tanh","trunc","arg0","powS","powM","installMathOperations","BaseRegression","predict","_predict","train","toLaTeX","score","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","SimpleLinearRegression","slope","intercept","coefficients","checkArrayLength","slr","numerator","regress","computeX","precision","absIntercept","json","getScaledData","spectraProcessor","targetID","relative","method","ranges","calculations","targetSpectrum","getSpectrum","getSpectra","fromToIndex","targetValue","regression","scaled","currentrange","rangeFct","rangesCopy","yNormalized","resultRanges","currentRange","integration","maxPoint","parameters","calculation","formula","oneRanges","arithmeticMean","lnsum","means","percent","alreadySorted","half","theMean","theVariance","averageDeviations","stdev","quart","q1","q3","pooledVariance","vari","itemCount","itemArray","mean1","mean2","cov","s2","s3","dev","s4","weightedVariance","weightedMean","inPlace","standardDev","sumValue","_options$algorithm","algorithm","_options$sumValue","_options$maxValue","absoluteSumValue","absoluteSum","currentMaxValue","_i","sumFactor","_i2","_typeof","iterator","sequentialFill","_options","_options$from","_options$to","_options$size","normalize","NEGATIVE_INFINITY","POSITIVE_INFINITY","zone","currentZone","integral","equallySpaced","arrayXY","xLength","variant","numberOfPoints","nextExclusion","invert","unitsPerPoint","previous","currentTotal","zonesWithPoints","xResult","yResult","zoneResult","processZone","halfStep","lastStep","previousX","previousY","nextX","nextY","frontOutsideSpectra","backOutsideSpectra","currentPoints","main","equallySpacedSlot","initialOriginalStep","lastOriginalStep","sumAtMin","sumAtMax","equallySpacedSmooth","normalizedBoundary","updateNormalizedBoundary","updateNormalization","updateMemory","original","memory","total","removeOriginal","getXY","getData","xFilter","filters","ys","Stat","meanFct","std","stdFct","normed","process","getNormalized","updateRangesInfo","minPoint","SpectraProcessor","maxMemory","keepOriginal","boundaries","getNormalizationAnnotations","boundary","ignore","MIN_SAFE_INTEGER","getNormalizedBoundary","setNormalization","getNormalization","getAutocorrelation","normalizedData","getMeanData","getNormalizedText","fs","rs","allKeysObject","metum","allKeys","getMinMaxX","addFromText","force","contains","parserOptions","parseText","addFromData","addFromJcamp","parseJcamp","getMetadata","getClasses","categoriesStats","getSpectrumIndex","getMemoryInfo","removeOriginals","removeSpectrum","removeSpectraNotIn","getChart","chart","getAutocorrelationChart","autocorrelation","colorCallback","colorScale","getTrackAnnotation","showSpectrumID","getNormalizedChart","getScaledChart","memoryInfo","currentMatrix","headers","labels","header","parts","oneMeta","parseMatrix"],"mappings":"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"}